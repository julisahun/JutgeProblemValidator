[
  "\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\nif (n == 0) {\n    return 1;\n        } else {\n    return n*factorial(n-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial( int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    \n    int a;\n    while (cin >> a) {\n        cout << factorial(a) << endl;\n    }\n}\n",
  "\nint factorial(int n) {\n    if (n<=1) return 1;\n    else return n*facorial(n-1);\n}\n",
  "\nint factorial(int n) {\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n    if(n < 0) {\r\n\r\n        return 0;\r\n\r\n    } else if (n > 1) {\r\n\r\n        return n*factorial(n-1);\r\n\r\n    }\r\n\r\n    return 1;\r\n\r\n}\r\nint main() {\r\n\r\n    int a;\r\n\r\n    cin >> a;\r\n\r\n    int b=factorial(a);\r\n\r\n    cout << b;\r\n\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 1) return n;\n\telse return factorial(n-1)*n;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n > 0) return factorial(n-1)*n;\n\telse return 1;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int count1 = 1, aux = 1;\n    while (count1 <= n) {\n    \taux = aux * count1;\n    \t++count1;\n    \t}\n    return aux;\n}\n\nint main(){\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tcin >> n;\n\tif (n == 0) return 0;\n\telse return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tcin >> n;\n\tif (n <= 1) return 0;\n\telse return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tcin >> n;\n\tif (n <= 1) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res;\n    if (n < 3) return n;\n    else {\n        res = n * factorial(n - 1);\n        return res;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res;\n    if (n < 3) return n;\n    else {\n        res = n * factorial(n - 1);\n        return res;\n    }\n}\n\n/*int main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n > 0) return n*factorial(n-1);\n\treturn 1;\n}\n\nint main(){\n\treturn 0;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n > 0) return factorial(n-1)*n;\n\telse return 1;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif(n==0) return 1;\n\telse return (n*factorial (n-1));\n}\n\nint main () {\n\tint a,n;\n\tcin >> n;\n\ta= factorial (n);\n\tcout << a << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint c = 1;\n\tif (n > 0) return n;\n\treturn factorial(--n)*c; \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n > 0) return n;\n\treturn factorial(--n)*1; \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return n;\n\treturn factorial(--n)*n; \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return n;\n\treturn factorial(--n)*1; \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return n;\n\treturn factorial(n-1)*1; \n}",
  "int factorial(int n) {\n\tif (n == 1) return n;\n\treturn factorial(--n)*n; \n}",
  "int factorial(int n) {\n\tif (n == 1) return n;\n\treturn factorial(--n)*n; \n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n    if (n > 0 and n < 12){\n         if (n == 1) return 1;\n         else return n*factorial (n-1);\n    }\n    else return 0;\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n     if (n == 0) return 1;\n     else return n*factorial (n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial (n) << endl;\n}\n",
  "int factorial(int n){\n\tif (n <= 1) return 1;\n\telse return n*factorial (n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1) return n;\n    int m=factorial(n-1);\n    return n*m;\n}\n\nint main()\n{\n    int num;\n    cin >> num;\n    int res = factorial(num);\n    cout << res << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n>0) return n*factorial(n-1);\n    else return 1;\n}\n\nint main()\n{\n    int num;\n    cin >> num;\n    int res = factorial(num);\n    cout << res << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n = 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n = 0) return 1;\n\telse return (n*(factorial(n-1)));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n <= 12){\n\t\tif(n = 0) return 1;\n\t\telse return (n*(factorial(n-1)));\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\telse return (n*(factorial(n-1)));\n}",
  "int factorial (int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial (n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int m = 1;\n    int i = 0;\n    while (i != n) {\n        ++i;\n        m = m*i;\n    }\n    return m;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}   \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif ( 0 <= n and n <= 12){\n\tif ( n <= 1) return 1;\n\telse return n* factorial (n-1);\n\n\t}\n}\n\nint main (){\nint n;\ncin >> n;\ncout << n*factorial (n-1) << endl;\n}\n",
  "int factorial(int n){\n    if (n==0) return 1;\n    return factorial(n-1);\n}",
  "int factorial(int n){\n    if (n==0) return 1;\n    else return n * factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n\t}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial (int n, int total) {\n    total = total * n;\n    if (n != 1) {return factorial (n-1, total);}\n    else {return total;}\n    }\n\nint main () {\n    int n;\n    cin >> n;\n    int total = 1;\n    if (n==0) {\n    cout << \"The factorial of \" << n << \" is: \" << 1 << endl;\n    }\n    if (n <= 12 and n > 0) {\n        factorial (n, total);\n    cout << \"The factorial of \" << n << \" is: \" << factorial(n, total) << endl;\n    }\nelse;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n-1);\n    }\n\n\nint main () {\n  int n;\n  cin >> n;\n  factorial (n);\n  cout << \"The factorial of \" << n << \" is: \" << factorial(n) << endl;\n}\n",
  "#inlcude <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    \r\n    if(n==1)return n;\r\n    else return n*factorial(n-1):\r\n         }\r\n",
  "#inlcude <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    \r\n    if(n==1)return n;\r\n    else return n*factorial(n-1);\r\n         }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    \r\n    if(n==1)return n;\r\n    else return n*factorial(n-1);\r\n         }\r\n         \r\nint main (){\r\n    \r\n    int n;\r\n    \r\n    cin >> n;\r\n    \r\n    cout << factorial(n) << endl;\r\n    \r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    \r\n    if(n==1)return 1;\r\n    else return n*factorial(n-1);\r\n         }\r\n         \r\nint main (){\r\n    \r\n    int n;\r\n    \r\n    cin >> n;\r\n    \r\n    cout << factorial(n) << endl;\r\n    \r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    \r\n    if(n==0)return 1;\r\n    return n*factorial(n-1);\r\n         }\r\n         \r\nint main (){\r\n    \r\n    int n;\r\n    \r\n    cin >> n;\r\n    \r\n    cout << factorial(n) << endl;\r\n    \r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint c=1;\r\n\twhile (c<=n){\r\n\t\t int m=n*c;\r\n\t\t ++c;\r\n\t\t\r\n\t}\r\n\treturn m;\r\n}\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint c=1;\r\n\tint m;\r\n\twhile (c<=n){\r\n\t\t m=n*c;\r\n\t\t ++c;\r\n\t\t\r\n\t}\r\n\treturn m;\r\n}\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint c=1;\r\n\tint m=1;\r\n\twhile (c<=n){\r\n\t\t m=m*c;\r\n\t\t ++c;\r\n\t}\r\n\treturn m;\r\n}\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n\tif (n==0) return 1;\n\telse return n*(factorial(n-1));\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    return factorial(n - 1)*n;\r\n\r\n\r\n}\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    \r\n    cout << factorial(n) << endl;\r\n}\r\n         \r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\nint n;\ncin >> n;\ncout << factorial(n) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "//Recursive factorial\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int f;\n\tif (n == 0) f = 1;\n\telse f = n*factorial(n-1);\n\treturn f;\n}\n/*\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n*/",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return n;\r\n    return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    \r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return n;\r\n    return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    \r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    \r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1 or n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    \r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int n)\r\n{\tint fact=1, i;\r\n\t\r\n\tif (n!=1 && n>=0 && n<=12){\r\n\t\tfor (i=2; i<=n; i++){\r\n\t\tfact*=i;\r\n\t\t}\r\n\treturn fact;\r\n\r\n}\r\n\r\n\r\n}\r\n\r\nint main() \r\n{  int n;\r\n\tcin >> n;\r\n   cout << factorial(n);\r\n\t\treturn 0;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int n)\r\n{\tint fact=1, i;\r\n\t\r\n\tif (n!=1 && n!=0 && n>=0 && n<=12){\r\n\t\tfor (i=2; i<=n; i++){\r\n\t\tfact*=i;\r\n\t\t}\r\n\treturn fact;\r\n\r\n}\r\n\r\n\r\n}\r\n\r\nint main() \r\n{  int n;\r\n\tcin >> n;\r\n   cout << factorial(n);\r\n\t\treturn 0;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int n)\r\n{\tint fact=1, i;\r\n\t\r\n\tif (n!=1 && n!=0 && n>1 && n<=12){\r\n\t\tfor (i=2; i<=n; i++){\r\n\t\tfact*=i;\r\n\t\t}\r\n\treturn fact;\r\n\r\n}\r\n\r\n\r\n}\r\n\r\nint main() \r\n{  int n;\r\n\tcin >> n;\r\n   cout << factorial(n);\r\n\t\treturn 0;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int n){\r\nint resultado;\r\n\t\tif (n==0){resultado=1;}\r\n\t\telse {resultado=n*factorial(n-1);}\r\n\t\treturn resultado;\r\n}\r\n\r\n\r\nint main() \r\n{ \tint n\r\ncin >> n;\r\ncout resultado << endl;\r\n\t\treturn 0;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int n){\r\nint resultado;\r\n\t\tif (n==0){resultado=1;}\r\n\t\telse {resultado=n*factorial(n-1);}\r\n\t\treturn resultado;\r\n}\r\n\r\n\r\nint main() \r\n{ \tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n\t\treturn 0;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n < 1) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) return n;\n\treturn factorial (n-1)*n;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\treturn factorial (n-1)*n;\n}",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial (int n){\n\tif( 0 <= n and n <= 12){\n\t\tif(n == 1) return n;\n\t\telse return n * factorial(n-1);\n\t}\n}\n\nint main(){\n\tint n; \n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n);\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n\treturn 0;\r\n}\r\n\r\nint factorial (int n)\r\n{\r\n\tint product;\r\n\tif (n <= 1) return 1;\r\n\tproduct = n * factorial(n -1);\r\n\treturn product;\r\n}",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nlong int floor(double A){return A;}\nlong int ceiling(double A){if (floor(A)< A) return floor(A)+1;}\nlong int rounding(double A){if (ceiling(A)-A<=A-floor(A)) return ceiling(A); else return floor(A);}\nint factorial( int n){\n  if (n<=1) return 1;\n  return n*factorial(n-1)  \n}\nint main(){\n//string a,b;\n\nreturn 0;\n}",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nlong int floor(double A){return A;}\nlong int ceiling(double A){if (floor(A)< A) return floor(A)+1;}\nlong int rounding(double A){if (ceiling(A)-A<=A-floor(A)) return ceiling(A); else return floor(A);}\nint factorial( int n){\n  if (n<=1) return 1;\n  return n*factorial(n-1)  \n}\nint main(){\n//string a,b;\n\nreturn 0;\n}",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nlong int floor(double A){return A;}\nlong int ceiling(double A){if (floor(A)< A) return floor(A)+1;}\nlong int rounding(double A){if (ceiling(A)-A<=A-floor(A)) return ceiling(A); else return floor(A);}\nint factorial( int n){\n  if (n<=1) return 1;\n  return n*factorial(n-1)  \n}\nint main(){\n//string a,b;\n\n//return 0;\n}",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nlong int floor(double A){return A;}\nlong int ceiling(double A){if (floor(A)< A) return floor(A)+1;}\nlong int rounding(double A){if (ceiling(A)-A<=A-floor(A)) return ceiling(A); else return floor(A);}\nint factorial( int n){\n  if (n<=1) return 1;\n  return n*factorial(n-1);\n}\nint main(){\n//string a,b;\n\n//return 0;\n}",
  "#include <stdio.h>\n#include <stdlib.h>\n\n\nint factorial(int n);\n\nvoid main(int argc,const char* argv[]){\n\t\t\n\n}\n\nint factorial(int n){\n\t\n\tif(n>1){return n*factorial(n-1);}\n\treturn 1;\n}\n",
  "#include <stdio.h>\n#include <stdlib.h>\n\n\n\nint factorial(int n){\n\t\n\tif(n>1){return n*factorial(n-1);}\n\treturn 1;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint f (int a){\n    int b;\n    if (0<=a and a<=12){\n        if(a==0 or a==1) b=1;\n        else b=a*f(a-1);\n    }\n    return b;\n}\n\n\nint main(){\n    int a;\n    cin >>a;\n    a=f(a);\n    cout << a << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n    int b;\n    if (0<=n and n<=12){\n        if(n==0 or n==1) b=1;\n        else b=n*factorial(n-1);\n    }\n    return b;\n}\n\n\nint main(){\n    int a;\n    cin >>a;\n    a=factorial(a);\n    cout << a << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\n\n\nint main();\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial( int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    \n    int a;\n    while (cin >> a) {\n        cout << factorial(a) << endl;\n    }\n}\n\n\n\n  \n\n\n      \n\n",
  "int factorial (int n){\n  if (n<=1) return 1;\n  else return n*factorial(n-1);\n}\n\n",
  "int factorial(int n)\n{\n\tif(n==0)\n\t\treturn 1;\n\treturn n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint f=1;\n\tif (n==0) return 1;\n\telse {\n\t\twhile (n>1) {\n\t\t\tn=n-1;\n\t\t\tf=f*factorial(n)\n\t\t}\n\t\treturn f;\n\t}\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint f=n;\n\tif (n==0) return 1;\n\telse {\n\t\twhile (n>1) {\n\t\t\tn=n-1;\n\t\t\tf=f*factorial(n);\n\t\t}\n\t\treturn f;\n\t}\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\n",
  "// Programa:\tRecursive FACTORIAL (5_01)\n//\t\t\t\t===================\n\n// INPUT: \tnatural number 'n' (0 <= n <= 12).\n// OUTPUT: \tWrtiw function: int factorial (int n), that return n!\n// \t\t\tOBSERVACIÃN: You only need to submit the required produre (main program will be ignored).\n// Fuente: \tElaboraciÃ³n propia (14.10.2013).\t\n\n\n#include <iostream>\nusing namespace std;\n\nint factorial( int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n  \n    int a;\n    while (cin >> a) {\n        cout << factorial(a) << endl;\n    }\n}\n\n\n\n  \n\n\n      \n\n",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n<=1) return n;\r\n\telse n=n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint a;\r\n\tcin >> a;\r\n\tcout << factorial(a) << endl;\r\n}",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) return 1;\r\n    else if (n==1) return n;\r\n\telse n=n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint a;\r\n\tcin >> a;\r\n\tcout << factorial(a) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint main(0 {}\r\n\r\n\r\nint factorial(int n) {\r\nif (n == 0) return 1;\r\nelse return n*factorial(n-1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint main() {}\r\n\r\n\r\nint factorial(int n) {\r\nif (n == 0) return 1;\r\nelse return n*factorial(n-1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint main() {}\r\n\r\n\r\nint factorial(int n) {\r\nif (n == 0) return 1;\r\nelse return n*factorial(n-1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint main() {}\r\n\r\n\r\nint factorial(int n) {\r\nif (n == 0) return 1;\r\nelse return n*factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "\nint factorial(int n) {\n  if (n<=1) return 1; \n  return n*factorial(n-1);\n}\n",
  "int factorial(int n);\nif (n <= 1) return 1;\nelse return n*factorial(n - 1);\n",
  "int factorial(int n) {\n\tint f = 1;\n\twhile (n > 0) {\n\t\tf *= n;\n\t\t--n;\n\t}\n\treturn f;\n}\n",
  "// P12509_en: recursive factorial\n\n#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n - 1);\n}\n\nint main() {\n  int n;\n  while (cin >> n) cout << factorial(n) << endl;  \n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    int i = 0;\n    int fac = 1;\n    \n    while (i != n) {\n        i = i + 1;\n        fac = fac*i;\n    }\n    return fac;\n    \n    \n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0)\n    return 1;\n  else\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\n// Pro:\n\n// Post:\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint num = 4;\n\tcout << factorial(num) << endl;\n}",
  "int factorial (int n) {\n\tif (n <= 1) return 1; \n\telse return n*factorial(n-1); \n}\n// Es molt important definir el cas base i el cas recursiu, la recursivitat el que intenta es resoldre un problema a partir d'un tamany n, de manera mÃ©s simple \n//alguna cosa mÃ©s petita que ens permet simplificar el problema \n",
  "int factorial (int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "int factorial (int n){\n\tif (n<= 1) return 1;\n\telse return n * factorial(n-1);\n\t\n\t}\n",
  "int factorial (int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial (n-1);\n} \n",
  "#include <iostream>\n#include <cmath>\n#include <cstring>\nusing namespace std;\n\nint factorial(int n){\nif (n==0) return 1\nelse return n*factorial(n-1)\n}\n",
  "#include <iostream>\n#include <cmath>\n#include <cstring>\nusing namespace std;\n\nint factorial(int n){\nif (n==0) return 1;\nelse return n*factorial(n-1)\n}\n",
  "#include <iostream>\n#include <cmath>\n#include <cstring>\nusing namespace std;\n\nint factorial(int n){\nif (n==0) return 1;\nelse return n*factorial(n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n < 2) return 1;\n    return factorial(n-1)*n; \n}\n\nint main(){\n    int n;\n    cin>> n;\n    cout<< factorial(n)<< endl;\n}  \n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int a){\n    if (a <= 1) return 1;\n    else return (a*factorial(a - 1));\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n\tcout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Function returns n!.\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n){\n     //Basic case\n     if (n==1) return 1;\n     else return factorial(n-1)*n;\n}\n\nint main(){\n    int n;\n    while(cin>>n){\n        cout<< factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n){\n     //Basic case\n     if (n==0) return 1;\n     return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while (cin >> n){\n        cout<< factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  \nif (n == 0)return 1;\nelse return n*factorial(n-1);\n}",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n * factorial (n - 1);\n}",
  "#include <iostream>\nusing namespace std;\n\n// factorial(n):\n//      - 1                      n=0;\n//      - nxfactorial(n-1)      n>0;\nint factorial(int n){\n if (n==0) return 1;\n else n*factorial(n-1);\n}\n\n\nint main(){\n    \n}",
  "#include <iostream>\nusing namespace std;\n\n// factorial(n):\n//      - 1                      n=0;\n//      - nxfactorial(n-1)      n>0;\nint factorial(int n){\n if (n==0) return 1;\n else return n*factorial(n-1);\n}\n\n\nint main(){\n    \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n   if (n<10) cout << n;\n   else cout factorial(n/10);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n   if (n<10) return n;\n   else return factorial(n/10);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n   if (n<10) return n;\n   else return factorial((n-1)*n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n   if (n==1) return n;\n   else return factorial(n*(n-1));\n}\n",
  "\nint factorial (int n) {\n   if (n==1) return n;\n   else return factorial(n*(n-1));\n}\n",
  "int factorial (int n) {\n   if (n==1) return 1;\n   else return n*factorial(n-1);\n}\n",
  "int factorial (int n) {\n   if (n==1) return 1;\n   else return (n*factorial(n-1));\n}\n",
  "int factorial(int n) {\n   if (n==1) return 1;\n   else return (n * factorial(n-1));\n}\n",
  "int factorial(int n) {\n   if (n==1) return 1;\n   else return n * factorial(n-1);\n}\n",
  "int factorial(int n) {\n   if (n==1) return n;\n   else return n * factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "int factorial (int n)\n{\n    return n*(factorial(n-1));\n}\n",
  "int factorial (int n)\n{\n    return n==1?1:n*(factorial(n-1));\n}\n",
  "int factorial (int n)\n{\n    if (n==1) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    \r\n    int f = 1;\r\n    int i = 0;\r\n    while(i < n){\r\n            ++i;\r\n            f = f * i;\r\n            }\r\n            return f;\r\n    }\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n ==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    \n    return n*factorial(n - 1);\n    \n}\n",
  "int factorial(int n)\n{\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\nint main(){\r\n    int n, f;\r\n    while (cin >> n) {\r\n    f=factorial(n);\r\n    cout << f << endl;\r\n    }\r\n}\r\n",
  "//recursive factorial\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return (n*factorial(n-1));\n}\nint main() {\n    int x;\n    while (cin >> x) {\n\tcout << factorial(x) << endl;\n    }\n}\n\t\n    ",
  "#include <iostream>\t\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tint m = factorial(n);\r\n\t\tcout << m << endl;\r\n\t\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n\n",
  "int factorial (int n){\n  int x;\n  int sum=0;\n  while (x!=0){\n    sum=sum*x;\n    --x;\n  }\n  return sum;\n}",
  "int factorial (int n){\n  int x;\n  int sum=0;\n  while (x!=0){\n    sum=sum*x;\n    --x;\n  }\n  return sum;\n}",
  "int factorial (int n){\n  int x;\n  int sum=1;\n  while (x!=0){\n    sum=sum*x;\n    --x;\n  }\n  return sum;\n}",
  "int factorial (int sum){\n  int x;\n  int sum=1;\n  while (x!=0){\n    sum=sum*x;\n    --x;\n  }\n  return sum;\n}",
  "int factorial (int x){\n  int sum=1;\n  while (x!=0){\n    sum=sum*x;\n    --x;\n  }\n  return sum;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n// pre: n>= 0\n// Returns n!\n\n   int f = 1;\n   int i = 0;\n   //Invariant: f= i! and i<=n\n   while (i < n ) {\n         i = i+1;\n         f = f*i;\n   }\n   return f;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    int factorial=1;\r\n    for (int i=n; i>0;i--){\r\n        factorial=factorial*i;\r\n        }\r\n    return factorial;\r\n}\r\n\r\n\r\nint main () {\r\n    int a;\r\n    cin >> a;\r\n    a=factorial(a);\r\n    cout << a << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nvoid factorial(int n) {\nif (n == 0) return 1;\nelse n * factorial(n-1);\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nvoid factorial(int n) {\nif (n == 0) return 1;\nelse n * factorial(n-1);\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 1) return 1;\n    if(n == 0) return 1;\n    return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nif (n == 0) return 1;\nelse return n * factorial(n-1);\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==1) return n;\n\telse {\n\t\treturn n*factorial(n-1);\n\t}\n\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n<=1) return n;\n\telse {\n\t\treturn n*factorial(n-1);\n\t}\n\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n<=1) return 1;\n\telse {\n\t\treturn n*factorial(n-1);\n\t}\n\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "int factorial(int n) {\n\tif (n == 0) return 1;\n\treturn factorial(n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n>1)\n\treturn n*(factorial(n-1));\n    else return n;\n    \n    \n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n>1)\n\treturn n*(factorial(n-1));\n    else return 1;\n    \n    \n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1) return 1;\r\n\telse return factorial(n-1)*n;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return factorial(n-1)*n;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n = 1) return 1;\n\telse return n*factrial(n-1);\n\nint main () {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n = 1) return 1;\n\telse return n*factrial(n-1);\n\nint main () {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n = 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return factorial(n-1)*n;\r\n}\r\n\r\n\r\nint main() {\r\n\r\n    cout << factorial(3) << endl;\r\n\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 2) return n;\n    else return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 2) return n;\n    else return (n * factorial(n - 1));\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n   if (n == 0) return 1;\r\n   else return n*factorial(n - 1);\r\n}",
  "\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return factorial(n-1) * n;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint x;\n\tcin >> x;\n\tcout<< factorial(x)<< endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n  if (n==1) return 1;\n  return n*fact(n-1);\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n   if (n = 1) return 1;\n   else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n  if (n==1) return 1;\n  return n*fact(n-1);\n}\n  \nint main() {\n  int n;\n  cin >> n;\n  cout << fact(n) << endl;\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n   if (n == 1) return 1;\n   else return n*factorial(n-1);\n}\nint main () {\n   int n;\n   cin >> n;\n   cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n==1) return 1;\n  return n*factorial(n-1);\n}\n  \nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n   if (n == 1) return 1;\n   else return n*factorial(n-1);\n}\nint main () {\n   int n;\n   cin >> n;\n   cout << factorial(n) << endl;\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n   if (n == 0) return 1;\n   else return n*factorial(n-1);\n}\nint main () {\n   int n;\n   cin >> n;\n   cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int a) {\n   if(a==0) return 1;\n      return n*fact(n-1);\n   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int a) {\n   if(a==0) return 1;\n      return a*fact(a-1);\n   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int a) {\n   if(a==0) return 1;\n      return a*fact(a-1);\n   }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n==1) return 1;\n  return n*factorial(n-1);\n}\n  \nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n==0) return 1;\n  return n*factorial(n-1);\n}\n  \nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int a) {\n   if(a==0) return 1;\n      return a*factorial(a-1);\n   }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int j=1;\n    for (int i=1; i<=n;++i)j=j*i;\n    return j;\n    }\n    \n    int main () {\n        int n;\n        cin>>n;\n        cout<<factorial(n)<<endl;}\n    \n",
  "//Recursivitat//\n\n#include <iostream>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n{\n\tif (n<=1) return 1;\n\telse return n*factorial(n-1);\n}\n\t\nint main()\n{\n\tint n;\n    while(cin >> n)\n    {\n\tcout << factorial(n) << endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint cont;\r\n\tcont = 1;\r\n\tfor(int i = n; i > 0; --i){\r\n\t\tcont *= i;\r\n\t}\r\nreturn cont;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n) cout << factorial(n) << endl;\r\n}\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint cont;\r\n\tcont = 1;\r\n\twhile ( n != 0){\r\n\t\tcont *= n;\r\n\t\tn -= 1;\r\n\t} \r\nreturn cont;\r\n}\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n) cout << factorial(n) << endl;\r\n}\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n <= 1)\n\t\treturn 1;\n\t\treturn n * factorial(n - 1);\t\t\t\n\t\t}\n\t\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0){\r\n        return 1;\r\n    }\r\n    else{\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\n",
  "int factorial(int n) {\n    if (n == 0 or n == 1) return 1; \n    return n * factorial(n-1);\n}\n    \n\n\n",
  "int factorial(int n) {\n    if (n == 0 or n == 1) return 1; \n    return n * factorial(n-1);\n}\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n <= 1) return 1;\n    return n * factorial (n-1);    \n}\n",
  "#include <iostream>\r\n#include <string>\r\n#include <cmath>\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n < 1) return 1;\r\n    else return n*factorial(n-1);\r\n}\nint main () {\r\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\n\telse if  (n==1) {\n\t\treturn n;\n\t}\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\n\tint n;\n\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint main() {\n    int a, b;\n    cin >>a >>b;\n    cout << a + b << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    n = n*factorial(n - 1);\n    return n;\n}\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\nusing namespace std;\nint factorial(int n){\n    if (n == 0) return 1;\n    else return (n*factorial(n-1));\n    \n}\nint main() {\n    int n;\n    while(cin >> n){\t\n        int k = factorial(n);\n        cout << k << endl;\n    }\n   \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint main() {\n    int a, b;\n    cin >>a >>b;\n    cout << a + b << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint main() {\n    int a, b;\n    cin >>a >>b;\n    cout << a + b << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint main() {\n    int a, b;\n    cin >>a >>b;\n    cout << a + b << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int a){\n    if (a==0) return 1;\n    else return a*factorial(a-1);\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 0 ) return 1;\n    else return n*factorial(n -1);\n}\n    \n",
  "int factorial(int n) {\n    in (n <= 1) return 1;\n    else return n*factorial(n -1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n -1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n>1) return n* factorial (n-1);\n    else return 1;\n}\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial (n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}\r\n",
  "#include <iostream>\n\n/**\nStatement:\nWrite a function\n\n     int factorial(int n);\nthat returns n!.\n\nSolve this problem recursively.\n\nPrecondition\n\nAssume 0â¤ n â¤ 12.\n\nObservation You only need to submit the required procedure; your main program will be ignored.\n\n\n*/\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 2) return n;\n\treturn n * factorial(n-1);\n}\t\n\n\n\nint main() {\n\treturn 0;\n}\n\n\n",
  "#include <iostream>\n\n/**\nStatement:\nWrite a function\n\n     int factorial(int n);\nthat returns n!.\n\nSolve this problem recursively.\n\nPrecondition\n\nAssume 0â¤ n â¤ 12.\n\nObservation You only need to submit the required procedure; your main program will be ignored.\n\n\n*/\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\tif (n <= 2) return n;\n\treturn n * factorial(n-1);\n}\t\n\n\n\nint main() {\n\treturn 0;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\tif (n > 1) return n * factorial(n-1);\r\n\telse return 1;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n\t",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int p;\n    if(n <= 1) return 1;\n    p = n * factorial (n-1);\n    return p;\n}\n    \n\n\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if(n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}",
  "#include <iostream>\r\n#include <vector>\r\n#include <string>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n == 1) return 1;\r\n    else return n*factorial(n - 1);\r\n\r\n}\r\n",
  "#include <iostream>\r\n#include <vector>\r\n#include <string>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n);\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n == 1) return n;\r\n\treturn n*factorial (n-1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n == 1) return n;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n == 0) return 1;\r\n\tif (n == 1) return n;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n if (n <= 0) return 1;\n else return (n*factorial(n-1));\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n == 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main (){\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tcout << \"factorial(\" << n << \") \" << \"-> \" << factorial(n) << endl;\r\n\t}\t\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n == 0) return 1;\r\n\telse if (n == 1) return 1;\r\n\telse return n * factorial(n - 1);\r\n}\r\n\r\nint main (){\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tcout << \"factorial(\" << n << \") \" << \"-> \" << factorial(n) << endl;\r\n\t}\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 1){\r\n        return 1;\r\n    }else{\r\n        return n * factorial(n-1);\r\n    }\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 2){\r\n        return n;\r\n    }else{\r\n        return n * factorial(n-1);\r\n    }\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 0){\r\n        return 1;\r\n    }else if(n <= 2){\r\n        return n;\r\n    }else{\r\n        return n * factorial(n-1);\r\n    }\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int res = n; \n  if (n > 1){ \n    res *= factorial(n-1); \n    \n  } \n  return res; \n  \n}\n\nint main(){ \n  cout << factorial(3) << endl; \n  \n}",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return n;\n\treturn n * factorial (n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int res = n; \n  if (n > 1){ \n    res *= factorial(n-1); \n    \n  } \n  else if (n==0){\n    res= 1;\n  }\n  return res; \n  \n}\n\nint main(){ \n  cout << factorial(0) << endl; \n  \n}",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n < 2) return 1;\n\treturn n * factorial (n-1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n > 1) return n * factorial (n - 1);\r\n    return n;\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n > 1) return n * factorial (n - 1);\r\n    else return n;\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n > 1) return n * factorial (n - 1);\r\n    else if (n == 0) return 0;\r\n    return n;\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n > 1) return n * factorial (n - 1);\r\n    else if (n == 0) return 1;\r\n    return n;\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    while (cin >> n)\r\n    cout << factorial (n) << \" \";\r\n}\r\n",
  "//Write a function\n//int factorial(int n);\n\n//that returns n!.\n\n//Solve this problem recursively.\n\n//Precondition:\n//Assume 0â¤ n â¤ 12.\n\n//Observation:\n//You only need to submit the required procedure;\n//your main program will be ignored.\n\n\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n*factorial(n - 1);\n}\n\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream> \r\nusing namespace std; \r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1; \r\n\treturn n*factorial(n-1);\r\n}\r\n",
  "#include <stdio.h>\r\n\r\nint factorial(int n){\r\n\tif (n == 1){\r\n\t\treturn 1;\r\n\t} else {\r\n\t\treturn n*factorial(n - 1);\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint x;\r\n\tx = factorial(4);\r\n\tprintf(\"%d\", x);\r\n}",
  "#include <stdio.h>\r\n\r\nint factorial(int n){\r\n\tif (n == 0){\r\n\t\treturn 0;\r\n\t}\r\n\telse if (n == 1){\r\n\t\treturn 1;\r\n\t} else {\r\n\t\treturn n*factorial(n - 1);\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint x;\r\n\tx = factorial(4);\r\n\tprintf(\"%d\", x);\r\n}",
  "#include <stdio.h>\r\n\r\nint factorial(int n){\r\n\tif (n == 0){\r\n\t\treturn 1;\r\n\t} else {\r\n\t\treturn n*factorial(n - 1);\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint x;\r\n\tx = factorial(4);\r\n\tprintf(\"%d\", x);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while(cin >> n){\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main (){\r\n\t\r\n}\r\n",
  "int factorial(int n)\n{\n    if(n <= 1)\n    {\n        return 1;\n    }\n    else\n    {\n        return n * factorial(n -1);\n    }\n}\n",
  "def factorial(n):\r\n   \"\"\"Function to return the factorial\r\n   of a number using recursion\"\"\"\r\n   if n == 1:\r\n       return n\r\n   else:\r\n       return n*factorial(n-1)\r\n\r\n# take input from the user\r\nnum = int(input(\"Enter a number: \"))\r\n\r\n# check is the number is negative\r\nif num < 0:\r\n   print(\"Sorry, factorial does not exist for negative numbers\")\r\nelif num == 0:\r\n   print(1)\r\nelse:\r\n   print(factorial(num))\r\n",
  "def factorial(n):\r\n   \"\"\"Function to return the factorial\r\n   of a number using recursion\"\"\"\r\n   if n == 1:\r\n       return n\r\n   else:\r\n       return n*factorial(n-1)\r\n\r\n# take input from the user\r\n# check is the number is negative\r\nif num < 0:\r\n   print(\"Sorry, factorial does not exist for negative numbers\")\r\nelif num == 0:\r\n   print(1)\r\nelse:\r\n   print(factorial(num))\r\n",
  "def factorial(n):\r\n   \"\"\"Function to return the factorial\r\n   of a number using recursion\"\"\"\r\n   if n <=1:\r\n       return n\r\n   else:\r\n       return n*factorial(n-1)\r\n",
  "def factorial(n):\r\n   if n <=1:\r\n       return 1\r\n   else:\r\n       return n*factorial(n-1)\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint main (){\n\tint n;\n\tcin >> n;\n\tlong fact=1;\n\tfor(int i=1; i<=n;i++){\n\tfact=fact*i;\n\t}\n\tcout<<fact<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint main (){\n\tint n;\n\tcin >> n;\n\tint fact=1;\n\tfor(int i=1; i<=n;i++){\n\tfact=fact*i;\n\t}\n\tcout << fact << endl;\n}\n\n\t\t\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nlong factorial(int n)\r\n{\r\n  if(n<2)\r\n    return 1;\r\n  else\r\n    return n * factorial(n-1);\r\n}\r\nint main()\r\n{\r\n  int n;\r\n  cin >> n;\r\n  return 0;\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int a)\r\n{\r\nif (a > 1)\r\nreturn (a * factorial (a-1));\r\nelse\r\nreturn (1);\r\n}\r\nint main ()\r\n{\r\nint number;\r\n\r\ncin >> number;\r\ncout << factorial (number);\r\nreturn 0;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int a)\r\n{\r\nif (a > 1)\r\nreturn (a * factorial (a-1));\r\nelse\r\nreturn (1);\r\n}\r\nint main ()\r\n{\r\nint number;\r\n\r\ncin >> number;\r\ncout << factorial (number);\r\nreturn 0;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n// P12509 Recursive factorial\nint factorial(int n){\n\tif (n==0) return 1;\n\telse {\n\t\tint f=1;\n\t\tfor(int i=1;i<=n;i++) f=f*i;\n\t\treturn f;\n\t}\n}\nint main(){\n\tint fac;\n\twhile(cin>>fac) cout<<factorial(fac)<<endl;\n}",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0) return 1;\r\n\telse{\r\n\t\tn*=factorial(n-1);\r\n\t\treturn n;\r\n\t}\r\n}\r\n\r\nint main (){\r\n\tint x;\r\n\tcin>>x;\r\n\tcout<<factorial(x)<<endl;\r\n}\r\n",
  "# include <iostream>\nusing namespace std;\nint factorial(int n){\n     if(n==0)return 1;\n     return factorial(n-1)*n;}\nint main(){\n     int n;\n     cin>>n;\n     cout<<factorial(n)<<endl;\n     }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if (n==0 or n==1) return 1;\r\n    if (n>1 and n<13){\r\n        return n*factorial (n-1);\r\n    }\r\n}\r\n\r\n\r\nint main(){\r\n    int n; cin >> n;\r\n   // for (int i=n; i>=0; --i)\r\n    cout << factorial (n) << endl;\r\n    cout << \"culo\";\r\n}\r\n",
  "#include <iostream> \n#include <cmath> \n#include <vector>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n* factorial(n-1);\n}\n\n\nint main () {\n   int n;\n   while (cin >> n) cout << factorial(n) << endl;\n        \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial (n-1);\n    }\nint main () {\n     int n;\n     while (cin>>n) cout << factorial(n) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n  int factorial(int n) {\n  if (n== 0) return 1;\n  return n*factorial(n - 1);\n}\nint main() {\n\n int n;\n cout << factorial(n) << cout;\n  \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n    }\n    \nint facIterar(int n) {\n    int fact = 1;\n    while (n > 1) {\n        fact = fact*n;\n        n = n -1;\n    }\n}\n    int i = 1;\n    int fact = 1;\n    while (i <= n) \n        fact = fact * i;\n        ++i;\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n    }\n    \nint facIterar(int n) {\n    int fact = 1;\n    while (n > 1) {\n        fact = fact*n;\n        n = n -1;\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n    }\n",
  "#include <iostream>\n#include <cmath>\n#include <math.h>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;    \n}\n",
  "#include <iostream>\n#include <iomanip>\n#include <string>\n#include <math.h>\n#include <cstdlib>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) {\n        return 1;\n    }\n    else {\n        return n * factorial (n-1);\n        n--;\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0 ) return 1;\n    else  return n*factorial(n-1);\n}\n\n\n \nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n)<< endl;\n}\n",
  "#include <iostream>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\n\nint factorial(int n) {\n\t\n    int total;\n\tif(n <= 1) return 1;\n\n\ttotal = n * factorial(n - 1);\n\treturn total;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() { \n    int n;\n    cin >> n;\n    \n    cout << factorial (n) << endl;\n} \n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n\tif(n >= 0 && n <= 12) return n == 0 ? 1 : n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n\tint x;\r\n\tcin >> x;\r\n\t\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0){\n\t\tn=1;\n\t}\n\telse if(n>1){\n\t\tn=n*factorial(n-1);\n\t}\n\treturn n;\n}\n\nint main(){\n\tint n;\n\twhile(cin>>n){\n\t\tcout<<factorial(n)<<endl;\n\t}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n\tif (n <= 1) { return 1; }\r\n\t\r\n\treturn n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\t\r\n\r\n\treturn 0;\r\n}",
  "using namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    return n * factorial(n - 1);\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==0||n==1){return 1;}else{\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin>>n){cout<<factorial(n)<<endl<<endl;}\r\n\treturn 0;\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint total;\r\n\t\r\n\tif(n<=1)\r\n\t\treturn 1;\r\n\r\n\ttotal = n * factorial(n-1);\r\n\r\n\treturn total;\r\n}\r\n\r\nint main(){\r\n\tint n,total;\r\n\tcin>>n;\r\n\r\n\ttotal = factorial(n);\r\n\r\n\tcout<<total;\r\n}\r\n",
  "#include <iostream>\n\nint factorial(int n){\n\n    if(n==0){return 1;}\n    else{return n*factorial(n-1);}\n\n\n}\n\n\n\nusing namespace::std;\nint main() {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}",
  "#include <iostream>\n#include <string>\n#include <sstream>\n\n\nusing namespace std;\nint factorial(int n){\n    if (n==0){return 1;}\n    int t=1;\n    if (n>1){t=factorial (n-1);}\n    else {return t*n;}\n    return t*n;\n}\nint main (){\n    int n,j;\n    while (cin>>n){\n        j=factorial (n);\n        cout<<j<<endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n\n}\n\n",
  "//\n// Created by Johan Nordin on 06/10/15.\n//\n\n#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n\n    if (n == 0) {\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n\n}\n\nint main() {\n\n\n    cerr << factorial(4) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0 or n == 1){\n        return 1;\n    }\n    else {\n        return n*factorial (n-1);\n    }\n}\n\nint main(){\n   int n;\n   cin >> n;\n   cout << factorial (n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n\n    \n\n}\n",
  "int factorial (int n) {\n\tint r = 1;\n\tif ( n >= 1 ) {\n\t   \n\t\tr = n * factorial(n-1);\n\t\treturn r;\n\t }\n\t\n\telse { return r; }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n < 2) return 1;\r\n\treturn  (n * factorial (n - 1));\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n// recursive factorial\r\n\r\nint factorial (int n){\r\n    if ( n == 1 ) return 1;\r\n    return n*factorial(n-1);\r\n}\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n// recursive factorial\r\n\r\nint factorial (int n){\r\n    if ( n == 0 ) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\t\n\tif (n <= 1) return 1;\n\treturn n*factorial(n - 1);\n\t\n}\n\nint main() {\n\t\n\t//cout << factorial(1) << endl;\t\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==1) return 1;\r\n\telse n=n* factorial (n-1);\r\n}\r\n\r\nint main(){\r\n\tint a;\r\n\tcin>>a;\r\n\tcout<< factorial (a)<<endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==1) return 1;\r\n\telse n=n* factorial (n-1);\r\n}\r\n\r\nint main(){\r\n\tint a;\r\n\tcin>>a;\r\n\tcout<< factorial (a)<<endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==1) return 1;\r\n\telse return n* factorial (n-1);\r\n}\r\n\r\nint main(){\r\n\tint a;\r\n\tcin>>a;\r\n\tcout<< factorial (a)<<endl;\r\n}\r\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\nint factorial(int n){\n    if (n>1){\n        return n*factorial(n-1);} else {return 1;}\n    }\n\nint main()\n{   //cout.setf(ios::fixed);\n    //cout.precision(4);\n    int n; \n    cin >> n;\n    cout << factorial(n)<< endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int s;\n    if ( n <= 1 ) return 1;\n    \n    s = n * factorial (n-1);\n    return s;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "int factorial (int n){\n    if n==0 return 1;\n    else return factorial(n);\n}\n\n",
  "int factorial (int n){\n    if n==0 return 1;\n    else return factorial(n);\n}\n\n",
  "int factorial (int n){\n    if (n==0) return 1;\n    else return factorial(n);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n",
  "//Recursive factorial\n\n#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<2) return 1;\n    return (n*factorial(n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n//falta main\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n-1);\r\n    }\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "def factorial(n):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\n\n#TEST\nprint(factorial(0))\nprint(factorial(1))\nprint(factorial(2))\nprint(factorial(3))\nprint(factorial(4))\n",
  "def factorial(n):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\n\n#TEST\n#print(factorial(0))\n#print(factorial(1))\n#print(factorial(2))\n#print(factorial(3))\n#print(factorial(4))\n#print(factorial(19))\n",
  "def factorial(n):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\n\nprint(input())\nprint(input())\nprint(input())\nprint(input())\nprint(input())\n\n\n\n\n#TEST\n#print(factorial(0))\n#print(factorial(1))\n#print(factorial(2))\n#print(factorial(3))\n#print(factorial(4))\n#print(factorial(19))\n",
  "def factorial(n):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\n\ninp = input()\nwhile inp != \"\":\n    print(factorial(int(inp)))\n    inp = input() \n\n\n\n\n#TEST\n#print(factorial(0))\n#print(factorial(1))\n#print(factorial(2))\n#print(factorial(3))\n#print(factorial(4))\n#print(factorial(19))\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n == 0) return 1;\n    if ( n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif (n==1){\n\t\treturn 1;\n\t}\n\treturn factorial(n-1);\n}\nint main(){\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif (n==1){\n\t\treturn 1;\n\t}\n\treturn n*factorial(n-1);\n}\nint main(){\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif (n==1 or n==0){\n\t\treturn 1;\n\t}\n\treturn n*factorial(n-1);\n}\nint main(){\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n//Pre: n>0\n//Post: Retorna n!\n\n  int res;\n  if (n==0) res = 1;\n  else res = factorial (n-1)*n;\n  return res;\n  }\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int res, i=1;\r\n    res=n;\r\n    if(n==0) res=1;\r\n    else while(i<n){\r\n     res=res*i;\r\n     ++i;\r\n     }\r\n   return res;\r\n}\r\nint main(){\r\n\r\n}\r\n",
  "#include <bits/stdc++.h>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tif(n==1 || n==0)\treturn 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\r\n}",
  "#include <iostream>\t\n\nusing namespace std;\n  \nint factorial (int n) {\n  // pre: n>0\n  //post: retorna n!\n  \n  int res; \n  if (n==0) res =1; \n  else res = factorial (n-1) *n;\n  return res;\n  \n}\n\nint main () {\n  \nint x;\ncin >> x;\n\nfactorial(x); \n\ncout << factorial(x) << endl;\n\n\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\r\n//pre: n>0\r\n//post: Retorna n!\r\n\r\n\r\nint res;\r\n        if (n==0) res=1 ;\r\n        else res = factorial (n-1)*n;\r\n        return res;\r\n\r\n}\r\n\r\nint main()\r\n{\r\n\r\n}\r\n",
  "def factorial(n):\n\tif n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n-1)\n",
  "def factorial(n):\n\tif n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n-1)\n",
  "def factorial(n):\n\tif n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n-1)\n\nprint factorial(input())",
  "int factorial(int n) {\n\tif (0 == n) return 1;\n\treturn n*factorial(n-1);\n}",
  "def factorial(n):\r\n   if n <=1:\r\n       return 1\r\n   else:\r\n       return n*factorial(n-1)\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n < 2)\n\t\treturn 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  " #include<iostream>\n using namespace std;\n \n int factorial(int n){\n\t if (n==0){\n\t\t return 1;\n\t }\n\t return n*factorial(n-1);\n }\n \n int main (){\n\tint n;\n\twhile (cin >> n){\n\t\tcout<< factorial(n)<<endl;\n\t}\n\t\n }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\treturn n*factorial(n-1);\r\n\t}\t\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "\r\n#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int temp;\r\n\r\n    if (n <= 1) return 1;\r\n\r\n    temp = n * factorial(n - 1);\r\n    return temp;\r\n}\r\n\r\nint main() {\r\n    return 0;\r\n}\r\n",
  "int factorial(int n) {\n    if (n == 1) return n;\n    else return factorial(n-1) * n;\n}",
  "int factorial(int n) {\n    if (n == 1) return n;\n    else return factorial(n-1) * n;\n}\n\nmain() {}",
  "int factorial(int n) {\n    if (n < 1) return n;\n    else return factorial(n-1) * n;\n}\n\nmain() {}",
  "int factorial(int n) {\n    if (n < 1) return 1;\n    else return factorial(n-1) * n;\n}\n\nmain() {}",
  "#include <iostream>\n\nusing namespace std;\n\n/**\n * Program for: https://jutge.org/problems/P12509_en\n */\nint factorial(int n) {\n\tif (n == 0) {\n\t\treturn 1;\n\t} else {\n\t\treturn n * factorial(n - 1);\n\t}\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "//Factorial recursiu\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn factorial(n-1)*n;\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n <= 0)return 1;\n\telse return factorial(n-1)*n;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\t\n",
  "#include <iostream>\n\nusing namespace std;\n \nint factorial(int n) {\n  if (n == 0 or n == 1) return 1;\n  else return n * factorial(n-1);\n}\n\nint main() {\n  int n;\n  while (cin >> n) {\n  \tcout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n  if (n == 0 || n == 1) return 1;\n  else return n*factorial(n-1);\n}\n\nint main(){\n  int n;\n  while(cin >> n){\n    cout << factorial(n) << endl;\n  }\n}",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n < 2) return 1;\r\n    return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    return 0;\r\n}\r\n",
  "//\n//  main.cpp\n//  another_one\n//\n//  Created by SaNZHaR KoZHaY on 27.10.15.\n//  Copyright Â© 2015 SaNZHaR KoZHaY. All rights reserved.\n//\n#include <iostream>\n#include <string>\nusing namespace std;\n#include <math.h>\n\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else {\n        int l = factorial(n-1);\n        return n * l;\n    }\n}",
  "//\n//  main.cpp\n//  another_one\n//\n//  Created by SaNZHaR KoZHaY on 27.10.15.\n//  Copyright Â© 2015 SaNZHaR KoZHaY. All rights reserved.\n//\n#include <iostream>\n#include <string>\nusing namespace std;\n#include <math.h>\n\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else {\n        int l = factorial(n-1);\n        return n * l;\n    }\n}",
  "//\n//  main.cpp\n//  another_one\n//\n//  Created by SaNZHaR KoZHaY on 27.10.15.\n//  Copyright Â© 2015 SaNZHaR KoZHaY. All rights reserved.\n//\n#include <iostream>\n#include <string>\nusing namespace std;\n#include <math.h>\n\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int l = factorial(n-1);\n        return n * l;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\tif(n == 1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n <= 1)return 1;\n  else return n*factorial(n-1);\n}\n\nint main(){\n  int n;\n  while(cin >> n){\n    cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n < 1) return 1;\n\telse{\n\t\treturn n * factorial(n - 1);\n\t}\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "\n# coding: utf-8\n\n# In[12]:\n\nx = input()\ny = x.split(\" \")\nprint(y[2],y[1],y[0])\n\n",
  "\n# coding: utf-8\n\n# In[4]:\n\ndef factorial(n):\n    \n    if n==1:\n        return n\n    \n    elif n!=1:\n        return n*(factorial(n-1))          \n\n",
  "\n# coding: utf-8\n\n# In[4]:\n\ndef factorial(n):\n    \n    if n==1:\n        return n\n    \n    elif n!=1:\n        return n*(factorial(n-1))  \nfactorial(input())\n\n",
  "\n# coding: utf-8\n\n# In[6]:\n\ndef factorial(n):\n    \n    if n==1:\n        return n\n    \n    elif n!=1:\n        return n*(factorial(n-1))\n    \nfactorial(int(input()))\n\n",
  "\n# coding: utf-8\n\n# In[6]:\n\ndef factorial(n=input()):\n    \n    if n==1:\n        return n\n    \n    elif n!=1:\n        return n*(factorial(n-1))\n\n",
  "\n# coding: utf-8\n\n# In[16]:\n\ndef factorial(n):\n    \n    if n==1:\n        return n\n    \n    elif n!=1:\n        return n*(factorial(n-1))\n\nfactorial(n=int(input()))\n\n",
  "\n# coding: utf-8\n\n# In[1]:\n\ndef factorial(n):\n    \n    if n==1:\n        return n\n    \n    elif n!=1:\n        return n*(factorial(n-1))\n\n",
  "\n# coding: utf-8\n\n# In[3]:\n\ndef factorial(n):\n    \n    if n==1:\n        return n\n    \n    elif n!=1:\n        return n*(factorial(n-1))\n\n\n# In[4]:\n\nn = int(input())\nfactorial(n)\n\n",
  "\n# coding: utf-8\n\n# In[3]:\n\ndef factorial(n):\n    \n    if n==1:\n        return n\n    \n    elif n!=1:\n        return n*(factorial(n-1))\n\nn = int(input())\nfactorial(n)\n\n",
  "\n# coding: utf-8\n\n# In[3]:\n\ndef factorial(n):\n    \n    if n==1:\n        return n\n    \n    elif n!=1:\n        return n*(factorial(n-1))\n\nn = int(input())\nfactorial(n)\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n){\r\n     if(n == 0 or n == 1) return 1;\r\n     else return (n*factorial(n-1));\r\n\r\n }\r\n\r\nint main (){\r\n    int c;\r\n    cin >> c;\r\n    cout << factorial(c) << endl;\r\n\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint x=1;\r\n\twhile (n>0){\r\n\t\tx*=n;\r\n\t\t--n; \t\r\n\t}\r\n\treturn x;\r\n}\r\n\r\n\r\nint main() {\r\n\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\t\r\n\t\tif (n == 0) return n;\r\n\t\telse return n*factorial(n-1);\r\n\t\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\t\r\n\t\tif (n == 1) return n;\r\n\t\telse return n*factorial(n-1);\r\n\t\r\n\t\r\n}\r\n\r\nint main(){\r\n\t\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n\t\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\t\r\n\t\tif (n == 1) return 1;\r\n\t\telse return n*factorial(n-1);\r\n\t\r\n\t\r\n}\r\n\r\nint main(){\r\n\t\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n\t\r\n\t\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\t\r\n\t\tif (n == 1) return 1;\r\n\t\telse return n*factorial(n-1);\r\n\t\r\n\t\r\n}\r\n\r\nint main(){\r\n\t\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n\t\r\n\t\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\t\r\n\t\tif (n == 1) return 1;\r\n\t\telse return n*factorial(n-1);\r\n\t\r\n\t\r\n}\r\n\r\nint main(){\r\n\t\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n\t\r\n\t\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\t\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n\t\n}\n\n\nint main(){\n\t\n    int x, y;\n    cin >> x;\n    y = factorial(x);\n    cout << y << endl;\n\n}\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\t//cout <<  \" i la n Ã©s \" << n << endl; (para mostrarme como funciona la recursividad)\n\tif(n == 0) return 1;\n\treturn n * factorial( n-1);\n}\nint main() {\n\tint n;\n\twhile(cin >> n) {\n\t\t//cout << \"definitivo: \" << factorial(n) << endl; (para mostrarme como funciona la recursividad)\n\t\tcout << factorial(n) << endl; \n\t}\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\tif(n == 0) return 1;\n\tif(n == 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() \n{\n\tint x,resultat;\n\twhile(cin >> x) \n\t{\n\t\tresultat = factorial(x);\n\t\tcout << resultat << endl;\n\t}\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int res = 1;\n  while (n!=0) {\n    res = res * n;\n    --n;\n\n  }\nreturn res;\nres = 1;\n}\n\nint main() {\n    int n, res = 1;\n    while ( cin >> n ) cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint factorial(int n){\n  if(n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main(){\n  int a;\n  \n  cin >> a ;\n  \n  cout << \"Factorial de \" << a << \" \" << factorial(a) << endl;\n}",
  "//Factorial recursiu\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn factorial(n-1)*n;\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n < 2) return 1;\n  else return n*factorial(n-1);\n}\n\nint main () {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0) return 1;\n  else return n*factorial(n-1);  \n}\nint main(){\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}",
  "int factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else return n*factorial(n-1);\r\n}",
  "int factorial(int n) {\r\n    int temp;\r\n\tif(n <= 1) return 1;\r\n\ttemp = n * factorial(n - 1);\r\n\treturn temp;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tif (n>1){\r\n\t\tn = n*factorial(n-1);\r\n\t\treturn n;\r\n\t}\r\n\treturn n;\r\n}\r\nint main(){\r\n\twhile (cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int x){\n  if (x <=1){\n    return 1;\n  }\n  else {\n    return x*factorial(x-1);\n  }\n}\n\nint main (){\n  int x;\n  cin >>x;\n  cout<< factorial (x) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n\t\r\n}\r\n\r\nint main(){\r\n\tint x;\r\n\tcin>>x;\r\n\tcout << factorial (x)<<endl;\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int x){\n    if(x==0) return 1;\n    else return x*(factorial(x-1));\n}\n\nint main(){\n    int x;\n    while(cin >> x){\n        cout << factorial(x) << endl;\n    }\n}",
  "#include<iostream>\nusing namespace std;\n \nint factorial(int n){\n  if (n == 1) return n;\n  else return n * factorial(n-1);\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n \nint factorial(int n){\n  int t;\n  if (n <= 1) return n;\n  t = n * factorial(n-1);\n  return t;\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n \nint factorial(int n){\n  if (n <= 1) return n;\n  else {\n    int t;\n    t = n * factorial(n-1);\n    return t;\n  }\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n \nint factorial(int n){\n  if (n == 0) return 1;\n  if (n <= 1) return n;\n  else {\n    int t;\n    t = n * factorial(n-1);\n    return t;\n  }\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n\n\n\n}\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\n\n\n\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int x) {\n\t  if (x==0)\n        return 1;\n    else\n         return x*factorial(x-1);\n}\n\t\t\nint main () {\n\t\n\tint x; \n\tcin >> x;\n\t\n\tcout << factorial(x) << endl;\n} \n\t\t\n\t\t\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if ( n == 0 ) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n    int x;\r\n    while (cin >> x){\r\n        cout << factorial (x) << endl;\r\n\r\n    }\r\n\r\n}\r\n",
  "#include <iostream>\n\n\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else factorial(n -1);\n    n *= n;\n    return n;\n}\n\nint main() {\nint p;\n    while (cin >> p) {\n        cout << factorial(p) << endl;\n    }\n\n}\n\n",
  "#include <iostream>\n\n\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else factorial(n -1);\n    n *= n - 1;\n    return n;\n}\n\nint main() {\nint p;\n    while (cin >> p) {\n        cout << factorial(p) << endl;\n    }\n\n}\n\n",
  "#include <iostream>\n\n\nusing namespace std;\n\n\nint factorial(int n) {\n    int t;\n    if (n <= 1) return 1;\n    else factorial(n -1);\n    t = t * (n - 1);\n    return t;\n}\n\nint main() {\nint p;\n    while (cin >> p) {\n        cout << factorial(p) << endl;\n    }\n\n}\n\n",
  "#include <iostream>\n\n\nusing namespace std;\n\n\nint factorial(int n) {\n    int t;\n    if (n <= 1) return 1;\n    else n = n * factorial(n -1);\n    return t;\n}\n\nint main() {\nint p;\n    while (cin >> p) {\n        cout << factorial(p) << endl;\n    }\n\n}\n\n",
  "#include <iostream>\n\n\nusing namespace std;\n\n\nint factorial(int n) {\n    int t;\n    if (n < 2) return 1;\n    else n = n * factorial(n -1);\n    return t;\n}\n\nint main() {\nint p;\n    while (cin >> p) {\n        cout << factorial(p) << endl;\n    }\n\n}\n\n",
  "#include <iostream>\n\n\nusing namespace std;\n\n\nint factorial(int n) {\n    \n    if (n < 2) return 1;\n    else n = n * factorial(n -1);\n    return n;\n}\n\nint main() {\nint p;\n    while (cin >> p) {\n        cout << factorial(p) << endl;\n    }\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n<2) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  while(cin >> n){\n    cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n == 0 or n == 1) return 1;\r\n    else return factorial(n-1) * n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main () {\n  int n;\n  while(cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}",
  "def factorial(num):\r\n\tif num<=1: \r\n\t\treturn 1\r\n\telse: \r\n\t\treturn num*factorial(num-1)\r\n\r\n\r\nprint(factorial(0))",
  "def factorial(num):\r\n\tif num<=1: \r\n\t\treturn 1\r\n\telse: \r\n\t\treturn num*factorial(num-1)",
  "import sys\r\n\r\ndef factorial(num):\r\n\tif num<=1: \r\n\t\treturn 1\r\n\telse: \r\n\t\treturn num*factorial(num-1)\r\n\r\n\r\nprint(1)\r\nprint(1)\r\nprint(2)\r\nprint(6)\r\nprint(24)",
  "def factorial(n):\r\n\tif n<=1: \r\n\t\treturn 1\r\n\telse: \r\n\t\treturn n*factorial(n-1)",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n == 0) n = 1;\r\n    else {\r\n        n = n*factorial(n-1);\r\n    }\r\n    return n;\r\n}\r\nint main(){\r\n    int a;\r\n    while (cin >> a) {\r\n        cout << factorial(a) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std; \n\n\nint factorial(int n){\n  if(n <= 1) return 1;\n  return n*factorial(n-1);\n}\n\n\n\n\nint main(){\n  int n;\n  cin >> n; \n  cout << factorial(n) << endl; \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  \n  if (n <= 1) return 1;\n  else return n * factorial(n-1);\n}\n\nint main() {\n  \n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}\n\n    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else {\n    n = n + factorial(n-1);\n  }\n  return n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 1) return 1;\n  if (n == 0) return 1;\n  else {\n    n = n * factorial(n-1);\n    return n;\n  }\n}\n\nint main(){\n  int n;\n  cin >> n;\n  n = factorial(n);\n  cout << n << endl;\n}\n",
  "int factorial (int n){\r\nif (n!=0){\r\n\tn=n*factorial(n-1);\r\n}else{\r\n\treturn 1;\r\n \r\n}\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\nif (n!=0){\r\n\tn=n*factorial(n-1);\r\n}else{\r\n\treturn 1;\r\n \r\n}\r\n}\r\n\r\nint main (){\r\nint n;\r\ncin>>n;\r\nint z = factorial (n);\r\ncout<<z<<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\nif (n>0){\r\n\tn=n*factorial(n-1);\r\n\treturn n;\r\n}else{\r\n\treturn 1;\r\n \r\n}\r\n}\r\n\r\nint main (){\r\nint n;\r\ncin>>n;\r\ncout<<factorial (n)<<endl;\r\n}\r\n",
  "\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n - 1);\n}\n",
  "int factorial(int n) {\n  if (n == 0) return 1;\n  return n*(factorial(n - 1));\n}\n",
  "#include <math.h>\r\n#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\nint factorial (int n)\r\n{\r\n\tcin >> n;\r\n\tint sum = 1;\r\n\twhile (n>0)\r\n\t{\r\n\t\tsum = sum*n;\r\n\t\tn = n - 1;\r\n\t}\r\n\treturn sum;\r\n}\r\nint main()\r\n{\r\n\tint i;\r\n\twhile (1)\r\n\t{\r\n\t\tcout << factorial(i) << endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n",
  "#include <math.h>\r\n#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\nint factorial (int n)\r\n{\r\n\tcin >> n;\r\n\tint sum = 1;\r\n\twhile (n>0)\r\n\t{\r\n\t\tsum = sum*n;\r\n\t\tn = n - 1;\r\n\t}\r\n\treturn sum;\r\n}\r\nint main()\r\n{\r\n\tint i;\r\n\twhile (1)\r\n\t{\r\n\t\tcout << factorial(i) << endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n",
  "#include <math.h>\r\n#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\nint factorial (int n)\r\n{\r\n\twhile (1)\r\n\t{\r\n\tint sum = 1;\r\n\twhile (n != 0)\r\n\t{\r\n\t\tsum = sum*n;\r\n\t\tn = n - 1;\r\n\t}\r\n\treturn sum;\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tint i;\r\n\twhile (cin >> i)\r\n\t{\r\n\t\tcout << factorial(i) << endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n\tif(n == 0) return 1;\n\telse return n*fact(n-1);\n}\n\nint main(){\n\tint n;\n\twhile(cin >> n){\n\t\tcout << fact(n) << endl;\n\t}\n}\n",
  "\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n - 1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\t\t\n\t\tif ((n == 0) or (n == 1)) return 1;\n\t\telse return n*factorial(n-1);\n}\n\nint main() {\n\t\n\tint n;\n\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\telse if (n==1) return 1;\n\telse return n*factorial(n-1);\n}\nint main() {\n\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n\tif(n == 0) return 1;\n\telse return n*fact(n-1);\n}\n\nint main(){\n\tint n;\n\twhile(cin >> n){\n\t\tcout << fact(n) << endl;\n\t}\n}\n",
  " #include <iostream>\n \n using namespace std;\n \n int factorial(int n){\n\tif (n==1) return 1;\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\t\nint main(){\n\t\n\tint n;\n\twhile (cin >> n){\n\t\n\tcout << factorial(n) << endl;\n}\n}\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\twhile(cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return n;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\n}\n",
  "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return n;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\twhile cin >> n;\n\tcout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return n;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\tif (n == 1) return n;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==1) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\treturn n*factorial(n - 1);\r\n\t}\r\n}\r\nint main() {\r\n\tcout << factorial(5) << endl;\r\n\r\n\tsystem(\"pause\");\r\n\treturn 0;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==1) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\treturn n*factorial(n - 1);\r\n\t}\r\n}\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n\r\n\tsystem(\"pause\");\r\n\treturn 0;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n<2) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\treturn n*factorial(n - 1);\r\n\t}\r\n}\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n\r\n\tsystem(\"pause\");\r\n\treturn 0;\r\n}",
  "int factorial(int n) {\n  if (n <= 1) return 1;\n  return n * factorial(n - 1);\n}\n",
  "\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n - 1);\n}\n",
  "\ndef factorial(n):\n  if n <= 1: return 1\n  return n * factorial(n - 1)\n\n",
  "class Solution {\n\n  public static int factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n - 1);\n  }\n  \n}\n",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint toInt(char c) {\n  return c - '0';\n}\n\nint factorial(int n) {\n  if (n < 2) return 1;\n  return n * factorial(n - 1);\n}\n\nint main() {\n  cout << factorial(4) << endl;\n}\n",
  "\r\n\r\nint factorial(int n)\r\n{\r\n    if(n <= 1) { return 1; }\r\n    return n * factorial(n - 1);\r\n}\r\n\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    int t = 1;\n    for (int i = 0; (n-i) > 1; ++i) {\n        t = t*(n-i);\n    }\n    return t;\n}\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "int factorial(int n) {\n\tif (n == 0) return 1;\n\treturn (n*factorial(n-1));\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while(cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n#include <cmath>\n#include <string>\n\nint factorial (int n){\n    if (n==0) return 1;\n    if (n==1) return 1;\n    return n*factorial(n-1);\n    \n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n == 0) return 1;\r\n    else return factorial(n-1)*n;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n",
  "int factorial(int n) {\r\n\tif (n==1 or n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n - 1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 0;\r\n    if (n == 1) return 1;\r\n    else return n*factorial(n - 1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    if (n == 1) return 1;\r\n    else return n*factorial(n - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main() {\n\tint x;\n\tbool inicio = true;\n\twhile (cin >> x) {\n\t\tif (inicio) inicio = false;\n\t\telse cout << endl;\n\t\tcout << factorial(x);\n\t}\n}",
  "int factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\r\n#include <vector>\r\n#include <string>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n>1){\r\n        n = n*factorial(n-1);\r\n    }\r\n    else {\r\n        return n;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\n#include <vector>\r\n#include <string>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n>1){\r\n        n = n*factorial(n-1);\r\n        return n;\r\n    }\r\n    else if (n==1){\r\n        return 1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n",
  "int factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-2);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint result;\r\n\tif(n<=1) return 1;\r\n\r\n\tresult= n*(factorial(n-1));\r\n\treturn result;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\nint a;\r\ncin >> a;\r\ncout << factorial(a) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int a) {\n    if (a <= 1) return 1;\n    else return a*factorial(a-1);\n}\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n \nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main () {\n    int a;\n    cin >> a;\n    if (a == 0) cout << 1 << endl; \n    else cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main () {\n    int a;\n    cin >> a;\n    if (a == 0) cout << 1 << endl; \n    else cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    else return factorial(n-1)*n;\n}\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n    \nint main () {\n    int n;\n    while (cin >> n)\n      cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "int factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial (n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n)\n      cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n==1) return 1;\n    return n*factorial(n-1);\n}\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n==1 or n==0) return 1;\n    return n*factorial(n-1);\n}\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "int factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n<= 1) return 1;\n    return n*factorial(n-1);\n}\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0) return 1;\n  else return n*factorial (n-1);\n}\n\nint main(){\n  int n;\n  while (cin >> n){\n     cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n != 1) {\n        return n * factorial(n-1);\n    } \n}\nint main() {\n    int number, result;\n    while (cin >> number) {\n        result = factorial(number);\n        std::cout << result << std::endl;\n    }\n\n        \n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n != 1) {\n        return n * factorial(n-1);\n    } \n}\nint main() {\n    int number, result;\n    while (cin >> number) {\n        if (number == 0) {\n            std::cout << '1' << std::endl;\n            continue;\n        }\n        result = factorial(number);\n        std::cout << result << std::endl;\n    }\n\n        \n}\n",
  "int factorial(int n) {\n    if (n != 1) {\n        return n * factorial(n-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n > 1) {\n        return n * factorial(n-1);\n    } else {\n        return 1;\n    }\n}\nint main() {\n    int number, result;\n    while (cin >> number) {\n        result = factorial(number);\n        std::cout << result << std::endl;\n    }\n}\n",
  "int factorial (int n){\r\n    if (n <= 1) return 1;\r\n    return n*factorial(n-1)\r\n}\r\n",
  "int factorial (int n){\r\n    if (n <= 1) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\nif (n == 0){\r\n    return 1\r\n    }\r\n\r\nelse{\r\n    return n*factorial(n-1)\r\n}\r\n\r\n}\r\n\r\nint main(){\r\nint a;\r\ncin>>a;\r\ncout<<factorial(a)<<endl;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\nif (n == 0){\r\n    return 1;\r\n    }\r\n\r\nelse{\r\n    return n*factorial(n-1);\r\n}\r\n\r\n}\r\n\r\nint main(){\r\nint a;\r\ncin>>a;\r\ncout<<factorial(a)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif(n == 0 or n == 1)return 1;\n\treturn factorial(n-1)*n;\n}\nint main() {\n    std::cout << \"Hello World!\\n\";\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n/*void for_recursiu (int num, char car){\r\n    if (num!=0){\r\n        if (num==1){\r\n            cout << car;\r\n        }\r\n        else {\r\n            cout << car;\r\n            for_recursiu(num-1, car);\r\n        }\r\n    }\r\n}*/\r\n\r\nvoid binary_reversed(int num){\r\n    if (num>0){\r\n        cout << num%2;\r\n        binary_reversed(num/2);\r\n    }\r\n    else return;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    while (cin>>n){\r\n        if (n==0){\r\n            cout << 0 << endl;\r\n        }\r\n        else{\r\n        binary_reversed(n);\r\n        cout << endl;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n/*void for_recursiu (int num, char car){\r\n    if (num!=0){\r\n        if (num==1){\r\n            cout << car;\r\n        }\r\n        else {\r\n            cout << car;\r\n            for_recursiu(num-1, car);\r\n        }\r\n    }\r\n}*/\r\n\r\nint factorial (int n){\r\n    if (n==0){\r\n        return 1;\r\n    }\r\n    else {\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n/*void for_recursiu (int num, char car){\r\n    if (num!=0){\r\n        if (num==1){\r\n            cout << car;\r\n        }\r\n        else {\r\n            cout << car;\r\n            for_recursiu(num-1, car);\r\n        }\r\n    }\r\n}*/\r\n\r\nint factorial (int n){\r\n    if (n==0){\r\n        return 1;\r\n    }\r\n    else {\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n    }\n",
  "#include <cmath>\r\n#include <string>\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0 or n==1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while(cin>>n) {\n        cout << factorial(n) << endl;\n    }  \n}\n",
  "int factorial(int n) {\n    if (n==0 or n==1) return 1;\n    return n*factorial(n-1);\n}\n\n",
  "int factorial(int n){\n  if(n == 0) return 1;\n  return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n * factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main(){\r\n\tint n, result;\r\n\twhile(cin >> n){\r\n\t\tresult = factorial(n);\r\n\t\tcout << result << endl;\r\n\t}\r\n}\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse{\r\n\t\tint fact = n;\r\n\t\tfact *= factorial(n - 1);\r\n\t\treturn fact;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif(n == 0 or n == 1)return 1;\n\treturn factorial(n-1)*n;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\t\r\n\telse return n * factorial(n-1);\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  while (cin >> n) {\r\n  cout << factorial(n) << endl;\r\n}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\nint main(){\n\n  int n;\n  while(cin >> n){\n    cout << factorial(n) << endl;\n  }\n\n}\n\nint factorial(int n){\n\n  int fact=1;\n  if(n>0) fact = n * factorial(n-1);\n  return fact;\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n  while(n > 0 and n < 12){\n      n= n * (n-1);\n    \n  }\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int sum=1;\n  for(int i=1; i<n+1; ++i) sum*=i;\n  return sum;\n}\n\nint main(void) {\n  \n  int n;\n  while(cin >> n) cout << factorial(n) << endl;\n}\n  ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n  int number;\n  while (cin >> number) cout << factorial(number) << endl;\n}\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n -1);\n}",
  "int factorial(int n) {\r\n    return (n == 0 ? 1 : factorial(n--) * n);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n  while(n > 0 and n < 12){\n      n= n * (n-1);\n    \n  }\n  return n;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n  int i = 0;\n  int fac = 1;\n  \n  while (i < n){\n    ++i;\n    fac = fac * i;\n  }\n  return fac;\n}\n\nint main (){\n  int n;\n  while (cin >> n){\n  cout << factorial(n) << endl;\n  }\n}",
  "int factorial(int n) {\r\n    return n == 0 ? 1 : factorial(n - 1) * n;\r\n}",
  "#include <iostream>\n\nusing namespace std ;\n\nint factorial(int n) {\n    if ( n == 0 ) return 1 ;\n    else return factorial(n-1) * n ;\n}\n\nint main () {\n    int n ;\n    while ( cin >> n ) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n  \n  if ( n == 0 ) return 1;\n  else return factorial (n-1)*n;\n}\n\nint main (){\n  \n  int x;\n  \n  while (cin >> x){\n    \n    cout << factorial (x) << endl;\n  }\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\t\n\tif(n<1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0 or n == 1) return 1;\n  while(n > 1 and n < 12){\n      n= n * (n-1);\n    \n  }\n  return n;\n}",
  "#include <iostream>\nusing namespace std;\n\n//Precondition: 0<=n<=12\n//Postcondition: Return n!\n\nint factorial(int n) {\n     if (n == 0) return 1;\n     else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n\tcout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n  while(n > 0 and n < 12){\n      n= n * (n-1);\n    \n  }\n  return n;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int aux = 1;\n  if(n==0 or n == 1) return 1;\n  while(n > 1 and n < 12){\n      aux = aux * n;\n      --n;\n    \n  }\n  return n;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n    int f=1;\n    int i=0;\n\n    while (n > i) {\n      i++;\n      f*=i;\n}\nreturn f;\n}\n\n\nint main() {\n    int n;\n    \n    while ( cin >> n) {\n      cout << factorial(n) << endl;\n    }\n\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int aux = 1;\n  if(n==0 or n == 1) return 1;\n  while(n > 1){\n      aux = aux * n;\n      --n;\n    \n  }\n  return n;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int aux = 1;\n  if(n==0 or n == 1) return 1;\n  while(n > 1){\n      aux = aux * n;\n      n--;\n    \n  }\n  return n;\n}",
  "int factorial(int n){\n\treturn n == 0 ? 1 : factorial(n-1) * n;\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int r=1;\n    for (int i=1; i<=n; i++){\n        r=r*i;\n    }\nreturn r;\n}\n\nint main() {\n    int n;\n    while (cin>>n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint f = 1;\n\tint i = 0;\n\t\n\twhile(i < n){\t\t\n\t\ti = i+1;\n\t\tf = f*i;\t\t\n\t\t}\nreturn f;\n}\nint main(){\n\t\n\tint n;\n\t\n\twhile(cin >> n){\n\t\t\n\t\tcout << factorial(n) << endl;\n\t\t\n\t\t}\n\t\n\t} \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int aux = 1;\n  if(n==0 or n == 1) return 1;\n  aux = aux * n\n  factorial(n-1)\n  return aux;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n > 1){\n   n = n * factorial(n-1);\n  }\n  else \n    return 1;\n    \n  return n;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n == 0) return 1;\n  else return n*factorial(n - 1);\n}\n\nint main() {\n  int a, i;\n  while(cin >> a){\n    i = factorial(a);\n    cout << i << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint r = 1;\nint factorial (int n) {\n\tif (n > 1 ) {\n\t\tr = r * n ;\n\t\treturn (factorial (n - 1));\n\t}\n\telse return (1);\n}\n\nint main () {\n\tint a;\n\tcin >> a;\n\t\n\tcout << factorial(a)<< endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n > 1 ) {\n\t\treturn (n * (factorial (n - 1)));\n\t}\n\telse return (1);\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n   if (n < 2) return 1;\n   else return n * factorial (n-1);\n   }\n   \nint main() {\n   int n;\n   while (cin >> n) {\n     cout << factorial(n) << endl;\n     }\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  if(n <= 1) return 1;\n  else{\n   return n* (factorial(n-1));\n   \n  }\n}\n  \n\n\n\nint main (){\n  \n  \n int n;\n cin >> n;\n\n\n  cout << factorial(n) << endl;\n  \n  \n  \n  \n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n>1) {\n\t\treturn (n*factorial(n-1));\n\t}\n\telse {\n\t\treturn (1);\n\t}\n}\n\n\n\nint main () {\n\t\n\tint x;\n\twhile (cin >> x)\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n<=1) return 1;\n  else { \n    return n*(factorial (n-1));\n\n\n}  \n}\n\n\nint main () {\nint n;\ncin >> n;\ncout << factorial (n) << endl;\n}                     ",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n\tif (n<=1) return 1;\n\telse return n * factorial (n-1);\n}\nint main () {\n\tint x, a;\n\twhile (cin >> x) {\n\t\ta=factorial (x);\n\t\tcout << a << endl;\n\t}\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n<=1) return 1;\n  else { \n    return n*(factorial (n-1));\n\n\n}  \n}\n\n\nint main () {\nint n;\ncin >> n;\ncout << factorial (n) << endl;\n}                     ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\tcout << factorial(n) << endl;\n\t}\n}",
  "using namespace std;\n#include<iostream>\nint factorial(int n){\n\tif(n==0) return 1;\n\telse return n*factorial(n-1);\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "int factorial(int a){\n  if(a <= 1)return a;\n  return a*factorial(a-1);\n}",
  "int factorial(int a){\n  if(a <= 1)return 1;\n  return a*factorial(a-1);\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n if ( n == 1 or n == 0 ) {\n   return 1;\n }\n else {\n   return n*factorial(n-1);\n }\n}\n\nint main () {\n  int n ;\n  cin >> n;\n  cout << factorial(n) << endl;\n  \n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}",
  "#include <iostream>\nusing namespace std;\n \n\n  \nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n * factorial(n - 1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "int factorial(int n) {\n\tif (n<2) return 1;\n\telse return n*factorial(n - 1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial (int n) {\r\n\t\r\n    if (n == 0) return 1;\r\n    else return n * factorial (n-1);\r\n\t\r\n}\r\n\r\n\r\nint main(){\r\n\t\r\n    int x, y;\r\n    cin >> x;\r\n    y = factorial(x);\r\n    cout << y << endl;\r\n\r\n}\r\n\r\nCertificate \r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial (int n) {\r\n\t\r\n    if (n == 0) return 1;\r\n    else return n * factorial (n-1);\r\n\t\r\n}\r\n\r\n\r\nint main(){\r\n\t\r\n    int x, y;\r\n    cin >> x;\r\n    y = factorial(x);\r\n    cout << y << endl;\r\n\r\n}\r\n\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0){return 1;}\n    else {n * factorial (n - 1);}\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n    else {return 1;}\n    if (n > 1) {n * factorial (n - 1);}\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n > 1) {n * factorial (n - 1);}\n    else {return 1;}\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n > 1) {return n*factorial (n - 1);}\n    else {return 1;}\n}",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main(){\n    int a = 0, b;\n    while (cin >> a){\n        b = factorial(a);\n        cout << b << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n  int m=1;\nfor (int i=n;i>0;--i){\n  m=m*i;\n}\nn=m;\nreturn n;\n}\nint main() {\n    int n;\n    while (cin >> n) {\n      \n        cout<<factorial(n)<<endl;\n    }\n}",
  "int factorial(int n){\n  if (n > 1){\n    return n*factorial(n-1);\n  }\n  else return 1;\n}\n",
  "int factorial(int n){\n\tif(n==0 or n==1) return 1;\n\treturn n*factorial(n-1);\n}\n",
  "//Donat un nombre.\n//S'0btÃ© el factorial.\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n<=1) return 1;\n\telse return n*factorial(n-1);\n}\t\t\n\nint main () {\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\t\n\t\n\t\t\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n  int f=1;\n  for(int i=0;i<n;++i){\n    f=f*(i+1);\n  }\n  return(f);\n}\n\nint main(){\n  int n;\n  while(cin>>n){\n    cout<<factorial(n)<<endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\nint main() {\nint a;\ncin >> a;\ncout << factorial(a) << endl; \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  return n*factorial(n - 1);\n}\n\nint main () {\n  int a;\n  cin >> a;\n  cout << factorial (a) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main () {\n  int n;\n  while(cin >> n){\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int f0=1, f=1;\n\nfor (n=n ; n >= 0 ; --n) {\n\n\nif (n==0) {\nf=f*f0;  \nbreak;  \n} \nelse  {\nf= f*n;\n  \n}  \n\n}\n  \nreturn f;  \n}\n\n\n\nint main () {\n  \n int n, f; \nwhile (cin >> n) {  \n\n  f= factorial (n);\n\ncout << f << endl;  \n  \n  \n}  \n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1) return 1;\n  return n * factorial(n - 1);\n}\n\nint main(){\n  int n;\n  while(cin >> n){\n    cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  \n  if (n <= 1) return 1;\n  else return n * factorial (n - 1);\n\n}\n\nint main () {\n  \n  int n;\n  while (cin >> n){\n    cout << factorial (n) << endl;\n  }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\nif (n <= 1) return 1;\r\nelse return n*factorial (n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\nint main() {\nint x;\ncin >> x;\ncout << x;\n}\nint factorial(int n) {\nif (n == 0) return 1;\nelse {\nif (n <= 12) return n*factorial(n-1);\n} \n}\n",
  "int factorial(int n){\n  if(n <= 1) return 1;\n  return n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn n*factorial(n-1);\n}\n\nint main () {\n\t\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 1 or n == 0) return 1;\n    else return n*factorial (n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n\nint factorial(int n) {\n  if(n == 0) return 1;\n  else return n * factorial(n - 1);\n}\n",
  "/**************************************************************/\n/* A function that returns n! recursively.           P12509   */\n/**************************************************************/\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return n;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "/**************************************************************/\n/* A function that returns n! recursively.           P12509   */\n/**************************************************************/\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else if (n <= 2) return n;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "/**************************************************************/\n/* A function that returns n! recursively.           P12509   */\n/**************************************************************/\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 2) return n;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if ( n <= 1 ) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  while ( cin >> n ) {\n    cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if(n == 0) return 1;\n  else return n * factorial (n - 1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "import acm.program.ConsoleProgram;\npublic class Factorial extends ConsoleProgram {\n    \n    public int calculo(int x){\n        int f=1;\n        for(int i=1; i<=x; i++ ){\n\n            f=f*i;\n         }\n        return f;\n    }\n    \n    \n\n    public void run(){\n\n    int x, y;\n\n    println(\"Numero\");\n    x=readInt();\n    y=calculo(x);\n    println(y);\n\n\n    \n}\n}\n",
  "Êþº¾\u0000\u0000\u00001\u0000'\n\u0000\b\u0000\u001a\n\u0000\u0007\u0000\u001b\b\u0000\u001c\n\u0000\u0007\u0000\u001d\n\u0000\u0007\u0000\u001e\n\u0000\u0007\u0000\u001f\u0007\u0000 \u0007\u0000!\u0001\u0000\u0006<init>\u0001\u0000\u0003()V\u0001\u0000\u0004Code\u0001\u0000\u000fLineNumberTable\u0001\u0000\u0012LocalVariableTable\u0001\u0000\u0004this\u0001\u0000\u001cLfactorial/CalculoFactorial;\u0001\u0000\u0010calculoFactorial\u0001\u0000\u0004(I)I\u0001\u0000\u0001y\u0001\u0000\u0001I\u0001\u0000\u0001x\u0001\u0000\u0003run\u0001\u0000\u0006numero\u0001\u0000\tresultado\u0001\u0000\nSourceFile\u0001\u0000\u0015CalculoFactorial.java\f\u0000\t\u0000\n\f\u0000\u0010\u0000\u0011\u0001\u0000.Introduce un numero para calcular el factorial\f\u0000\"\u0000#\f\u0000$\u0000%\f\u0000\"\u0000&\u0001\u0000\u001afactorial/CalculoFactorial\u0001\u0000\u001aacm/program/ConsoleProgram\u0001\u0000\u0007println\u0001\u0000\u0015(Ljava/lang/String;)V\u0001\u0000\u0007readInt\u0001\u0000\u0003()I\u0001\u0000\u0004(I)V\u0000!\u0000\u0007\u0000\b\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000\t\u0000\n\u0000\u0001\u0000\u000b\u0000\u0000\u0000/\u0000\u0001\u0000\u0001\u0000\u0000\u0000\u0005*·\u0000\u0001±\u0000\u0000\u0000\u0002\u0000\f\u0000\u0000\u0000\u0006\u0000\u0001\u0000\u0000\u0000\t\u0000\r\u0000\u0000\u0000\f\u0000\u0001\u0000\u0000\u0000\u0005\u0000\u000e\u0000\u000f\u0000\u0000\u0000\u0001\u0000\u0010\u0000\u0011\u0000\u0001\u0000\u000b\u0000\u0000\u0000b\u0000\u0003\u0000\u0003\u0000\u0000\u0000\u0014\u001b\u0000\u0005\u0004¬*\u001b\u0004d¶\u0000\u0002=\u001b\u001ch=\u001c¬\u0000\u0000\u0000\u0002\u0000\f\u0000\u0000\u0000\u0016\u0000\u0005\u0000\u0000\u0000\r\u0000\u0004\u0000\u000e\u0000\u0006\u0000\u0010\u0000\u000e\u0000\u0011\u0000\u0012\u0000\u0012\u0000\r\u0000\u0000\u0000 \u0000\u0003\u0000\u000e\u0000\u0006\u0000\u0012\u0000\u0013\u0000\u0002\u0000\u0000\u0000\u0014\u0000\u000e\u0000\u000f\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0014\u0000\u0013\u0000\u0001\u0000\u0001\u0000\u0015\u0000\n\u0000\u0001\u0000\u000b\u0000\u0000\u0000e\u0000\u0002\u0000\u0003\u0000\u0000\u0000\u0017*\u0012\u0003¶\u0000\u0004*¶\u0000\u0005<*\u001b¶\u0000\u0002=*\u001c¶\u0000\u0006±\u0000\u0000\u0000\u0002\u0000\f\u0000\u0000\u0000\u0016\u0000\u0005\u0000\u0000\u0000\u0018\u0000\u0006\u0000\u001a\u0000\u000b\u0000\u001b\u0000\u0011\u0000\u001c\u0000\u0016\u0000\u001d\u0000\r\u0000\u0000\u0000 \u0000\u0003\u0000\u0000\u0000\u0017\u0000\u000e\u0000\u000f\u0000\u0000\u0000\u000b\u0000\f\u0000\u0016\u0000\u0013\u0000\u0001\u0000\u0011\u0000\u0006\u0000\u0017\u0000\u0013\u0000\u0002\u0000\u0001\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u0019",
  "/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\n\npackage factorial;\n\nimport acm.program.ConsoleProgram;\npublic class CalculoFactorial extends ConsoleProgram {\n\n    public int calculoFactorial (int x){\n\n        if(x==0){\n            return 1;\n        }else{\n        int y=calculoFactorial(x-1);\n        y=x*y;\n         return y;\n        }\n    }\n\n    public void run(){\n\n        println(\"Introduce un numero para calcular el factorial\");\n\n        int numero=readInt();\n        int resultado=calculoFactorial(numero);\n        println(resultado);\n    }\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << \"El factorial de \" << n << \" es \" << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n/*int factorial (int n){\n\tint q;\n\tq=1;\n\twhile (n>0){\n\t\tq=q*n;\n\t\tn=n-1;\n\t}\n\tcout << q << endl;\n}*/\n\nint factorial (int n){\n\tif (n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\n\nint main() {\n\tint n;\n\twhile(cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1)return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include<iostream>\n#include<cmath>\n#include<vector>\n#include<map>\n#include<string>\n#include<algorithm>\n#include<iomanip>\n\nusing namespace std;\n\nint factorial ( int n){\n\tif (n>1) n*=factorial(n-1);\n\treturn n;\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}",
  "int factorial (int n) {\n\tif(!n) return 1;\n\treturn n*fact(n-1);\n}\n",
  "# include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tint a=1;\n\twhile (n>1) {\n\ta=a*n;\n\t--n;\n\tfactorial (n);\n\t}\n\treturn a;\n}\nint main () {\n\tint a;\n\tcin >> a;\n\tcout << factorial (a) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);    \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 1) return 1;\n  else return n*factorial(n-1); \n}\n\nint main() {\n  int n;\n\n  cin >> n;\n  cout << \"El factorial de \" << n << \" es \" << factorial(n) << endl;\n\n}\n",
  "int factorial(int n) {\n  if (n == 1) return 1;\n  else return n*factorial(n-1); \n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n  int f;\n  if (n == 1) f = 1;\n    else f = n*factorial(n-1);\n  return f;\n}\n\nint main() {\n  int n;\n\n  cin >> n;\n  cout << \"El factorial de \" << n << \" es \" << factorial(n) << endl;\n\n}\n",
  "int factorial(int n){\n\t\t     if (n==0) return 1;\n\t\t     else return n * factorial(n-1);\n\t\t     }\n",
  "int factorial (int n) {\n  int f;\n  if (n == 0) f = 1;\n    else f = n*factorial(n-1);\n  return f;\n}\n",
  "/*\n\nesto es un comentario\n\n*/\n\nint factorial (int n) {\n  int f;\n  if (n == 0) f = 1;\n    else f = n*factorial(n-1);\n  return f;\n}\n\n\n/*\n\nesto es un comentario\n\n*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f;\n    if (n == 0) return 1;\n    else f = n * factorial (n - 1);\n    return f;\n}\nint main() {\n    int x;\n    cin >> x;\n    x = factorial (x);\n    cout << x << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if(n>1) return n*(factorial(n-1));\r\n    return n;\r\n}\r\n\r\nint main()\r\n{\r\n}\r\n",
  "int factorial(int n)\r\n{\r\n    if(n>1) return n*(factorial(n-1));\r\n    return n;\r\n}\r\n",
  "int factorial(int n)\r\n{\r\n    if(n>=1) return n*(factorial(n-1));\r\n    return n;\r\n}\r\n",
  "int factorial(int n)\r\n{\r\n    if(n==0) return 1;\r\n    if(n>=1) return n*(factorial(n-1));\r\n    return n;\r\n}\r\n",
  "int factorial (int n) {\n  int f;\n  if (n == 1) f = 1;\n    else f = n*factorial(n-1);\n  return f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tint i = 0;\n\tint f = 1;\n\twhile(i < n){\n\t\t++i;\t\t// i = i + 1\n\t\tf*= i;\t\t// f = f*i\n\t}\n\treturn f;\n}\nint main(){\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std; \r\n\r\nint factorial (int n){;\r\n    int suma = 0 ;\r\n    for ( int k = 1 ; k<=n ; k++){\r\n       suma = suma + k ;\r\n    }\r\n    return suma; \r\n}\r\n\r\nint main(){\r\n    int n; \r\n    cin >> n ; \r\n    cout<< factorial (n)<<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std; \r\n\r\nint factorial (int n){;\r\n    int suma = 1 ;\r\n    for ( int k = 1 ; k<=n ; k++){\r\n       suma = suma*k ;\r\n    }\r\n    return suma; \r\n}\r\n\r\nint main(){\r\n    int n; \r\n    cin >> n ; \r\n    cout<< factorial (n)<<endl;\r\n}\r\n",
  "#include <iostream>\n#include <cmath>\n#include <string>\nusing namespace std;\n\nint factorial (int n){\n\tif (n==0) {\n\t\treturn (1);\n\t}\n\treturn (n*factorial (n-1));\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n\t\t\n\t\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n);\n}",
  "int factorial (int n){\n\t\n\tif(n==1) return 1;\n\t\n\telse return ( n*factorial(n-1) );\n\t\n}\n\t\n\t\n\t\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial (int n){\n\t\n\tif(n==1) return 1;\n\t\n\telse return ( n*factorial(n-1) );\n\t\n}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n) {\n\t\n\tif (n==1 or n==0) return 1;\t\n\telse return ( n*factorial(n-1) );\n\t\n}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    \n    return n * factorial(n-1);\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\treturn n * factorial(n - 1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fac=1;\n    while (n>1){\n        fac=n*fac;\n        --n;\n    }\n    return fac;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint main(){\n\tfloat x;\n\twhile (cin >> x){\n\t\tcout << sin(x) << \" \" << cos(x) << endl;\n\t}\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\t\n\tif (n == 0)  return 1;\n\telse {\n\t\tint f = factorial (n - 1);\n                return n*f;\n\t}\n}\n\t\t\n\nint main(){\n\tint x;\n\tcin >> x;\n\tcout << factorial (x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n\nint factorial(int n) {\n   if(n == 0) return 1;\n   return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if(n > 1) n*=factorial(n-1);\n    return n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int fact=n;\n    while (n > 2) {\n        fact*=n-1;\n        --n;\n    }\n    return fact;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if(n > 1) n*=factorial(n-1);\n    else if (n == 0) return 1;\n    return n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int fact=n;\n    while (n > 2) {\n        fact*=n-1;\n        --n;\n    }\n    if (n == 0) return 1;\n    return fact;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif(n<=1) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return factorial(n - 1) * n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n - 1) * n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial( int n){\n    if( n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n    if (n<=1) return 1;\n    return n* fact(n-1);\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << fact(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1) return 1;\n    return n* fact(n-1);\n}\n\nint main(){\n    /*int a;\n    cin >> a;\n    cout << fact(a) << endl;*/\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n<=1) return 1;\n    return n* factorial(n-1);\n}\n\nint main(){\n    /*int a;\n    cin >> a;\n    cout << fact(a) << endl;*/\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n > 1) {\n\tint m = n * factorial(n-1);\n\treturn m;\n\t}\n\telse return 1;\n}\nint main() {\n\tint n;\n\tcin>>n;\n\tint resultat = factorial(n);\n\tcout<<resultat<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if (n == 0) return 1;\n    else total = n*factorial(n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial (int n) {\n\tint c;\n\tc = 1;\n\twhile (n >=1) {\n\t\tc = c*n;\n\t\tn = n-1;\n\t}\n\treturn (c);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n\t\n\t\t\t\t\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int i) {\r\n    if (i == 0) return 1;\r\n    else return i * factorial(x);    \r\n}\r\n        \r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int i) {\r\n    if (i == 0) return 1;\r\n    else return i * factorial(i - 1);    \r\n}\r\n        \r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    int f = 1;\n    int i = 0;\n    while (i < n) {\n        i = i + 1;\n        f = f * i;\n        }\n        return f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n) {\n\tint fct=1;\n\tfor (int i=2;i<=n;++i) fct=fct*i;\n\treturn fct;\n\t\n}\n\nint main () {\n\tint n;\n\tcin>>n;\n\tcout<< \"El factorial de \"<< n << \" es \"<< fact(n)<< \".\"<<endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tint fct=1;\n\tfor (int i=2;i<=n;++i) fct=fct*i;\n\treturn fct;\n\t\n}\n\nint main () {\n\tint n;\n\tcin>>n;\n\tcout<< \"El factorial de \"<< n << \" es \"<< factorial(n)<< \".\"<<endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n  if (n < 2) return 1;\n  else return n*factorial(n-1);\n}\n\n\n\nint main() {\n  int n;\n  cin >> n;\n  int f = factorial(n);\n  cout << \"factorial (\" << n << \") --> \" << f << endl;\n  }",
  "int factorial (int n) {\n\tif(!n) return 1;\n\treturn n*factorial(n-1);\n}\n",
  "#include<iostream>\n#include<cmath>\n#include<vector>\n#include<map>\n#include<string>\n#include<algorithm>\n#include<iomanip>\n\nusing namespace std;\n\nint factorial ( int n){\n\tif (n>1) n*=factorial(n-1);\n\tif (n==0) return 1;\n\telse return n;\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}",
  "int factorial (int n) {\n  int f;\n  if (n == 0) f = 1;\n    else f = n*factorial(n-1);\n  return f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else return n = n*factorial(n-1);\n}\n\nint main() {\n  \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0) return 1;\n  else return n*factorial(n-1);  \n}\nint main(){\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0) return 1;\n  else return n*factorial (n-1);\n}\n\nint main(){\n  int n;\n  while (cin >> n){\n     cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint Factor(int n)\n{\n\tif (n == 0) return 1;\n\treturn n*Factor(n - 1);\n}\n\nint main()\n{\n\tint n;\n\twhile (cin >> n) cout << Factor(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0)return 1;\n  else return n*factorial(n-1);\n}\n\nint main(){\n  int x;\n  cin >> x;\n  cout<< factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if ( n > 1) return n*factorial (n-1);\n  else return 1;\n}\nint main (){\n  int n;\n  cin >> n;\n  cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\tif (n == 0) return 1;\n\treturn n*factorial(n - 1);\n}\n\nint main()\n{\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif(n>1){\r\n\treturn n*factorial(n-1);\r\n}\r\n    else return 1;\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tn = factorial(n);\n\tcout << n << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n>1) return (n*factorial(n-1));\r\n\telse if (n==1) return n;\r\n\telse if (n==0) return 1;\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tn = factorial(n);\r\n\tcout << n << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n>2) return (n*factorial(n-1));\r\n\telse return 1;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n>1) return (n*factorial(n-1));\r\n\telse return 1;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n=1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n<=1) return n;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) return 0\r\n\tif (n==1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==1) return 1;\r\n\tif (n==0) return 0;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==1) return 1;\r\n\tif (n==0) return 0;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) return 0;\r\n\tif (n==1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) {\r\n\t\treturn 0;\r\n\t} else if (n==1) {\r\n\t\treturn 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) {\r\n\t\treturn 0;\r\n\t} else if (n==1) {\r\n\t\treturn 1;\r\n\telse return n*factorial(n-1);\r\n\t} \t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n == 0) {\r\n\treturn 1;\r\n\t}\r\n\t\telse {\r\n\t\tint m = factorial (n - 1);\r\n\t\treturn n * m;\r\n\t\t}\r\n}\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tint fac = 1;\r\n\tfor (int i = 1; i <= n; ++i)\tfac = i*fac;\r\n\treturn fac;\r\n}\r\nint main (){\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\tint fac = factorial (n);\r\n\t\tcout << fac << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tif (n==0) return 1;\r\n\telse return n*factorial (n-1);\r\n}\r\nint main (){\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\tint fac = factorial (n);\r\n\t\tcout << fac << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n/* FunciÃ³n recursiva para cÃ¡lculo de factoriales */\nint factorial(int n) {\n   if(n < 0) return 0;\n   else if(n > 1) return n*factorial(n-1); /* Recursividad */\n   return 1; /* CondiciÃ³n de terminaciÃ³n, n == 1 */\n}\nint main () {\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n/* FunciÃ³n recursiva para cÃ¡lculo de factoriales */\nint factorial(int n) {\n   if(n < 0) return 0;\n   else if(n > 1) return n*factorial(n-1); /* Recursividad */\n   return 1; /* CondiciÃ³n de terminaciÃ³n, n == 1 */\n}\nint main () {\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n > 1){\r\n\t\treturn n * factorial(n-1);\r\n\t}\r\n\telse return 1;\r\n}\r\n\r\nint main(){\r\n\tcout << factorial(4) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n* factorial(n-1);\r\n}\r\n\r\n\r\nint main () {\r\n   int n;\r\n   while (cin >> n) cout << factorial(n) << endl;\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\n\n\nint main()  {\n\tint x;\n\twhile (cin >> x) {\n\t\tcout << factorial (x) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial(n - 1);\n        return n*f;\n    }\n}\n\n\n\n}\n    \nint main() {\n    int k;\n    cin >> k;\n    cout << factorial(k) << endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial(n - 1);\n        return n*f;\n    }\n}\n\n\n\n\n    \nint main() {\n    int k;\n    cin >> k;\n    cout << factorial(k) << endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    while (cin >> n) {\n        int sumador;\n        for (int j=0; j<=n; j++) {\n            if (n==0) {\n                cout << 1 << endl;\n            }\n            else if (j>0 and j<n) {\n                sumador= sumador*j;\n            }\n            else if (j==n) {\n                sumador = sumador*j;\n                cout << sumador << endl;\n            }\n        }\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    while (cin >> n) {\n        int sumador=1;\n        for (int j=0; j<=n; j++) {\n            if (n==0) {\n                cout << 1 << endl;\n            }\n            else if (j>0 and j<n) {\n                sumador= sumador*j;\n            }\n            else if (j==n) {\n                sumador = sumador*j;\n                cout << sumador << endl;\n            }\n        }\n    }\n}\n\nint main () {\n    int n;\n    factorial(n);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    while (cin >> n) {\n        int sumador=1;\n        for (int j=0; j<=n; j++) {\n            if (n==0) {\n                cout << 1 << endl;\n            }\n            else if (j>0 and j<n) {\n                sumador= sumador*j;\n            }\n            else if (j==n) {\n                sumador = sumador*j;\n                cout << sumador << endl;\n            }\n        }\n    }\n}\n\nint main () {\n    int n;\n    factorial(n);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    while (cin >> n) {\n        long int sumador=1;\n        for (int j=0; j<=n; j++) {\n            if (n==0) {\n                cout << 1 << endl;\n            }\n            else if (j>0 and j<n) {\n                sumador= sumador*j;\n            }\n            else if (j==n) {\n                sumador = sumador*j;\n                cout << sumador << endl;\n            }\n        }\n    }\n}\n\nint main () {\n    int n;\n    factorial(n);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n > 1)\n        return factorial(n-1)*n;\n    else\n        return 1;\n}\n\nint main(){\n    int in = 0;\n    while (cin >> in) {\n        cout << factorial(in) << endl;\n\n    }\n}\n",
  "//#include <iostream>\n//using namespace std;\n\nint factorial(int n){\n    if (n > 1)\n        return factorial(n-1)*n;\n    else\n        return 1;\n}\n/*\nint main(){\n    int in = 0;\n    while (cin >> in) {\n        cout << factorial(in) << endl;\n\n    }\n}\n*/\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){ \r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f=n;\n    for (int i=1; i=n; ++i){\n    f = f*(n-1);\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f=n;\n    for (int i=1; i<=n; ++i){\n    f = f*(n-1);\n    n=n-1;\n    }\n    return f;\n    \n}\n\nint main () {\n    int n;\n    cin >> n;\n   cout <<  factorial(n) << endl;\n    \n}\n    \n    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1 or n==0) return 1;\n    else{\n    int f=n;\n\n    for (int i=1; i<=n; ++i){\n    f = f*(n-1);\n    n=n-1;\n    }\n    return f;\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n   cout <<  factorial(n) << endl;\n    \n}\n    \n    ",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    int i = 0;\n    int fac = 1;\n    \n    while (i != n) {\n        i = i + 1;\n        fac = fac*i;\n    }\n    return fac;\n    \n    \n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n   if (n>1) return n*factorial(n-1);\r\n   else return 1;    \r\n}\r\n\r\nint main(){\r\n   int n;\r\n   cin >> n;\r\n   cout << factorial(n) << endl;    \r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint fac = 1;\r\n\tif (n > 1) fac *= n*factorial(n-1);\r\n\treturn fac;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl << \"----\" << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint fac = 1;\r\n\tif (n > 1) fac *= n*factorial(n-1);\r\n\treturn fac;\r\n}\r\n\r\nint main() {\r\n}\r\n",
  "int factorial(int n) {\r\n\tif (n > 1) return n*factorial(n-1);\r\n\telse return 1;\r\n}\r\n",
  "int factorial(int n) {\n    if(n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if ( n == 0 ) return 1;\n  else return n*factorial(n - 1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    int fac = factorial(n-1);\n    return n*fac;\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tint sol;\r\n\tif (n == 0) return 1;\r\n\telse if (n == 1) {\r\n\t\tsol = n;\r\n\t\treturn sol;\r\n\t}\r\n\telse {\r\n\t\tsol = n*factorial(n-1);\r\n\t}\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial (n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n > 1) return n*factorial(n-1);\r\n\telse {\r\n\t\treturn 1;\r\n\t}\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial (n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial (n - 1);\r\n}\r\n\r\nint main () {\r\n\tint x;\r\n\twhile (cin >> x) {\r\n\t\tcout << factorial (x) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    return 1;\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n    cout << factorial (n) << endl;\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\nif (n==0 or n==1) return 1;\r\nelse return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\r\nint n;\r\n\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n     int fact = 1;\r\n     if (n > 1) factorial(n - 1);\r\n     else fact = fact*n;   \r\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n     int fact = 1;\r\n     if (n > 1) factorial(n - 1);\r\n     else fact = fact*n;\r\n     return fact;   \r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n);\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    \n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main(){\n \n    \n    \n}",
  "int factorial (int n) {\n  if (n == 0) return 1\n  else {\n  int a;\n  a = n * factorial (n - 1);\n  return a;\n  }\n}",
  "int factorial (int n) {\n  if (n == 0) return 1;\n  else {\n  int a;\n  a = n * factorial (n - 1);\n  return a;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\nif (n > 1) return n*factorial(n-1);\nelse return 1;\n\n\n\n}\n\nint main () {\n\nint n;\n\nwhile (cin >> n) {\n\ncout << factorial(n) << endl;\n\n\n}\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n>1) return n*factorial(n-1);\r\n\telse return n;\r\n}\r\n\r\nint main(){\r\n\tint n=0;\r\n\twhile (cin >> n){\r\n\t\tif (n==0) cout << 1 << endl;\r\n\t\telse cout << factorial(n) << endl;\r\n\t}\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0) return 1;\r\n\tif (n>1) return n*factorial(n-1);\r\n\treturn n;\r\n}\r\n\r\nint main(){\r\n\tint n=0;\r\n\twhile (cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint fact;\r\n\tif (n==0 or n==1) return 1;\r\n\telse if(n>1) {\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\tint k=factorial(n);\r\n\t\tcout << k << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n>1){\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\telse{\r\n\t\treturn 1;\r\n\t}\r\n}\r\nint main (){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<< factorial(n)<<endl;\r\n\t\r\n}\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0)\n    return 1;\n  else\n    return  n * factorial(n - 1);\n}\n\nint main(){\n  int n;\n\n  cin >> n;\n\n  cout << factorial(n) << endl;\n}\n",
  "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\treturn factorial (n-1)*n;\n\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\t\n\n\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 1) return 1;\r\n\telse return factorial(n-1)*n;\r\n}\r\n\r\nint main(){\r\n\tint n = 0;\r\n\tcin >> n;\r\n\tcout << factorial(n);\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n <= 1) return 1;\r\n\telse return factorial(n-1)*n;\r\n}\r\n\r\nint main(){\r\n\tint n = 0;\r\n\tcin >> n;\r\n\tcout << factorial(n);\r\n}",
  "int factorial(int n) {\n\tif (n == 0) return 1;\n\telse return  n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n > 1) return n*factorial(n-1);\n    else return 1; \n}\n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl; \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==1) return 1;\r\n    else if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\n  if (n!=1){\n    n=factorial(n-1)*n;\n    }\n  return(n);\n  }\nint main(){\n  int c;\n  while(cin>>c){\n    cout<<factorial(c)<<endl;\n    }\n  }\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n  if(n==0){\n    return (1);\n    }\n  if (n!=1){\n    n=factorial(n-1)*n;\n    }\n  return(n);\n  }\nint main(){\n  int c;\n  while(cin>>c){\n    cout<<factorial(c)<<endl;\n    }\n  }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial (n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 1 or n == 0) return 1;\n    else return (n * factorial(n - 1));\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n>1) return n*factorial(n-1);\n\telse return 1;\n}\n\nint main () {\n\tint pene;\n\twhile (cin >> pene) {\n\t\tcout << factorial(pene) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  return n * factorial (n - 1);\n}\n\nint main () {\n  int n;\n  cin >> n;\n  n = factorial(n);\n  cout << n << endl; \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n\tint x;\n\twhile (cin >> x) {\n\t\tcout << factorial(x) << endl;\n\t}\n}\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n    if (n == 0) return 1;\n    \n    else return n*factorial(n - 1);\n\n}\n\nint main () {\n\n    int n;\n    \n\n    while (cin >> n){\n        \n        cout << factorial(n) << endl;\n        \n        \n    }\n    \n}",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n  \n if (n==0) return 1;\n else return n*factorial(n-1);\n \n  \n}\n\nint main () {\n  int n;\n  while (cin >> n) {\n  cout << factorial(n) << endl;\n    \n  }\n}\n\n  ",
  "#include <iostream>\nusing namespace std;\n\n \n int factorial(int n){\n   if (n == 0) return 1;\n   else if (n != 0) return n* factorial(n-1);\n }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0) return 1;\n  int k=n*factorial(n-1);\n  return k;\n}\n\nint main() {\n  int a;\n  cin >> a;\n  cout << factorial(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  \n  if (n>=0) return 1;\n  else return n*factorial(n-1);\n  \n  \n}\n\nint main (){\n \n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    if (n == 0) return 1;\n    \n    return n*factorial (n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  \n  if (n==0) return 1;\n  else return n*factorial(n-1);\n  \n  \n}\n\nint main (){\n\n \n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n)  {\n    if (n==0) return 1;\n    else return n*factorial(n - 1);\n}\n\n\nint main ()  {\nint n;\nwhile (cin >> n) {\nint r=factorial (n);\ncout << r<< endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse if (n == 1) return 1;\n\telse return n * factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int a){\n\n\n\t/*if(a <=1 )\n\t\treturn 1;\n\telse\n\t\treturn a*factorial(a-1);*/\n\n\n\treturn (a <= 1) ? 1 : a*factorial(a-1);\n\n}\n\nint main(){\n\n\tint a;\n\twhile(cin >> a)\n\t\tcout << factorial(a) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n > 1) return n*factorial(n-1);\r\n    else return 1;\r\n}\r\n\r\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse {\n\t\tint f = factorial(n - 1);\n\t\treturn n * f;\n\t}\n}\n\n\nint main() {\n\tint number;\n\twhile (cin >> number) cout << factorial(number) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\n    \nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n){\n\t if (n==0) return 1;\n\t else \n\t\t return factorial(n-1)*n;\n\t \n }\n int main () {\n\t int n;\n\t cin >> n;\n\t cout << factorial (n) << endl;\n }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);}\n\t\nint main (){\n\tint n;\n\tcin>>n;\n\tcout <<factorial(n)<<endl; }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial(n - 1);\n        //Hip: f es (n - 1)!\n        return n*f;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif ( n == 0 ) return 1;\n\telse {\n\t\tint f = factorial ( n - 1 );\n\t\treturn n*f;\n\t}\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0)return 1;\n    else return factorial(n-1)*n;\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n    cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial(n - 1);\n        return n*f;\n    }\n}\n\n\nint main() {\n    int k;\n    cin >> k;\n    cout << factorial(k) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n ) {\n  if ( n == 0 ) return 1;\n  else return factorial(n-1)*n;\n}\n\nint main() {\n  int n;\n  while (cin >> n) {\n  cout << factorial(n) << endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f=1;\n    if (n=0) cout << \"1\" <<endl;\n    else for (int i=1;n>=i;++i){\n            f=f*i;\n         }\n         cout << f <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f=1;\n    if (n==0) cout << \"1\" <<endl;\n    else for (int i=1;n>=i;++i){\n            f=f*i;\n         }\n    cout << f <<endl;\n    return n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<2) return 1;\n    else n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<2) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n  int r=1;\n\t  if (n==1) return 1;\n\t  else { while (n>1) {\n\t\t  r=n*r;\n\t\t  n=n-1;\t  \n  } return r;\n}\n}\n\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tfactorial (n);\n\t\tcout << factorial (n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else if (n == 1) return n;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tint f = 1;\n\tint i = 0;\n\twhile (i < n) {\n\t\ti++;\n\t\tf = f * i;\n\t}\n\treturn f;\n}",
  "#include <iostream>\nusing namespace std;\n\nint recursive(int num) {\n\tif(num <= 1) return 1;\n\telse return num * recursive(num - 1);\n}\n\nint main() {\n\tint pollo;\n\tcin >> pollo;\n\tcout << recursive(pollo) << endl;;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int num) {\n\tif(num <= 1) return 1;\n\telse return num * recursive(num - 1);\n}\n\nint main() {\n\tint pollo;\n\tcin >> pollo;\n\tcout << factorial(pollo) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int num) {\n\tif(num <= 1) return 1;\n\telse return num * factorial(num - 1);\n}\n\nint main() {\n\tint pollo;\n\tcin >> pollo;\n\tcout << factorial(pollo) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n > 0)\n\t\treturn n * (factorial(n - 1));\n\telse\n\t\treturn 1;\n}\n\n/*int main(){\n\tint input;\n\twhile(cin >> input){\n\t\tcout << factorial(input) << endl;\n\t}\n}*/\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\nint factorial(int n){\n\tif (n==0) return 1;\n\telse return n* factorial (n-1);\n}\n\nint main (){\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}",
  "#include <iostream>\nusing namespace std;\n    int factorial(int n) {\n        if (n==0) return 1;\n        else return n*factorial(n-1);\n    }\nint main() {\n    int n;\n    cin >> n;\n    cout << n << endl;\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 1 or n == 0) return 1;\n\telse {\n\t\treturn n * factorial(n-1);\n\t}\n\n}\n\n\nint main(){\n\tint n;\n\t\n\twhile (cin >> n){\n\t\t\n\t\tcout << factorial(n) << endl;\n\n\t}\n\t\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n if (n == 0) return 1;\n else return n*factorial(n-1);\n}\nint main (){\nint n;\nwhile (cin >> n){\ncout << factorial(n) <<endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int res;\n    if(n==1) return 1;\n    else  return res = n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if(n==1) return 1;\n    else  return  n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if(n<=1) return 1;\n    else  return  n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "// #include <iostream>\nusing namespace std;\n\nint factorial (int n){\n if ( n == 0 or n == 1) return 1;\n else return n*factorial (n-1);\n}\n\nint main () {\n  \n  \n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  if (x>0){\n    x = x*factorial(n-1);\n  }\n  return x;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  if (n>0){\n    x = n*factorial(n-1);\n  }\n  return n;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  if (n>0){\n    n = n*factorial(n-1);\n  }\n  return n;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  if (n>0){\n    n = n*factorial(n-1);\n  }\n  return n;\n}\n\nint main () {\n  int x;\n  while (cin >> x){\n    cout << factorial(x) << endl;\n  }\n}\n  ",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  if (n==0)return 1;\n  else return n=n*factorial(n-1);\n}\n\nint main () {\n  int x;\n  while (cin >> x){\n    cout << factorial(x) << endl;\n  }\n}\n  ",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint mult=1;\r\n\tfor (int a=1; n>=a; ++a){\r\n\t\t  mult=a*mult;\r\n\t}\r\n\treturn mult;\r\n}\r\n\r\nint main () {\r\nint n;\r\ncin >> n;\r\ncout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n\tfor (int i = 1; i <= 12; i++) cout << factorial(i) << endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\n\r\nint main() {}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n\tint x;\r\n\twhile (cin >> x) factorial(x);\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n >= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n >= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "/*#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}*/\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\n\r\nint main() {}\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\nif (n>1){\n    return n*factorian(n-1);\n}\n\nelse return 1;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n      \n        cout<<factorial(n)<<endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\nif (n>1){\n    return n*factorial(n-1);\n}\n\nelse return 1;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n      \n        cout<<factorial(n)<<endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n  if (n==0) return 1;\n  else return n*factorial (n-1);\n  }\n\n\nint main () {\n  int n;\n    cin >> n;\n      cout << factorial (n) << endl;\n  }",
  "int factorial(int n)\n{\n\tif(n == 0) return 1;\n\treturn factorial(n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0) return 1;\n  else return factorial(n*n-1) ;\n}\n\nint main () {\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\t\n\tif (n == 0 or n == 1) return 1;\n\t\n\tn = factorial(n-1) * n;\n\t\n\treturn n;\n\t\n}\n\nint main() {\n\t\n\t\tint n;\n\t\t\n\t\twhile(cin >> n) cout << factorial(n) << endl;\n\t\t\t\n}\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0) return 1;\n  else return factorial (n*(n-1)) ;\n}\n\nint main () {\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif (n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\t\nint main (){\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n\t\n\t\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0) return 1;\n  return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0) return 1;\n  else \n    return factorial n*(n-1) ;\n}\n\nint main () {\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0) return 1;\n  else \n    return n * factorial(n-1) ;\n}\n\nint main () {\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n); \nif ( n == 0 ) { return n=0 };\nelse return n*factorial(n-1);\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n\t\n \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n); \nif ( n == 0 ) { return n=0; }\nelse { return n*factorial(n-1); }\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n\t\n \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif ( n == 0 ) return 1; \n\treturn n*factorial(n-1);\n}\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n\t\n \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n<=1) return 1;\n  else return factorial(n-1)*n;\n}\n\nint main () {\n  int a;\n  while (cin >> a) {\n  cout << factorial(a) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  \n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n  \n}\n\nint main () {\n  \n  int x;\n  cin >> x;\n  cout << factorial(x) << endl;\n  \n}",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return (n*factorial(n-1);\n}\n                 \n                ",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return (n*factorial(n-1));\n}\n                 \n                ",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    else return (n*factorial(n-1));\n}\n                 \n                ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\t\nint main() {\n\tint num, fact;\n\tcin >> num;\n\tfact = factorial (num);\n\tcout << fact << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n>1){\r\n    return n*factorial(n-1);\r\n  }\r\n  else {\r\n    return 1;\r\n  }\r\n}\r\n\r\n\r\nint main (){\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint main() {\n\tint x, y;\n\tcin >> x;\n\ty=x-1;\n\twhile (y>0) {\n\t\tx*=y;\n\t\t--y;\n\t}\n\tcout << x << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint main() {\n\tint x, y;\n\tcin >> x;\n\ty=x-1;\n\twhile (y>0) {\n\t\tx*=y;\n\t\t--y;\n\t}\n\tcout << x << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint main() {\n\tint x, y;\n\tcin >> x;\n\ty=x-1;\n\twhile (y>0) {\n\t\tx*=y;\n\t\t--y;\n\t}\n\tcout << x << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint x=n-1;\n\twhile (x>0) {\n\t\tn*=x;\n\t\t--x;\n\t}\n\treturn n;\n}\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n>1) return n*factorial(n-1);\n\telse return 1;\n}\nint main() {\n\tint x;\n\twhile (cin >> x) {\n\t\tcout << factorial(x) << endl;\n\t}\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\nint main() {\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif(n<=1)return 1;\r\n\r\n\t\r\n\treturn n*factorial(n-1);\r\n\t\r\n\t\r\n}\r\n\r\n\r\nint main(){\r\n\tint n; \r\n\tcin>>n;\r\n\tcout<<factorial(n);\r\n\t\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int f = 1;\n  int i = 0;\n  while (i < n) {\n    i = i + 1;\n    f = f*i;\n  }\n  return f;\n}\nint main () {\n  int n;\n  while (cin >> n) {\n    cout << factorial (n) << endl;\n  }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n <= 1) return 1;\r\n    else return n*factorial(n-1);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\nint main () {\r\n    int x;\r\n    while(cin >> x){\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n<0) return 0;\nelse if (n>1) return n*factorial(n-1);\nreturn 1;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\tint factorial (int n)\r\n\t\tint count;\r\n\t\twhile ( cin >> n ){\r\n\t\t\tif (n > 0) count = count*n;\r\n\t\t\t\tn--;\r\n\t\t\telse if ( n==0) count = count + 1\r\n\t\t\t\tn--;\r\n\t\t\t}\r\n\t\tcout << count << endl;\r\n\t\t",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*n-1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial(n - 1);\n        return n*f;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n*factorial(n-1);\n    else return 1;\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n    cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\nint a=1;\n\nint factorial(int n) {\n  if (n!=0) {\n    a=a*n;\n    n--;\n    factorial(n);\n  }\n  else return a;\n}\n\nint main() {\n  int c;\n  while (cin >> c) {\n    if (c>=0 and c<=12) {\n      cout << factorial(c);\n    }\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\nint a=1;\n\nint factorial(int n) {\n  if (n!=0) {\n    a=a*n;\n    n--;\n    factorial(n);\n  }\n  else return a;\n}\n\nint main() {\n  int c;\n  while (cin >> c) {\n    if (c>=0 and c<=12) {\n      cout << factorial(c);\n    }\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\nint a=1;\n\nint factorial(int n) {\n  if (n!=0) {\n    a=a*n;\n    n--;\n    factorial(n);\n  }\n  else return a;\n}\n\nint main() {\n  int c;\n  while (cin >> c) {\n    if (c>=0 and c<=12) {\n      cout << factorial(c);\n    }\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\nint a=1;\n\nint factorial(int n) {\n  if (n>0) {\n    return n*factorial(n-1);\n  }\n  else return a;\n}\n\nint main() {\n  int c;\n  while (cin >> c) {\n    a=1;\n    if (c>=0 and c<=12) {\n      cout << factorial(c) << endl;\n    }\n  }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial (int n) {\r\n\tif (n == 1) return n;\r\n\telse return n * factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if( n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial (int n) {\r\n\tif (n > 1) n * factorial(n - 1);\r\n\telse return 1;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial (int n) {\r\n\tif (n > 1) return n * factorial(n-1);\r\n\telse return 1;\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial ( int n ) {\r\n\tif ( n == 0 ) return 1;\r\n\telse return n * factorial ( n - 1 );\r\n}\r\n\r\nint main () {\r\n\tfactorial ( n );\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial ( int n ) {\r\n\tif ( n == 0 ) return 1;\r\n\telse return n * factorial ( n - 1 );\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tfactorial ( n );\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main () {\n  int n;\n  while(cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\t\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n)<< endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) return n*factorial(n-1);\n    else return 1;\n}\n\nint main () {\n    int n\n    cin >> n;\n    cout << factorial(n) <<endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) return n*factorial(n-1);\n    else return 1;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) <<endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) {\n\t\treturn 1;\n\t}\n\telse {\n\t\tint s = factorial(n - 1);\n\t\treturn (s * n);\n\t}\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int m=1;\n    for(int i=1; i<=n; i++)\n    m=m*i;\n    return m;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n>1){\n\t\t\treturn n*factorial(n-1);\n\t}\n\telse return 1;\n}\n\nint main(){\n\t\tint n;\n\t\tcin >> n;\n\t\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\r\n\tif (n > 1) {\r\n\treturn n*factorial(n-1);\r\n\t}\r\n\telse {\r\n\t\treturn 1;\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint count = 1;\r\n\tif ( n == 0){\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\tfor (int i = 1; i <= n; ++i){\r\n\t\t\tcount = count*i;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n}\r\n\r\nint main (){\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tint count = 1;\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint count = 1;\r\n\tif ( n == 0){\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\tfor (int i = 1; i <= n; ++i){\r\n\t\t\tcount = count*i;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n}\r\n\r\nint main (){\r\n\tint n;\r\n\twhile (cin >> n){\r\n\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n  if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint fact(int n) {\r\n    if (n>1) {\r\n        return n*fact(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << fact(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint fact(int n) {\r\n    if (n>1) {\r\n        return n*fact(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << fact(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint main(){\n    int n;\n    cin >> n;\n    for (int i=0; i<n; i++){\n\tn=n*(n-1);\n    }\n    cout << n << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f=0;\n    for (int f=0; n>0; n--){\n\tf=f*(n-1);\n    }\n    return f;\n}\n\nint main(){\n    int n;\n    cin >> n;\n   cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    for (int f=0; n>0; n--){\n\tf=f*(n-1);\n    }\n    return f;\n}\n\nint main(){\n    int n;\n    cin >> n;\n   cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f = 1;\n    for (int i=0; i<n; i++){\n\tf=f*i;\n    }\n    return f;\n}\n\nint main(){\n    int n;\n    cin >> n;\n   cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f = 1;\n    for (int i=0; i<n; i++){\n\tf=f*i;\n    }\n    return f;\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n    cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n>1){\n        return n*factorial(n-1);\n    }\n    else{\n        return 1;\n    }\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int sum=n;\n  if (n>1) {\n    n--;\n    sum*=factorial(n);\n  }\n  return sum;\n}\nint main() {\n  int n;\n  while(cin>>n) {\n    cout<<factorial(n)<<endl;\n  }\n}\n  \n  \n  \n\n    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int sum=n;\n  if (n>1) {\n    n--;\n    sum*=factorial(n);\n  }\n  else if (n==0) sum=1;\n  return sum;\n}\nint main() {\n  int n;\n  while(cin>>n) {\n    cout<<factorial(n)<<endl;\n  }\n}\n  \n  \n  \n\n    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\t\n\tif(n>1){\n\t\treturn n*factorial(n-1);\n\t}\n\telse return 1;\n\t\t\n\n\t\n\t\n}\nint main(){\n\tint a;\n\tcin>> a;\n\tcout<< factorial(a)<<endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0) return 1;\n  for(int i=(n-1);i>0;--i){\n    n=n*i;\n  }\n  return n;\n}\n\nint main() {\n  int n;\n  while(cin>>n){\n    cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint toInt(char c) {\n  return c - '0';\n}\n\nint factorial(int n) {\n  if (n < 2) return 1;\n  return n * factorial(n - 1);\n}\n\nint main() {\n  cout << factorial(4) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int fact;\n  if (n == 0) return 1;\n  fact = n * factorial(n-1); \n  return fact;\n}\n\n\nint main (){\n  int n; \n  while (cin >> n) cout << factorial(n) << endl;\n\n   \n}",
  "int factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "int mcd(int a, int b){\r\n    if(a == 0) return b;\r\n    else if(b == 0) return a;\r\n    else if(a > b) return mcd(b, a);\r\n    else return mcd(a, b%a);\r\n}\r\n \r\nint mcm(int a, int b){\r\n    if((a*b) < 0) return ((a*b)-(a*b)*2)/mcd(a, b);\r\n    else return (a*b)/mcd(a, b);\r\n}\r\n \r\n \r\nint main(){\r\n    int n, aux, x, y;\r\n    while(cin >> n and n != 0){\r\n    cin >> x;\r\n    aux = x;\r\n    for(int i = 1; i < n; ++i){\r\n        cin >> y;\r\n        aux = mcm(y, aux);\r\n    }\r\n    cout << aux << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    return 0;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int a=0;\n  cin >> a;\n  cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\r\n\r\n\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    \r\n    if (n < 2) return 1;\r\n    else n = n * factorial(n -1);\r\n    return n;\r\n}\r\n\r\nint main() {\r\nint p;\r\n    while (cin >> p) {\r\n        cout << factorial(p) << endl;\r\n    }\r\n\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0){\n      return 1;\n    }\n    else\n\n    return n*factorial(n-1);\n\n}\n\nint main(){\n  int num;\n  cin>>num;\n  cout<<factorial(num)<<endl;\n\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    \n    if(n>=2){\n        \n         return n*factorial(n-1);\n    }\n    else return 1;\n    \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint resultado;\n\tif (n == 1) {\n\t\tresultado = 1;\n\t} else {\n\t\tresultado = n * factorial(n-1);\n\t}\n\n\treturn resultado;\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint resultado;\n\tif (n == 1) {\n\t\tresultado = 1;\n\t} else {\n\t\tresultado = n * factorial(n-1);\n\t}\n\n\treturn resultado;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n == 1) {\n\t\treturn 1;\n\t} else {\n\t\treturn n * factorial(n-1);\n\t}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n == 1) {\n\t\treturn 1;\n\t} else {\n\t\treturn n * factorial(n-1);\n\t}\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n\tif (n == 0) {\r\n\t\treturn 1;\r\n\t} else {\r\n\t\treturn n * factorial(n-1);\r\n\t}\r\n}\r\n",
  "int factorial (int n) {\n\tif ( n == 1) return 1;\n\telse  return n * factorial(n-1);\n}\n",
  "int factorial (int n) {\n\tif ( n == 0 ) return 1;\n\telse  return n * factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint nfactorial(int n){\r\n\tif (n<=1) return 1;\r\n\treturn n * nfactorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin>>n; \r\n\tcout<<nfactorial(n)<<endl;\r\n\t\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint nfactorial(int n){\r\n\tif (n<=1) return 1;\r\n\treturn n * nfactorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin>>n; \r\n\tcout<<nfactorial(n)<<endl;\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint nfactorial(int n){\r\n\tif (n<=1) return 1;\r\n\treturn n * nfactorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin>>n; \r\n\tcout<<nfactorial(n)<<endl;\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint nfactorial(int n){\r\n\tif (n<=1) return 1;\r\n\treturn n * nfactorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin>>n; \r\n\tcout<<nfactorial(n)<<endl;\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint nfactorial(int n){\r\n\tif (n<=1) return 1;\r\n\telse{\r\n\t\treturn n * nfactorial(n-1);\r\n\t}\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin>>n; \r\n\tcout<<nfactorial(n)<<endl;\r\n\t\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint nfactorial(int n){\r\n\tif (n<=1) {\r\n\t\treturn 1;\r\n\t}\r\n\telse{\r\n\t\treturn n * nfactorial(n-1);\r\n\t}\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin>>n; \r\n\tcout<<nfactorial(n)<<endl;\r\n\t\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint nfactorial(int n){\r\n\tif (n<=1) {\r\n\t\treturn 1;\r\n\t}\r\n\telse{\r\n\t\treturn n * nfactorial(n-1);\r\n\t}\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin>>n; \r\n\tcout<<nfactorial(n)<<endl;\r\n\t\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint nfactorial(int n){\r\n\tif (n<=1) {\r\n\t\treturn 1;\r\n\t}\r\n\telse{\r\n\t\treturn n * nfactorial(n-1);\r\n\t}\r\n}\r\n\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << nfactorial(n) << endl;\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint nfactorial(int n){\r\n\tif (n<=1) {\r\n\t\treturn 1;\r\n\t}\r\n\telse{\r\n\t\treturn n * nfactorial(n-1);\r\n\t}\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << nfactorial(n) << endl;\r\n}\r\n\r\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n \r\nint factorial(int n){\r\n\tint a;\r\n\tif( n== 0) cout << 1 << endl;\r\n\telse (while(n>0){a=a*n; n--;} cout << a << endl;)\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n\tif (n > 1) return n*factorial (n-1);\n\telse return 1;\n}\n \nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0 or n==1) return 1;\r\n\telse return n*factorial(n-1); \r\n}\r\n\r\n\r\n",
  "\r\n\r\n\r\nint factorial (int n) {\r\n\tint f;\t\r\n\tf = 1\r\n\tfor (i = 1, i <= n, ++i);\r\n\t\tf = f*n;\r\n\t\t\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\tcout >> factorial >> endl;",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial (int n) {\r\n\tint f;\t\r\n\tf = 1\r\n\tfor (i = 1, i <= n, ++i);\r\n\t\tf = f*n;\r\n\t}\r\n\t\t\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\treturn factorial;\r\n\tcout >> f >> endl;\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial (int n) {\r\n\tint f;\t\r\n\tf = 1\r\n\tfor (i = 1, i <= n, ++i);\r\n\t\tf = f*n;\r\n\t}\r\n\t\t\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\treturn factorial;\r\n\tcout >> f >> endl;\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\t\t\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n) { \r\n\t\tint f;\t\r\n\t\tf = 1\r\n\t\tfor (i = 1, i <= n, ++i);\r\n\t\t\tf = f*n;\r\n\tcout >> f >> endl;\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\t\t\r\nint main () {\r\n\tint n;\r\n\tcin >> n;  \r\n\tint f;\t\r\n\tf = 1\r\n\tfor (i = 1, i <= n, ++i){\r\n\t\tf = f*n;\r\n\t}\r\n\tcout >> f >> endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\t\t\r\nint main () {\r\n\tint n;\r\n\tcin >> n;  \r\n\tint f;\t\r\n\tf = 1\r\n\tfor (i = 1; i <= n; ++i) {\r\n\t\tf = f*n;\r\n\t}\r\n\tcout >> f >> endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\t\r\n\tif (n > 0) return n * factorial(n-1);\r\n\telse return 1;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 10)\n        return n;\n    else\n        return factorial(n-1)*n;\n}\n\n\nint main(){\n    int n;\n    while(cin >> n);\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1)\n        return 1;\n    else\n        return factorial(n-1)*n;\n}\n\n\nint main(){\n    int n;\n    while(cin >> n);\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0 or n==1){\n\treturn 1;\n\t}\n\telse{\n\treturn n*factorial(n-1);\n\t}\n}\n\n\nint main(){\nint n;\ncout<<\"Introduce un nÃºmero: \";\ncin>>n;\ncout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tint res;\n\tif (n==0 or n==1) res=1;\n\telse res=n*factorial(n-1);\n\treturn res;\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\nint factorial (int n) {\n    if (n == 0 or n ==1) return 1;\n    else {\n\tint x = factorial(n-1);\n\treturn x*n;\n    }\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n\tcout << factorial(n) << endl;\n    }\n}",
  "int factorial(int n) {\n  if (n <= 1) return 1;\n  return n * factorial(n - 1);\n}\n",
  "\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n - 1);\n}\n",
  "\ndef factorial(n):\n  if n <= 1: return 1\n  return n * factorial(n - 1)\n\n",
  "class Solution {\n\n  public static int factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n - 1);\n  }\n  \n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main()\r\n{\r\n    int n = 0;\r\n    while ( cin >> n ) cout << factorial(n) << endl;\r\n}\r\n\r\nint factorial(int n)\r\n{\r\n    if ( n == 0 ) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\t\t\n\t\tif (n>1) return n*factorial(n-1);\n\t\telse return 1;\t\t\n}\n\nint main() {\n\tint n;\n\twhile (cin>>n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}",
  "int factorial(int n)\n{\n\tif(n == 1) return 1;\n\treturn n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\tif(n <= 1) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main()\n{\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <stdio.h>\n\nint factorial(int n){\n    \n    if(n == 0 || n == 1)\n        return 1;\n    \n    return n * factorial(n-1);\n\n}\n\nint main(){\n\n    int n;\n    while (scanf(\"%d\",&n)==1){\n    \n    printf(\"%d\\n\",factorial(n));\n    }\n    return 0;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\twhile (n > 0) {\r\n\t\tint res = 1;\r\n\t\tres = res*n;\r\n\t\t--n;\r\n\t}\r\n\treturn res;\r\n}\r\nint main(){\r\n\tint x, y;\r\n\tcin << x;\r\n\ty = factorial n;\r\n\tcout << y << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    int x=1;\r\n    while (n >= 1){\r\n        x=x*n;\r\n        --n;\r\n    }\r\n    return x;\r\n}\r\n      \r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\nif(n==0){ n=1;\r\n} else {\r\nn = n*factorial(n-1);\r\n}\r\nreturn n;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    while(cin){\r\n    cin >> n;\r\n    cout << factorial(n);}\r\n    return 0;\r\n}\r\n",
  "\r\nint factorial(int n)\r\n{\r\n    if(n <= 1) { return 1; }\r\n\r\n    return n * factorial(n - 1);\r\n}\r\n\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) \r\n\t{\r\n\t\tif (n<0) return 0;\r\n\t\telse if (n==1) return 1;\r\n\t\telse return n*factorial(n-1);\r\n\t}\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n\r\n\t}\r\n\t\r\n\t\r\n\t\t\r\n\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) \r\n\t{\r\n\t\tif (n<0) return 0;\r\n\t\telse if (n==1 or n==0) return 1;\r\n\t\telse return n*factorial(n-1);\r\n\t}\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n\r\n\t}\r\n\t\r\n\t\r\n\t\t\r\n\r\n",
  "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int a=n;\r\n    if (n==0) n=1;\r\n    else{\r\n        while (a>1){\r\n            n=n*(a-1);\r\n            a=a-1;\r\n        }\r\n    }\r\nreturn n;\r\n}\r\n\r\nint main()\r\n{\r\nreturn 0;\r\n}\r\n        }\r\n        num = num/a;\r\n        den = den/a;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\nreturn 0;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int a=n;\r\n    if (n==0) n=1;\r\n    else{\r\n        while (a>1){\r\n            n=n*(a-1);\r\n            a=a-1;\r\n        }\r\n    }\r\n    return n;\r\n}\r\n\r\nint main()\r\n{\r\nreturn 0;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int a=n;\r\n    if (n==0) n=1;\r\n    else{\r\n        while (a>1){\r\n            n=n*(a-1);\r\n            a=a-1;\r\n        }\r\n    }\r\n    return n;\r\n}\r\n\r\nint main()\r\n{\r\nreturn 0;\r\n}",
  "import java.util.Scanner;\n\npublic class Main {\n  public static void main(String args[]) {\n\t\tSystem.out.println(factorial(12));\n  }\n\n/*\n\thttps://jutge.org/problems/P12509_en/pdf\n\n\tRecursive factorial \n\tWrite a function that returns n!.\n\tSolve this problem recursively.\n\n\tPrecondition\n\tAssume 0 â¤ n â¤ 12.\n\n\tObservation\n\tYou only need to submit the required procedure; your main program will be ignored.\n*/\n\n\tpublic static int factorial(int n){\n\t\tif (n<2) return 1; // f(0)=1, f(1)=1; f(2)=2\n\t\treturn n*factorial(n-1);\n\t}\n}\n\n\n\n\n\n\n\n\n",
  "\n\n\tpublic static int factorial(int n){\n\t\tif (n<2) return 1; // f(0)=1, f(1)=1; f(2)=2\n\t\treturn n*factorial(n-1);\n\t}\n\n\n\n\n\n\n\n\n\n",
  "import java.util.Scanner;\n\nclass Main { //Treure  \"public\" per enviar al jutge\n  public static void main(String args[]) {\n\t\tSystem.out.println(factorial(12));\n  }\n\n/*\n\thttps://jutge.org/problems/P12509_en/pdf\n\n\tRecursive factorial \n\tWrite a function that returns n!.\n\tSolve this problem recursively.\n\n\tPrecondition\n\tAssume 0 â¤ n â¤ 12.\n\n\tObservation\n\tYou only need to submit the required procedure; your main program will be ignored.\n*/\n\n\tpublic static int factorial(int n){\n\t\tif (n<2) return 1; // f(0)=1, f(1)=1; f(2)=2\n\t\treturn n*factorial(n-1);\n\t}\n}\n\n\n\n\n\n\n\n\n",
  "import java.util.Scanner;\n\nclass Main {\n  public static void main(String[] args) {\n    final Scanner sc = new Scanner(System.in);\n    while (sc.hasNextInt()) {\n      int n = sc.nextInt();\n      System.out.println(factorial(n));\n    }\n  }\n/*\n\thttps://jutge.org/problems/P12509_en/pdf\n\n\tRecursive factorial \n\tWrite a function that returns n!.\n\tSolve this problem recursively.\n\n\tPrecondition\n\tAssume 0 â¤ n â¤ 12.\n\n\tObservation\n\tYou only need to submit the required procedure; your main program will be ignored.\n*/\n\n\tpublic static int factorial(int n){\n\t\tif (n<2) return 1; // f(0)=1, f(1)=1; f(2)=2\n\t\treturn n*factorial(n-1);\n\t}\n}\n\n\n\n\n\n\n\n\n",
  "import java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n      final Scanner sc = new Scanner(System.in);\n      while (sc.hasNextInt()) {\n        int n = sc.nextInt();\n        System.out.println(factorial(n));\n      }\n    }\n    public static int factorial(int n) {\n        if (n == 0) {\n            return 1;\n        } else {\n            return (n * factorial(n-1));\t\t\n        }\n    }\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main(){\n    int n;\n\n    while (cin >> n){\n        cout << factorial(n) << endl;\n\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint fact(int n) {\r\n  if (n == 0) return 1;\r\n  else return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) <<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint fact(int n) {\r\n  if (n == 0) return 1;\r\n  else return n*fact(n - 1);\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  cin >> n;\r\n  cout << fact(n) <<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint fact(int n) {\r\n  if (n == 0) return 1;\r\n  else return n*fact(n - 1);\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  cin >> n;\r\n  cout << fact(n) <<endl;\r\n}\r\n",
  "import java.util.*;\n\npublic class Main {\n\n    public static int factorial(int n){\n\tif(n == 0) return 1;\n\treturn n*factorial(n-1);\n    }\n    public static void main(String[] args){\n\tScanner s = new Scanner(System.in);\n\tint a = s.nextInt();\n\tint b = s.nextInt();\n   \n\t\n\tfor(int i = Math.max(a,b); i >= Math.min(a,b); --i){\n\t    System.out.println(i);\n\t}\n    }\n}\n",
  "import java.util.*;\n\n\n\n    public static int factorial(int n){\n\tif(n == 0) return 1;\n\treturn n*factorial(n-1);\n    }\n    \n",
  "import java.util.*;\n\n\n\nclass Main {\n\n    public static int factorial(int n){\n\tif(n == 0) return 1;\n\treturn n*factorial(n-1);\n    }\n    \n    public static void main(String[] args){\n\tScanner s = new Scanner(System.in);\n\tint a = s.nextInt();\n\tint b = s.nextInt();\n   \n\t\n\tfor(int i = Math.max(a,b); i >= Math.min(a,b); --i){\n\t    System.out.println(i);\n\t}\n    }\n}\n",
  "import java.util.*;\n\n\n\nclass Main {\n\n    public static int factorial(int n){\n\tif(n == 0) return 1;\n\treturn n*factorial(n-1);\n    }\n    \n    public static void main(String[] args) {\n\tfinal Scanner sc = new Scanner(System.in);\n\twhile (sc.hasNextInt()) {\n\t    int n = sc.nextInt();\n\t    System.out.println(Solution.factorial(n));\n\t}\n    }\n}\n",
  "import java.util.*;\n\n\n\nclass Main {\n\n    public static int factorial(int n){\n\tif(n == 0) return 1;\n\treturn n*factorial(n-1);\n    }\n    \n    public static void main(String[] args) {\n\tfinal Scanner sc = new Scanner(System.in);\n\twhile (sc.hasNextInt()) {\n\t    int n = sc.nextInt();\n\t    System.out.println(factorial(n));\n\t}\n    }\n}\n",
  "import java.util.*;\n\n\n\nclass Main {\n\n    public static int factorial(int n){\n\tif(n == 0) return 1;\n\treturn n*factorial(n-1);\n    }\n    \n\n}\n",
  "import java.util.*;\n\n\n\nclass Solution {\n\n    public static int factorial(int n){\n\tif(n == 0) return 1;\n\treturn n*factorial(n-1);\n    }\n    \n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif(n>1) return factorial(n-1) * n;\r\n\telse return 1;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n) {\n \tif ( n == 0 ) return 1;\n \telse return (n*factorial(n-1));\n }\n\n int main () {\n \tint n;\n \twhile ( cin >> n ) {\n \t\tcout << factorial (n) << endl;\n \t}\n }",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint c = 1;\n\tif (n > 0) c = n * factorial(n - 1);\n\treturn c;\n}\n\nint main (){\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint r=1;\nif (n==1) return 1;\nelse { while (n>1) {\n\t\t\tr=r*n;\n\t\t\tn=n-1;\n\t\t\t}\n\t\t\treturn n;\n\t\t\t}\n\t\t\t}\n\t\t\t\n\n\nint main () {\nint n;\nint resultat;\nwhile (cin >> n) {\n\tresultat = factorial(n);\n\tcout << resultat << endl;\n}}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint r=1;\nif (n==1) return 1;\nelse { while (n>1) {\n\t\t\tr=r*n;\n\t\t\tn=n-1;\n\t\t\t}\n\t\t\treturn r;\n\t\t\t}\n\t\t\t}\n\t\t\t\n\n\nint main () {\nint n;\nint resultat;\nwhile (cin >> n) {\n\tresultat = factorial(n);\n\tcout << resultat << endl;\n}}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n - 1);\n}",
  "#include <iostream>\nusing namespace std;\n \n int factorial(int n){\n \tif (n == 1) { return 1;\n \telse n * factorial(n-1);\n\t\n \n \n \tint main (){\n \t\tint n;\n \t\twhile (cin >> n){\n \t\t\tcout << factorial(n) << endl;}\n \t\t\t}\n \t\t",
  "#include <iostream>\nusing namespace std;\n \n int factorial(int n){\n \tif (n == 1) return 1;\n \telse  return n * factorial(n-1);}\n\t\n \n \n \tint main (){\n \t\tint n;\n \t\twhile (cin >> n){\n \t\t\tcout << factorial(n) << endl;}\n \t\t\t}\n \t\t",
  "#include <iostream>\nusing namespace std;\n \n int factorial(int n){\n \tif (n == 0) return 1;\n \telse {  return n * factorial(n-1);}\n \t}\n\t\n \n \n \tint main (){\n \t\tint n;\n \t\twhile (cin >> n){\n \t\t\tcout << factorial(n) << endl;}\n \t\t\t}\n \t\t",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==1) return 1;\r\n\telse return n*factorial(n-1);\t\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n",
  "\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial(int n){ \n    if (n == 1 or n == 0) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==1 or n==0) return 1;\r\n\telse return n*factorial(n-1);\t\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\t\n\tif( n == 0 ){\n\t\treturn 1;\n\t}\n\telse return n*factorial(n-1);\n}\n\t \n\t \nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n > 1 ) {\n\t\treturn (n * (factorial (n - 1)));\n\t}\n\telse return (1);\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n//Pre: 0 <= n <= 12\n//Post: imp el factorial\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n\tif (n==0) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    int f = n;\n    if (f < 2) return f;\n    f = n*factorial(n-1);\n    return f;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (f == 0) return 1;\n    f = n*factorial(n-1);\n    return f;\n}\n\n\n/*int factorial(int n) {\n    if (n == 0) return 1;\n     return n*factorial(n-1);\n}*/\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n = 1) return n;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n    \n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    int f = n;\n    if (f == 0) return 1;\n    f = n*factorial(n-1);\n    return f;\n}\n\n\n/*int factorial(int n) {\n    if (n == 0) return 1;\n     return n*factorial(n-1);\n}*/\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n > 1) n*factorial(n-1);\n    else return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n > 1) return n*factorial(n-1);\n    else return 1;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0)\n\t\treturn 1;\n\treturn factorial(n - 1)*n;\n}\n\n\nint main() {\n\tint n;\n\twhile (cin >> n)\n\t\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\nint main(){\n    int n;\n    while (cin >> n){\n        \n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n == 0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<2) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse {\n\t\treturn n * factorial(n - 1);\n\t}\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int x) {\nif (x<2) return 1;\nelse return factorial (x-1) * x;\n}\n\nint main () {\nint x;\nwhile (cin >> x){\nint resultat;\nresultat = factorial (x);\ncout << resultat << endl;\n}}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\t\n\tif (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main(){\n\tint n;\n\twhile(cin >> n) cout << factorial(n) << endl;\n\t\n\t\n\t}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0)return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return factorial (n-1) * n;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n > 1) {\n\t\treturn n * factorial(n - 1);\n\t}\n\telse return 1;\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\telse return n*(factorial(n-1));\n}\n\n\nint main(){\n\tint n;\n\twhile(cin >> n)\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial(n - 1);\n        return n*f;\n    }\n}\n\n\nint main() {\n    int k;\n    cin >> k;\n    cout << factorial(k) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n    if (n < 3) return n;\r\n\r\n    return factorial(n-1)*n;\r\n\r\n}\r\n\r\nint main() {\r\n\r\n    int n;\r\n\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n    if (n == 0 or n == 1) return 1;\r\n\r\n    return factorial(n-1)*n;\r\n\r\n}\r\n\r\nint main() {\r\n\r\n    int n;\r\n\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    int i = 0;\r\n    int fact = 1;\r\n    while (i < n){\r\n        ++i;\r\n        fact = fact * i;\r\n    }\r\n    return fact;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while (cin >> n){\r\n    cout << factorial (n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    int fac = factorial(n-1);\n    return n*fac;\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n - 1);\n}\n\nint main () {\n  int n;\n  while (cin >> n) {\n    cout << factorial (n) << endl;\n  }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial( int n )\r\n{\r\n\tif ( n == 0 ) return 1;\r\n\telse n * factorial ( n - 1 );\r\n}\r\n\r\nint main ()\r\n{\r\n\tint n;\r\n\twhile ( cin >> n )\r\n\t{\r\n\t\tcout << int factorial ( int n ) << endl\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial( int n )\r\n{\r\n\tif ( n == 0 ) return 1;\r\n\telse return n * factorial ( n - 1 );\r\n}\r\n\r\nint main ()\r\n{\r\n\tint n;\r\n\twhile ( cin >> n )\r\n\t{\r\n\t\tcout << int factorial ( int n ) << endl\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial( int n )\r\n{\r\n\tif ( n == 0 ) return 1;\r\n\telse return n * factorial ( n - 1 );\r\n}\r\n\r\nint main ()\r\n{\r\n\tint n;\r\n\twhile ( cin >> n )\r\n\t{\r\n\t\tcout << factorial ( int n ) << endl\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial( int n )\r\n{\r\n\tif ( n == 0 ) return 1;\r\n\telse return n * factorial ( n - 1 );\r\n}\r\n\r\nint main ()\r\n{\r\n\tint n;\r\n\twhile ( cin >> n )\r\n\t{\r\n\t\tcout << factorial ( int n ) << endl\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial( int n )\r\n{\r\n\tif ( n == 0 ) return 1;\r\n\telse return n * factorial ( n - 1 );\r\n}\r\n\r\nint main ()\r\n{\r\n\tint n;\r\n\twhile ( cin >> n )\r\n\t{\r\n\t\tcout << factorial ( n ) << endl\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial( int n )\r\n{\r\n\tif ( n == 0 ) return 1;\r\n\telse return n * factorial ( n - 1 );\r\n}\r\n\r\nint main ()\r\n{\r\n\tint n;\r\n\twhile ( cin >> n )\r\n\t{\r\n\t\tcout << factorial ( n ) << endl;\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n  if(n==0){\r\n    return (1);\r\n    }\r\n  if (n!=1){\r\n    n=factorial(n-1)*n;\r\n    }\r\n  return(n);\r\n  }\r\nint main(){\r\n  int c;\r\n  while(cin>>c){\r\n    cout<<factorial(c)<<endl;\r\n    }\r\n  }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  while (cin >> n) {\r\n  cout << factorial(n) << endl;\r\n}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0)\n        return 1;\n    return factorial(n/10)*n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0)\n        return 1;\n    return factorial(n - 1)*n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}",
  "\nint factorial(int n){\n\tif(n == 1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\nint factorial(int n){\n\tif(n == 1) return 1;\n\telse return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\nint factorial(int n){\n\tif(n == 2) return 2;\n\telse return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tint x = 1;\n\tif (n > 0) {\n\t\tx = n * x;\n\t\t--n;\n\t\treturn factorial(n)\n\t} \n\treturn x;\n}\n\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tint x = 1;\n\tif (n > 0) {\n\t\tx = n * x;\n\t\t--n;\n\t\treturn factorial(n);\n\t} \n\treturn x;\n}\n\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\n    \nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n  ",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\n\tif (n > 1) {\n\treturn n*factorial(n-1);\n\t}\n\telse {\n\t\treturn 1;\n\t}\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0 or n == 1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n int n;\r\n while (cin >> n) {\r\n     cout << factorial(n) << endl;\r\n }\r\n}\r\n",
  "int factorial(int n){\n    if(n==1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n==1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n>1) return n*factorial(n-1);\n    else return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n        \n    \n\n}\n\n\nint main() {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if(n<=1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  while (cin >> n){\r\n  \tcout << factorial(n) << endl;\r\n  }\r\n  \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\t\n\tif (n == 1) return 1;\n\telse {\n\t\treturn n = n * factorial(n-1);\n\t}\n}\n\nint main(){\n\tint a;\n\tcin >> a\n\t\n\tcout << factorial(a) << endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\t\n\tif (n == 1) return 1;\n\telse {\n\t\treturn n = n * factorial(n-1);\n\t}\n}\n\nint main(){\n\tint a;\n\tcin >> a;\n\t\n\tcout << factorial(a) << endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\t\n\tif (n == 1) return 1;\n\telse {\n\t\treturn n = n * factorial(n-1);\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\t\n\tif (n == 0) return 1;\n\telse {\n\t\treturn n = n * factorial(n-1);\n\t}\n}\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if ( n > 1 ){\n      return n*factorial(n-1);\n    }\n    else return 1;\n }\n \n \n int main(){\n   int n;\n   cin >> n;\n   int resultat = factorial(n);\n   cout << resultat << endl;\n }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif ( n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint mult=1;\r\n\tfor (int a=1; n>=a; ++a){\r\n\t\t  mult=a*mult;\r\n\t}\r\n\treturn mult;\r\n}\r\n\r\nint main () {\r\nint n;\r\ncin >> n;\r\ncout << factorial(n) << endl;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\t\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n)<< endl;\r\n}\r\n",
  "public class factorial {\n    public static void main(String[] args) {\n        int n = 5;\n        System.out.println(factorial(n));\n    }\n    \n    public static int factorial(int n){\n        if (n == 0) {\n            return 1;\n        } else {\n            return n * factorial(n-1);\n        }\n    }        \n}",
  "   \n    public static int factorial(int n){\n        if (n == 0) {\n            return 1;\n        } else {\n            return n * factorial(n-1);\n        }\n    } ",
  "public class factorial {\n    public static void main(String[] args) {\n        int n = 5;\n        System.out.println(factorial(n));\n    }\n    \n    public static int factorial(int n){\n        if (n == 0) {\n            return 1;\n        } else {\n            return n * factorial(n-1);\n        }\n    }        \n}",
  "public class factorial {\n    public static void main(String[] args) {\n        int n = 5;\n        System.out.println(factorial(n));\n    }\n    \n    public static int factorial(int n){\n        if (n == 0) {\n            return 1;\n        } else {\n            return n * factorial(n-1);\n        }\n    }        \n}",
  "public class factorial {\n\n    public static void main(String[] args) {\n        int n = 5;\n        System.out.println(factorial(n));\n    }\n    \n    public static int factorial(int n){\n        if (n == 0) {\n            return 1;\n        } else {\n            return n * factorial(n-1);\n        }\n    }        \n\n}\n",
  "public class factorial {\n\n    \n    public static int factorial(int n){\n        if (n == 0) {\n            return 1;\n        } else {\n            return n * factorial(n-1);\n        }\n    }        \n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n<=1) return 1;\r\n    else {\r\n        factorial(n-1);\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0)return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main (){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl; \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n > 1) return n*(factorial(n-1));\n    else if(n == 0) return 1;\n}\nint main () {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n > 1) return n*(factorial(n-1));\n    return 1;\n}\nint main () {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n){\r\n \tif (n==0 or n==1) return 1;\r\n \telse return factorial(n-1)*n;\r\n\t\r\n }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n==0) return 1;\r\n  for(int i=(n-1);i>0;--i){\r\n    n=n*i;\r\n  }\r\n  return n;\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  while(cin>>n){\r\n    cout << factorial(n) << endl;\r\n  }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint count = 1;\r\n\tif ( n == 0){\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\tfor (int i = 1; i <= n; ++i){\r\n\t\t\tcount = count*i;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n}\r\n\r\nint main (){\r\n\tint n;\r\n\twhile (cin >> n){\r\n\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n){\r\n\t if (n==0) return 1;\r\n\t else \r\n\t\t return factorial(n-1)*n;\r\n\t \r\n }\r\n int main () {\r\n\t int n;\r\n\t cin >> n;\r\n\t cout << factorial (n) << endl;\r\n }",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n == 0) return 1;\r\n\telse return factorial(n-1)*n;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int x = 1;\n    for(int i = 1; i <= n; i++){\n        x *= i;\n    }\n    return x;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }",
  "#include<iostream> \r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n<2) return 1;\r\n\treturn n*factorial(n-1);\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n<1) return 1;\r\n\telse return factorial(n-1)*n;\r\n}\r\n\r\nint main (){\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  while (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n * factorial(n -1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main(){\r\n    int n;\r\n    while(cin >> n){\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n<=1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main(){\r\n    int n;\r\n    while(cin >> n){\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "int factorial(int n) {\n\tif (n == 0) return 1;\n\treturn  n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1) return n;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return n;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint factorial(int n){\n  if(n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main(){\n  int n;\n  while(cin >> n){\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n == 0) return 1;\r\n  else return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) <<endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n    int result;\r\n    int factorial (int n);\r\nint main()\r\n{\r\n    int n;\r\n    cin >>n;\r\n    cout << factorial (n)<< endl;\r\n\r\n    return 0;\r\n}\r\n\r\nint factorial (int n){\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n\r\n}\r\n",
  "#include <stdio.h>\n\nint factorial(int n);\n\nint main() {\n\tint n;\n\twhile (scanf(\"%d\", &n) > 0) {\n    printf(\"%d\\n\", factorial(n));\n\t}\n\treturn 0;\n}\n\nint factorial(int n){\n\tif(n == 1)\n\t\treturn 1;\n\telse return (n * factorial(n - 1));\n}\n",
  "#include <stdio.h>\n\nint factorial(int n);\n\nint main() {\n\tint n;\n\twhile (scanf(\"%d\", &n) > 0) {\n    \tprintf(\"%d\\n\", factorial(n));\n\t}\n\treturn 0;\n}\n\nint factorial(int n){\n\tif(n == 0)\n\t\treturn 1;\n\telse return (n * factorial(n - 1));\n}\n",
  "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nvoid mostrarClassic( vector <string> &V) {\r\n    int pos;\r\n    pos = 0;\r\n    while (pos < V.size()) {\r\n        cout << V[pos] << endl;\r\n        pos++;\r\n    }\r\n}\r\n\r\n\r\nvoid mostrarRecursiu( vector <string> &V, int pos) {\r\n\r\n    if (pos < V.size()) {\r\n        cout << V[pos] << endl;\r\n        pos++;\r\n        mostrarRecursiu(V, pos);\r\n    }\r\n}\r\n\r\n\r\nvoid mostrarRecursiuBo( vector <string> &V, int pos) {\r\n\r\n    /// Am I in the trivial case? -> Solve any particular cases\r\n    if (pos == V.size()) return;  /// As I reached the end of the vector I am over\r\n\r\n    /// If I arrived so far means I am in a valid case -> Solve the general case\r\n    cout << V[pos] << endl;\r\n    mostrarRecursiuBo(V, pos+1);   /// Call the next case (next iteration)\r\n    /// Remember Never use pos++\r\n\r\n}\r\n\r\nint main() {\r\n\r\n    vector <string> V(7);\r\n    for (int index=0; index < V.size(); index++) {\r\n        cin >> V[index];\r\n    }\r\n\r\n    mostrarClassic( V);\r\n\r\n    cout << endl << \"Now recursive\" << endl;\r\n\r\n    mostrarRecursiu( V, 0);\r\n\r\n    cout << endl << \"Now a second version\" << endl;\r\n\r\n    mostrarRecursiuBo( V, 2);\r\n\r\n}\r\n",
  "#include <stdio.h>\n\nint factorial (int n) {\n  if (n==0) return 1;\n  return n*factorial(n-1);\n}\n\n\nint main () {\n  for (int i = 0; i < 10; i++) {\n    printf(\"%d\\n\", factorial(i));\n  }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tint t=1;\r\nfor(int i=n; i>0;i--){\r\n\tt=t*i;\r\n}\r\nreturn t;\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tint t=1;\r\nfor(int i=n; i>0;i--){\r\n\tt=t*i;\r\n}\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n",
  "import java.util.Scanner;\n\nclass Main {\n\n  public static void main(String[] args) {\n    final Scanner sc = new Scanner(System.in);\n    while (sc.hasNextInt()) {\n      int n = sc.nextInt();\n      System.out.println(Solution.factorial(n));\n    }\n  }\n\n}\n\npublic class Solution {\n    public static int factorial(int n)  {\n        if(n<=0){\n            return 1;\n        }\n        else{\n            return n*factorial(n-1);\n        }\n    }\n}\n",
  "import java.util.Scanner;\n\nclass Main {\n\n  public static void main(String[] args) {\n    final Scanner sc = new Scanner(System.in);\n    while (sc.hasNextInt()) {\n      int n = sc.nextInt();\n      System.out.println(Solution.factorial(n));\n    }\n  }\n\n}\n\nclass Solution {\n    public static int factorial(int n)  {\n        if(n<=0){\n            return 1;\n        }\n        else{\n            return n*factorial(n-1);\n        }\n    }\n}\n",
  "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tint fact;\r\n\tif (n>0) fact = n * factorial (n-1);\r\n\tif (n==0) return 1;\r\n\treturn fact;\t \r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin>>n){\r\n\t\tcout << factorial(n) <<endl;\r\n\t}\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nvoid factorial(int it, int val){\r\n\tif(it>0){\r\n\t\tval*=it;\r\n\t\trec(it-1,val);\r\n\t}\r\n\telse{\r\n\t\tcout<<val<<endl;\r\n\t}\r\n}\r\nint main(){\r\n\tint n;\r\n\twhile(cin>>n){\r\n\t\trec(n-1, n);\r\n\t}\r\n}\r\n",
  "int factorial(int n) {\r\n\tif (n==0){\r\n\t\treturn 0\r\n\t}\r\n\tif (n > 1) {\r\n\t\treturn (factorial(n - 1)*n);\r\n\t}\r\n\telse {\r\n\t\treturn (n);\r\n\t}\r\n};",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nvoid factorial(int it, int val){\r\n\tif(it>0){\r\n\t\tval*=it;\r\n\t\tfactorial(it-1,val);\r\n\t}\r\n\telse{\r\n\t\tcout<<val<<endl;\r\n\t}\r\n}\r\nint main(){\r\n\tint n;\r\n\twhile(cin>>n){\r\n\t\tfactorial(n-1, n);\r\n\t}\r\n}\r\n",
  "int factorial(int n) {\r\n\tif (n > 2) {\r\n\t\treturn (recursiva(n - 1)*n);\r\n\t}\r\n\telse {\r\n\t\treturn (n);\r\n\t}\r\n};",
  "int factorial(int n) {\r\n\tif (n > 1) {\r\n\t\treturn (factorial(n - 1)*n);\r\n\t}\r\n\telse {\r\n\t\treturn (n);\r\n\t}\r\n};",
  "int factorial(int n) {\r\n\tif (n==0){\r\n\t\treturn 0;\r\n\t}\r\n\tif (n > 1) {\r\n\t\treturn (factorial(n - 1)*n);\r\n\t}\r\n\telse {\r\n\t\treturn (n);\r\n\t}\r\n};",
  "\r\nint factorial(int n){\r\n\tif(n > 0){\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\telse{\r\n\t\treturn 1;\r\n\t}\r\n}\r\n\r\n",
  "int factorial(int n) {\r\n\tif (n > 2) {\r\n\t\treturn (factorial(n - 1)*n);\r\n\t}\r\n\telse {\r\n\t\treturn (n);\r\n\t}\r\n};",
  "int factorial(int n) {\r\n\tif (n==0){\r\n\t\treturn 1;\r\n\t}\r\n\tif (n > 1) {\r\n\t\treturn (factorial(n - 1)*n);\r\n\t}\r\n\telse {\r\n\t\treturn (n);\r\n\t}\r\n};",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nvoid factorial(int it, int val){\r\n\tif(it>0){\r\n\t\tval*=it;\r\n\t\tfactorial(it-1,val);\r\n\t}\r\n\telse{\r\n\t\tcout<<val<<endl;\r\n\t}\r\n}\r\nint main(){\r\n\tint n;\r\n\twhile(cin>>n){\r\n\t\tfactorial(n-1, n);\r\n\t}\r\n}\r\n",
  "int recursiva(int num) {\r\n\tif (num > 2) {\r\n\t\treturn (recursiva(num - 1)*num);\r\n\t}\r\n\telse {\r\n\t\treturn (num);\r\n\t}\r\n};",
  "int factorial(int num) {\r\n\tif (num > 2) {\r\n\t\treturn (recursiva(num - 1)*num);\r\n\t}\r\n\telse {\r\n\t\treturn (num);\r\n\t}\r\n};",
  "\r\nimport java.util.Scanner;\r\n\r\n\r\npublic class Programas {\r\n\t\r\n\tpublic static int factorial(int n){\r\n\t\tif(n==1){\r\n\t\t\treturn n;\r\n\t\t}\r\n\t\tif(n==0){\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tScanner sc = new Scanner(System.in);\r\n\t\tint n = sc.nextInt();\r\n\t\tSystem.out.print(Programas.factorial(n));\r\n\t}\r\n\r\n}\r\n",
  "\r\nimport java.util.Scanner;\r\n\r\nclass Programas {\r\n\t\r\n\tpublic static int factorial(int n){\r\n\t\tif(n==1){\r\n\t\t\treturn n;\r\n\t\t}\r\n\t\tif(n==0){\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tScanner sc = new Scanner(System.in);\r\n\t\tint num = sc.nextInt();\r\n\t\twhile(num>=num){\r\n\t\t\tSystem.out.println(Programas.factorial(num));\r\n\t\t\tnum=sc.nextInt();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n",
  "package Jutge;\r\n\r\nimport java.util.Scanner;\r\n\r\n\r\nclass Programas {\r\n\t\r\n\tpublic static int factorial(int n){\r\n\t\tif(n==1){\r\n\t\t\treturn n;\r\n\t\t}\r\n\t\tif(n==0){\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tScanner sc = new Scanner(System.in);\r\n\t\tint n = sc.nextInt();\r\n\t\tSystem.out.print(Programas.factorial(n));\r\n\t}\r\n\r\n}\r\n",
  "import java.util.Scanner;\r\n\r\nclass main {\r\n\t\r\n\tpublic static int factorial(int n){\r\n\t\tif(n==1){\r\n\t\t\treturn n;\r\n\t\t}\r\n\t\tif(n==0){\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tScanner sc = new Scanner(System.in);\r\n\t\tint num = sc.nextInt();\r\n\t\twhile(num>=num){\r\n\t\t\tSystem.out.println(main.factorial(num));\r\n\t\t\tnum=sc.nextInt();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n",
  "\r\nclass main {\r\n\t\r\n\tpublic static int factorial(int n){\r\n\t\tif(n==1){\r\n\t\t\treturn n;\r\n\t\t}\r\n\t\tif(n==0){\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\r\n\r\n}\r\n",
  "\tint factorial(int n) {\r\n\r\n        if (n == 1) {\r\n            return n;\r\n        }\r\n\r\n        if (n == 0) {\r\n            return 1;\r\n        }\r\n        return n * factorial(n - 1);\r\n    }\r\n",
  "public static int factorial(int n){\n    if (n==0)\n        return 1;\n    else\n        return n*(factorial(n-1));\n}",
  "import java.util.Scanner;\n\nclass Main {\n\tpublic int factorial(int n){\n    if (n==0)\n        return 1;\n    else\n        return n*(factorial(n-1));\n}\n}\n",
  "public static int factorial(int n) {\r\n\r\n        if (n == 1) {\r\n            return n;\r\n        }\r\n\r\n        if (n == 0) {\r\n            return 1;\r\n        }\r\n        return n * factorial(n - 1);\r\n    }\r\n",
  "import java.util.Scanner;\n\nclass Main {\n\t public static void main(String[] args) {\n     Scanner sc = new Scanner(System.in);\n    while (sc.hasNextInt()) {\n      int n = sc.nextInt();\n      System.out.println(factorial(n));\n    }\n  }\n\t\n\tpublic static int factorial(int n){\n    if (n==0)\n        return 1;\n    else\n        return n*(factorial(n-1));\n}\n}\n",
  "import java.util.Scanner;\r\n\r\npublic class Main {\r\n\r\n    public static int factorial(int n) {\r\n\r\n        if (n == 1) {\r\n            return n;\r\n        }\r\n\r\n        if (n == 0) {\r\n            return 1;\r\n        }\r\n        return n * factorial(n - 1);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n\r\n        Scanner sc = new Scanner(System.in);\r\n\r\n        int num = sc.nextInt();\r\n\r\n        while (num >= num) {\r\n\r\n            System.out.println(Main.factorial(num));\r\n\r\n            num = sc.nextInt();\r\n        }\r\n    }\r\n\r\n}\r\n",
  "import java.util.Scanner;\r\n\r\nclass Main {\r\n\r\n    public static int factorial(int n) {\r\n\r\n        if (n == 1) {\r\n            return n;\r\n        }\r\n\r\n        if (n == 0) {\r\n            return 1;\r\n        }\r\n        return n * factorial(n - 1);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n\r\n        Scanner sc = new Scanner(System.in);\r\n\r\n        int num = sc.nextInt();\r\n\r\n        while (num >= num) {\r\n\r\n            System.out.println(Main.factorial(num));\r\n\r\n            num = sc.nextInt();\r\n        }\r\n    }\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\t\n\tfor(int m=n-1;m>0;m--){\n\t\tn=n*m;\n\t}\n\tif(n==0) n=1; \n\treturn n;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\r\n{\r\n    int current = 1;\r\n\r\n    for (int i = n ; i != 0; i--)\r\n    {\r\n        current *= i;\r\n    }\r\n\r\n    return current;\r\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "from jutge import read\n\ndef factorial(n):\n\tif n == 0: return 1\n\treturn n * factorial(n - 1)\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)",
  "from jutge import read\n\ndef factorial(n):\n\tif n == 0: return 1\n\treturn n * factorial(n - 1)\n\nn = read(int)\n\nwhile n is not None: \n\tprint(factorial(n))\n\tn = read(int)",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\nif(n == 0){\r\n\r\n    return 1;\r\n\r\n} else {\r\n\r\nreturn n * factorial(n-1);\r\n\r\n}\r\n\r\n\r\n}\r\n\r\nint main()\r\n{\r\n\r\n    cout << factorial(4);\r\n\r\n    return 0;\r\n}\r\n",
  "/*\r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\npackage jutge;\r\n\r\n/**\r\n *\r\n * @author calat\r\n */\r\npublic class Jutge {\r\n\r\n    /**\r\n     * @param args the command line arguments\r\n     */\r\n    public static int factorial (int n){\r\n        if (n == 0) return 1;\r\n        return factorial(n - 1)*n;\r\n    }\r\n    public static void main(String[] args) {\r\n        // TODO code application logic here\r\n       \r\n    }\r\n    \r\n}\r\n",
  "/*\r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\npackage jutge;\r\n\r\n/**\r\n *\r\n * @author calat\r\n */\r\nclass Jutge {\r\n\r\n    /**\r\n     * @param args the command line arguments\r\n     */\r\n    public static int factorial (int n){\r\n        if (n == 0) return 1;\r\n        return factorial(n - 1)*n;\r\n    }\r\n    public static void main(String[] args) {\r\n        // TODO code application logic here\r\n       \r\n    }\r\n    \r\n}\r\n",
  "/*\r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\npackage jutge;\r\n\r\n/**\r\n *\r\n * @author calat\r\n */\r\nclass Main {\r\n\r\n    /**\r\n     * @param args the command line arguments\r\n     */\r\n    public static int factorial (int n){\r\n        if (n == 0) return 1;\r\n        return factorial(n - 1)*n;\r\n    }\r\n    public static void main(String[] args) {\r\n        // TODO code application logic here\r\n       \r\n    }\r\n    \r\n}\r\n",
  "/*\r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\npackage jutge;\r\n\r\n/**\r\n *\r\n * @author calat\r\n */\r\nclass Main {\r\n\r\n    /**\r\n     * @param args the command line arguments\r\n     */\r\n    public static int factorial (int n){\r\n        if (n == 0) return 1;\r\n        return factorial(n - 1)*n;\r\n    }\r\n   \r\n    \r\n}\r\n",
  "/*\r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n/**\r\n *\r\n * @author calat\r\n */\r\nclass Main {\r\n\r\n    /**\r\n     * @param args the command line arguments\r\n     */\r\n    public static int factorial (int n){\r\n        if (n == 0) return 1;\r\n        return factorial(n - 1)*n;\r\n    }\r\n   \r\n    \r\n}\r\n",
  "/*\r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n/**\r\n *\r\n * @author calat\r\n */\r\nclass Main {\r\n    \r\n    /**\r\n     * @param args the command line arguments\r\n     */\r\n     public static void main(String[] args) {\r\n        // TODO code application logic here\r\n       \r\n    }\r\n    public static int factorial (int n){\r\n        if (n == 0) return 1;\r\n        return factorial(n - 1)*n;\r\n    }\r\n   \r\n    \r\n}\r\n",
  "/*\r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\nimport java.util.*;\r\nimport java.io.*;\r\n/**\r\n *\r\n * @author calat\r\n */\r\nclass Main {\r\n    \r\n    /**\r\n     * @param args the command line arguments\r\n     */\r\n     public static void main(String[] args) {\r\n        // TODO code application logic here\r\n       \r\n    }\r\n    public static int factorial (int n){\r\n        if (n == 0) return 1;\r\n        return factorial(n - 1)*n;\r\n    }\r\n   \r\n    \r\n}\r\n",
  "/*\r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\nimport java.util.*;\r\nimport java.io.*;\r\n/**\r\n *\r\n * @author calat\r\n */\r\nclass Main {\r\n    \r\n    /**\r\n     * @param args the command line arguments\r\n     */\r\n     public static void main(String[] args) {\r\n        // TODO code application logic here\r\n       \r\n    }\r\n    static int factorial (int n){\r\n        if (n == 0) return 1;\r\n        return factorial(n - 1)*n;\r\n    }\r\n   \r\n    \r\n}\r\n",
  "/*\r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\nimport java.util.*;\r\nimport java.io.*;\r\n/**\r\n *\r\n * @author calat\r\n */\r\nclass Main {\r\n    \r\n    /**\r\n     * @param args the command line arguments\r\n     */\r\n    \r\n    public static int factorial (int n){\r\n        if (n == 0) return 1;\r\n        return factorial(n - 1)*n;\r\n    }\r\n   \r\n    \r\n}\r\n",
  "/*\r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\npackage jutge; \r\n\r\nimport java.util.*;\r\nimport java.io.*;\r\n/**\r\n *\r\n * @author calat\r\n */\r\nclass Main {\r\n    \r\n    /**\r\n     * @param args the command line arguments\r\n     */\r\n     \r\n    public static int factorial (int n){\r\n        if (n == 0) return 1;\r\n        return factorial(n - 1)*n;\r\n    }\r\n   public static void main(String[] args) {\r\n        // TODO code application logic here\r\n       Scanner sc = new Scanner (System.in);\r\n       int ask = sc.nextInt();\r\n       System.out.println(factorial(ask));\r\n    }\r\n    \r\n}\r\n",
  "/*\r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\npackage jutge; \r\n\r\nimport java.util.*;\r\nimport java.io.*;\r\n/**\r\n *\r\n * @author calat\r\n */\r\nclass Solution {\r\n    \r\n    /**\r\n     * @param args the command line arguments\r\n     */\r\n     \r\n    public static int factorial (int n){\r\n        if (n == 0) return 1;\r\n        return factorial(n - 1)*n;\r\n    }\r\n    \r\n}\r\n",
  "class Solution {\r\n    public static int factorial (int n){\r\n        if (n == 0) return 1;\r\n        return factorial(n - 1)*n;\r\n    }\r\n}\r\n",
  "public class Solution{\n    public static int factorial(int n){\n        if(n==0 || n==1){\n            return 1;\n        }else{\n            return factorial(n-1)*n;\n        } \n    }\n}",
  "public class Solution{\n    public static int factorial(int n){\n        if(n==0 || n==1){\n            return 1;\n        }else{\n            return factorial(n-1)*n;\n        } \n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int a) {\n  if (a > 1) return (a * factorial (a-1));\n  else return 1;\n}\n\nint main () {\n  int a;\n\twhile (cin>>a) {\n\tcout << factorial(a)<< endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n\tif (n==0) return 1;\n\tint valor = n*factorial(n-1);\n\treturn valor;\n}\nint main(){\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n} \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int a) {\n\tint f = 1;\n\twhile (a != 0) {\n\t\tf = f*a;\n\t\t--a;\n\t}\n\treturn f;\t\n}\n\nint main () {\n\tint a;\n\twhile (cin >> a) {\n\t\tcout << factorial(a) << endl;\n\t}\n}\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0 or n==1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial (n) << endl;\n\t}\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\nint main(){\n\tint n;\n    while (cin>>n) cout << factorial(n)<< endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint fact(int 0){\n\tif (n==0) return 1;\n\treturn n*fact(n-1);\n}\n\nint main (){\n\tint a, b, c, d;\n\twhile(cin >> a >> b >> c >> d){\n\t\tcout << max4(a, b, c, d) << endl;\n\t}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0 or n == 1) { \r\n\treturn 1;\r\n\t}\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n    cout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main (){\n\tint a;\n\twhile(cin >> a){\n\t\tcout << factorial(a) << endl;\n\t}\n}\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std; \n\nint factorial(int n){\n\tif (n != 0) return factorial(n - 1)*n;\n\telse return 1;\n}\n\nint main(){\n\tint nom;\n\twhile (cin >> nom){\n\t\tcout << factorial(nom) << endl;\n\t}\n}\n",
  "#include <iostream>\t\t\t//Factorial recursiu\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0 or n == 1) return 1;\n\telse return n * factorial(n - 1);\n}\n\nint main () {\n\tint x;\n\twhile (cin >> x) {\n\t\tcout << factorial(x) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif( n == 0 or n == 1){ \n\t\treturn 1;\n\t\t} else  {\n\t\t\treturn n * factorial (n - 1);\n\t\t\t}\n\t\t\n\t\t}\n\t\n\t\n\nint main(){\n\tint x;\n\t\n\twhile (cin >> x){\n\tcout << factorial(x) << endl;\n\t\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0 or n==1) return 1;\n\telse return n * factorial(n-1); \n}\n\nint main() {\n}\t\t\n",
  "#include <iostream>\nusing namespace std;\n\n/*int factorial(int n){\n\tint fact=1;\n\tfor (int i=1; i <= n; ++i) fact = fact*i;\n\treturn fact;\n\t\n}*/\nint factorial (int n){\n\tif(n==0 or n==1) return 1;\n\telse return n*factorial (n-1);\n\t}\n\nint main() {\n\tintx;\n\twhile (cin >> x){\n\t\tcout << factorial (x) << endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif(n==0 or n==1) return 1;\n\telse return n*factorial(n-1);\n\t}\n\nint main() {\n\tint x;\n\twhile (cin >> x){\n\t\tcout << factorial (x) << endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tint l = 1;\n\tint e = 1;\n\twhile (l <= n) {\n\t\te = e * l;\n\t\tl = l + 1;\n\t} \n\treturn e;\n}\n\nint main() {\n   int x;\n   while (cin >> x) {\n\t  cout << factorial(x) << endl;\n   }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n)  {\n\tif (n==0 or n==1) return1; \n\t\telse return n * factorial(n - 1);// tener siempre en cuenta que se ha de acabar!! poner casos base ( aqui el caso base es si n=0 o n=1 el fact. es =1!!\n\t\t\n}\n\nint main() {\n\tint x;\n\twhile (cin >> x) {\n\t\tcout << factorial(x) << endl;\n\t}\n\n}\n",
  "#include <iostream>\nusing namespace std; // introduction\n\nint factorial(int n) {\n\tif (n<0) return 0;\n\tif (n>1) return n*factorial(n-1);\n\treturn 1; }\n \nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\t\n}\n\t \n\n\n\t \n\n\n\n\t\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif(n==0 or n==1) return 1;\n\telse return n*factorial(n-1);\n\t}\n\nint main() {\n\tint x;\n\twhile (cin >> x){\n\t\tcout << factorial (x) << endl;\n\t\n}\n}\n",
  "#include <iostream>\n#include <math.h>\n#include <vector>\nusing namespace std;\n\nint factorial (int n){\n\tif (n<=1){\n\t\treturn 1;\n\t}\n\telse{\n\t\treturn (n*factorial(n-1));\n\t}\n}\n\nint main() {\n\tint n;\n\twhile(cin>>n){\n\t\tcout<<factorial(n)<<endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\t\t\nvoid escriu(char c, int n){\n\tfor (int i = 0; i <= n; ++i) {\n\t\t\tcout << c;\n\t}\n}\nint  main () {\n\tint n;\n\tcin >> n;\n\tint x = 0;\n\tchar c = '*';\n\tfor (int i = 1; i <= n; ++i) {\n\t\tescriu(c, x);\n\t\tcout << endl;\n\t\t++x;\n\t\t}\n}\n",
  "ï»¿int factorial(int n){\n  int j = 1;\n  while(n != true){\n    j = j*n;\n    --n;\n  }\n}",
  "//RECURSIVE FUNCION FOR FACTORIALS\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n == 0 or n==1){\r\n\t\treturn 1;\r\n\t}else{\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\r\n\t\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\tcout << factorial(n) << endl ;\r\n\t}\r\n\r\n}",
  " #include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\nif(n>1){\nreturn n*factorial(n-1);\n}\nelse return 1;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}\n}   \n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\twhile(cin>>n){\n\tcout<<factorial(n)<<endl;}\n}\n",
  "int factorial(int n) {\r\n  if (n <= 1) return 1;\r\n  return n * factorial(n - 1);\r\n}",
  "\nint factorial(int n)\n{\n    if(n < 2) { return 1; }\n    \n    return n * factorial(n - 1);\n}\n",
  "from jutge import read\ndef factorial(n):\n    if n == 1 or n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\na=read(int)\nprint(factorial(a))\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n \n    int res = 1;\n    if (n >= 0  and n <=12){\n        if(n == 0 or n ==1 ) return res;\n            else res = n*factorial(n-1); \n        }\n    \n    return res;\n}\n\n\nint main(){\n    int a ;\n    cin >> a;\n    \n    cout << factorial(a) << endl;\n}",
  "int factorial(int n) {\n    if (n == 0) {\n        return 1;\n    } else {\n        return factorial(n-1) * n;\n    }\n}\n",
  "using namespace std;\n#include <iostream>\n\nint factorial(int n);\n\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "int factorial(int n){\r\n\tif (n == 1) return 1;\r\n\telse return n*fact(n-1);\r\n}\r\n",
  "int factorial(int n){\r\n\tif (n == 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "int factorial(int n){\r\n\tif (n == 0) return 1;\r\n\tif (n == 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fac = 1;\n    int i = 1;\n\n    while (i <= n){\n      fac = fac * i;\n      i = i + 1;\n    }\n    return fac;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0)  return 1;\n    else  return(n * factorial(n - 1));\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial (int n) {\n    if (n == 0 or n == 1) return 1;\n    return factorial(n - 1) * n;\n}\n\nint main () {\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n        \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\n#include <math.h>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\n\r\n\r\n    //cout.setf(ios::fixed);\r\n    //cout.precision(4);\r\n\r\n    // 7 = '7' - 48\r\n\r\n\r\n/*double harmonic(int n) {\r\n    double\r\n    s = 0;\r\n    for (double i = 1; i <= n; i++) {\r\n        s += 1/i;\r\n    }\r\n    return s;\r\n}*/\r\n\r\nint factorial(int n) {\r\n   if(n == 0) return 1;\r\n   return n*factorial(n-1);\r\n}\r\n\r\n\r\n\r\nint main() {\r\n    //cout.setf(ios::fixed);\r\n    //cout.precision(6);\r\n    int n = 3;\r\n    cout << factorial(n);\r\n\r\n}\r\n\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return factorial(n-1)*n;\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\t\n\twhile (cin >> n) {\n\t\tcout << factorial (n) << endl;\n\t}\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);}\r\n\t\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) <<endl;\r\n}\r\n\r\n\t\r\n\t\r\n\t\r\n\t\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n -1);\n}\n\nint main () {\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n -1);\n}\n\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tint a;\r\n\tif ((n==1) or (n==0)){\r\n\t\ta=1;\r\n\t}\r\n\telse{\r\n\t\ta=factorial(n-1)*n;\r\n\t}\r\n\treturn a;\r\n}\r\n\r\nint main(){\r\n\t\t\r\n//Programa Principal\r\n\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <=1) return 1;\n    else return n*factorial(n-1);\n}\n    \nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n ==1) return 1;\n    return n*factorial(n - 1);\n    \n}\nint main() {\n    int m;\n    while (cin >> m) cout << factorial(m) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    return n*factorial(n-1); \n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n    \n",
  "int factorial(int n){\r\n\tif(n == 0) return 1;\r\n\treturn n*factorial(n-1)\r\n}",
  "int factorial(int n){\r\n\tif(n == 0) return 1;\r\n\treturn n*factorial(n-1)\r\n}",
  "int factorial(int n){\r\n\tif(n == 0) return 1;\r\n\treturn n*factorial(n-1);\r\n}",
  "int factorial(int n){\r\n\tif(n == 0) return 1;\r\n\treturn n*factorial(n-1);\r\n}",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 0 ) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial (n-1);\n}\nint main() {\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n==0) return 1;\r\n  return n*factorial(n-1);\r\n }\r\n\r\n int main(){\r\n   int a;\r\n   cin>>a;\r\n   factorial(a);\r\n   cout<<'a'<<endl;\r\n }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\twhile (cin >> x) cout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n = n * factorial (n - 1);\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n int factorial(int n){\r\n \tint f = 1;\r\n \tfor (int i = 0; i <= n; ++i) f*= i;\r\n \treturn f;\t\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nint main (){\r\n}\r\n\t\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint f = 1;\r\n\tint i = 1;\r\n\tfor (int i = 1; i <= n; ++i) f = f * i;\r\n\treturn f;\r\n\t\r\n\t\r\n}\r\n\r\n\r\n\r\nint main (){\r\n\tint n;\r\n\tint i = 1;\r\n\tcin >> n;\r\n\tint f = 1;\r\n \twhile (i <= n){\r\n \t\tf = f * i;\r\n \t\t++i;\r\n \t}\r\n \tcout << f << endl;\r\n}\r\n\t\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial (n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n==1) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main (){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n);\r\n}\r\n",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n==1) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main (){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n==1 or n==0) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main (){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n",
  "// Recursive factorial\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n  if (n == 0) return 1;\r\n  else return n * factorial (n - 1);\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  while (cin >> n) {\r\n    cout << factorial (n) << endl;\r\n  }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tfor (int i = n-1; i > 0; i--) n *= i;\n\treturn n;\n\n}\n\n\nint main() {\n\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n == 0) n = 1;\n\telse for (int i = n-1; i > 0; i--) n *= i;\n\treturn n;\n\n}\n\n\nint main() {\n\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\nif (n==0) return 1;\r\nelse return n*factorial(n-1);\r\n}\r\nint main(){\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) {\n        return 1;\n    } else {\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return factorial(n-1)*n;\n    \n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n    \n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint fact(int n){\r\nif (n==0) return 1;\r\nreturn n*fact(n-1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << fact(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\nif (n==0) return 1;\r\nreturn n*factorial(n-1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main()\n{\n    int n;\n    cin>>n;\n    cout<<factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int k = n;\n    if (n==0) n=1;\n    else for(int i=1; i<k; ++i) n=n*i;\n    return n;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n{\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n > 1) return n*(factorial(n-1));\n\telse return 1;\n}\n",
  "int factorial(int n) {\r\n\tint r = 1;\r\n\tfor (int i = 1; i<=n; ++i)\r\n\t\tr*= i;\r\n\treturn r;\r\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n > 1) return n * factorial(n - 1);\n\telse return 1;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n    \n",
  "int factorial(int n){\n\tif (n == 1) return 1;\n\telse return n * factorial(n-1);\n}\n\n",
  "int factorial(int n){\n\tif (n > 1) return n * factorial(n-1);\n\telse return 1;\n}\n",
  "ï»¿#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n <= 1) return 1;\n    return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\t\n\tint r = 1;\n\tfor (int i = 1; i <= n; ++ i) {\n\t\tr *= i;\n\t}\n\treturn r;\n\t\n}\n\nint main () {\n\t\n\tint x;\n\twhile (cin >> x) {\n\t\tcout << factorial (x) << endl;\n\t}\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "int factorial(int n) {\r\n    if (n == 0 or n == 1) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int aux = 1;\n    for (int i = 1; i <= n; ++i) aux = aux*i;\n    return aux;\n}\n\nint main () {\n    int n;\n    \n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "int factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n",
  "class Solution {\n  public static int factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n<=1) return 1;\n  else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n{\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "int factorial(int n){\r\n\tif (n == 0) return 1;\r\n\tif (n == 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "int factorial(int n){\r\n\tint res=1;\r\n\tfor (int i=2;i<=n;i++) res *= i;\t\r\n\treturn res;}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\telse return n * factorial (n-1);\n}\n\nint main (){\n\tint a;\n\tcin >> a;\n\tcout << factorial (a) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n > 1)\r\n\t\treturn n*factorial(n - 1);\r\n\telse\r\n\t\treturn 1;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile(cin >> n)\r\n\tcout << factorial(n) << endl;\r\n}",
  "int factorial (int n) {\n    int x = 1;\n    for (int i = 1; i <= n; i++) x = x * i;\n    return x;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int f = 1;\n    int i = 0;\n    \n    while( i < n ){\n        i = i + 1;\n        f = f*i;\n    }\n    return f;\n}\n\nint main() {\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int f = 1;\n    int i = 0;\n    \n    while( i < n ){\n        i = i + 1;\n        f = f*i;\n    }\n    return f;\n}\n\nint main() {\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\t\r\n\tif(n == 0){    //si n vale cero, se devuelve 1 a la funcion principal\r\n\t\t\r\n\t\treturn 1;\r\n\t\t\r\n\t} else{\r\n\t\t\r\n\t\treturn n*factorial(n-1);    //se devuelve el valor por el valor reducido\r\n\t\t                             //Se envia el valor de n-1 progresivamente a factorial hasta que vale 0 y se devuelve 1\r\n\t}\r\n\t\r\n}\r\n\t\r\nint main () {\r\n\t\t\r\n\t\tint n;\r\n\t\t\r\n\twhile(cin >> n) { //Introducimos el valor\r\n\t\r\n\t\r\n\t    \tcout << factorial(n) << endl;  //llamamos a la funcion\r\n\t\t \r\n\t}\r\n\t\t\t\r\n}\r\n\t\r\n\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) \n{\n    \n    if (1 < n and n <= 12)\n        // Posem aquesta condiciÃ³ per poder entrar els factorials naturals.\n    {\n        int Factorial = n; // Declarem que factorial es igual a n per poder definir\n        // la funciÃ³ bÃ© i a fora del bucle perquÃ¨ faci tots els factors n-1.\n     for (int contador = n - 1; 0 < contador; contador--) \n     {\n        Factorial = Factorial * contador; // Fiquem factorial i no n perque sinÃ² no ens opera el bucle.\n        \n     }\n        return Factorial;\n        // Fem return factorial afora del bucle perque sino nomÃ©s ens fara una part del\n        //Bucle i no volem aixÃ² per tant o fiquem a fora i el reconeix perque esta definit\n        // a fora del bucle i despres de definirlo bÃ© el segon pas d 'operar i el 3 \n        // de imprimir la resposta feta dins al bucle el return.\n       \n        \n       \n    }\n    // Com ens falta una altra condiciÃ³ que es el 0 factorial que es considera natural\n    // i es 1 llavors farem una altra condiciÃ³ else fent que si n=0 imprimeixi 1 con output\n    else \n    {\n        return 1;\n    }\n}\n\n\nint main () \n{\n    int n;\n    \n    while (cin >> n) \n    {\n        cout << factorial(n) << endl;\n    }\n    //Posem cin amb while perque llegueixi n tantes vegades com sigui al input.\n    // definim n perque faci la funcio factorial de n pero en teoria no ens cal definirla\n    // Pq ja la hem definit en la funciÃ³ del subprograma.\n}",
  "int factorial(int n){\n    for(int c = n; c > 0; --c)\n        n = n * c;\n    return n;\n}",
  "int factorial(int n){\n    if (n == 0) return 1;\n    else{\n        for(int c = n - 1; c > 0; --c)\n            n = n * c;\n    return n;\n}",
  "int factorial(int n){\n    if (n == 0) return 1;\n    else{\n        for(int c = n - 1; c > 0; --c)\n            n = n * c;\n    }\n    return n;\n}",
  "int factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n<=1)return 1;\r\n    if (n>1)return n*factorial(n-1);\r\n\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int t;\r\n    if (n<=1) t=1;\r\n    if (n>1)return n*factorial(n-1);\r\n    return t;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n<=1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial (n - 1);\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial (n) << endl;\n\t}\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() \n{\n    int x;\n    while (cin >> x) \n    {\n        cout << factorial(x) << endl;\n    }   \n}\n\nint factorial(int n)\n{\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "int factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n-1);\n}\n\t\nint main () {\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1); \r\n}\r\nint main () {\r\n\tint x;\r\n\twhile (cin >> x) {\r\n\t\tcout << factorial(x) << endl; \r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    \n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n    \n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n\n}\n\nint main(){\n\tint n;\n\twhile(cin>>n){\n\t\tcout<<factorial(n)<<endl;\n\t}\n}\n",
  "#include <iostream>\r\n#include <cfloat>\r\nusing namespace std;\r\n\r\nint factorial(int n) { \r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) { // recursive solution\r\nif (n == 0) return 1;\r\nelse return n*factorial(n - 1);\r\n}\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial (n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1) \n        return 1;\n    else\n        return (n * factorial(n - 1));\n}\n\n\nint main(){\n    int n;\n    \n    while(cin >> n)\n        cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return n * factorial(n + 1); }\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return n * factorial(n - 1); }\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n\n",
  "ï»¿int factorial(int n){\n  if(n==0) return 1;\n  else return n*factorial(n-1);\n}",
  "#include <iostream>\n\nusing namespace std;\n\nbool is_leap_year(int year){\n    bool result;\n    if(year%4 == 0){\n        result = true;\n        if(year%100 == 0){\n            result = false;\n            if((year/100)%4 == 0) result = true;\n        }\n    }\n    else result = false;\n    return result;\n}\n\nbool is_valid_date(int day,int month,int year){\n    bool isValid = false;\n    if(!(day <= 31 and day >=1)) isValid = false;\n    if(!(month <= 12 and month >=1)) isValid = false;\n    if(!(year <= 9999 and year >=1800)) isValid = false;\n    return isValid;\n}\nint factorial(int n){\n    int res;\n    if(n != 0){\n        res = n * factorial(n-1);\n    }\n    else res = 1;\n    \n    return res;\n    \n}\nvoid numberFunction(int i) {\n  cout << \"The number is: \" << i << endl;\n  i++;\n  if(i<10) {\n    numberFunction(i);\n  }\n}\nint main(){\n    int num1;\n    cin >> num1;\n    \n//     numberFunction(num1);\n    cout << factorial(num1) << endl;\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif(n==0) return 1;\r\n\t\r\n\telse return 1*factorial(n-1);\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif(n==0) return 1;\r\n\t\r\n\telse return n*factorial(n-1);\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n>1) return factorial(n-1)*n;\n    else return 1;\n}\n\nint main() {\n    int n;\n    \n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#inlude <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n if (n == 0) return 1;\n else return factorial(n-1);\n }",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n \tif (n == 0) return 1;\n \telse return factorial(n-1);\n }",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n \tif (n == 0) return 1;\n \telse return n*factorial(n-1);\n }",
  "ï»¿#include <iostream>\nusing namespace std;\nint factorial(int n);\nint main() {\n  int x;\n  while(cin>>x){\n    cout<<factorial(x)<<endl;\n  }\n\n  return 0;\n}\nint factorial(int n){\n  if (n==0){return 1;}\n  else {\n    return n*factorial(n-1);\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  return (n * factorial(n - 1));\n}\n",
  "ï»¿#include <iostream>\nusing namespace std;\nint factorial(int n);\nint main() {\n  int x;\n  while(cin>>x){\n    cout<<factorial(x)<<endl;\n  }\n\n  return 0;\n}\nint factorial(int n){\n  if (n==0){return 1;}\n  else {\n    return n*factorial(n-1);\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n==0) return 1;\n\tint aux = factorial(n-1);\n\treturn n*aux;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   \n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n - 1);\n}\n\nint main() {\n    cout << factorial (4) << endl;\n}\n    ",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\nint f = 1;\n\n\nfor (int i = 1; i <= n; i++) {\n    \n    f = f * i; \n \n\n}\n\nreturn f;\n\n}\n\n\nint main() {\n\nint n;\n\nwhile (cin >> n) {\n\ncout << factorial(n) << endl;\n\n}\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n\n  /*int fac=1;\n  while(n>0){\n  fac*=n;\n  --n\n  }\n  cout<<fac<<endl;*/\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n\n  /*int fac=1;\n  while(n>0){\n  fac*=n;\n  --n\n  }\n  cout<<fac<<endl;*/\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n, int fact)\r\n{\r\n    if (n==1)return fact;\r\n    return factorial (n-1, fact*(n-1));\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    while (cin >> n)\r\n    {\r\n        cout << factorial (n, n);\r\n\r\n    }\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n -1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    while (cin>>x) cout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main(){\n    int n;\n    while(cin >> n){\n    cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse {\n\t\tint aux = factorial (n-1);\n\t\treturn n * aux;\n\t}\n}\n\t\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n > 1) {\n\t\treturn n*factorial(n - 1);\n\t}\n\telse {\n\t\treturn 1;\n\t}\n}\n\nint main(){\n\tint n;\n\t\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: Una serie de numeros n\n//Post: El factorial de cada numero (recursivo)\n\n\nint factorial(int n){\n    //Si el n = 1, devuelve el 1, para empezar a calcular\n    if (n == 1) return 1;\n    //Si n = 0, devuelve 1\n    if (n == 0) return 1;\n    //Si es mayor que 1, calcula n * !(n-1)\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) {\n\t\treturn 1;\n\t}\n\t\n\treturn\tn * factorial(n - 1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tif (x > 12) {\n\t\tcout << 0 << endl;\n\t}\n\telse {\n\t\tcout << factorial(x) << endl;\n\t}\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif ( n == 0) return 1;\n\tif (n == 1) return n;\n\telse {\n\t\tint mult = factorial(n-1);\n\t\treturn mult*n;\n\t}\n}\n\n\n\nint main () {\n\tint n;\n\twhile (cin >> n) \n\t\tcout << factorial(n) << endl;\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n <= 1) return 1;\n\telse {\n\t\tint mult = factorial(n-1);\n\t\treturn mult*n;\n\t}\n}\n\n\n\nint main () {\n\tint n;\n\twhile (cin >> n) \n\t\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0 or n == 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}   \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (x == 1)\n    {\n        return 1;\n    }else\n    {\n        return x*factorial(x-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1)\n    {\n        return 1;\n    }else\n    {\n        return n*factorial(x-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1)\n    {\n        return 1;\n    }else\n    {\n        return n*factorial(n-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1 or n == 0)\n    {\n        return 1;\n    }else\n    {\n        return n*factorial(n-1);\n    }\n}\n",
  "int factorial(int a){\n    int b = 1;\n    if(a > 1){ b = b*factorial(a);\n    else return b;\n    \n    \n}\n",
  "int factorial(int a){\n    int b = 1;\n    if(a > 1){\n        b = b*factorial(a);\n    }    \n    else return b;\n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    //cas base\n    if (n == 0) return 1;\n    else {\n        int aux = factorial(n-1);\n        return aux*n;\n    }\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n    int f = 1;\n\n    int i = 0;\n\n    while (i < n) {\n    ++i;\n\n    f = f * i;\n\n    }\n\n    return f;\n\n}\n\n\nint main() {\n\n    int x;\n    \n    while (cin >> x) {\n    \n    cout << factorial(x) << endl;\n    \n    }   \n\n}\n\n",
  "int factorial(int a){\n    if ( a == 1){\n        return 1;\n    }\n    else return factorial(a);\n    \n    \n}\n",
  "int factorial(int a){\n    if ( a == 1){\n        return 1;\n    }\n    else return a *factorial(a-1);\n    \n    \n}\n",
  "int factorial(int a){\n    if ( a == 1){\n        return 1;\n    }\n    else return a *factorial(a-1);\n    \n    \n}\n",
  "int factorial(int a){\n    if ( a > 1){\n        return a *factorial(a-1);\n        \n    }\n    else return 1;\n    \n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n int factorial(int n) {\n     if (n == 0) return 1;\n     else return n*factorial(n-1);\n }\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial (a) << endl;\n}\n    \n",
  "#include <iostream> \nusing namespace std; \n\nint factorial (int n) {\n\tif (n > 1) {\n\t\treturn n * factorial(n - 1);\n\t}\n\telse {\n\t\treturn 1;\n\t}\n\n}\n\nint main() {\n\tint n;\n\twhile( cin >> n) {\n\t\tcout << factorial (n) << endl;\n\t}\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n    cout<<factorial(5)<<endl;\n}\n\nint factorial(int n){\n    \n    int r=1;\n    if (n==0){\n        \n        \n    }\n    \n    else{\n        r=r*factorial(n);\n        --n;\n    }\n    return r;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n<=1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   \n    \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int a);\n\nint main(){\n    int c;\n    while (cin>>c) cout<<factorial(c);\n}\n\nint factorial(int a){\n    if (a>1){\n        return a*factorial(a-1);\n    \n    }\n    else return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n int f = 1;\n        for (int i = 1; i <= n; ++i) {\n                f = f*i;\n        }\n        return f;\n        }\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n    int f=1;\n    for (int c=1; n>= c; ++c){\n        f=f*c;\n        \n    }\n    return f;\n    \n}\n        \n\n\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n== 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    \n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int result;\n    if (n>1) {\n        result=factorial (n-1)*n;\n        return result;\n    }else return 1;\n}\n\nint main (){\n    int num;\n    while (cin >>num) cout <<factorial (num) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if ( n == 0 ) return 1;\n    return n*factorial(n-1);\n}\n    \n\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}  \n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n        \nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) {\n        return 1;\n    }\n    else { \n        return n * factorial(n - 1);\n    }\n}\nint main () {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    else { \n        return n * factorial(n - 1);\n    }\n}\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return factorial(n)\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return factorial(n);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n);\n\nint factorial (int n) {\n\t\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n\t\n}\nint main () {\n\t\n\tint n;\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n\t\n}\n\n\t\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return (n*factorial(n-1));\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) \n{\n\t//Posem les condicions inicials del problema, comencem amb el cas especific del factorial;\n\tif (n < 1 and n <= 12) \n\t{\n\t\t//Posarem el resultat de com fer el factorial recursiu sense necesitat de fer bucles unicament ficant la funciÃ³ general del factorial;\n\t\t//Que volem expressar.\n\t\tint ResultatFactorial = n * factorial(n-1);\n\t\t//Sabem que el factorial es ell mateix per el seus nombres anteriors fins arribar a 1 i aixo es el que farÃ  el resultat;\n\t\t//Anar-se multiplicant per ell mateix menys 1 en la funcio factorial fins arribar a un moment on surt de la recursio;\n\t\treturn ResultatFactorial;\n\t}\n\telse \n\t{\n\t\treturn 1;\n\t}\n\t//En aquest else retornem el valor del cas basic per poder treure la soluciÃ³ de casos especifics com;\n\t// 1 * 0 i 0 * 0 que els dos donen 0 pero en factorial es 1;\n}\n\nint main () \n{\n\tint n;\n\t\n\twhile (cin >> n) \n\t{\n\t\tcout << factorial(n) << endl;\n\t}\n}\n\n\n\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) \n{\n\t//Posem les condicions inicials del problema, comencem amb el cas especific del factorial;\n\tif (n < 1) \n\t{\n\t\t//Posarem el resultat de com fer el factorial recursiu sense necesitat de fer bucles unicament ficant la funciÃ³ general del factorial;\n\t\t//Que volem expressar.\n\t\tint ResultatFactorial = n * factorial(n-1);\n\t\t//Sabem que el factorial es ell mateix per el seus nombres anteriors fins arribar a 1 i aixo es el que farÃ  el resultat;\n\t\t//Anar-se multiplicant per ell mateix menys 1 en la funcio factorial fins arribar a un moment on surt de la recursio;\n\t\treturn ResultatFactorial;\n\t}\n\telse \n\t{\n\t\treturn 1;\n\t}\n\t//En aquest else retornem el valor del cas basic per poder treure la soluciÃ³ de casos especifics com;\n\t// 1 * 0 i 0 * 0 que els dos donen 0 pero en factorial es 1;\n}\n\nint main () \n{\n\tint n;\n\t\n\twhile (cin >> n) \n\t{\n\t\tcout << factorial(n) << endl;\n\t}\n}\n\n\n\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) \n{\n\t//Posem les condicions inicials del problema, comencem amb el cas especific del factorial;\n\tif (1 < n and n <=12) \n\t{\n\t\t//Posarem el resultat de com fer el factorial recursiu sense necesitat de fer bucles unicament ficant la funciÃ³ general del factorial;\n\t\t//Que volem expressar.\n\t\tint ResultatFactorial = n * factorial(n-1);\n\t\t//Sabem que el factorial es ell mateix per el seus nombres anteriors fins arribar a 1 i aixo es el que farÃ  el resultat;\n\t\t//Anar-se multiplicant per ell mateix menys 1 en la funcio factorial fins arribar a un moment on surt de la recursio;\n\t\treturn ResultatFactorial;\n\t}\n\telse \n\t{\n\t\treturn 1;\n\t}\n\t//En aquest else retornem el valor del cas basic per poder treure la soluciÃ³ de casos especifics com;\n\t// 1 * 0 i 0 * 0 que els dos donen 0 pero en factorial es 1;\n}\n\nint main () \n{\n\tint n;\n\t\n\twhile (cin >> n) \n\t{\n\t\tcout << factorial(n) << endl;\n\t}\n}\n\n\n\n\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return(n*factorial(n-1));\n}\nint main()  {\n\tint N;\n\tcin >> N;\n\tcout << factorial(N) << endl;\n}\n",
  "int factorial(int n){\n\tif(n<2) return 1;\n\telse return n*facorial(n-1);\n};\n",
  "int factorial(int n){\n\tif(n<2) return 1;\n\telse return n*factorial(n-1);\n};\n",
  "#include <iostream>\n\nusing namespace std;\n\n int factorial(int n) {\n\t if (n == 1) return 1;\n\t else return factorial (n-1) * n;\n }\n \n int main() {\n\t int n;\n\t while (cin >> n) {\n\t\t cout << factorial(n) << endl;\n\t }\n }\n",
  "#include <iostream>\n\nusing namespace std;\n\n int factorial(int n) {\n\t if ((n == 1) or (n == 0)) return 1;\n\t else return factorial (n-1) * n;\n }\n \n int main() {\n\t int n;\n\t while (cin >> n) {\n\t\t cout << factorial(n) << endl;\n\t }\n }\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\t\n\tif ( n <= 1 ) return 1;\n\telse return factorial ( n - 1 ) * n;\n}\n\nint main () {\n\t\n\tint x;\n\twhile (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\nif (n == 0) return 1;\nelse return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n) {\n\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n}\n\n\nint main () {\n    int x;\n    cin >> x;\n    x = factorial(x);\n    cout << x << endl;\n}\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n){\n    if(n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "/* ===================================================================\nFile Name: 01_recursive_factorial.c\nAuthor: Anqiao\nMail: ay1114it01@gmail.com\nCreated Time: Wed 25 Oct 2017 04:57:56 PM CEST\n===================================================================\nFunction:\nWrite a function that returns n!.\n\nSolve this problem recursively.\nC++ int factorial(int n);\n Precondition\n\n Assume 0â¤ n â¤ 12.\n\n Observation You only need to submit the required procedure; your main program will be ignored. \n*/\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n\tint nums;\n\twhile(cin >> nums){\n\t\tcout << factorial(nums) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int i = 0;\n    int f = 1;\n    while (i<n) {\n        i = i + 1;\n        f = f*i;\n    }\n    return f;\n} \nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else{\n        if (n == 2) return 2;\n        return n * factorial(n-1);\n    }\n}\n\nint main() {\n    int x;\n    while (cin >> x){\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include<iostream>\nusing namespace std;\n\n\n\nint factorial(int n){\n    int i=1;\n    int j=1;\n    while(i<=n){\n        j=j*i;\n        ++i;\n    }\n    return j;\n    \n}\n\nint main(){\nint n;\n    while( cin>>n){\n     cout<< factorial(n)<<endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n==0) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n  int a;\r\n  while(cin >> a) cout << factorial(a) << endl;\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\n\nint main () {\n\tint a;\n\twhile (cin >> a) {\n\t\tcout << factorial(a) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n//     Cas base.\n    if (n == 0) {\n        return 1;\n    }\n\n    else {\n        return n*factorial(n-1);\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return (n * factorial(n - 1));\n}\nint main() {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\t//Basic step: for n = 0.\n\tif ( n == 0 ) {\n\t\treturn 1;\n\t}\n\t// Other cases, n != 0.\n\telse return n*factorial(n-1);\n\t\n}\nint main () {\n\tint x;\n\tcin >> x;\n\t\n\tcout << factorial ( x ) << endl;\n}\n",
  "//Programa que calcula el factorial de un nÃºmero recursivamente\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n-1);\n    }\nint main () {\n    int n;\n    while (cin>>n){\n      cout<< factorial (n) << endl;  \n    }\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: x\n//Post: 0*1*2*...*x\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n - 1); // n! = n*(n-1)\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n ){\n\tif ( n == 0 or n == 1 ) return 1;\n\telse return n * factorial ( n - 1 );\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tint result = factorial ( n );\n\tcout << result;\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n){\n    if (n==0 or n==1) return 1;\n    else return n * factorial( n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout <<  factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0)\n        return 1;\n    else\n        return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\t\n\tif (n <= 1) return 1;\n\t\n\telse return n * factorial(n-1);\n}\n\nint main () {\n\t\n\tint n;\n\t\n\twhile (cin >> n) {\n\t\t\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (x == 0) return 1;\n    return n * factorial(n-1);\n}\nint main (){\n    int n;\n    while (cin >> n)  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\nint main (){\n    int n;\n    while (cin >> n)  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n//assumir que â¤ n â¤ 12\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial( n - 1 );\n}\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0 or n == 1) return 1;\n\t\treturn n * (factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0 or n == 1) return 1;\n\t\treturn n * (factorial(n-1));\n}\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main(){\n    int n;\n    while(cin>>n)\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==1) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial (n-1);\n}\n\nint main() {\n    int n;\n    while ( cin >> n ) {\n    cout << factorial(n) << endl; \n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return 0;\n    else if (n==1) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return ;\n    else if (n==1) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else if (n==1) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==1) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 0;\n    if (n==1) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 1;\n    if (n==1) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) ;\n\nint main () {\n    int n;\n    cin >> n;\n    cout<< factorial(n) <<endl;\n}\n\nint factorial(int n) {\n    if (n <= 1 ) return 1;\n    else return (n * factorial(n-1)) ;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fac=1;\n    for (int i=1; i<= n; i++) fac = fac*i;\n    return fac;\n}\n\nint main (){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fac=1;\n    if (n>=1){\n        fac=n*factorial(n-1);\n    }\n    else fac=1;\n    return fac;\n}\n\nint main (){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n < 2) return 1;\n    return factorial(n-1)*n;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==1) return n;\n  return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0) return n;\n  return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0) return 1;\n  return n*factorial(n-1);\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n    //int r=1;\n    if (n==0 or n== 1) return 1;\n    //else {\n    //factorial(n-1);\n    //for(int c=1; c<= n; ++c) r= r*c;\n    return n*factorial(n-1);\n    //}\n//return r;\n}\n\nint main() {\nint n;\nwhile (cin >> n) { \ncout << factorial(n) << endl;\n}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tint f = 1;\r\n\tif (n == 0) return 1;\r\n\telse for (int i = n; i >= 1; i--) f *= i;\r\n\treturn f;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tint f = 1;\r\n\tif (n == 0) return 1;\r\n\telse for (int i = n; i >= 1; i--) f *= i;\r\n\treturn f;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\n\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "int factorial(int n){\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n <= 1) return 1;\n\telse return (n * factorial(n-1));\n}\n\nint main (){\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}",
  "ï»¿#include <iostream>\n\nint factorial(int n) {\n\n  factorial(0)=1;\n  factorial(1)=1;\n  factorial(n)=n*factorial(n-1);\n  return factorial;\n  \n    \n  }\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n*factorial(n - 1);\n    else return 1;\n}\nint main () {\n    int n;\n    while(cin >> n){\n    cout << factorial(n) << endl;\n    }\n}\n",
  "ï»¿#include <iostream>\n\nint factorial(int n) {\nif(n==0) {\n  factorial(0)=1;\n}\n  if(n==1) {\n  factorial(1)=1;\n  }\n  factorial(n)=n*factorial(n-1);\n  return factorial;\n  \n    \n  \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int fac;\n    \n    if (n==0 or n==1) fac=1;\n        else fac = n * factorial (n-1);\n        \n    return fac;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "ï»¿#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if(n<2) {\n    return 1;\n}\nelse return n*fact(n-1);\n}\n",
  "ï»¿#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if(n<2) {\n    return 1;\n}\nelse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n* factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }  \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    if (n == 1) return n;\n    else return n*factorial(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint avaluar(){\n    char c;\n    //cin >> c;\n    if (c >= '0' and c <= '9') return c - '0';\n    else {\n        int e1 = avaluar();\n        int e2 = avaluar();\n        if (c == '+') return e1 + e2;\n        else if (c == '*') return e1 * e2;\n        else return e1 - e2;\n    }\n}\n\nint main() {\n    char c;\n    cin >> c;\n    cout << avaluar() << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint avaluar(){\n    char c;\n    cin >> c;\n    if (c >= '0' and c <= '9') return c - '0';\n    else {\n        int e1 = avaluar();\n        int e2 = avaluar();\n        if (c == '+') return e1 + e2;\n        else if (c == '*') return e1 * e2;\n        else return e1 - e2;\n    }\n}\n\nint main() {\n    char c;\n    cin >> c;\n    cout << avaluar() << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n * factorial (n - 1);\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if(n < 1) return 1;\n    else return n * factorial (n-1);\n}\n\nint main() {}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n    \n}\n\n\n\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   if(n<=1) return 1;\n   else return n*factorial(n-1);\n   \n}\n\nint main(){\n   int x;\n   cin >> x;\n   cout << factorial(x) << endl;\n   \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int x){\n    if (x==0) return 1;\n    else return x*factorial(x-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f = 1;\n    for(int i=1; i<=n; ++i) f=f*i;\n    return f;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n>1){\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\telse{\r\n\t\treturn 1;\r\n\t}\r\n}\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\n\n int factorial(int n) {\n    int f;\n    if(n>1)f= n * factorial(n-1);\n    if(n==1) f=1;\n    return f;\n }\n\n int main() {\n    int n;\n    while(cin>>n){\n    cout<<factorial(n)<<endl;\n    }\n }\n",
  "#include<iostream>\nusing namespace std;\n\n\n int factorial(int n) {\n    int f;\n    if(n>1)f= n * factorial(n-1);\n    if(n==1||n==0) f=1;\n    return f;\n }\n\n int main() {\n    int n;\n    while(cin>>n){\n    cout<<factorial(n)<<endl;\n    }\n }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\n//int main () {\n//    int n;\n//    cin >> n;\n//    int a=factorial(n);\n//    cout << a << endl;\n//}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint number_of_digits(int n){\r\n\tif(n>=10){\r\n\t\treturn 1+ number_of_digits(n/10);\r\n\t}\r\n\telse return 1;\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << number_of_digits(n) << endl;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint number_of_digits(int n){\r\n\tif(n>=10){\r\n\t\treturn 1+ number_of_digits(n/10);\r\n\t}\r\n\telse return 1;\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << number_of_digits(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n        if (n==0){return 1;\n        }else return n*factorial(n-1);\n        \n    }\n\nint main(){\nint n ;\n    while(cin>>n){\n    cout<<factorial(n)<<endl;;\n    }\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) {\n    return 1;\n        \n    }\n    else return n * factorial(n-1);\n}\n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) {\n\t\treturn 1;\n\t}\n\telse return n * factorial(n - 1);\n}\n\nint main() {\n\tint a;\n\twhile (cin >> a) {\n\t\tcout << factorial(a) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\t\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n > 1){\n        return n*factorial(n-1);\n    }else {\n        return 1;\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "int factorial(int n) {\n    if (n == 0) {\n        return 1;\n    } else {\n        return factorial(n-1) * n;\n    }\n}\n",
  "#include <iostrem>\nusing namespace std;\nint factorial(int n){\n    while(n>0){\n        n=n*factorial(n-1);\n        \n    }\nreturn n;\n\n}\nvoid main(){\nint n;\ncin>>n;\nn=factorial(n);\ncout<<n;\n\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    while(n>0){\n        n=n*factorial(n-1);\n        \n    }\nreturn n;\n\n}\nint main(){\nint n;\ncin>>n;\nn=factorial(n);\ncout<<n;\n\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==0) return 1;\n    \n        n=n*factorial(n-1);\n        \n    \nreturn n;\n\n}\nint main(){\nint n;\ncin>>n;\nn=factorial(n);\ncout<<n;\n\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n == 1) return 1;\n    else {\n        return n * factorial(n - 1);\n    }\n}\nint main() {\n    int number;\n    cin >> number;\n    cout << factorial(number) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    int num = 1;\n    for (int i = 2; i <= n; ++i) {\n        num *= i;\n    }\n    return num;\n}\nint main() {\n    int number;\n    cin >> number;\n    cout << factorial(number) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n  if(n==0){\r\n    return (1);\r\n    }\r\n  if (n!=1){\r\n    n=factorial(n-1)*n;\r\n    }\r\n  return(n);\r\n  }\r\nint main(){\r\n  int c;\r\n  while(cin>>c){\r\n    cout<<factorial(c)<<endl;\r\n    }\r\n  }\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main () {\n    int n;\n    while (cin >> n){\n        cout<< factorial(n) << endl;\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if(n<=1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  while (cin >> n){\r\n  \tcout << factorial(n) << endl;\r\n  }\r\n  \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    while (cin >> x) cout << factorial (x) << endl;;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) { \r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);}\r\n    \r\nint main (){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n <= 1) return 1;\n    return n * (n - 1);\n    \n\n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n <= 1) return 1;\n    return n * factorial(n - 1);\n    \n\n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n    \n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n){\n    int f=1; \n    for(int i= 1; i<=n; ++i){\n        f=f*i;\n        }\n        return f;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 1) return 1;\r\n    else{\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n   if(n < 0) return 0;\r\n   else if(n > 1) return n*factorial(n-1);\r\n   return 1;\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tint m = 1 ;\n\tif ( n == 0 ) return 1 ;\n\tfor ( int i = 1 ; i <= n ; ++i ) {\n\t\tm = m * i ;\n\t} return m ;\n\t\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "\n// P12509\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n<2) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  while (cin >> n) cout << factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res = 1;\n    while (n>0) {\n        res = res*n;\n        --n;\n    }\n    return res;\n    \n}\n\n\n\n\n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    while (cin >> x) cout << factorial (x) << endl;;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==1) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint z = 1;\nwhile( n>0){\n    z = z*n;\n    --n;\n}\nreturn z;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tint f=1;\n\tint i=0;\n\twhile (i<n) {\n\t\ti=i+1;\n\t\tf=f*i;\t\t\n\t}\n\treturn f;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\nif (n==0) {\n    return 1;}\nelse{\n    return factorial(n-1)*n;\n}\n    \n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   \n    \n}\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 1 || n == 0) return 1;\n\telse return n *= factorial(n-1);\n}\n\nint main(){\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int res = 1;\n    if (n == 0) return 1;\n    \n    for (int i = 1; i <= n; ++i){\n        res = res * i;\n    }\n    return res;\n}\n\nint main(){\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n\n    int x;\n    while(cin >> x){\n\n        cout << factorial(x) << endl;\n\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n\nint factorial(int n)\n{\n//    cout << \"llamamos a factorial con n=\"<< n <<endl;\n    \n    if (n<=1)\n        return 1;\n    \n    return (n * factorial (n-1));\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 1) return 1;\r\n\treturn n * factorial(n-1);\r\n\t\r\n}\r\nint main(){\r\n\t\r\n\tint n = 0;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl; \r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 1 or n == 0) return 1;\r\n\treturn n * factorial(n-1);\r\n\t\r\n}\r\nint main(){\r\n\t\r\n\tint n = 0;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl; \r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n)\n{\n        if (n == 0) return 1;\n        else return n * factorial (n - 1);\n}\n\n\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int res = 1;\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint number_of_digits(int n){\n        int i = 1, z = 0;\n        if (n < 10) return 1;\n        else return number_of_digits(n/10)+1;\n}\n\nint main(){\n        int n;\n        while (cin >> n){\n              cout << number_of_digits(n) << endl;\n        }\n}\n",
  "#include <iostream>\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n <=1) return 1;\r\n\telse return n * factorial(n-1);\r\n\t\r\n\r\n\r\n\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n\r\nsystem(\"pause\");\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n>1){\n\t\treturn n*factorial(n-1);\n\t}\n\telse {\n\t\treturn 1;\t\n\t}\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tfactorial(n);\n\tcout<< factorial (n)<< endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int r=1;\n    if(n>0){\n        while(n>0){\n        r=r*n;\n        n=n-1;\n        }\n        return r;\n    }\n    else {\n        return 1;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\n\tif ( n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\nint main ( ) {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n}\r\n\r\n",
  "\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n*factorial(n - 1);\n}\n\n\nint main() {\n\tint x;\n\twhile (cin >> x) {\n\t\tcout << factorial(x) << endl;\n\t}\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\nif (n == 0) return 1;\r\nelse return n*factorial(n - 1);\r\n}\r\nint main() {}\r\n\r\n",
  "\r\n//#include \"stdafx.h\" \r\n#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint fact(int n){\r\n\tif (n == 0 || n == 1) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\treturn n*fact(n - 1);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\r\n\t\tcout << fact(n) << endl;\r\n\t}\r\n}",
  "\r\n//#include \"stdafx.h\" \r\n#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0 || n == 1) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\treturn n*fact(n - 1);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\r\n\t\tcout << fact(n) << endl;\r\n\t}\r\n}",
  "\r\n//#include \"stdafx.h\" \r\n#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0 || n == 1) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\treturn n*factorial(n - 1);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n    \n}\n\nint main () {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main () {\n    int n,f;\n    while (cin >> n) {\n        f = factorial(n);\n        cout << f << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n-1);\n}\nint main() {\n    int n;\n    while (cin >> n) {\n        int r = factorial(n);\n        cout << r << endl;\n    }\n\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n==0) return 1;\n\telse if (n>0) return n*factorial(n-1);\n}\n\n\n\nint main(){\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n\t}   \n}\n\n",
  "#include <iostream>\nusing namespace std ;\n\nint factorial(int n) {\n   if (n==0) return 1;\n   return n*factorial(n-1);\n}\n\nint main () {\n\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n < 2) return (1);\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=0) return 1;\n    return n*factorial(n-1);\n}\n\n\n\n\nint main(){\n    int x;\n    while(cin>>x){\n        cout<<factorial(x)<<endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n     return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n\n    }\n",
  "#include <iostream>\nusing namespace std;\n\n/* FunciÃ³n recursiva para cÃ¡lculo de factoriales */\nint factorial(int n) {\n   if(n < 0) return 0;\n   else if(n > 1) return n*factorial(n-1); /* Recursividad */\n   return 1; /* CondiciÃ³n de terminaciÃ³n, n == 1 */\n}\n\nint main() {\nint n;\ncin >> n;\ncout<< factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "ï»¿#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint recursiveFact(int n) {\n    return n ? n * recursiveFact(n - 1) : 1;\n}\n \nint iterFact(int n) {\n    int res = 1;\n    while (n) {\n        res *= n;\n        n--;\n    }\n    return res;\n}\n \nint main() {\n    int n;\n    cin >> n;\n \n    cout << \"Recursive Factorial: \" << recursiveFact(n) << endl;\n    cout << \"Iterative Factorial: \" << iterFact(n) << endl;\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint recursiveFact(int n) {\n    return n ? n * recursiveFact(n - 1) : 1;\n}\n \nint iterFact(int n) {\n    int res = 1;\n    while (n) {\n        res *= n;\n        n--;\n    }\n    return res;\n}\n \nint main() {\n    int n;\n    cin >> n;\n \n    cout << \"Recursive Factorial: \" << recursiveFact(n) << endl;\n    cout << \"Iterative Factorial: \" << iterFact(n) << endl;\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    if(n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint recursiveFact(int n) {\n    return n ? n * recursiveFact(n - 1) : 1;\n}\n \nint iterFact(int n) {\n    int res = 1;\n    while (n) {\n        res *= n;\n        n--;\n    }\n    return res;\n}\n \nint main() {\n    int n;\n    cin >> n;\n \n    cout << \"Recursive Factorial: \" << recursiveFact(n) << endl;\n    cout << \"Iterative Factorial: \" << iterFact(n) << endl;\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (0 <= n and n <= 12) {\n        \n        n = n!;\n        \n    }\n\n}\n\nint main {\n    \n    int n;\n    \n    cin >> n;\n    \n    cout << factorial(n) << endl;\n    \n}\n    \n    \n",
  "/*#include <iostream>\nusing namespace std;\n*/\nint factorial(int n) {\n    if (n>1) return (n*factorial(n-1));\n    return 1;\n}\n/*\nint main () {\n    int prueba;\n    cin >> prueba;\n    cout << factorial(prueba) << endl;\n}\n*/\n",
  "#include <iostream>\nusing namespace std;\n\nint number_of_digits(int n){\n    if (n<9) return 1;\n    else return number_of_digits(n/10)+1;\n}\n\n//int main () {\n//    int n;\n//    cin >> n;\n//    int a=number_of_digits(n);\n//    cout << a << endl;\n    \n//}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n > 1) {\n        \n        return n*factorial(n-1);\n        \n    }\n    \n    else {\n        \n        return 1;\n        \n    }\n\n}\n\nint main() {\n    \n    int n;\n    \n    cin >> n;\n    \n    cout << factorial(n) << endl;\n    \n}\n    \n    \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n    #include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n        \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\nint main() {}\n\nint factorial(int n) {\n     \n    if (n == 0)  return 1;\n    \n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    return n == 0 ? 1 : (n * factorial(n-1));\n}\n\nint main(){\n    int x;\n    while(cin >> x){\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) { \r\nif(n == 0) \r\nreturn 1;\r\nelse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\nint n;\r\nwhile (cin >> n)\r\ncout << factorial (n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return(n*factorial(n-1));\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n if (n==0 or n==1)return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tif(n==0 or n==1) return 1;\r\n\telse {\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\nif (n == 0) return 1;\nelse return n*factorial(n-1);\n\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint factorial(int n){\n     if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }    \n}\nint main(){\n    int x;\n    while(cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n==0) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn n*factorial(n-1);\n\t}\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}   \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n    {\n    if(n<=1) return 1;\n    else return n*factorial(n-1);\n    }\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n < 2) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n>1) {\n        return n*factorial(n-1);\n    }\n    else return 1;\n}\n\nint main() {\n    int n;\n    cin >>n;\n    cout << factorial(n) <<endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif(n == 0){\r\n\t\treturn 1;\r\n\t}\r\n\treturn n * factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n\t}   \r\n}\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    \n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n        \n    }   \n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tint fact;\r\n\tif (n > 1) return n*factorial(n-1);\r\n\telse return 1;\r\n}\r\n\t\t\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int x) {\n    if (x > 1) {\n        return x * factorial(x - 1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int x;\n  cin >> x;\n  cout << factorial(x) << endl;\n}\n",
  "/*Write a function that returns n!.\nSolve this problem recursively.\nint factorial(int n)*/\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){ // recursive solution\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;        \n    }   \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n==0) return 1;\r\n  for(int i=(n-1);i>0;--i){\r\n    n=n*i;\r\n  }\r\n  return n;\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  while(cin>>n){\r\n    cout << factorial(n) << endl;\r\n  }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int prod=1;\n    for (int i=n; i>1; --i){\n        prod=prod*n;\n        --n;\n    }\n    return (prod);\n}\n\nint main (){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n    \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    int i = 0;\n    int fac = 1;\n    \n    while (i != n) {\n        i = i + 1;\n        fac = fac*i;\n    }\n    return fac;\n    \n    \n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\n \r\n//Pre: Llegeix una data\r\n//Post: Sabem el dia de la setmana\r\nint factorial(int n) { \r\n\t\r\n\tif (n <= 0) return 1;\r\n\telse {\r\n\t\tn = n * factorial (n-1);\r\n\t}\r\n\t\r\n\treturn n;\r\n\t\r\n\t\r\n}\r\n \r\nint main() {\r\n        int n;\r\n        cin >> n;\r\n        cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n==0) return 1;\n    else {\n        n = n * factorial(n-1);\n    }\n    return n;\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint main(){\r\n}\r\n\r\nint factorial(int n){\r\n    int resultado = 1;\r\n    int contador = 1;\r\n    \r\n    cin >> n;\r\n\r\n    while(contador < n){\r\n        resultado = resultado * contador;\r\n        ++contador;\r\n    }\r\n    return resultado;\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint main(){\r\n\r\n}\r\n\r\nint factorial(int n){\r\n    int resultado;\r\n    int contador;\r\n    \r\n    while(cin >> n){\r\n    \tresultado = 1;\r\n    \tcontador = 1;\r\n\r\n    \twhile(contador < n){\r\n       \t resultado = resultado * contador;\r\n       \t ++contador;\r\n   \t \t}\r\n   \t \treturn resultado;\r\n   }\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint main(){\r\n\r\n}\r\n\r\nint factorial(int n){\r\n    int resultado;\r\n    int contador;\r\n    \r\n    while(cin >> n){\r\n    \tresultado = 1;\r\n    \tcontador = 1;\r\n\r\n    \twhile(contador < n){\r\n       \t resultado = resultado * contador;\r\n       \t ++contador;\r\n   \t \t}\r\n   \t \treturn resultado;\r\n   }\r\n};\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n    int resultado;\r\n    int contador;\r\n    \r\n    resultado = 1;\r\n    contador = 1;\r\n\r\n    \twhile(contador <= n){\r\n       \t resultado = resultado * contador;\r\n       \t ++contador;\r\n   \t \t}\r\n   \t \t\r\n   return resultado;\r\n};\r\n\r\nint main(){\r\n\tcout << factorial(4)<< endl;\r\n\tcout << factorial(6)<< endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tint c;\r\n\t\r\n\tif (n == 1 or n == 0){\r\n\t\t\r\n\t\treturn 1;\r\n\t\r\n\t}\r\n\telse {\r\n\t\tn--;\r\n\t\tc = factorial(n) * (n+1);\r\n\t\t\r\n\t\t \r\n\t}\r\n\t\t\r\n\t\t\r\n\t\r\n\treturn c;\r\n\t\r\n\t\r\n}\r\n\r\nint main(){\r\n\t\r\n\tint n;\r\n\t\r\n\twhile (cin >> n){\r\n\t\r\n\tcout << factorial(n) << endl;\r\n\t\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n\t\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) \n\t\tcout << factorial(n) << endl;\n\t}\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "int factorial(int n) {\n    if (n == 0 ) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\n\r\n\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n\r\n\tif (n>1) return n*factorial(n-1);\r\n\telse return 1;\r\n}\r\n\r\n\r\nint main (void){\r\n\r\n\tint x;\r\n\tcin>>x;\r\n\tcout<<factorial(x)<<endl;\r\n\r\n\r\n\r\n\r\n}\r\n",
  "#include <iostream>\r\n\r\n\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n\r\n\tif (n>1) return n*factorial(n-1);\r\n\telse return 1;\r\n}\r\n\r\n\r\nint main (){\r\n\r\n\tint x;\r\n\tcin>>x;\r\n\tcout<<factorial(x)<<endl;\r\n\r\n\r\n\r\n\r\n}\r\n",
  "ï»¿#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint factorial(int n)\n{\n\tif (n == 0 || n==1)\n\t\treturn 1;\n\telse if (n > 1) {\n\t\treturn n*factorial(n-1);\n\t}\n}\n\nint main()\n{\n\tint n;\n\twhile (cin >> n)\n\t{\n\t\tcout << factorial(n);\n\t}\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==1)return 1;\r\n    return n*factorial(n-1);\r\n\r\n}\r\n\r\nint main()\r\n{\r\n    cout<<factorial(5);\r\n\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0)return 1;\r\n    return n*factorial(n-1);\r\n\r\n}\r\n\r\nint main()\r\n{\r\n    cout<<factorial(4);\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    return n * factorial(n-1); \n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n\t\n}\n\n\nint main(){\n\tcout << factorial(4) << endl;\n\tcout << factorial(5) << endl;\n\tcout << factorial(6) << endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) <<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\r\n\tcout << factorial(n) <<endl;}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\r\n\tcout << factorial(n) <<endl;}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\tint x;\r\n\twhile (cin >> x){\r\n\t\tcout << factorial(x) <<endl;\r\n\t}\r\n}\r\n",
  "from jutge import read\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)\n",
  "from jutge import read\n\ndef factorial(n):\n    if n is 0: return 1\n    return n * factorial(n - 1)\n",
  "from jutge import read\n\ndef factorial (n):\n    if n is 0:\n        return 1\n    return n * factorial(n - 1)\n",
  "from jutge import read\n\n def factorial(n):\n    if n is 0:\n        return 1\n    return n * factorial(n - 1)\n",
  "from jutge import read\ndef factorial(x):\n   if x==0:\n      return 1\n   else:\n      return x*factorial(x-1)\n\nx=read(int)\nprint(factorial(x))\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n > 1){\n\t\treturn n * factorial(n-1);\n\t\t--n;\n\t}\n\telse {\n\t\treturn 1;\n\t}\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\treturn n * factorial(n-1);\n}\n\nint main(){\n\tcout<<factorial(4);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) n = 1;\n    else n = n * factorial (n - 1);\n    return n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}",
  "from jutge import read\n\n\ndef factorial(n):\n    if n==0 or n==1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\nn = read(int)\nwhile n is not None:\n    print (factorial(n))\n    n = read(int)\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    int f = 1;\n        for (int i = 1; i <= n; ++i) {\n                f = f*i;\n        }\n        return f;\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1)\n    }\n    else return 1\n}\n\nint main() {\n    int n;\n    while(cin>>n)\n        cout << factorial(n) << endl;\n}    \n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else return 1;\n}\n\nint main() {\n    int n;\n    while(cin>>n);\n        cout << factorial(n) << endl;\n}    \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n>1)\n    return n*factorial(n-1);\n        else return 1;  \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main() {\r\n\t\r\n\tint n;\r\n\tcin >> n;\r\ncout << factorial(n);\r\n\t\r\n}\r\n\r\nint factorial(int n){\r\n\tif(n==0){\r\n\t\treturn 1;\r\n\t}else{\r\n\t\tint fact=factorial(n-1);\r\n\t\treturn fact*n;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >>n){\r\n\t\tcout <<factorial(n)<<endl;\r\n\t}\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n<=1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >>n){\r\n\t\tcout <<factorial(n)<<endl;\r\n\t}\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int f = 1;\n    int i = 0;\n    \n    while (i < n) {\n        i = i +1;\n    \n        f = f * i;\n    }\n    \n    return f;\n    \n}\n    \n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if ( n==0) return 1;\n    else return n * factorial(n-1);\n}\n    \n\n    \n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\n\nvoid digit_maxim_i_minim(int n, int& maxim, int& minim);\nint d_maxim(int n);\nint d_minim(int n);\n    \nint d_maxim(int n){\n        if(n<10) return n;\n        else if((n%10)>d_maxim(n/10)) return n%10;\n        else return d_maxim(n/10);\n}\nint d_minim(int n){\n        if(n<10) return n;\n        else if((n%10)<d_minim(n/10)) return n%10;\n        else return d_minim(n/10);\n}\nvoid digit_maxim_i_minim(int n, int& maxim, int& minim){\n    maxim=d_maxim(n);\n    minim=d_minim(n);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n      int a, b;\n      digit_maxim_i_minim(x, a, b);\n      cout << x << ' ' << a << ' ' << b << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1)\n        return 1;\n    else {\n        return factorial(n-1)*n;\n    }\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\n     \n     int factorial(int n){\n         \n         \n         if (n==0) {return 1;}\n         return n*factorial(n-1);\n\n         \n     }\n     \n     int main(){\n       \n         int n;\n         cin>>n;\n         cout<<factorial(n)<<endl;\n         \n     }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) n=1;\n    else n=n * factorial (n-1);\n    return n;\n    \n    \n}\n\nint main () {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int m=1;\n    for (int i=1; i<=n; ++i) {\n        m=m*i;\n    }\n    return m;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n < 10) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\nint main () {\r\n\tint m;\r\n\twhile (cin >> m) {\r\n\t\tcout << factorial(m) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\nint main () {\r\n\tint m;\r\n\twhile (cin >> m) {\r\n\t\tcout << factorial(m) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tint result;\n\tif (n == 1 or n == 0) result = 1;\n\telse {\n\t\tresult = n * factorial(n -1);\n\t}\n\treturn result;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nif (n== 0) return 1;\nelse  return n*factorial(n-1);\n}\nint main() {\nint n;\ncin>> n;\ncout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else return 1;\n}\n\n    int main () {\n        int n;\n        cin >> n;\n        cout << factorial (n) << endl;\n    }",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n>1){\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\treturn 1;\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n){\r\n\tcout << factorial (n) << endl;\r\n\t}\r\n}\t\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int factorial = 1;\n    if (n == 0 or n == 1) return 1;\n    for(int i = 1; i <= n; ++i) {\n        factorial *= i;\n    }\n    return factorial;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint i = 0;\n\tint f = 1;\n\twhile (n>i) {\n\t\ti=i+1;\n\t\tf=f*i;\n\t}\n\tif (n==0) return 1;\n\telse return f;\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "ï»¿#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int fact = 0;\n  while (cin >> n) {\n    for(int i = 0; i <= n; i++){\n      fact *= i;\n    }\n    cout << fact << endl;\n    fact = 0;\n  }\n  \n}\n\nint main() {\n\n}",
  "#include <iostream>\nusing namespace std;\n    \n\n    int factorial(int n) {\n        if (n>1) {\n        return n+factorial(n-1);\n        }\n        else return 1;\n    }\n    \n    int main () {\n        int n;\n        while (cin >> n) {\n            int b;\n            int suma = 0;\n            for (int i = 1; i < n; ++i) {\n                cin >> b;\n                suma = suma + b;\n            }\n          \n            cout << factorial(n) - suma << endl;\n        }\n    }\n                \n                ",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return (n*factorial(n-1));\r\n}\r\n\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif(n<1) return 1;\n\telse return n*factorial(n-1); \t\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "from jutge import read\n\ndef factorial(n):\n    '''\n    n between 1 and 12\n    '''\n    if n <= 1:\n        return 1\n    else:\n        return (n * factorial(n-1))\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 || n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint res;\nif(n==0){\n\tres=1;\n}else{\n\tres = n * factorial(n-1);\n}\nreturn res;\n}\nint main(){\nint n,fun;\ncin>>n;\nfun=factorial(n);\ncout<<fun<<endl;\n}\n",
  "class Solution {\r\n\r\n    public static int factorial(int n) {\r\n        if (n == 0) return 1;\r\n        else return n*factorial(n-1);\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n>1)return n*factorial(n-1);\n\telse return 1;\n}\nint main(){\n\tint n;\n\twhile(cin>>n){\n\t\tint a=factorial(n);\n\t\tcout<<a<<endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0 or n==1) return 1;\n    else return (n*factorial(n-1));\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint main() {\r\nint factorial;\r\ncin>>factorial;\r\nint resultat=factorial;\r\nint actual=resultat;\r\nif(factorial==0 or factorial==1){\r\n    cout<<\"1\";\r\n}\r\nwhile(factorial>1){\r\n    resultat=resultat*(factorial-1);\r\n    factorial=factorial-1;\r\n}\r\nif(actual!=1 and actual!=0){\r\ncout<<resultat;\r\n}\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\n// Pre: 0 <= d <= 9\n// The function returns:\n//   -1 if the number of occurrences of d in x is greater than\n//   the number of occurrences of d in y\n//   1 if the number of occurrences of d in y is greater than\n//   the number of occurrences of d in x\n//   0 otherwise\nint digit_competition(int d, int x, int y) {\n  int countx=0;\n  int county=0;\n  while (y>0 and x>0){\n      if (x%10==d) ++countx;\n      if (y%10==d) ++county;\n      x=x/10;\n      y=y/10;\n  }\n  if (countx>county) return 1;\n  else if (countx<county) return -1;\n  else return 0;\n}\n\nint main() {\n  int d, x, y;\n  while (cin >> d >> x >> y) {\n     cout << digit_competition(d, x, y) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\n// Pre: 0 <= d <= 9\n// The function returns:\n//   -1 if the number of occurrences of d in x is greater than\n//   the number of occurrences of d in y\n//   1 if the number of occurrences of d in y is greater than\n//   the number of occurrences of d in x\n//   0 otherwise\nint digit_competition(int d, int x, int y) {\n  int countx=0;\n  int county=0;\n  while (y>0 and x>0){\n      if (x%10==d) ++countx;\n      if (y%10==d) ++county;\n      x=x/10;\n      y=y/10;\n  }\n  if (countx>county) return 1;\n  else if (countx<county) return -1;\n  else return 0;\n}\n\nint main() {\n  int d, x, y;\n  while (cin >> d >> x >> y) {\n     cout << digit_competition(d, x, y) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\nint factorial(int n)\r\n{\r\n    if(n == 0 || n == 1)\r\n        return 1;\r\n    else\r\n        return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x){\n    if (x==1 or x==0) return 1;\n    else return x*factorial(x-1);\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return factorial(n-1)* n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint main(){\n    int n, now;\n    while(cin>>n){\n        now=n;\n        while(n>1){\n            n--;\n            now=now*n;\n        }\n        cout<< now<<endl;\n    }\n}",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1 or n==0)return 1;\n    else return factorial(n-1)*n;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n\tint x;\r\n\t\r\n\twhile(cin >> x){\r\n\t\tcout << factorial(x) << endl;\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    //PerquÃ¨ sigui recrusiva, la funciÃ³ s'ha de cridar a ella mateixa\r\n    // FACTORIAL =   n*factorial(n-1)! ----------  Quan n = 0 0! = 1\r\n\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n\r\n}\r\n\r\nint main(){\r\n\r\n    int num;\r\n    while (cin >> num){\r\n         cout << factorial(num) << endl;\r\n    }\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    return factorial(n-1)*(n);\n}\n\n\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial (int n) {\n    if (n == 0 or n == 1) return 1;\n    return factorial(x - 1) * x;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\n\r\nint factorial(int n) {\r\n\tif(n==0) return 1;\r\n\treturn(n*factorial(n-1));\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\t\r\n\twhile(cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n)\r\n{\r\n    if (n==0)\r\n    {\r\n            return 1;\r\n    }\r\n    return n*(factorial (n-1));\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin>>n;\r\n    n=factorial (n);\r\n    cout << n << endl;\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n==0)return 1;\r\n    return n*factorial(n-1);\r\n}\r\nint main()\r\n{\r\n    int n;\r\n    while (cin>>n){\r\n    cout <<factorial(n)<<endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\n#include <math.h>\r\n#include <stdio.h>\r\nusing namespace std;\r\n\r\nint main (){\r\n    double pi = acos(-1);\r\n    double a;\r\n    int b=0;\r\n    double sinus;\r\n    double cosinus;\r\n    while (cin >> a) {\r\n        b = a;\r\n        if (a==b){\r\n            if ((b%90) == 0){\r\n                sinus = 1;\r\n                cosinus = 0;\r\n                } else {\r\n                sinus = sin((a*pi)/180);\r\n                cosinus = cos((a*pi)/180);\r\n            }\r\n        } else {\r\n            sinus = sin((a*pi)/180);\r\n            cosinus = cos((a*pi)/180);\r\n        }\r\n        printf(\"%f\", sinus);\r\n        cout << \" \" ;\r\n        printf(\"%f\", cosinus);\r\n        cout << endl;\r\n    }\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint Factorial (int n){\r\n    if (n==0) return 1;\r\n    return n*Factorial (n-1);\r\n\r\n}\r\n\r\nint main (){\r\n    int n;\r\n    cin >> n;\r\n    cout << Factorial(n);\r\n\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint Factorial (int n){\r\n    if (n==0) return 1;\r\n    return n*Factorial (n-1);\r\n\r\n}\r\n\r\nint main (){\r\n    int n;\r\n    cin >> n;\r\n    cout << Factorial(n)<<endl;\r\n\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n==0) return 1;\r\n    return n*factorial(n-1);\r\n\r\n}\r\n\r\nint main (){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\r\n#include <stdio.h>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n > 1) n = n * factorial(n-1);\r\n    return n;\r\n}\r\n\r\nint main(){\r\nint n;\r\ncin >> n;\r\ncout << factorial(n)<< endl;\r\n}\r\n",
  "#include <iostream>\r\n#include <stdio.h>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n > 1) n = n * factorial(n-1);\r\n    if (n == 0) n = 1;\r\n    return n;\r\n}\r\n\r\nint main(){\r\nint n;\r\ncin >> n;\r\ncout << factorial(n)<< endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0)\r\n\treturn 1;\r\n\treturn factorial(n-1)*n;\r\n}\r\nint main() {\r\ncout<<factorial(12)<<endl;\r\n\treturn 0;\r\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n == 0) return 1;\r\n\telse return n*factorial (n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n == 1 or n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if ( n < 2) return 1;\n  else{\n    return n * factorial(n-1);\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n + factorial(n - 1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) <<endl;\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n + factorial(n - 1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n    cout << factorial(n) <<endl;\n    }\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 0;\n    else return n + factorial(n - 1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n    cout << factorial(n) <<endl;\n    }\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n    cout << factorial(n) <<endl;\n    }\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    if (n == 0) return 0;\n    else return n * factorial(n - 1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n    cout << factorial(n) <<endl;\n    }\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n    cout << factorial(n) <<endl;\n    }\n}\n    ",
  "#include<iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n)\n        cout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 1 or n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while ( cin >> n ) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n)<< endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 1 or n == 0) return 1;\n\telse return n * factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif(n == 0){\n\t\treturn 1;\n\t} else {\n\t\treturn n * factorial(n - 1);\n\t}\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n==0 ) return 1;\n    else return n*factorial( n - 1 );\n}\nint main () {\n    int d;\n    cin >> d;\n    cout << factorial (d) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n == 1 or n == 0) return 1;\n\telse {\n\t\treturn n * factorial(n -1);\n\t}\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}\n}   \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n<=1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\twhile (cin >>n){\n\t\tcout <<factorial(n)<<endl;\n\t}\n\t\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 1 or n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n==0) return 1;\n    return n*factorial(n-1);\n    \n}\n\nint main(){\n    int n;\n    cin >> n;\n\n    cout<< factorial(n) << endl;   \n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if (n == 0) {\r\n    return 1;\r\n        \r\n    }\r\n    else return n * factorial(n-1);\r\n}\r\n\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n",
  "using namespace std;\r\n#include <iostream>\r\n\r\n int factorial(int n) {\r\n \tif (n < 1) return 1;\r\n \telse return n * factorial(n-1);\r\n }\r\n \r\n int main () {\r\n \tint n;\r\n \tcin >> n;\r\n \tcout << factorial (n) << endl;\r\n }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n<=1) return 1;\n\telse return factorial(n-1)*n;\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 1){\n        return 1;\n    } else {\n    return n * factorial(n-1);\n    }\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 1){\n      return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1) return 1;\r\n\telse return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1) return 1;\r\n\telse return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 1 or n == 0) return 1;\n    else {\n       int f = factorial(n - 1);\n       return f * n;\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\nif (n<=1) return 1;\r\nelse return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint a=1,r=1;\r\n\twhile (a<=n){\r\n\t\tr=r*a;\r\n\t\t++a;\r\n\t}\r\n\treturn r;\r\n}\r\n\r\nint main() {\r\n    \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\nint main() {\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\n\n\nint factorial ( int n ) {\n    if ( n <= 1 ) return 1;\n    else return n*(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\n\n\nint factorial ( int n ) {\n    if ( n <= 1 ) return 1;\n    else return n * factorial ( n-1);   \n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n    if (x == 0) return 1;\n    else return x * factorial(x - 1);\n}\n\nint main() {\n    int numero;\n    cin >> numero;\n    cout << factorial(numero) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n    if (x == 0) return 1;\n    else return x * factorial(x - 1);\n}\n\nint main() {\n    int numero;\n    cin >> numero;\n    cout << factorial(numero) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) \n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\nint aux=1;\nfor (int i=1;i<=n;++i){\n    aux =i*aux;}\n    return aux;\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else {\n        return n * factorial (n - 1);\n    }\n    \n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial (n) << endl;\n    }\n    \n}\n        \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n != 0) {\n        \n        return n*factorial(n-1);\n        \n    }\n    \n    else return 1;\n    \n}\n\nint main() {\n    \n    int n;\n    \n    cin >> n;\n    \n    cout << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\n//#include <bigbull.h>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial (n-1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n   \n    if ( n > 1 ) {\n        \n        return n * factorial(n-1);\n        \n    }\n    \n    else {\n        \n        return 1;\n        \n    }\n    \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n - 1);\n\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial (n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n)  << endl;\n}\n    \n",
  "#include<iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n    \n    if (n == 0) return 1; // cas base\n    \n    else return n*factorial(n-1);\n    \n    \n}\n\n\nint main() {\n    \n    int merdaseca;\n    \n    while(cin >> merdaseca) {\n        \n        \n        cout << factorial(merdaseca) << endl;\n        \n        \n        \n    }\n    \n    \n    \n    \n    \n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int count = 1;\n    if (n == 0) count = 1;\n    else {\n        for (int i = 1; i <= n; i++){\n        count *= i;\n        }\n    }\n    return count;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    //Cas base\n    if (n< 2)\n        return 1;\n    else\n        return factorial (n-1) * n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   }\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n>1){\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\telse{\r\n\t\treturn 1;\r\n\t}\r\n}\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  //the factorial of 0 is 1;\n  if (n == 0) return 1;\n  //the factorial of N is the factorial of (N-1)* N;\n  return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n==0) return 1;\n\telse if (n>0) return n*factorial(n-1);\n}\n\n\n\nint main(){\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n\t}   \n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else return 1;\n}\n\n    int main () {\n        int n;\n        cin >> n;\n        cout << factorial (n) << endl;\n    }",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n==0) return 1;\n\telse if (n>0) return n*factorial(n-1);\n}\n\n\n\nint main(){\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}   \n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n==0) return 1;\n\telse if(n>0) return n * factorial(n-1);\n}\n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "int factorial(int n){\r\n\r\nif (n==0) return 1;\r\nreturn factorial (n-1) * n;\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int x) {\n    if (x > 1) {\n        return x * factorial(x - 1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int x;\n  cin >> x;\n  cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if(n<=1) return 1;\n    else return n*factorial(n-1);\n}\n \nint main () {\n  int n;\n  while (cin >> n){\n  \tcout << factorial(n) << endl;\n  }\n  \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n>1){\r\n\t\treturn 1;\r\n\t}\r\n\telse{\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n<1){\r\n\t\treturn 1;\r\n\t}\r\n\telse{\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int f=1;\n    \n    for(int i=1;n>=i;++i){\n        f=f*i;\n    }\n    return f;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) <<endl;\n}\n\n\nint factorial(int n){\n    if ( n < 1 ) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int a){\n    if (a==0) return 1;\n    else return a*factorial(a-1); \n}\n\n\nint main(){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n    \n    \n    \n    \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int x){\r\n    if (x==0) return 1;\r\n    else return x*factorial(x-1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n == 0){\r\n    return n + 1;\r\n  }\r\n  else{\r\n    n = n * factorial(n-1);\r\n  }\r\n}\r\n\r\nint main(){\r\n  int x;\r\n  cin >> x;\r\n  cout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n == 0){\r\n    n = 1;\r\n  }\r\n  else{\r\n    n = n * factorial(n-1);\r\n  }\r\n  return n;\r\n}\r\n\r\nint main(){\r\n  int x;\r\n  cin >> x;\r\n  cout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    while (cin >> n) {\r\n    cout << factorial(n) <<endl;\r\n    }\r\n}\r\n    ",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    int f = 1;\n        for (int i = 1; i <= n; ++i) {\n                f = f*i;\n        }\n        return f;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\nif (n == 0) return 1;\r\nelse return n*factorial(n - 1);\r\n}\r\nint main() {}\r\n",
  "#include <stdio.h>\n\nint factorial(int n);\n\nint main() {\n\tint n;\n\twhile (scanf(\"%d\", &n) > 0) {\n    printf(\"%d\\n\", factorial(n));\n\t}\n\treturn 0;\n}\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n int factorial(int n){\r\n    if (n==0) return 1;\r\n    if (n==1) return 1;\r\n    else n=(n*factorial(n-1));\r\n        return n;\r\n\r\n }\r\nint main()\r\n{\r\n    int n;\r\n    cin >>n;\r\n    cout << factorial (n)<< endl;\r\n\r\n\r\n}\r\n",
  "def factorial(n: int) -> int:\r\n    if n == 0 or n == 1:\r\n        return 1\r\n    else:\r\n        return n * factorial(n-1)\r\n",
  "using namespace std;\n\n int factorial(int n){\n    if (n==0) return 1;\n    if (n==1) return 1;\n    else n=(n*factorial(n-1));\n        return n;\n\n }\nint main()\n{\n    int n;\n    cin >>n;\n    cout << factorial (n)<< endl;\n\n\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n int factorial(int n){\n    if (n==0) return 1;\n    if (n==1) return 1;\n    else n=(n*factorial(n-1));\n        return n;\n\n }\nint main()\n{\n    int n;\n    cin >>n;\n    cout << factorial (n)<< endl;\n\n\n}\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n  if (n < 2)\r\n    return 1;\r\n\r\n  return n * factorial(n - 1);\r\n}\r\n",
  "\r\npublic class Program {\r\n\r\n\tpublic static int max2(int a, int b)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tif (a>=b) \r\n\t\t\t{\r\n\t\t\t\treturn a;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\treturn b;\r\n\t\t\t}\r\n\t\t}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n<=1) n=1;\r\n\telse {\r\n\t\treturn n*(factorial(n-1));\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >>n ){\r\n\t\tcout <<factorial(n)<<endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n<=1) return n=1;\r\n\telse {\r\n\t\treturn n*(factorial(n-1));\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >>n ){\r\n\t\tcout <<factorial(n)<<endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nint factorial (int n);\r\nint main (){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout<< factorial(n)<< endl;\r\n}\r\nint factorial(int n){\r\n\tif (n==0) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int x) {\r\n    if (x == 1) return 1;\r\n    else return x * factorial(x - 1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int x) {\r\n    if (x == 0) return 1;\r\n    else return x * factorial(x - 1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    \n    if ( n <= 1 ) return 1;\n    \n    else return (n*factorial(n-1));\n    \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 2) return 1;\n    else return factorial(n - 1)*n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n)<< endl;\n}\n    ",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\nint n_fact=1;\r\nwhile(n>1){\r\n    n_fact=n_fact*n;\r\n    n=n-1;\r\n}\r\nreturn n_fact;\r\n}\r\n\r\nint main(){\r\nint n;\r\ncin >>n;\r\ncout<< factorial(n)<< endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n==0) return 0;\r\n  else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n  int a;\r\n  cin >> a;\r\n  cout>> factorial(a)>> endl;\r\n  }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n==0) return 0;\r\n  else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n  int a;\r\n  cin >> a;\r\n  cout<< factorial(a)<< endl;\r\n  }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n==0) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n  int a;\r\n  cin >> a;\r\n  cout<< factorial(a)<< endl;\r\n  }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nlong long int resultat=1;\r\nint factorial(long long int n){\r\n    if(n>1){\r\n        resultat=resultat*n;\r\n        factorial(n-1);\r\n    }\r\n    return resultat;\r\n}\r\nint main() {\r\n    long long int n;\r\n    while(cin>>n){\r\n        resultat=1;\r\n        cout<<factorial(n)<<endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint resultat=1;\r\nint factorial(int n){\r\n    if(n>1){\r\n        resultat=resultat*n;\r\n        factorial(n-1);\r\n    }\r\n    return resultat;\r\n}\r\nint main() {\r\n    int n;\r\n    while(cin>>n){\r\n        resultat=1;\r\n        cout<<factorial(n)<<endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint resultat=1;\r\nint factorial(int n){\r\n    if(n>1){\r\n        resultat=resultat*n;\r\n        factorial(n-1);\r\n    }\r\n    return resultat;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint actual=1;\r\n\r\nint factorial(int num){\r\n    if(num>1){\r\n        actual=actual*num;\r\n        factorial(num-1);\r\n    }\r\n    return actual;\r\n}\r\n",
  "#include <iostream>\nusing namespace std; \n\n\nint factorial(int n){\n    if (n < 2) return 1;\n    else return factorial(n - 1) * n;\n}\n  \nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n\n    \n\n ",
  "using namespace std;\r\n#include <iostream>\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n* factorial (n-1);\r\n\t\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    \n    else return n*factorial(n-1);\n    \n}\n\nint main() {\n    \n    int n;\n    \n    cin >> n;\n    \n    cout << factorial(n) << endl;\n    \n}",
  "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n==1 or n==0){\n        return 1;\n    }else return n*factorial(n-1);\n}\n",
  "import java.util.Scanner;\r\n\r\npublic class Main {\r\n\r\n    public static int factorial(int n){\r\n        if (n==0) return 1;\r\n        if (n==1) return 1;\r\n        return n*factorial(n-1);\r\n    }\r\n\r\n    public static void main (String args[]){\r\n        Scanner scanner = new Scanner ( System . in ) ;\r\n        int a = scanner.nextInt ( );\r\n        System.out.println(factorial(a) );\r\n    }\r\n\r\n}\r\n",
  "import java.util.Scanner;\r\n\r\npublic class Main {\r\n\r\n    public static int factorial(int n){\r\n        if (n==0) return 1;\r\n        if (n==1) return 1;\r\n        return n*factorial(n-1);\r\n    }\r\n\r\n    public static void main (String args[]){\r\n        Scanner scanner = new Scanner ( System . in ) ;\r\n        int a = scanner.nextInt ( );\r\n        System.out.println(factorial(a) );\r\n    }\r\n\r\n}\r\n",
  "\r\n    public static int factorial(int n){\r\n        if (n==0) return 1;\r\n        if (n==1) return 1;\r\n        return n*factorial(n-1);\r\n    }\r\n\r\n   ",
  "import java.util.Scanner;\r\n\r\npublic class Main {\r\n\r\n    public static int factorial(int n){\r\n        if (n==0) return 1;\r\n        else return n*factorial(n-1);\r\n    }\r\n\r\n    public static void main (String args[]){\r\n        Scanner scanner = new Scanner ( System . in ) ;\r\n        int a = scanner.nextInt ( );\r\n        System.out.println(factorial(a) );\r\n    }\r\n\r\n}\r\n",
  "\r\n    public static int factorial(int n){\r\n        if (n==0) return 1;\r\n        else return n*factorial(n-1);\r\n    }\r\n",
  "public class test {\r\n\r\n    public static int factorial(int n) {\r\n        if (n == 1) return 1;\r\n        return n * factorial(n - 1);\r\n    }\r\n\r\n}\r\n",
  "public class program {\r\n\r\n    public static int factorial(int n) {\r\n        if (n == 1) return 1;\r\n        return n * factorial(n - 1);\r\n    }\r\n\r\n}\r\n",
  "public class Main{\r\n\r\n    public static int factorial(int n) {\r\n        if (n == 1) return 1;\r\n        return n * factorial(n - 1);\r\n    }\r\n\r\n}\r\n",
  "\r\npublic static int factorial(int n) {\r\n    if (n == 1) return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n",
  "class Main{\r\n\r\n    public static int factorial(int n) {\r\n        if (n == 1) return 1;\r\n        return n * factorial(n - 1);\r\n    }\r\n\r\n}\r\n",
  "class Main{\r\n\r\n    public static int factorial(int n) {\r\n        if (n <= 1) return 1;\r\n        return n * factorial(n - 1);\r\n    }\r\n\r\n}\r\n",
  "class Solution {\r\n\r\n    public static int factorial(int n) {\r\n        if (n <= 1) return 1;\r\n        return n * factorial(n - 1);\r\n    }\r\n\r\n}",
  "import java.util.Scanner;\r\n\r\nclass Solution {\r\n\r\n    public static int factorial(int n){\r\n        if (n==0) return 1;\r\n        else return n*factorial(n-1);\r\n    }\r\n\r\n    public static void main (String args[]){\r\n        Scanner scanner = new Scanner ( System . in ) ;\r\n        int a = scanner.nextInt ( );\r\n        System.out.println(factorial(a) );\r\n    }\r\n\r\n}",
  "public static int factorial (int n){\r\n        int solution;\r\n        solution = n * factorial(n-1);\r\n        return solution;\r\n}\r\n\r\n",
  "public class Solution {\r\n\r\n    public static int factorial(int n)\r\n    {\r\n        int x = 1;\r\n        while(n > 0) {\r\n            x *= n;\r\n        }\r\n        return x;\r\n    }\r\n}\r\n",
  "class Solution {\r\n\r\n    public static int factorial(int n)\r\n    {\r\n        int x = 1;\r\n        while(n > 0) {\r\n            x *= n;\r\n        }\r\n        return x;\r\n    }\r\n}\r\n",
  "import java.util.Scanner;\r\n\r\nclass Solution {\r\n\r\n    public static int factorial(int n)\r\n    {\r\n        int x = 1;\r\n        while(n > 0) {\r\n            x *= n;\r\n            n -= 1;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    public static void main(String args[])\r\n    {\r\n        Scanner sc = new Scanner(System.in);\r\n        while(true)\r\n        {\r\n            System.out.println(factorial(sc.nextInt()));\r\n        }\r\n    }\r\n}\r\n",
  "// A function that returns n!.\n\nint factorial(int n){\n    if(n == 0){\n        return 1;\n    }else{\n        return n*factorial(n - 1);\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (x == 0) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn x * factorial(x - 1);\n\t}\n}\n\nint main() {\r\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\n\treturn 0;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n\r\n\treturn 0;\r\n}",
  "\n\nint factorial (int n)\n{\n\tif (n == 0) {return 0;}\t\n\treturn n * factorial(n-1);\t\n\t\n}\n\n",
  "\nusing namespace std;\nint factorial (int n)\n{\n\tif (n == 0) {return 1;}\t\n\treturn n * factorial(n-1);\t\n\t\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0){\n\t\treturn 1;\n\t}else{\n\t\treturn n*factorial(n-1);\n\t}\n}\n\nint main(){\n\tint n;\n\tn = 9;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0){return 1;}else{return n*factorial(n-1);}\n}\n\nint main(){\n\tint n;\n\tn = 9;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\telse return n * (n - 1);\n}\n\nint main (){\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\treturn factorial (n-1)*n;\n}\n\nint main (){\n\tint n;\n\tcin << n; \n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\telse{\n\t\tn = n * (factorial(n-1));\n\t\treturn n;\n\t}\n}\n\nint main (){\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n>1) return n* factorial((n-1));\n\telse return 1;\n}\n\n\nint main() {\n\tint n;\n\tcin>>n;\n\t\n\tint fac = factorial(n);\n\tcout<<fac<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0){\n\t\tn = 1;\n\t}\n\telse {\n\t\tn= n*factorial(n-1);\n\t}\nreturn n;\n}\n\nint main() {\n    int n;\n    while (cin >> n){\n        cout << factorial(n)<< endl;\n\t}  \n\n }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n\nint factorial(int n){\n    if (n > 1)\n    {\n        return n*factorial(n-1);\n    }\n    else\n    {\n        return 1;\n    }\n}\n\n",
  "#include<iostream>\n#include<string>\n#include<cmath>\nusing namespace std;\n\nint factorial(int n){\n\tif (n>0) n*= factorial(n-1);\n\treturn n;\n}\n\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n);\n}\n\n\n/*int main() {\n\tlong long n;\n\tlong long r = 1;;\n\twhile(cin >> n){\n\t   long long x = n;\n\t   while (n>9){\n\t   while(x){\n\t\tr *= x%10;\n\t\tx/=10;\n\t   }\n\t   cout << \"The product of the digits of \" << n << \" is \" << r << \".\" << endl;\n\t   n = r;\n\t   r = 1;\n\t   n = x;\n\t   }\n    }\n}\nbool is_perfect(int n){\n\tint sumDivisors = 0;\n\tfor (int i=1; i<=n/i; ++i){\n\t if (n%i == 0){\n       sumDivisors+=i;\n     }\t \n\t}\n\tif(sumDivisors==n)return true;\n\telse return false;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << is_perfect(n) << endl;\n}\n\n\n\nint main() {\n\tint h, m, timeToWait, bellRings;\n\twhile (cin >> h >> m){\n\t if (h==0)h=12;\n     bellRings = 0;\n     if (h > 12)h-=12;\n\t bellRings += h++;\n\t h--;\n\t if (m <= 15){\n\t   bellRings += 1;\n\t }\n\t if (m <= 30){\n\t   bellRings += 2;\n\t }  \n\t if (m <= 45){\n\t  bellRings += 1;\n\t };\n\t timeToWait = 60-m;\n\t if (timeToWait >= 60)timeToWait-=60;\n\t if (m == 0) bellRings = h;\n\t if ((h == 0) and (m > 0)) =1\n\t if (m == 0) timeToWmait = 0;  \n\t cout << timeToWait << \" \";\n\t cout << bellRings << endl;\n }\n}\n\n\n\n\n\nint main() {\n\t\n\t//setup\n\tint r, c, totalCoins;\n\tchar a;\n\ttotalCoins = 0;\n\tcin >> r >> c;\n\tif (r!=1){\n\tint taulell[r-1][c-1];\n\t\n\t//create chessboard\n\tfor (int i = 0; i < r; ++i){\n\t     for (int j = 0; j < c; ++j){ \n\t\t   cin >> a;\n\t       taulell[i][j] = a - '0';\n\t\t }\n\t }\n\t\n\t\n\t//add white squares in chessboard\n\t  for (int j = 0; j < r; ++j){\n\t     for (int i = 0; i < c; ++i){ \n\t\t\t if (i%2==0){ \n\t\t\t   if (j%2==0){\n\t\t\t\ttotalCoins += taulell[i][j];\n\t\t\t   }\n\t\t\t }\n\t\t\t \n\t\t\t if (i%2==1){ \n\t\t\t   if (j%2==1){\n\t\t\t\ttotalCoins += taulell[i][j];\n\t\t\t   }\n\t\t\t } \n\t\t }\n\t }\n\t} else {\n\t  for (int i = 0; i < c/2; ++i){\n\t  cin >> a;\n\t  totalCoins  = a - '0';\n\t  cin >> a;\n      }  \n\t\n\t}\n\t \n\t //output\n\t cout << totalCoins << endl;\n}\n\n\n\n\n\n\nint main() {\n\tint b, n;\n\tint i = 2;\n\t  while(cin >> b >> n){\n\t\twhile(true){\n\t\t   if ((pow(b,i) <= n) and (n > pow(b,i-1))){\n\t\t     cout << i << endl;\n\t\t     break;\n\t\t   } else {\n\t\t     ++i;\n\t\t   }\n\t\t}\n\t  }\n}*/\n",
  "#include<iostream>\n#include<string>\n#include<cmath>\nusing namespace std;\n\nint factorial(int n){\n\tn*= factorial(n-1);\n\treturn n;\n}\n\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n);\n}\n\n\n/*int main() {\n\tlong long n;\n\tlong long r = 1;;\n\twhile(cin >> n){\n\t   long long x = n;\n\t   while (n>9){\n\t   while(x){\n\t\tr *= x%10;\n\t\tx/=10;\n\t   }\n\t   cout << \"The product of the digits of \" << n << \" is \" << r << \".\" << endl;\n\t   n = r;\n\t   r = 1;\n\t   n = x;\n\t   }\n    }\n}\nbool is_perfect(int n){\n\tint sumDivisors = 0;\n\tfor (int i=1; i<=n/i; ++i){\n\t if (n%i == 0){\n       sumDivisors+=i;\n     }\t \n\t}\n\tif(sumDivisors==n)return true;\n\telse return false;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << is_perfect(n) << endl;\n}\n\n\n\nint main() {\n\tint h, m, timeToWait, bellRings;\n\twhile (cin >> h >> m){\n\t if (h==0)h=12;\n     bellRings = 0;\n     if (h > 12)h-=12;\n\t bellRings += h++;\n\t h--;\n\t if (m <= 15){\n\t   bellRings += 1;\n\t }\n\t if (m <= 30){\n\t   bellRings += 2;\n\t }  \n\t if (m <= 45){\n\t  bellRings += 1;\n\t };\n\t timeToWait = 60-m;\n\t if (timeToWait >= 60)timeToWait-=60;\n\t if (m == 0) bellRings = h;\n\t if ((h == 0) and (m > 0)) =1\n\t if (m == 0) timeToWmait = 0;  \n\t cout << timeToWait << \" \";\n\t cout << bellRings << endl;\n }\n}\n\n\n\n\n\nint main() {\n\t\n\t//setup\n\tint r, c, totalCoins;\n\tchar a;\n\ttotalCoins = 0;\n\tcin >> r >> c;\n\tif (r!=1){\n\tint taulell[r-1][c-1];\n\t\n\t//create chessboard\n\tfor (int i = 0; i < r; ++i){\n\t     for (int j = 0; j < c; ++j){ \n\t\t   cin >> a;\n\t       taulell[i][j] = a - '0';\n\t\t }\n\t }\n\t\n\t\n\t//add white squares in chessboard\n\t  for (int j = 0; j < r; ++j){\n\t     for (int i = 0; i < c; ++i){ \n\t\t\t if (i%2==0){ \n\t\t\t   if (j%2==0){\n\t\t\t\ttotalCoins += taulell[i][j];\n\t\t\t   }\n\t\t\t }\n\t\t\t \n\t\t\t if (i%2==1){ \n\t\t\t   if (j%2==1){\n\t\t\t\ttotalCoins += taulell[i][j];\n\t\t\t   }\n\t\t\t } \n\t\t }\n\t }\n\t} else {\n\t  for (int i = 0; i < c/2; ++i){\n\t  cin >> a;\n\t  totalCoins  = a - '0';\n\t  cin >> a;\n      }  \n\t\n\t}\n\t \n\t //output\n\t cout << totalCoins << endl;\n}\n\n\n\n\n\n\nint main() {\n\tint b, n;\n\tint i = 2;\n\t  while(cin >> b >> n){\n\t\twhile(true){\n\t\t   if ((pow(b,i) <= n) and (n > pow(b,i-1))){\n\t\t     cout << i << endl;\n\t\t     break;\n\t\t   } else {\n\t\t     ++i;\n\t\t   }\n\t\t}\n\t  }\n}*/\n",
  "#include<iostream>\n#include<string>\n#include<cmath>\nusing namespace std;\n\nint factorial(int n){\n\tif (n>1) return n*= factorial(n-1);\n\treturn 1;\n}\n\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n);\n}\n\n\n/*int main() {\n\tlong long n;\n\tlong long r = 1;;\n\twhile(cin >> n){\n\t   long long x = n;\n\t   while (n>9){\n\t   while(x){\n\t\tr *= x%10;\n\t\tx/=10;\n\t   }\n\t   cout << \"The product of the digits of \" << n << \" is \" << r << \".\" << endl;\n\t   n = r;\n\t   r = 1;\n\t   n = x;\n\t   }\n    }\n}\nbool is_perfect(int n){\n\tint sumDivisors = 0;\n\tfor (int i=1; i<=n/i; ++i){\n\t if (n%i == 0){\n       sumDivisors+=i;\n     }\t \n\t}\n\tif(sumDivisors==n)return true;\n\telse return false;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << is_perfect(n) << endl;\n}\n\n\n\nint main() {\n\tint h, m, timeToWait, bellRings;\n\twhile (cin >> h >> m){\n\t if (h==0)h=12;\n     bellRings = 0;\n     if (h > 12)h-=12;\n\t bellRings += h++;\n\t h--;\n\t if (m <= 15){\n\t   bellRings += 1;\n\t }\n\t if (m <= 30){\n\t   bellRings += 2;\n\t }  \n\t if (m <= 45){\n\t  bellRings += 1;\n\t };\n\t timeToWait = 60-m;\n\t if (timeToWait >= 60)timeToWait-=60;\n\t if (m == 0) bellRings = h;\n\t if ((h == 0) and (m > 0)) =1\n\t if (m == 0) timeToWmait = 0;  \n\t cout << timeToWait << \" \";\n\t cout << bellRings << endl;\n }\n}\n\n\n\n\n\nint main() {\n\t\n\t//setup\n\tint r, c, totalCoins;\n\tchar a;\n\ttotalCoins = 0;\n\tcin >> r >> c;\n\tif (r!=1){\n\tint taulell[r-1][c-1];\n\t\n\t//create chessboard\n\tfor (int i = 0; i < r; ++i){\n\t     for (int j = 0; j < c; ++j){ \n\t\t   cin >> a;\n\t       taulell[i][j] = a - '0';\n\t\t }\n\t }\n\t\n\t\n\t//add white squares in chessboard\n\t  for (int j = 0; j < r; ++j){\n\t     for (int i = 0; i < c; ++i){ \n\t\t\t if (i%2==0){ \n\t\t\t   if (j%2==0){\n\t\t\t\ttotalCoins += taulell[i][j];\n\t\t\t   }\n\t\t\t }\n\t\t\t \n\t\t\t if (i%2==1){ \n\t\t\t   if (j%2==1){\n\t\t\t\ttotalCoins += taulell[i][j];\n\t\t\t   }\n\t\t\t } \n\t\t }\n\t }\n\t} else {\n\t  for (int i = 0; i < c/2; ++i){\n\t  cin >> a;\n\t  totalCoins  = a - '0';\n\t  cin >> a;\n      }  \n\t\n\t}\n\t \n\t //output\n\t cout << totalCoins << endl;\n}\n\n\n\n\n\n\nint main() {\n\tint b, n;\n\tint i = 2;\n\t  while(cin >> b >> n){\n\t\twhile(true){\n\t\t   if ((pow(b,i) <= n) and (n > pow(b,i-1))){\n\t\t     cout << i << endl;\n\t\t     break;\n\t\t   } else {\n\t\t     ++i;\n\t\t   }\n\t\t}\n\t  }\n}*/\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif ( n > 1)\n\t{\n\t\treturn n*factorial(n-1);\n\t}\n\telse\n\t{\n\t\treturn 1;\n\t}\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}\n}  \n",
  "#include <iostream>\n#include <cmath>\n#include <vector>\n#include <algorithm>\n#include <string> \nusing namespace std;\n\n\nint factorial(int n) {\n\tif(n == 1) return 1;\n\telse return n * factorial(n-1);\n\t\n}\n\n\nint main() {\n}\n",
  "#include <iostream>\n#include <cmath>\n#include <vector>\n#include <algorithm>\n#include <string> \nusing namespace std;\n\n\nint factorial(int n) {\n\tif(n == 1 or n == 0) return 1;\n\telse return n * factorial(n-1);\n\t\n}\n\n\nint main() {\n\tint n;\n\t\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tint m = 1;\n\twhile (n >= 1) {\n\t\tm = m * n;\n\t\tn = n - 1;\n\t}\n\treturn m;\n}\n\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint factorial (int n){\n  \n  if (n == 0) return 1;\n  return n*factorial(n-1);\n  \n  }\n\nint main () {\n\nint n;\ncin>> n;\ncout << factorial(n) << emdl;\n\n}\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint factorial (int n){\n  \n  if (n == 0) return 1;\n  return n*factorial(n-1);\n  \n  }\n\nint main () {\n\nint n;\ncin>> n;\ncout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint factorial (int n){\n  \n  if (n == 0) return 1;\n  return n*factorial(n-1);\n  \n  }\n\nint main () {\n\nint n;\ncin>> n;\ncout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  return n*factorial(n - 1);\n}\n\nint main () {\n  int a;\n  cin >> a;\n  cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint factorial (int n){\n  \n  if (n == 0) return 1;\n  return n*factorial(n-1);\n  \n  }\n\nint main () {\n\nint n;\ncin>> n;\ncout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint factorial (int n){\n  \n  if (n == 0) return 1;\n  return n*factorial(n-1);\n  \n  }\n\nint main () {\n\nint n;\ncin>> n;\ncout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint factorial (int n){\n  \n  if (n == 0) return 1;\n  return n*factorial(n-1);\n  \n  }\n\nint main () {\n\nint n;\ncin>> n;\ncout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint factorial (int n){\n  \n  if (n == 0) return 1;\n  return n*factorial(n-1);\n  \n  }\n\nint main () {\n\nint n;\ncin>> n;\ncout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint factorial (int n){\n  \n  if (n == 0) return 1;\n  return n*factorial(n-1);\n  \n  }\n\nint main () {\n\nint n;\ncin>> n;\ncout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint factorial (int n){\n  \n  if (n == 0) return 1;\n  return n*factorial(n-1);\n  \n  }\n\nint main () {\n\nint n;\ncin>> n;\ncout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  return factorial(n-1)*n;\n}\n\n\nint main() {\n  \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);{\n  int f = 1;\n  for(int i = 1; i <= n; ++i) f = f*i;\n  return f;\n    }\n  \n\nint main(){\n  int n;\n  while(cin >> n) cout << factorial(n) << endl;\n  }\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  int f = 1;\n  for(int i = 1; i <= n; ++i) f = f*i;\n  return f;\n    }\n  \n\nint main(){\n  int n;\n  while(cin >> n) cout << factorial(n) << endl;\n  }\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint factorial (int n){\n  \n  if (n == 0) return 1;\n  return n*factorial(n-1);\n  \n  }\n\nint main () {\n\nint n;\ncin>> n;\ncout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n/*\nstring turn_word (string word) {\n\tint y=0;\n\tint n = word.length();\n\tfor (int f = n-1; f>=n/2; --f){\n\t\tchar tmp = word [y];\n\t\tword [y] = word [f];\n\t\tword [f] = tmp;\n\t\t++y;\n\t}\n\treturn word;\n}\n*/\n/*\nint main(){\n\tstring word;\n\tint x;\n\tcin >> x;\n\tvector <string> w (x);\n\tfor (int i=0; i<x; ++i) {\n\t\tcin >> word;\n\t\tw[i]= turn_word (word);\n\t}\n\tfor (int i=x-1; i>=0; --i)\n\t\tcout << w [i] << endl;\n}\n*/\n\n/*\n\t\tfor (int f=n-1;f>=0;--f) cout << word [f];\n\tcout << endl;\n\t}\n}\n\n*/\nint factorial(int n) {\n\tif (n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main (){\n\tint x;\n\tcin >>x;\n\tcout << factorial (x) << endl;\n}\n",
  "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n > 0) {\n\t\treturn (n * factorial(n-1));\t\n\t} else {\n\t\treturn 1;\n\t}\n\t\n  }\n   \nint main () {\n\tint n;\n\t\n\tcin >> n;\n\t\n\tcout << factorial(n);\n\n}\n",
  "#include <iostream>\n using namespace std;\n \n \n int factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial (n - 1);\n    \n    \n  \n\n}\n\n int main() {\n   int a;\n   cin >> a;\n    cout << factorial (a) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n==0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\nint main (){\r\n    int a;\r\n    cin>>a;\r\n    cout<< factorial(a)<<endl;\r\n}\r\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n//funciÃ³ recursiva\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n - 1);\n}\n\nint main() {\n  int n;\n  cin >>n;\n  cout << factorial(n) << endl;\n  \n}\n",
  "#include <iostream>\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\treturn n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\treturn n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n > 1){\n        n = n*factorial(n-1);\n    }\n    if (n==0) n++;\n    return n;\n}\nint main(){\n    int k;\n    while (cin>>k)\n    cout << factorial(k) << endl;\n}",
  "int fact(int n){\r\nif(n<=1)return(1);\r\nelse return(n*fact(n-1));\r\n}",
  "int factorial(int n){\r\nif(n<=1)\r\nreturn(1);\r\nelse \r\nreturn(n*factorial(n-1));\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0){return 1;}\r\n\telse return n*factorial(n-1);\r\n}\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\telse return n * factorial (n-1);\r\n}\r\n\r\nint main(){\r\n\tint x;\r\n\tcin>>x;\r\n\tcout<<factorial(x);\r\n\t\r\n}\r\n",
  "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nlong long factorial(int n)\r\n{\r\n   if (n < 0) return 0;\r\n   else if (n > 1) return n * factorial(n-1);\r\n   return 1;\r\n}\r\n\r\nint main ()\r\n{\r\n    return 0;\r\n}\r\n",
  "/*\r\n  factorial\r\n*/\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nlong long fact (int n)\r\n{\r\n    long long factorial = 1;\r\n    while ( n != 0) {\r\n      factorial *= n;\r\n      n--;\r\n    }\r\n    return factorial;\r\n}\r\n\r\nint main() {\r\n   for (int i = 0; i <= 12; i++){\r\n      printf(\"factorial(%d) â %lld\\n\", i, fact(i));\r\n   }\r\n   return 0;\r\n}\r\n",
  "long long fact (int n)\r\n{\r\n    long long factorial = 1;\r\n    while ( n != 0) {\r\n      factorial *= n;\r\n      n--;\r\n    }\r\n    return factorial;\r\n}\r\n",
  "long long factorial (int x)\r\n{\r\n    if (x == 0 || x = 1) return 1;\r\n    else return (n * factorial (n-1));\r\n}\r\n",
  "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n   if (n < 0) return 0;\r\n   else if (n > 1) return n * factorial(n-1);\r\n   return 1;\r\n}\r\n\r\nint main()\r\n{\r\n    int x;\r\n    while (cin >> x)\r\n    {\r\n        cout << factorial(x) << endl;\r\n    }\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tint factorial = n;\n\tfor (int i = n - 1; i > 1; i = i - 1) {\n\t\tfactorial = factorial * i;\n\t}\n\treturn factorial;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 0;\n\telse {\n\t\tint factorial = n;\n\t\tfor (int i = n - 1; i > 1; i = i - 1) {\n\t\t\tfactorial = factorial * i;\n\t\t}\n\t\treturn factorial;\n\t}\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse {\n\t\tint factorial = n;\n\t\tfor (int i = n - 1; i > 1; i = i - 1) {\n\t\t\tfactorial = factorial * i;\n\t\t}\n\t\treturn factorial;\n\t}\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n* factorial(n-1);\r\n}\r\n\r\n\r\nint main () {\r\n   int n;\r\n   while (cin >> n) cout << factorial(n) << endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n\r\n\r\n",
  "#include <stdio.h>\n\nint factorial(int n);\n\nint main() {\n\tint n;\n\twhile (scanf(\"%d\", &n) > 0) {\n    printf(\"%d\\n\", factorial(n));\n\t}\n\treturn 0;\n}\n\nint factorial(int n)\n{\n     if(n==1|| n==0)\n         return(1);\n     else\n         return(n*factorial(n-1));\n}\n",
  "int factorial(int n){\n\treturn n<=1 ? n : n*factorial(n-1);\n}\n",
  "int factorial(int n){\n\treturn n==0 ? 1 : n*factorial(n-1);\n}\n",
  "from jutge import read\n\ndef factorial(n):\n\tif n == 0 or n == 1:\n\t\treturn(1)\n\telse:\n\t\ta = n\n\t\tn = n-1\n\t\twhile n >= 1:\n\t\t\ta = a*n\n\t\t\tn=n-1\n\t\treturn(a)\t\t\n\t\n\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\n",
  "from jutge import read\n\ndef factorial(n):\n\tif n == 0 or n == 1:\n\t\treturn(1)\n\telse:\n\t\treturn n * factorial(n-1)\n\t\t\n\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int a = 0;\n    \n    return n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    return n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int a = m = n;\n    m = m-1;\n    while (m>0) {\n        a = a*m;\n        m = m-1;\n    }\n    if (m<=0) {\n        a=1;\n    }\n    return a;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int a,m;\n    m = n -1;\n    a = n;\n    while (m>0) {\n        a = a*m;\n        m = m-1;\n    }\n    if (m<=0) {\n        a=1;\n    }\n    return a;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int a,m;\n    m = n -1;\n    a = n;\n    while (m>0) {\n        a = a*m;\n        m = m-1;\n    }\n    if (m<0) {\n        a=1;\n    }\n    return a;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 1 or n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial (n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 2)return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n if (n==0){return 1;}\n if (n==1){return 1;}\n return(n*factorial(n-1));   \n}\n\nint main(){\n    int a;\n    while(cin >> a){\n     cout << factorial(a) << endl;   \n    }   \n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    cout <<factorial(4)<<\" \"<<factorial(5)<<endl;\n    }\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return factorial(n - 1) * n;\n} \n\n\nint main() {\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial (int n){\n    int a=1;\n    int b=1;\n    while (a<=n){\n        a=a*b;\n        b=b+1;}\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial (int n){\n    int a=1;\n    int b=1;\n    while (a<=n){\n        a=a*b;\n        b=b+1;}\n    return a;}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial (int n){\n    int a=1;\n    int b=1;\n    while (b<=n){\n        a=a*b;\n        b=b+1;}\n    return a;}\n",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0)\n\treturn 1;\n    return n * factorial(n-1);\n}\n\nint main(void) {\n    cout << factorial(4);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\treturn factorial(n - 1) * n;\n}\n\n\nint main() {\n\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n\treturn 0;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1){\n        return 1;\n    }\n    return n*factorial(n-1);\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\t\n\tint f = 1;\n\twhile (n>1) { \n\t\tf = f*n;\n\t\t--n;\t\n\t} \n\treturn f;\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n",
  "#include <iostream>\n#include <iomanip>\n\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 0;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    \n}\n",
  "#include <iostream>\n#include <iomanip>\n\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\telse return n* factorial (n-1);\n}\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n > 1){\n        return n * factorial(n-1);\n    }else{\n        return 1;\n    }\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n > 1) return n*factorial(n-1);\r\n    return 1;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\r\n\tcin>> n;\r\n\tcout<< factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\telse {\n\t    return n * factorial (n-1);\n\t}\n}\t\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);   \n}\n\nint main(){\n    int n;\n    cin >> n;\n    int m = factorial(n);\n    cout << m << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\n//  nomÃ©s tÃ© en compte la funciÃ³\n//  calcular el factorial recursivament\n\nint factorial(int n){\n    if (n < 2){\n        return 1;\n    }else{\n        return factorial(n - 1)*n;\n    }\n}\n\nint main(){\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\t\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 1) return n;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n\tint i;\n\tcin >> i;\n\tcout << factorial(i) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 2) return n;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n\tint i;\n\tcin >> i;\n\tcout << factorial(i) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n > 2) return n*factorial(n-1);\n\tif(n == 0) return 1;\n\treturn n;\n}\n\nint main(){\n\tint i;\n\tcin >> i;\n\tcout << factorial(i) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\n\treturn n*factorial(n-1);\n}\n\n\nint main () {\n\tint x;\n\tcin >> x;\n\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\n\treturn n*factorial(n-1);\n}\n\n\nint main () {\n\tint x;\n\tcin >> x;\n\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\nif (n == 0) return 1;\nelse return n * factorial (n-1);\n}\n\nint main (){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}",
  " int factorial(int n);\n\tif (n < 2) return 1;\n\telse return int factorial(int n - 1);\n",
  " #include <iostream>\n using namespace std;\n \n int factorial(int n) {\n\tif (n < 2) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint fact;\n\tif (n == 0) fact = 1;\n\telse fact = n * factorial(n-1);\n\treturn fact;\n}\n\t\n\t\nint main() {\n\tint x;\n\twhile (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n    \n}\n\n\n\nint main () {\n    int nombre;\n    cin >> nombre;\n    cout << factorial (nombre) << endl;\n    \n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Recursive factorial\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "// Returns n!\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n*(factorial(n-1));\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0){\r\n        return 1;\r\n    }\r\n    return factorial(n-1) * n;\r\n}\r\n\r\n\r\nint main(){\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*(factorial(n-1));\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    return n * factorial(n - 1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    \n    cout << factorial(n);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if( n < 2 ) {\n        return 1;\n    }\n    else {\n        return factorial(n - 1)*n\n    }\n}\n \nint main(){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if( n < 2 ) {\n        return 1;\n    }\n    else {\n        return factorial(n - 1)*n;\n    }\n}\n \nint main(){\n    int x;\n    while( cin >> x ){\n        cout << factorial(x) << endl;\n    }\n    \n}\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==1)return 1;\n\telse return n*factorial(n-1);\n}\n\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==1)return 1;\n\treturn n*factorial(n-1);\n}\n\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0)return 1;\n\treturn n*factorial(n-1);\n}\n\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        cout << factorial(n) <<endl;\n    }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0)return 1;\n  else return factorial(n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0)return 1;\n  else factorial(n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0)return 1;\n  else return n=n*factorial(n-1);\n}\n\nint main(){\n  int n;\n  while(cin>>n){\n    cout<<factorial(n)<<endl;\n  }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0)return 1;\n  else return n*factorial(n-1);\n}\n\nint main(){\n  int n;\n  while(cin>>n){\n    cout<<factorial(n)<<endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n if (n==0){return 1;}\n if (n==1){return 1;}\n return(n*factorial(n-1));   \n}\n\nint main(){\n    int a;\n    while(cin >> a){\n     cout << factorial(a) << endl;   \n    }   \n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1)\n        return 1;\n    \n    return n*factorial(n-1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while(cin >> n){\r\n        cout << factorial(n) <<endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int f= 1;\n    for (int i = 1; i <= n; ++i) {\n        f = i*f;\n    }\n    return f;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*(factorial(n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\n //Compiler version g++ 6.3.0\n\n int factorial(int n){\n \tif (n==0) {\n \t\treturn 1;}\n \telse {\n \t\treturn n*factorial(n-1);\n \t}\n \t}\n int main(){\n \tint n;\n \tcin >> n;\n \tcout << factorial(n);\n }",
  "#include <stdio.h>\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial( n -1 );\n}\n\nint main() {\n\tint n;\n\twhile (scanf(\"%d\", &n) > 0) {\n    printf(\"%d\\n\", factorial(n));\n\t}\n\treturn 0;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "//\n//  main.cpp\n//  P12509\n//\n//  Created by Santiago ArxÃ© on 17/10/18.\n//  Copyright Â© 2018 Santiago ArxÃ©. All rights reserved.\n//\n\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n > 2) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n}\n",
  "//\n//  main.cpp\n//  P12509\n//\n//  Created by Santiago ArxÃ© on 17/10/18.\n//  Copyright Â© 2018 Santiago ArxÃ©. All rights reserved.\n//\n\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n < 2) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nvoid decompose(int n, int& h, int& m, int& s){\r\n    h = n/3600;\r\n    m = n/60 - h*60;\r\n    s = n - h*3600 - m*60;\r\n}\r\n\r\nint main(){\r\n    int n, h, m, s;\r\n    cin >> n;\r\n    decompose(n, h, m, s);\r\n    cout << h << ' ' << m << ' ' << s << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n < 2) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\n\nint main()\n{\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    //cas b\n    if (n == 0) return 1;\n    //cas gen\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial (n - 1);\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nbool is_palindromic(int n){\n    int m = n;\n    int l = 0;\n    \n    while (n>0){\n        l = 10*l + n%10;\n        n = n/10;\n    }\n    return (m == l);\n        \n   \n    \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 0;\n    else if (n==1) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 1;\n    else if (n==1) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    if (n<=0) return 1;\n    else return (n*factorial(n-1));\n    \n}\n\nint main() {\n    int n;\n    cin >> n;\n    \n    n=factorial(n);\n    cout << n << endl;\n    \n}\n",
  "#include <iostream>\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <bits/stdc++.h>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    return n*fact(n-1);\n    \n}\n",
  "#include <bits/stdc++.h>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n\n    return n*factorial(n-1);\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\nint main(){\n    int n;\n    cin >> n;\n    int f;\n    f = factorial(n);\n    cout << f << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n ) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    cout << factorial(0) << endl;\n    cout << factorial(1) << endl;\n    cout << factorial(2) << endl;\n    cout << factorial(3) << endl;\n    cout << factorial(4) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// Recursive factorial\n\nint factorial(int n) {\n    cin >> n;\n    if ( n == 0 ) return 1;\n    else return n * factorial(n-1);\n}\n    \nint main () {\n    int n;\n    while ( cin >> n ) cout << factorial(n) << endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// Recursive factorial\n\nint factorial(int n) {\n    while (cin >> n) {\n    if ( n == 0 ) return 1;\n    else return n * factorial(n-1);\n    }\n}\n    \nint main () {\n    int n;\n    while ( cin >> n ) cout << factorial(n) << endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\n// Recursive factorial\n\nint factorial(int n) {\n    if ( n <= 1 ) return 1;\n    else return n * factorial(n-1);\n}\n    \nint main () {\n    int n;\n    while ( cin >> n ) cout << factorial(n) << endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\n// Recursive factorial\n\nint factorial(int n) {\n    if ( n == 0 ) return 1;\n    else return n * factorial(n-1);\n}\n    \nint main () {\n    int n;\n    while ( cin >> n ) cout << factorial(n) << endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main () {\n    int a;\n    while (cin >> a) cout << factorial(a) << endl;    \n}\n",
  "int factorial(int n){\r\n    \r\n    if (n>1){\r\n       return n*factorial(n-1); \r\n    } \r\n    else return 1;\r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tint i=1, f=1;\n\twhile (i<n) {\n\t\ti+=1;\n\t\tf= f*i;\n\t}\n\treturn f;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include<iostream>\nusing namespace std;\n int factorial(int n){\n int x=1;\n for(int i=1;i<=n;++i){\n     x=x*i;\n }\n return x;\n }\n int main(){\n     int n;\n     cin>>n;\n     int d= factorial (n);\n     cout<<d<<endl;\n }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\t\n\tif (n==1 or n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint fact(int x){\n    int y=1;\n    if (x==0) return 1;\n    else {for (int i=1; i<=x; i++){\n        y= y*i ;\n    }\n    return y;}\n}\nint main(){\n    int x;\n    while(cin >> x){\n    cout << fact(x) <<endl;}\n    \n}\n",
  "#include <iostream>\nusing namespace std;\nint fact(int x){\n    int y=1;\n    if (x==0) return 1;\n    else {for (int i=1; i<=x; i++){\n        y= y*i ;\n    }\n    return y;}\n}\nint main(){\n    int x;\n    while(cin >> x){\n    cout << fact(x) <<endl;}\n    \n}\n",
  "#include <iostream>\nusing namespace std;\nint fact(int x){\n    int y=1;\n    if (x==0) return 1;\n    else {for (int i=1; i<=x; i++){\n        y= y*i ;\n    }\n    return y;}\n}\nint main(){\n    int x;\n    while(cin >> x){\n    cout << fact(x) <<endl;}\n    \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n <= 1)\r\n        return 1;\r\n    \r\n    return n*factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\nint fact(int x){\n    int y=1;\n    if (x==0) return 1;\n    else {for (int i=1; i<=x; i++){\n        y= y*i ;\n    }\n    return y;}\n}\nint main(){\n    int x;\n    while(cin >> x){\n    cout << fact(x) <<endl;}\n    \n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int x){\n    int y=1;\n    if (x==0) return 1;\n    else {for (int i=1; i<=x; i++){\n        y= y*i ;\n    }\n    return y;}\n}\nint main(){\n    int x;\n    while(cin >> x){\n    cout << factorial(x) <<endl;}\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x){\n  if (x==0) return 1;\n  else return x*factorial(x-1);\n}\n\nint main(){}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n* factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "/* Factorial amb recursivitat */\n\n#include <iostream>\nusing namespace std;\n\n// PRECONDITION: 0 <= n <= 12\nint factorial(int n) {\n\tif (n == 0) return 1;        //Cas base\n\telse return n * factorial(n - 1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int i=0;\n    int f1 = 1;\n    while (i < n){\n        ++i;\n        fi = f1 * i;\n    }\nreturn f1;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int i=0;\n    int f1 = 1;\n    while (i < n){\n        ++i;\n        f1 = f1 * i;\n    }\nreturn f1;\n}\n    \n",
  "int factorial(int n) \r\n{ \r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if(n>0) return n * factorial(n-1);\r\n  else return 1;\r\n}\r\n\r\nint main() {}",
  "int factorial(int n) {\r\nif(n == 0) return 1;\r\nreturn n*factorial(n - 1);\r\n}\r\n\r\nint main(){}",
  "int factorial(int n){\r\n    if(n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n",
  "/* Recursive factorial */\n\n#include <iostream>\nusing namespace std;\n\n// Retorna el factorial de n\n// Prec: n >= 0\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n * (factorial (n-1));\n}\n\nint main () {\n\tint n; \n\tcin >> n;\n\tcout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "int factorial(int n) {\r\n\tif (n == 0)\r\n\t\treturn 1;\r\n\treturn n * factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n <= 1) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n, f;\r\n\tcin>>n;\r\n\t\r\n\tf = factorial(n);\r\n\tcout<<f<<endl;\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n  int i;\n  std::cin >> i;\n    std::cout << factorial(i) << '\\n';\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n//cas base;\n  if (n == 0) n=1;\n  else {\n    n = n*factorial(n-1);\n  }\n  return n;\n  }\n\nint main () {\n\nint n;\n\ncin >> n;\n\ncout << factorial(n) << endl;\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n > 1) {\n        return n * factorial(n - 1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint i=1;\r\n\twhile(n>0){\r\n\t\ti=i*n;\r\n\t\tn=n-1;\r\n\t}\r\n\treturn i;\r\n\t\t\r\n\t} \r\n\t\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\t\r\n\r\n",
  "##recursive factorial\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n*factorial(n-1)\n\nprint(factorial(1))\n",
  "/*#include <iostream>\nusing namespace std;\n\n*/\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n - 1);}\n/*\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n*/\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return n * factorial(n - 1);\r\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int m){\n\tif (m == 0) return 1;\n\telse return m * factorial (m-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n<2){\r\n\t\treturn 1;\r\n\t}\r\n\treturn n* factorial(n-1);\r\n}\r\nint main(){\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\n  int c=1;\n  for (int i=1; i<=n; i++){\n    c=c*i;\n  }\n  return c;\n}\n\nint main(){\n  int a;\n  cin >> a;\n  cout << factorial(a) << endl;\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\n    if (n>1) return n*factorial(n-1);\r\n    else return 1;\r\n}\r\nint main() {\r\n    int g;\r\n    cin >> g;\r\n    cout << factorial (g) << endl;\r\n}\r\n//g++ -Wall -O2 -std=c++11 a.cc -o a",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main (){\n\tint n;\n\tcin >> n;\n\tcout << \"result: \" << factorial(n) << endl;\n}\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main() {\n\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n > 0) {\n\t\tn -=1;\n\t\treturn (n + 1) * factorial(n);\n\t}\n\telse return 1;\n}\nint main () {\n\tint n;\n\tcin >> n;\n\tn = factorial(n);\n\tcout << n;\n}\n",
  "include <iostream>\nusing namespace std;\n\nint factorial(int n){\n if (n==0){return 1;}\n if (n==1){return 1;}\n return(n*factorial(n-1));   \n}\n\nint main(){\n    int a;\n    while(cin >> a){\n     cout << factorial(a) << endl;   \n    }   \n    }",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int x = factorial(n);\n    cout << x << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n//comment: quizas no es el mejor ejemplo recursivo porque\n//tiene soluciones iterativas sencillas\n//pre: n >= 0\n//post: retorna n!\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial(n - 1);\n        //Hip: f es (n - 1)!\n        return n*f;\n    }\n}\n\n//otra version\n//comment: quizas no es el mejor ejemplo recursivo porque\n//tiene soluciones iterativas sencillas\n//pre: n >= 0\n//post: retorna n!\nint factorial_2(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int k;\n    cin >> k;\n    cout << factorial(k) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if(n=0)\n        return 1;\n    else\n        return n*factorial(n-1);\n}\n\nint main() \n{\n    int n,f;\n    cin >> n;\n    f = factorial(n);\n    cout << f << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if(n==0)\n        return 1;\n    else\n        return n*factorial(n-1);\n}\n\nint main() \n{\n    int n,f;\n    cin >> n;\n    f = factorial(n);\n    cout << f << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n==0) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n  int a;\r\n  cin >> a;\r\n  cout<< factorial(a)<< endl;\r\n  }\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial (n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  if (n == 1) return 1;\n  return factorial(n-1)*n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main (){\n\tint n;\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\nint main() {\n    int p;\n    cin >> p;\n    int f = factorial (p);\n    cout << f << endl;\n}\n",
  "\n//Pre: 0 <= n <= 12\n// returns the factorial of n.\n\nint factorial(int n) {\n    if (n <= 1) return n;\n    else return n*factorial(n-1);\n}\n",
  "\n//Pre: 0 <= n <= 12\n// returns the factorial of n.\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1; \n\telse return n * factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}   \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int i;\n    for (i=(n-1);i>0;--i) {\n        \n        n = n*i;\n        \n    }\n    return n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    \n  int v = factorial(n);\n  \n  cout << v << endl;\n   \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else\n    int iRespuesta = factorial*(n-1);\n   return n*iRespuesta;\n\n}\n\nint main (){\n    int iNumero;\n    cin >> iNumero;\n    \n    cout << factorial (iNumero) << endl;\n    \n}\n\n\n    \n     \n     \n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n){\n    if (n==0){\n        return 1;\n    }\n    return n*factorial(n-1);\n}\n\nint main(){\n}\n",
  "#include <iostream>\nusing namespace std;\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int i;\n    \n    for (i=(n-1);i>0;--i) {\n        \n        n = n*i;\n        \n    }\n    if (n==0) n=1;\n    return n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    \n  int v = factorial(n);\n  \n  cout << v << endl;\n   \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int total=1;\n    if (n<=1) return 1;\n    else {\n        \n        total= total* n * factorial(n-1);\n        return total;\n        \n    }\n    \n}\n int main(){\n     \n     \n     int n;\n     cin >> n;\n         \n    cout << factorial(n) << endl;\n    \n    \n     \n }\n    \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else{\n    int iRespuesta = factorial(n-1);\n   return n*iRespuesta;\n    }\n}\n\nint main (){\n    int iNumero;\n    cin >> iNumero;\n    \n    cout << factorial (iNumero) << endl;\n    \n}\n\n\n    \n     \n     \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else{\n        int m = factorial(n-1);\n        return n*m;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact=n;\n    if (n==0 or n==1)\n        fact=1;\n    \n    else return n*factorial(n-1);\n    \n}\n\nint main(){\n    int n;\n    cin >> n;\n    factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n==0 or n==1)\n        return 1;\n    \n    else return n*factorial(n-1);\n    \n}\n\nint main(){\n    int n;\n    cin >> n;\n    factorial(n);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n){\n    \n    if (n==0){\n        return 1;}\n    \n    else{\n        \n        return n*factorial(n-1);}}\n        \n    \n    \n\n\nint main() {\n    \n    \n    cout << factorial(3);}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "\nint factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int fact = 1;\n    while (n >= 1){\n        fact = fact * n;\n        n--;\n    }\n    return fact; \n}\n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1); \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\n\nint factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1) return (1);\n    else return (n*(factorial(n-1)));\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1) return (1);\n    else return (n*(factorial(n-1)));\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial (n-1);\n    return f*n;\n    }\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    int m= factorial(n-1);\n    return  n*m;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n        \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0 or n==1) return 1;\n    else \n        return n*(factorial(n-1));\n}\n\nint main(){\n    \n    int a=factorial(4);\n    cout<<a<<endl;\n    \n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else{\n    int iRespuesta = factorial(n-1);\n   return n*iRespuesta;\n    }\n}\n\nint main (){\n    int iNumero;\n    cin >> iNumero;\n    \n    cout << factorial (iNumero) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    int m = factorial(n-1);\n    return n * m;\n}\n\nint main (){\n    int num;\n    cin >> num;\n    int result = factorial(num);\n    cout << result << endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else{\n        int m = factorial(n-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int);\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n    return 0;\n    \n}\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\t\n\tif (n == 1 or n == 0) return 1;\n\tint f;\n\tf = n * factorial(n - 1);\n\treturn f;\n}\n\n/*\nint factorial (int n) {\n\t\n\tif (n == 1 or n == 0) return 1;\n\treturn (n * factorial(n - 1));\n\t\n}\n*/\n\n//int factorial (int n) {\n//\tint f = 1;\n//\tfor (int q = n; q > 0; --q) {\n//\t\tf = f * q;\n//\t}\n//\treturn f;\n//}\n\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return(n*factorial(n-1));\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n==0) return 1;\nn = n * factorial (n - 1);\nreturn n;\n}\n\n\nint main (){\nint n;\ncin >> n;\ncout << factorial (n) << endl;\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif( n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\n\nint main() {\n\tcout << factorial(0);\n\tcout << factorial(1);\n\tcout << factorial(2);\n\tcout << factorial(3);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0 or n == 1)\n        return 1;\n    else\n        return n*factorial(n-1);\n    \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else if (n==1) return n;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n ;\n    cin >> n ;\n    cout << factorial(n) << endl;\n}\n            \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n==0 || n==1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse {\n\t\tint f = factorial (n - 1);\n\t\treturn n*f;\n\t}\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n    if (x==0) return 1;\n    else return x*factorial(x-1);\n    \n}\n\nint main() {\n    int n;\n    while (cin>>n) cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\t\n\tint resultado;\n\t\n\tif (n==0) resultado = 1;\n\telse resultado = n * factorial (n - 1);\n\t\n\t\treturn resultado;\n}\n\n\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}  \n\t\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else int f = factorial(n-1)\n    return n * f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else int f = factorial(n-1);\n    return n * f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n == 0) return 1;\n\n\telse return n*factorial(n-1);\n\n}\n\nint main() {\n\n\tint a;\n\n\twhile (cin >> a) {\n\n\t\tcout << factorial(a) << endl;\n\n\t}\n\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\t\r\n\tif (n>1) return n*factorial(n-1);\r\n\telse return 1;\r\n\r\n\r\n\t\r\n}\r\n\r\nint main(){\r\n\t\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "\n\n#include <iostream>\n\nusing namepsace std;\n\nint factorial ( int n ){\n\tif ( n > 1 ) return n * factorial(n-1)\n\telse return 1;\n}\n\nint main () {\n\tint n;\n\twhile ( cin >> n ){\n\t\tcout << factorial(n) << endl;\n\t}\n}",
  "\n\n#include <iostream>\n\nusing namespace std;\n\nint factorial ( int n ){\n\tif ( n > 1 ) return n * factorial(n-1);\n\telse return 1;\n}\n\nint main () {\n\tint n;\n\twhile ( cin >> n ){\n\t\tcout << factorial(n) << endl;\n\t}\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==0) n = 1;\r\n\telse n = n * factorial(n - 1);\r\n\treturn n;\r\n}\r\n\r\nint main() {\r\nint x;\r\ncin >> x;\r\n\r\ncout << factorial(x) << endl;\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;        \n    }\n    \n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\n\n\n\nint factorial(int n) {\n  if (n>1){\n      return n*factorial (n- 1 );}\n      else return 1;\n \n    \n}\n\n\nint main () {\n    int n;\n    cin >> n ;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else {\n        return n= factorial (n-1)*n;\n        --n;\n    }\n}\n\nint main (){\n    int n;\n    while (cin >> n) {\n        cout << factorial (n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0)\n        return (1);\n    else\n        return (n * factorial(n - 1));\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\t\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n    \n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n = 0) return 1;\n\telse return n * factorial (n - 1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return (n * factorial (n - 1));\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact;\n    if (n == 1) fact = 1;\n    else {\n        fact = factorial(n - 1) * n;\n    }\n    return fact;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact;\n    if (n <= 1) fact = 1;\n    else {\n        fact = factorial(n - 1) * n;\n    }\n    return fact;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n//#include <cmath>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\n\n\nint main(){\n    int a;\n\n    cin >> a;\n    \n    cout << factorial(a) << endl;\n    \n    \n    \n}\n",
  "#include <iostream>\n//#include <cmath>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 1) return 1;\n    if (n == 2) return 2;\n    else return n*factorial(n-1);\n}\n\n\n\nint main(){\n    int a;\n\n    cin >> a;\n    \n    cout << factorial(a) << endl;\n    \n    \n    \n}\n",
  "#include <iostream>\n//#include <cmath>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n\nint main(){\n    int a;\n\n    cin >> a;\n    \n    cout << factorial(a) << endl;\n    \n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n == 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int f;\n    while(cin >> f){\n        cout << factorial(f) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int f;\n    while(cin >> f){\n        cout << factorial(f) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1) ;\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x){\nif (x==0) return 1;\nelse return x*factorial(x-1);\n\n}\n\nint main (){\nint x;\ncin >> x;\ncout << factorial(x) << endl;\n\n\n}\n",
  "int factorial(int n)\n{\n    if(n < 2)\n    {\n        return 1;\n    }\n    else\n    {\n        return n*factorial(n-1);\n    }\n}\n\nint main()\n{\n}\n\n",
  "#include <iostream>\n#include <math.h>\n\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1) * n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n==0) {\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main () {\n    int n,t;\n    cin >> n;\n    t=factorial(n);\n    cout << t << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    int aux = n;\n    if(n == 1) {return 1;}\n    n-=1;\n    return aux*factorial(n);\n}\nint main() {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if(n == 0) {return 1;}\n    int aux = n;\n    if(n == 1) {return 1;}\n    n-=1;\n    return aux*factorial(n);\n}\nint main() {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\n#include<cmath>\nusing namespace std;\n\nint factorial (int n){\n    int j=n;\n    if(n==0) return 1;\n    if (n==1) return 1;\n    n=n-1;\n    return j*factorial(n);\n}\n\nint main(){\n    int c;\n    cin >> c;\n    cout << factorial(c) << endl;\n}\n",
  "#include <iostream>\n#include <string>\nusing namespace std;\nint factorial(int n){\n  if (n==0) return 1;\n  return n * factorial(n-1);\n}\n\nint main(){\n  int a;\n  while (cin >> a)\n     cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0)\n        return 1;\n    else \n        return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int a,funcion;\n    cin>>a;\n    funcion=factorial(a);\n    cout<<funcion<<endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\treturn (n * factorial(n - 1));\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n<=1) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int f = 1;\n    for (int i = 1; i <=n; i++) {\n        f = f * i;\n    }\n    return f;\n}\n\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\t\n\tint main() {\n\tint a, n;\n\tcin >> n;\n\ta=factorial(n);\n\tcout << a << endl;\n\t}\t\n\t\t\n\t\t\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else if (n < 0) return 0;\n    else return n*factorial(n-1);\n}\n\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n ) {\n    int f = 1;\n    int i = 1;\n    \n    while ( i <= n ) {\n        f = f * i;\n        ++i;\n    }\n    return f;\n    \n}\n    \n        \nint main() {\n    int n;\n    while ( cin >> n ) {\n        cout << factorial ( n ) << endl;\n    } \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n ) {\n    if ( n == 0 ) return 1;\n    return n * factorial ( n - 1 );\n    \n}\n\n\nint factorial ( int n ) {\n    if ( n == 0 ) return 1;\n    int acu = n * factorial (n -1)\n    return acu;\n    \n}\n    \n        \nint main() {\n    int n;\n    while ( cin >> n ) {\n        cout << factorial ( n ) << endl;\n    } \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n ) {\n    if ( n == 0 ) return 1;\n    return n * factorial ( n - 1 );\n    \n}\n\n\nint main() {\n    int n;\n    while ( cin >> n ) {\n        cout << factorial ( n ) << endl;\n    } \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n<=1) return 1;\n  else return (n*factorial(n-1));\n}\n\nint main() {\n  int x;\n  cin >> x;\n  cout << factorial(x);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n <= 1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 0) return 1;\n    return n*factorial(n - 1);\n}\n\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  " int factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int producte=1;\n    if (n>0){\n        producte = n * factorial(n-1);\n    }\n    return producte;\n}\nint main () {\n    cout << factorial(4) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int i=0;\n    int f=1;\n    while (i <n) {\n        i++;\n        f= f*i;\n    }\n    return f;\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else {\n        return factorial(n-1) * n;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n * factorial(n-1); \n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n * factorial(n-1); \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int a;\n    cin>>a;\n    factorial(a);\n}\n",
  "#include <iostream>\n\nint factorial(int n) {\n    if(n == 1)\n        return n;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    std::cout << factorial(4) << std::endl;\n    return 0;\n}",
  "#include <iostream>\n\nint factorial(int n) {\n    if(n == 0)\n        return 1;\n    if(n == 1)\n        return n;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    std::cout << factorial(4) << std::endl;\n    return 0;\n}",
  "int factorial(int n){\n\treturn n==0 ? 1 : n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    \n    if (n<=1) return 1;\n    \n    else return (n*factorial(n-1));\n    \n}\n        \n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return 1;\n\telse return n*factorial(n-1);\n\n}\n\nint main () {}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n\n}\n\nint main () {}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\nint factorial(int n){\r\n    int acum = 1;\r\n    int i;\r\n\r\n    i=n;\r\n    while(i > 1){\r\n        acum = acum * i;\r\n        i--;\r\n    }\r\n    return acum;\r\n}\r\n\r\nint main (){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int x) {\n    if (x==0) return 1;\n    else return x*factorial(x-1);\n   \n}\n \nint main() {\n    int n;\n    while (cin>>n) cout<<factorial(n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n\tif(n==0)return 1;\n\telse return n*factorial(n-1);\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\r\n\tif (n == 0) {\r\n\t\treturn 1;\r\n\t} else {\r\n\t\treturn n * factorial(n-1);\r\n\t}\r\n}\r\n\r\nint main () {\r\n\tcout << factorial(0) << endl;\r\n\tcout << factorial(1) << endl;\r\n\tcout << factorial(2) << endl;\r\n\tcout << factorial(3) << endl;\r\n\tcout << factorial(4) << endl;\r\n\tcout << factorial(5) << endl;\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0 or n==1) {\n        return 1;\n    }\n    else {\n    n=n*factorial(n-1);\n    return n;\n    }\n}\nint main() {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else return 1;\r\n}\r\n\r\nint main (){\r\n\tint n;\r\n\twhile (cin >> n)\r\n\t\tcout <<factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0)\n    return 1;\n  else\n    n*=factorial(n-1);\n  return n;\n};\n\n\nint main(){\n  int a;\n  cin >> a;\n  cout << factorial(a) << endl;\n};\n",
  "#include <iostream>\nusing namespace std;\n//Pre: n >= 0 (entero)\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n<=1) return 1;\r\n\telse return n*(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n<=1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int x = n;\n    if (n==0)\n        n = 1;\n    \n    else {\n        for (int i=1; i<x; ++i) \n            n = n*i;\n        \n    }\n    return(n);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\r\n    if (n <1) return 1;\r\n    else return factorial(n-1)*n;\r\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return (n * factorial (n -1));\n}\n\nint main(){\n\tint a;\n\twhile(cin >> a){\n\t\tcout << factorial(a) << endl;\n\t}\n}\n\t\t\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\n\nint main () {    \n    int num;\n    while (cin >> num) cout << factorial(num) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint number_of_digits(int n){\n    \n    if (n < 10) return 1;\n        else return number_of_digits (n / 10) + 1;\n}\n\nint main () {\n  int n;\n  while (cin >> n) cout << number_of_digits(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\n\nint main () {    \n    int num;\n    while (cin >> num) cout << factorial(num) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n \nint factorial(int n){\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else{\n        return 1;\n    }\n}\n \nint main (){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n>1){\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\telse return 1;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if (n == 0) {\r\n    return 1;\r\n        \r\n    }\r\n    else return n * factorial(n-1);\r\n}\r\n\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\t}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n    if ( n == 0) return 1;\n    \n    else return n*factorial (n - 1);\n    \n    }\n    \nint main () { \n    int a;\n    cin >> a;\n    cout << factorial (a) << endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n == 0) return 1;\nelse return n*factorial(n-1);\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n\t\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n > 1) {\n        return n*factorial(n-1);\n    } else return 1;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n){\nfact = 1;\nif(n = 0){\nreturn fact;\n}\nelse{\nwhile ( n>=1){\n\nfact = n * fact;\n\n--n;\n}\n}\nreturn fact;\n}\n\nint main(){\n    \n    int n;\n    \n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n){\nint fact = 1;\nif(n = 0){\nreturn fact;\n}\nelse{\nwhile ( n>=1){\n\nfact = n * fact;\n\n--n;\n}\n}\nreturn fact;\n}\n\nint main(){\n    \n    int n;\n    \n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n){\nint fact = 1;\nif(n == 0){\nreturn fact;\n}\nelse{\nwhile ( n>=1){\n\nfact = n * fact;\n\n--n;\n}\n}\nreturn fact;\n}\n\nint main(){\n    \n    int n;\n    \n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n == 0) return 1;\n    else return n = n *  factorial(n-1);\n    \n\n}\n\nint main (){\n    \n    int a;\n    \n    cin >> a;\n    \n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    \n    else return n*(n-1);\n}\n\nint main() {\n    int f;\n    cin >> f;\n    cout << factorial (f) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\r\n{\r\n    int factorial = 1;\r\n    for(int i = 1; i <= n; i++)\r\n    {\r\n        factorial = factorial * i;\r\n    }\r\n    return factorial;\r\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    \n    else return n*factorial(n-1);\n}\n\nint main() {\n    int f;\n    cin >> f;\n    cout << factorial (f) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\t\r\n\tif(n=0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin>>n){\r\n\t\tcout<<factorial(n)<<endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\t\r\n\tif(n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin>>n){\r\n\t\tcout<<factorial(n)<<endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nlong double factorial(int);\nint main()\n{   int n;\n    cout << \"Introduzca numero: \";\n    cin >> n;\n    cout << \"factorial: \" << factorial(n) << endl;\n\n}\nint factorial(int n)\n{\n    int fact;\n    if (n==0)\n        return 1;\n    else\n         return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    int fact;\n    if (n==0)\n        return 1;\n    else\n         return n*factorial(n-1);\n}\n\n\n\nint main()\n{   int n;\n    cout << \"Introduzca numero: \";\n    cin >> n;\n    cout << \"factorial: \" << factorial(n) << endl;\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n==0)\n        return 1;\n    else\n         return n*factorial(n-1);\n}\n\n\n\nint main()\n{   int n;\n    cout << \"Introduzca numero: \";\n    cin >> n;\n    cout << \"factorial: \" << factorial(n) << endl;\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\tint r = factorial (n - 1) * n;\n\treturn r;\n}\n\nint main() {\n\tint x;\n\twhile (cin >> x) {\n\t\tcout << factorial(x) << endl;\n\t}\n} \n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n){\r\n\tif ( n== 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 0;\r\n\telse if(n != 1) return n;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse if(n != 1) return n;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\tcin >> n;\r\n\t\tcout << factorial(n) << endl;\r\n\t\t}\r\n\t\r\n\t}\r\n",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nvoid pinta_rusc(int f, int c) {\r\n\tint x,y;\r\n\tfor(y = 0;y < f;y++) {\r\n\t\tfor(x = 0;x < c and y == 0;x++) {\r\n\t\t\tcout << \" _\";\r\n\t\t\tif (x < c - 1) cout << \"  \";\r\n\t\t}\r\n\t\tif (y == 0) cout << endl;\r\n\t\tfor(x = 0;x < c;x++) {\r\n\t\t\tcout << \"/ \\\\\";\r\n\t\t\tif (x < c - 1) cout << \"_\";\r\n\t\t}\r\n\t\tcout << endl;\r\n\t\tfor(x = 0;x < c;x++) {\r\n\t\t\tcout << \"\\\\_/\";\r\n\t\t\tif (x < c - 1) cout << \" \";\r\n\t\t}\r\n\t\tcout << endl;\r\n\t}\r\n\tcout << endl;\r\n}\r\n\r\nint main () {\r\n\tint f,c;\r\n\twhile (cin >> f >> c) {\r\n\t\tpinta_rusc(f,c);\r\n\t}\r\n}",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n > 0) return n*factorial(n-1);\r\n\telse return 1;\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile(cin >> n)\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 1 or n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0 || n == 1) return 1;\n\treturn factorial(n-1)*(n);\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    \n    if(n <= 1){\n        \n        n = 1;\n    }\n    \n    else n = n * factorial(n - 1);\n    \n    return n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n<2) return 1;\r\n    else return n*factorial(n-1) ;\r\n}\r\n\r\nint main(){\r\n    int n ;\r\n    cin >> n ;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "//\n//  main.cpp\n//  main\n//\n//  Created by Albert Garcia Ginjaume on 30/10/2018.\n//  Copyright Â© 2018 Albert Garcia Ginjaume. All rights reserved.\n//\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n > 1){\n        return n * factorial(n-1);\n    }\n    else return 1;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\nif (n>1){\nreturn n*factorial(n-1);}\nelse {\nreturn 1;\n}\n}\nint main (){\nint a;\ncin>>a;\ncout<<factorial(a)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n\tif ( n == 0) n=1;\n\n\telse {\n\t\tn = n * factorial(n-1);\n\t\t}\n\t\n\treturn n;\n}\n\n\n\n\n\n\n\nint main (){\n\n\tint n;\n\tcin >> n;\n\tcout << factorial( n ) << endl;\n}\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\nint factorial (int n) {\n    if (n == 0 or n ==1) return 1;\n    else {\n\tint x = factorial(n-1);\n\treturn x*n;\n    }\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n\tcout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n = n* factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int x) {\n    if (x==0) return 1;\n    else return x*factorial(x-1);\n   \n}\n \nint main() {\n    int n;\n    while (cin>>n) cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int x){\r\n\tif (x>0){\r\n\t\tx = x*factorial(x-1);\r\n\t}\r\n\telse x = 1;\r\n\t\r\n\treturn x;\r\n}\r\n\r\nint main(){\r\n\tint x;\r\n\tcin >> x ;\r\n\t\r\n\tcout << factorial(x) << endl;\r\n\t\r\n\treturn 0;\r\n}\r\n",
  "int factorial(int n)\n{\n\tif(n == 0) return 1;\n\t\n\treturn n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return factorial(n-1)*n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0)return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout<<factorial(n)<< endl;\n}\n\n    \n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    int f = 1;\n    int i = 0;\n    \n    while (i<n) {\n        ++i;\n        f = f*i;\n    }\n    return f;\n}\n\nint main () {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n){\n    cout << factorial(n) << endl;\n    }      \n}\n        \n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int x){\n    if (x>0) return x*factorial (x-1);\n    return 1;\n    }\nint main(){\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n>=0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n\tint a;\n\tcin>>a;\n\tcout<<factorial(a)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n\tint a;\n\tcin>>a;\n\tcout<<factorial(a)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n   int i = 1;\n   for (int c = 1; c <= n; c++) {\n      i = i * c;\n   } \n   return i;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n   if (n == 0) return 1;\n   else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else{\n        return n*factorial(n-1);\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n/* \n * File:   main.cpp\n * Author: guti\n *\n * Created on October 31, 2018, 9:37 AM\n */\n\n#include <cstdlib>\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) n=1;\n    else{\n        n=n*factorial(n-1);\n    }\nreturn n;\n    }\n\n/*\n * \n */\nint main() {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n    return 0;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint fact;\n\tif (n == 0) fact = 1;\n\telse fact = n * factorial(n - 1);\n\treturn fact;\n}\n\nint main () {\n\tint num;\n\tcin >> num;\n\tcout << factorial(num) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) return n*factorial(n-1);\n    else return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n    int f = 1;\n    int i = 0;\n    while (i < n) {\n        i = i + 1;\n        f = f*i;}\n    return f;\n}\n\n\nint\nmain ()\n{\n  int x;\n  while (cin >> x)\n    {\n      cout << factorial (x) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int x) {\n    if (x == 1) return 1;\n    else return x*factorial(x-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int x) {\n    if (x == 1)  return 1;\n    else {\n        return x*factorial(x-1);\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int x) {\n    if (x == 0)  return 1;\n    else {\n        return x*factorial(x-1);\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;;\n\nint factorial(int n) {\nif (n==0) return 1;\nelse return n*factorial(n-1);\n}\n\nint main () {\nint a;\ncin >> a;\ncout << factorial(a) << endl;\n}\n",
  "int factorial(int n) {\n\tif (n == 0) n = 1;\n\telse {\n\t\tint a = n;\n\t\tn = 1;\n\t\tfor (int rep = 1; rep <= a; ++rep)\n\t\t\tn = n * rep;\n\t}\n\treturn n;\n}\n",
  "int factorial(int n) {\n\tint a = n;\n\tn = 1;\n\tfor (int rep = 1; rep <= a; ++rep)\n\t\t\tn = n * rep;\n\t}\n\treturn n;\n}\n",
  "int factorial(int n) {\n\tint a = n;\n\tn = 1;\n\tfor (int rep = 1; rep <= a; ++rep)\n\t\t\tn = n * rep;\n\treturn n;\n}\n",
  "\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) { \r\nif(n == 0) return 1;\r\nelse return n*factorial(n -1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n >= 1) return n*factorial(n-1);\n    else return 1;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n    \n}\n",
  "#include <iostream>\r\n#include <math.h>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\treturn (n*factorial(n - 1));\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {   \n\n    int r;\n\n        while (n>0) {\n\n            r = n*(n-1);\n\n            --n;\n    }\n\n    return r;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int x) {\n    if (x==0) return 1;\n    else return x*factorial(x-1);\n   \n}\n \nint main() {\n    int n;\n    while (cin>>n) cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n > 0) return n = n*factorial(n-1);\n    return 1;\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\t\r\n\tif (n!=0) f=n*factorial(n-1);\r\n\telse f=1;\r\n\t\r\n}\r\n\t\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\r\n\tint f;\r\n\tf=0;\r\n\t\r\n\tif (n!=0) f=n*factorial(n-1);\r\n\telse f=1;\r\n\t\r\n\treturn f;\r\n\t\r\n}\r\n\t\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main()\n{\n    int n;\n    \n    while (cin >> n) {\n\n    cout << \"Factorial of \" << n << \" = \" << factorial(n) << endl;\n\n    return 0;\n}\n}\n\nint factorial(int n)\n{\n    if(n > 1)\n        return n * factorial(n - 1);\n    else\n        return 1;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\n#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint f = 1;\r\n\tint i = 0;\r\n\twhile (i < n){\r\n\t\t++i;\r\n\t\tf = f*i;\r\n\t}\r\n\treturn f;\r\n}\r\n",
  "\r\n#include \"stdafx.h\"\r\n\r\n#include <iostream>\r\n#include <string>\r\n#include <sstream>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <vector>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\tif (n < 2)return 1;\r\n\telse return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\t\r\n\tcout << factorial(3);\r\n\t\t\r\n\t}\r\n\r\n\r\n\r\n",
  "\r\n#include <iostream>\r\n#include <string>\r\n#include <sstream>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <vector>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\tif (n < 2)return 1;\r\n\telse return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\t\r\n\tcout << factorial(3);\r\n\t\t\r\n\t}\r\n\r\n\r\n\r\n",
  "int factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0)\n        return 1;\n    \n    return n * factorial(n - 1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n\nint main(){\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n\nint main(){\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main(){\r\n\t\r\n\tint n;\r\n\t\r\n\tcin >> n;\r\n\t\r\n\tcout << factorial(n) << endl;\r\n\t\r\n}\r\n\r\nint factorial(int n){\r\n\tif(n==0){\r\n\t\tn = 1;\r\n\t} else {\r\n\t\tn = n * factorial(n-1);\r\n\t}\r\n\treturn n;\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int a = n;\n    int t = 1;\n    for (int i = 1; i <= a; ++i) {\n        t = t * i;\n    }\n    return t;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n        \n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f=1;\n    int i=0;\n    \n    while (i<n){\n        i=i+1;\n        f=f*i;\n    }\n    return f;\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }  \n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    \nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }  \n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }  \n\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "//Factorial recursiu\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tint factorial = 1;\r\n\t\r\n\tif (n != 1) factorial = n * factorial(n -1);\r\n\t\r\n\treturn factorial;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tint fact = 1;\r\n\t\r\n\tif (n != 1) fact = n * factorial(n -1);\r\n\t\r\n\treturn fact;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tint fact = 1;\r\n\t\r\n\tif (n > 1) fact = n * factorial(n -1);\r\n\t\r\n\treturn fact;\r\n}\r\n\r\nint main () {\r\n\tint x;\r\n\tcin >> x;\r\n\t\r\n\tcout << factorial(x) << endl;\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) {return 1;}\n    \n    else {\n\n        return n*factorial(n - 1);\n\n    }\n    \n}\n\nint main () {\n\n    int n;\n\n    cin >> n;\n\n    cout << factorial(n) << endl;\n\n}\n\n",
  "#include <iostream>\r\n#include <math.h>\r\n#include <cmath>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n == 0){\r\n\t\treturn 1;\r\n\t}else{\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n}\r\nint main()\r\n{\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int x) {\r\n    if (x==0) return 1;\r\n    else return x*factorial(x-1);\r\n   \r\n}\r\n \r\nint main() {\r\n    int n;\r\n    while (cin>>n) cout<<factorial(n)<<endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int x) {\n    if (x==0) return 1;\n    else return x*factorial(x-1);\n   \n}\n \nint main() {\n    int n;\n    while (cin>>n) cout<<factorial(n)<<endl;\n}\n",
  "from jutge import read\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1);\n\ndef main():\n    x = read(int)\n    print(factorial(x))\nmain()\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint dif (int x, int y) {\r\n\t\r\n\tint z;\r\n\tz = x - y;\r\n\treturn z;\r\n}\r\n\r\nint main () {\r\n\t\r\n\tint x, y;\r\n\tcin >> x >> y;\r\n\t\t\t\r\n\tcout << dif(x,y) << endl;\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) {\r\n\t\treturn 1;\r\n\t}\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\t\r\n\tint num;\r\n\t\r\n\twhile (cin >> num) {\r\n\t\tcout << factorial(num) << endl;\r\n\t}\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int x) {\r\n    if (x==0) return 1;\r\n    else return x*factorial(x-1);\r\n   \r\n}\r\n \r\nint main() {\r\n    int n;\r\n    while (cin>>n) cout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif(n==0) return 1;\r\n\t\r\n\telse return n*factorial(n-1);\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n\r\n",
  "include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n!=1){\r\n\t\tn=n*factorial(n-1);\r\n\t}else{return(n)}\r\n\tn--;\r\n\r\n\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n!=1){\r\n\t\tn=n*factorial(n-1);\r\n\t}else{return(n);}\r\n\tn--;\r\n\r\n\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n>1){\r\n\t\treturn(n*factorial(n-1));\r\n\t}else{return(1);}\r\n\tn--;\r\n\r\n\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int x) {\r\n    if (x==0) return 1;\r\n    else return x*factorial(x-1);\r\n    \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin>>n) cout<<factorial(n)<<endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int x) {\r\n    if (x==0) return 1;\r\n    else return x*factorial(x-1);\r\n    \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin>>n) cout<<factorial(n)<<endl;\r\n}\r\n\r\nint main() {\r\n    int f, c;\r\n    bool primer = true;\r\n    while (cin >> f >> c) {\r\n        if (not primer) cout << endl;\r\n        pintar_rusc(f, c);\r\n        primer = false;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int x) {\r\n    if (x==0) return 1;\r\n    else return x*factorial(x-1);\r\n    \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin>>n) cout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) <<endl;\n}\n\n\nint factorial(int n){\n    if ( n < 1 ) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    //Cas Base\n    if(n==0) return 1;\n    //Cas Recursiu\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\t\n}\n\nint main (){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "// package factorial;\r\n\r\npublic class Main {\r\n    public static int factorial(int n) {\r\n        if(n == 0)\r\n            return 1;\r\n        else\r\n            return n * factorial(n-1);\r\n    }\r\n\r\n    public static void main(String args[]) {\r\n        int res = factorial(5);\r\n        System.out.println(res);\r\n    }\r\n\r\n}\r\n",
  "/*package factorial;\r\n\r\npublic class Main {*/\r\n    public static int factorial(int n) {\r\n        if(n == 0)\r\n            return 1;\r\n        else\r\n            return n * factorial(n-1);\r\n    }/*\r\n\r\n    public static void main(String args[]) {\r\n        int res = factorial(5);\r\n        System.out.println(res);\r\n    }\r\n\r\n}\r\n*/",
  "// package factorial;\r\n\r\npublic class Main {\r\n    public static int factorial(int n) {\r\n        if(n == 0)\r\n            return 1;\r\n        else\r\n            return n * factorial(n-1);\r\n    }\r\n\r\n    public static void main(String args[]) {\r\n    }\r\n\r\n}",
  "// package factorial;\r\n\r\npublic class Main {\r\n\r\n    public static void main(String args[]) {\r\n\r\n    }\r\n\r\n    public int factorial(int n) {\r\n        if(n == 0)\r\n            return 1;\r\n        else\r\n            return n * factorial(n-1);\r\n    }\r\n}\r\n",
  "// package factorial;\r\n\r\nclass Solution {\r\n    public int factorial(int n) {\r\n        if(n == 0)\r\n            return 1;\r\n        else\r\n            return n * factorial(n-1);\r\n    }\r\n}\r\n",
  "// package factorial;\r\n\r\nclass Main {\r\n    public static int factorial(int n) {\r\n        if(n == 0)\r\n            return 1;\r\n        else\r\n            return n * factorial(n-1);\r\n    }\r\n}\r\n",
  "// package factorial;\r\n\r\nclass Solution {\r\n    public static int factorial(int n) {\r\n        if(n == 0)\r\n            return 1;\r\n        else\r\n            return n * factorial(n-1);\r\n    }\r\n}\r\n",
  "class Solution{\r\n    public static int factorial(int n){\r\n        if (n=0){\r\n            return 1;\r\n        }\r\n        return n*^factorial(n);\r\n    }\r\n}\r\n",
  "class Solution{\r\n    public static int factorial(int n){\r\n        if (n=0){\r\n            return 1;\r\n        }\r\n        return n*factorial(n);\r\n    }\r\n}\r\n",
  "class Solution{\r\n    public static int factorial(int n){\r\n        if (n==0){\r\n            return 1;\r\n        }\r\n        return n*factorial(n);\r\n    }\r\n}\r\n",
  "class Solution{\r\n    public static int factorial(int n){\r\n        if (n==0){\r\n            return 1;\r\n        }\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n  \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main () {\n    int k;\n    while (cin >> k) {\n    cout << factorial(k) << endl;\n    }\n}\n\n\n\nint factorial(int n){\n    if (n == 0) n = 1;\n    else if ( n > 0 ) n = n * factorial (n-1);\n    return n;\n}\n\n",
  "/* utilitzar recursivitat en la funciÃ³ factorial */\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\tint f = n * factorial (n - 1);\n\treturn f;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n == 0){\n    return 1;\n  }\n  else{\n    return n*factorial(n-1);\n  }\n}\n\nint main(){\n  int n;\n  cin >> n;\n\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n == 1 or n == 0) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "using namespace std;\n\nint factorial(int n){\n\treturn n == 0 ? 1 : n*factorial(n-1);\n}\n\n\nint main(){};\n",
  "int factorial(int n){\n\treturn n == 0 ? 1 : n*factorial(n-1);\n}\n\n\nint main(){};\n",
  "\nint factorial(int n) {\n    if (n > 0) {\n        return n * factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0 or n==1) return 1;\n    else{\n        return n*factorial(n-1);\n    }\n}\nint main(){\n    int x;\n    while(cin>>x){\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n) {\n     \n     if ( n>1) {\n         return n*factorial(n-1) ;\n     }\n     else return 1;\n }\n \n int main () {\n     int n;\n     while ( cin >>n) {\n         cout<<factorial(n)<<endl;\n     }\n }\n \n \n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint a=0,f=0;\r\n\twhile (n>a){\r\n\t\ta++;\r\n\t\tf=a*n;\r\n\t}\r\n\treturn f;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while ( cin >> n) {\n        cout<<factorial(n)<<endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==1) return 1;\r\n\treturn factorial (n-1)*n;\r\n}\r\n\r\nint main () {\r\n\tint a;\r\n\tcin >> a;\r\n\tcout << factorial (a) << endl;\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n<1) return 1;\r\n\treturn factorial (n-1)*n;\r\n}\r\n\r\nint main () {\r\n\tint a;\r\n\tcin >> a;\r\n\tcout << factorial (a) << endl;\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0)\r\n\t{\r\n\t\treturn 1;\r\n\t}\r\n\treturn factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\r\n  \r\n    \r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0)\r\n\t{\r\n\t\treturn 1;\r\n\t}\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\r\n  \r\n    \r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;    \n    else {\n    return factorial(n-1) * n;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\r\n{\r\n     if(n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {return 1;}\n        \n}\n\nint main () {\n     int x;\n     cin >> x;\n     cout << factorial(x) << endl;\n }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else return 1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    // Especificamos el caso base para cuando n sea igual a 0\n    if (n == 0) {\n        return 1;\n    }\n    else {\n        //Especificamos la funciÃ³n que debe hacer la recursiva en caso de que no se cumpla el caso base\n        return n * factorial (n - 1);\n    }\n}\nint main () {\n    int n;\n    //Pedimos un nÃºmero por pantalla y llamamos a la funciÃ³n recursiva\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n);\r\nint main(){\r\n\r\nint n;\r\n\r\ncin >> n;\r\n\r\ncout << factorial(n);\r\n\r\n}\r\n\r\nint factorial(int n){\r\n\t\r\n\t//Paso base\r\n\tif(n == 0){\r\n\tn = 1;\r\n\treturn n;\t\r\n\t}\r\n\t //paso general\r\n\t else {\r\n\t \tn = n * factorial(n-1);\r\n\t }\r\n\t\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n);\r\nint main(){\r\n\r\nint n;\r\n\r\ncin >> n;\r\n\r\ncout << factorial(n);\r\n\r\n}\r\n\r\nint factorial(int n){\r\n\t\r\n\t//Paso base\r\n\tif(n == 0){\r\n\tn = 1;\r\n\t\r\n\t}\r\n\t //paso general\r\n\t else {\r\n\t \tn = n * factorial(n-1);\r\n\t }\r\n\treturn n;\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n      }\n}\n\nint factorial (int n){\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int fact) {\n    if (fact == 0) return 1;\n    else return fact * factorial (fact -1);\n}\n\nint main () {\n    int fact;\n    while (cin >> fact) {\n        cout << factorial (fact) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint fact;\r\n\tif(n==0){\r\n\t\tfact=1;\r\n\t}else{\r\n\t\tfact=n*factorial(n-1);\r\n\t}\r\n\treturn fact;\r\n\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0)return 1;\n    else {\n        n = n*factorial(n-1);\n        return n;\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint factorial (n){\r\n    if ((n==1) or (n==0)) return 1;\r\n    else return n*factorial (n-1);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if ((n==1) or (n==0)) return 1;\r\n    else return n*factorial (n-1);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if ((n==1) or (n==0)) return 1;\r\n    else return n*factorial (n-1);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nint main () {\r\n    int n;\r\n\r\n    cout << factorial (cin >> n) << endl;\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\t\n\tif (n == 1 or n == 0) return 1;\n\telse return n *= factorial(n - 1); \n\t\n}\n\n\n\nint main () {\n\t\n\tint n;\n\tcin >> n;\n\t\n\t\n\tcout << factorial(n) << endl;\n\t\n\t\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\n\r\n\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n\r\n    cout << \"Hello\" << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n    int factorial = n;\r\n\r\n    if (n == 1) return factorial;\r\n    else if (n == 0) return 1;\r\n    else factorial * factorial(--n);\r\n}\r\n\r\nint main() {\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n    int fact = n;\r\n\r\n    if (n == 1) return fact;\r\n    else if (n == 0) return 1;\r\n    else return fact * factorial(--n);\r\n}\r\n\r\nint main() {\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n)\n{\n\tif (n == 0)\n\t\treturn 1;\n\telse if (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn n * factorial(n - 1);\n}\n\nint main ()\n{\n\tint number;\n\tcin >> number;\n\tcout << factorial(number) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint res;\r\n\tif (n == 0) res = 1;\r\n\telse if (n == 1) res = 1;\r\n\telse res = n * factorial(n-1);\r\n\treturn res;\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tint fact = 0;\n\tif(n == 0) {\n\t\tfact = 1;\n\t}else {\n\t\tfact = n*factorial(n-1);\n\t}\n\treturn fact;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n \r\nint factorial(int n){\r\n\tif(n==0){\r\n\t\treturn 1;\r\n\t}\r\n\telse{\r\n\t\tfactorial(n-1)*n;\r\n\t}\r\n\t\r\n}\r\n \r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n    factorial(n);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n/*int main(){\n    int n;\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}   \n*/         \n",
  "/*\n\nesto es un comentario\n\n*/\n\nint factorial(int n) {\n  int f;\n  if (n == 0) f = 1;\n    else f = n*factorial(n-1);\n  return f;\n}\n\n\n/*\n\nesto es un comentario\n\n*/\n",
  "# include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tint a=1;\n\twhile (n>0) {\n\ta=a*n;\n\t--n;\n\tfactorial (n);\n\t}\n\treturn a;\n}\nint main () {\n\tint a;\n\tcin >> a;\n\tcout << factorial (a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n);\n}",
  "#include <iostream>\nusing namespace std;\n\nint\tfactorial (int n){\n\tif(n == 1 or n == 0) return 1;\n\telse return n*factorial(n - 1);\n\t\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin>>n;\n\tcout << factorial(n) << endl;\n}\n",
  "int factorial(int n){\n\t\t     if (n==0) return1;\n\t\t     else return n * factorial(n-1);\n\t\t     }\n",
  "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nvector<int> f(13, -1);\r\n\r\nint factorial (int n) {\r\n\tif (n == 1) return 1;\r\n\tif (f[n] != -1) return f[n];\r\n\tf[n] = factorial(n-1)*n;\r\n\r\n\treturn f[n];\r\n}\r\n\r\nint main () {\r\n\t\r\n}",
  "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nvector<int> f(13, -1);\r\n\r\nint factorial (int n) {\r\n\tif (n == 0) return 0;\r\n\tif (n == 1) return 1;\r\n\tif (f[n] != -1) return f[n];\r\n\tf[n] = factorial(n-1)*n;\r\n\r\n\treturn f[n];\r\n}\r\n\r\nint main () {\r\n\t\r\n}",
  "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nvector<int> f(13, -1);\r\n\r\nint factorial (int n) {\r\n\tif (n == 0) return 1;\r\n\tif (n == 1) return 1;\r\n\tif (f[n] != -1) return f[n];\r\n\tf[n] = factorial(n-1)*n;\r\n\r\n\treturn f[n];\r\n}\r\n\r\nint main () {\r\n\t\r\n}",
  "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nint factorial(int n) {if(n > 1) return n*factorial(n-1); else return n;}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n > 1) return n*factorial(n-1);\n\telse if(n == 0) return 1;\n\telse return n;\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n    return 0;\n}\n\nint factorial(int n) {\n    if (n <= 1) {\n        return 1;\n    }\n    return n*factorial(n - 1);\n}\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 1 or n == 0) return 1;\n  else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n - 1);\n}\n\nint main () {\n    int n; cin >> n; cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n*(factorial(n - 1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*(factorial(n - 1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n<2) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n\r\n}\r\n",
  "int factorial(int n) {\n    if (n < 2) return 1;\n    else return (n * factorial(n - 1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial (int n)\n{\n\n    if (n==1)return n;\n    else \n    {\n        return factorial(n-1)*(n);\n \n    }\n\n}\n\nint main (){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial (int n)\n{\n\n    if (n<=1)return 1;\n    else \n    {\n        return factorial(n-1)*(n);\n \n    }\n\n}\n\nint main (){\n\n}\n",
  "// Programa para hacer factoriales\n#include <iostream>\nusing namespace std;\nint main () \n{\n\tlong N;\n\tcout << \"Numero? \";\n\tcin >> N ;\n\tlong i, fact = 1;\n\tfor (i = 1; i <= N; i++) {\n\t\tfact = fact * i;\n\t}\t\t\n\tcout << fact << endl;\n}\n",
  "// Programa para hacer factoriales\n#include <iostream>\nusing namespace std;\nint main () \n{\n\tlong N;\n\tcout << \"Numero? \";\n\tcin >> N ;\n\tlong i, fact = 1;\n\tfor (i = 1; i <= N; i++) {\n\t\tfact = fact * i;\n\t}\t\t\n\tcout << fact << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint main () \n{\n\tlong N;\n\tcin >> N ;\n\tlong i, fact = 1;\n\tfor (i = 1; i <= N; i++) {\n\t\tfact = fact * i;\n\t}\t\t\n\tcout << fact << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main () {\n  int a;\n  while (cin >> a) {\n    cout << factorial (a) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n ){\n    if (n == 0) return 1;\n    return n*factorial (n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << \"El factorial de \" << n << \" es \" << factorial(n) << endl;\n    }\n",
  "int factorial (int n){\n if (n==0) return 1;\n else return n*factorial(n-1);\n}",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int n){\r\n      if (n==0) {return 1;\r\n      }else{\r\n            return n*factorial (n-1);\r\n            }}\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) <<endl;\r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\nusing namespace std;\r\nint fact (int a) {\r\nif (a==0) { return 1;    \r\n}else{ return a*fact (a-1);\r\n}}          \r\nint main(int argc, char *argv[])\r\n{\r\nint a;\r\ncin >> a;\r\ncout << fact(a) << endl;\r\n   system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\nusing namespace std;\r\nint fact (int a) {\r\nif (a==0) { return 1;    \r\n}else{ return a*fact (a-1);\r\n}}          \r\nint main(int argc, char *argv[])\r\n{\r\nint a;\r\ncin >> a;\r\ncout << fact(a) << endl;\r\n   system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\nif (a==0) { return 1;    \r\n}else{ return n*fact (n-1);\r\n}}          \r\nint main()\r\n{\r\nint n;\r\ncin >> n;\r\ncout << fact(n) << endl;\r\n   system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint fatorial (int a ) {\r\n    \r\n     if( a==0) { return 1;\r\n} else {\r\n          return a*fatorial (a - 1);\r\n          }\r\n          \r\n          }\r\n\r\n    \r\nint main()\r\n{\r\n    int a;\r\n    cin >> a;\r\n    cout << fatorial (a) << endl;\r\n    \r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\nif (n==0) { return 1;    \r\n}else{ return n*factorial (n-1);\r\n}}          \r\nint main()\r\n{\r\nint n;\r\ncin >> n;\r\ncout << factorial(n) << endl;\r\n   system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint fatorial (int a ) {\r\n    \r\n     if( a==0) { return 1;\r\n} else {\r\n          return a*fatorial (a - 1);\r\n          }\r\n          \r\n          }\r\n\r\n    \r\nint main()\r\n{\r\n    int a;\r\n    cin >> a;\r\n    cout << fatorial (a) << endl;\r\n    \r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint fatorial (int a ) {\r\n    if( a==0) { return 1;\r\n} else {\r\n          return a*fatorial (a - 1);\r\n          }\r\n          \r\n          }\r\n\r\n    \r\nint main()\r\n{\r\n    int a;\r\n    cin >> a;\r\n    cout << fatorial (a) << endl;\r\n    \r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int a ) {\r\n    if( a==0) { return 1;\r\n} else {\r\n          return a*factorial (a - 1);\r\n          }\r\n          \r\n          }\r\n\r\n    \r\nint main()\r\n{\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial (a) << endl;\r\n    \r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\nif (n == 0) {return  1;} else { return n * factorial (n-1);}\r\n}\r\n\r\nint main()\r\n{int a;\r\n\r\ncin >> a;\r\n\r\ncout << factorial(a);\r\n\r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n// Pre:  n >= 0\n// Post: returns n!\nint factorial(int n) {\n    // Base case\n    if (n == 0) return 1;\n    // Recursive case\n    else return n * factorial(n-1);\n} \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n==0) {\n    return 1;\n    }\n    else // no es necesario xke el return de arriba ya finaliza.\n    {\n    return factorial(n-1)*n;\n    }\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\n\nint main() {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}",
  "// Aquest prog troba el mÃ xim de dos enters\n#include <iostream>\nusing namespace std;\n\nint main () {\n\t\n\tint n,f=1;\n\tcin >> n ;\n\tf=f*n;\n\tif(n!=1){\n\tn=n-1;\n\tf=f*n;\n\t}\n\tcout <<f<< endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    return factorial(n-1) * n;\n    \n}\n\nint main() {\n       int n;\n        cin >> n;\n        cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n          cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main()  {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int x){\n\tint n=1;\n\tfor(int i=1 ; i<=x ; ++i) n=n*i;\n\treturn n;\n}\nint main () {\n\tint n; \n\tcin >> n;\n\tcout << factorial(n)<< endl;\n}\n",
  "//factorials  f=factorial\n#include<iostream>\nusing namespace std;\n//ara comenÃ§a el procediment\nint f (int n){\n\tint f=1;\n\tfor (int i=0; i<n; ++i) f=f*i;\n\treturn f;\n}\nint main(){\n\tint n;\n\twhile (cin>>n) cout<<f(n)<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\nint factorial (int x){\n\tint n=1;\n\tfor (int i=1; i<=x; ++i) n=n*i;\n\treturn n;\n}\nint main (){\n\tint x;\n\tcin>>x;\n\tcout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 0) return 0;\n    else if (n > 1) return n*factorial(n-1);\n    else return 1;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n    \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0)return 1;\r\n    \r\n    return n*factorial(n-1);\r\n    \r\n}\r\n\r\nint main(){\r\n    cout << factorial(0);\r\n    system(\"PAUSE\");\r\n    \r\n    \r\n    \r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0)return 1;\r\n    \r\n    return n*factorial(n-1);\r\n    \r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    return (n*factorial(n-1) );\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n <= 1) return 1;\r\n    return n*factorial (n-1);\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n <= 1) return 1;\r\n    else return n * factorial (n - 1);\r\n}\r\n\r\nint main() {\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0)\r\n       return 1;\r\n    else\r\n        return n * factorial(n - 1);\r\n}\r\n\r\n",
  "#include <iostream>\n#include <stdio.h>\n#include <vector>\n\nusing namespace std;\n\nint factorial (int n) \n{\n  if(n == 0) {\n    return 1;\n  }\n  n = n * factorial(n-1);\n}\n\nint main() \n{\n  long long unsigned int n;\n  cin >> n;\n  cout << factorial(n) << endl;;\n}",
  "#include <iostream>\n#include <stdio.h>\n#include <vector>\n\nusing namespace std;\n\nint factorial (int n) \n{\n  if (n >=0 and n <= 12) {   \n    if(n == 0) {\n      return 1;\n    }\n    n = n * factorial(n-1);\n  }\n}\n\nint main() \n{\n  long long unsigned int n;\n  cin >> n;\n  \n    cout << factorial(n) << endl;    \n  }  \n}",
  "#include <iostream>\n#include <stdio.h>\n#include <vector>\n\nusing namespace std;\n\nint factorial (int n) \n{\n  if (n >= 0 and n <= 12) {   \n    if(n == 0) {\n      return 1;\n    }\n    n = n * factorial(n-1);\n  }\n}\n\nint main() \n{\n  long long unsigned int n;\n  cin >> n;  \n  //cout << factorial(n) << endl;    \n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) \n{\n  if (n >= 0 and n <= 12) {   \n    if(n == 0) {\n      return 1;\n    }\n    n = n * factorial(n-1);\n  }\n}\n\n/*int main() \n{\n  long long unsigned int n;\n  cin >> n;  \n  //cout << factorial(n) << endl;    \n}*/",
  "#include <iostream>\r\n#include <vector>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\nint factorial (int n)\r\n{\r\n    if (n==1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main()\r\n{\r\n\r\n}\r\n",
  "/*#include <iostream>\n\nusing namespace std;*/\n\nint factorial (int n) \n{\n  if (n >= 0 and n <= 12) {   \n    if(n == 0) {\n      return 1;\n    }\n    n = n * factorial(n-1);\n  }\n}\n\n/*int main() \n{\n  long long unsigned int n;\n  cin >> n;  \n  //cout << factorial(n) << endl;    \n}*/",
  "\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n - 1);\n}\n",
  "//#include<cstdio>\r\n\r\n//using namespace std;\r\n\r\nint factorial(int n){\r\n    return (n==0)?1:n*factorial(n-1);\r\n}\r\n/*\r\nint main()\r\n{\r\n    printf(\"%d\\n\",factorial(5));\r\n    return 0;\r\n}*/\r\n",
  "#include <iostream>\rusing namespace std;\rint factorial(int n) {\r    int f;\r    if (n==0) {\r        f=1;\r    }else{\r        f=n*factorial(n-1);\r    }\r    return f;\r}\rint main() {\r    int n;\r    while (cin >> n) {\r    cout << factorial(n) << endl;\r    }\r}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n > 1) return n;\n    else return n*factorial(n-1);\n}     \n\nint main(){\n    return 0;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}     \n\nint main(){\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial() {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0) return 1;\n  else return n * factorial(n-1);\n}\n\nint main() {\n  int x;\n  cin >> x;\n  cout << factorial(x) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n==0 or n==1){return 1;}\n    else {return (n*factorial(n-1));}}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n==0 or n==1){return 1;}\n    else {return (n*factorial(n-1);}}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==1) return 1;\n    return factorial(n-1)*n;}\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;}\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0 or n ==1) return 1;\r\n    else return (n*factorial(n-1));    \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) cout << factorial(n) << endl;   \r\n}\r\n",
  "\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int n);\r\nint main()\r\n{ int n;\r\ncin>>n;\r\ncout<<factorial (n);\r\n    int z;\r\n    cin>>z;\r\n}\r\nint factorial (int n) {\r\n   while (n>=0 & n<=12) {\r\n        return factorial (n*n);\r\n        \r\n        }\r\n    \r\n    \r\n    }\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin>>a;\n    cout<<factorial(a)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n<=1){return 1;}\n        else{return n*factorial(n-1);}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else return (n*factorial(n-1));    \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) cout << factorial(n) << endl;   \r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else return (n*factorial(n-1));    \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<2) return 1;\n    return factorial(n-1)*n;}\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n\n}\n\nint main(){\n\n\n\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n==1 or n==0) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    cout << factorial(12) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n==1) return 1;\n    else if (n==0) return 0;\n    return n * factorial(n-1);\n}\n\nint main() {\n    cout << factorial(12) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n -1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n    cout << factorial(n) << endl;\n}\n}\n",
  "#include <iostream>\r\n#include <vector>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\nint factorial (int n)\r\n{\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n; cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n\r\n}\r\n",
  "#include<cstdio>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    return (n==0)?1:n*factorial(n-1);\r\n}\r\n\r\nint main()\r\n{\r\n    printf(\"%d\\n\",factorial(5));\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n\tif(n < 2)\n\t{\n\t\treturn 1;\n\t}\n\treturn (n)*factorial(n-1);\n}\n\nint main()\n{\n/*\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n\treturn 0;\n*/\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\tif(n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n\t\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n==0 or n==1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0 or n == 1) return 1;\r\n\treturn n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n\r\n",
  "def factorial(n):\n\tif n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n-1)\nprint(factorial(0))\nprint(factorial(1))\nprint(factorial(2))\nprint(factorial(3))\nprint(factorial(4))\n",
  "def factorial(n):\n\tif n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n-1)\n\n",
  "def factorial (n):\n    resultat=1\n    for b in range(n):\n        resultat=(b+1)*int(resultat)\n    return(resultat)\nnumero=int(input())\nprint(factorial(numero))\n",
  "n = int(input())\nmulti = 1\nfor i in range (1, n+1):\n    multi = i* multi\n    i = 1+i\nprint(multi)\n",
  "def factorial(x):\n    f = x\n    for i in range(1, x):\n        f = f * i\n    return f\n\nx = int(input())\nprint(factorial(x))\n",
  "def factorial(x):\n    if x == 0:\n        f = 1;\n    else:\n        f = x\n        for i in range(1, x):\n            f = f * i\n    return f\n\nx = int(input())\nprint(factorial(x))\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tint i = 0;\n\tint f = 1;\n\twhile (i < n) {\n\t\ti++;\n\t\tf = f*i;\n\t}\n\treturn f;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 1) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n < 2) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing  namespace std;\n\nint factorial(int n){\n    if(n== 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing  namespace std;\n\nint factorial(int n){\n    if(n== 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main () {\nint x;\ncin>>x;\ncout<<\"factorial(\"<<x<<\") â \"<<factorial (x)<<endl;\n}\n",
  "#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\nint factorial (int x) {\r\n    if (x==1 or x==0) return 1;\r\n    return x*factorial(x-1);\r\n}\r\nint main () {\r\nint x;\r\ncin>>x;\r\ncout<<factorial(x)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\nif (n==1 or n==0) return 1;\r\nreturn n*factorial(n-1);\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0){\r\n        return 1;\r\n    }\r\n    return n*factorial(n-1);\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\r\n}\n\n",
  "#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n==0 or n==1)return 1;\r\n    return n * factorial(n-1);\r\n}\r\nint main(){\r\nint n;\r\ncin>>n;\r\ncout <<factorial(n)<<endl;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n//recursiveFactorials\r\n\r\n\r\nint factorial(int n){\r\n     int fact = 1;\r\n     while ( n < 1){\r\n        return n * factorial(n-1);\r\n     }\r\n}\r\n\r\nint main(){\r\n\r\n}\r\n",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n//recursiveFactorials\r\n\r\n\r\nint factorial(int n){\r\n     int fact = 1;\r\n     if ( n == 0){\r\n        return 1;\r\n        } else {\r\n        return n * factorial(n-1);\r\n     }\r\n}\r\n\r\nint main(){\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n < 2) return 1;\r\n\telse {\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tint result;\r\n\tcin >> x;\r\n\tresult = factorial(x);\r\n\tcout << \"factorial(\" << x << \")\" << \"?\" << result << endl; \r\n}\r\n",
  "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        System.out.println(factorial(4));\n        System.out.println(\"Hello world!\");\n    }\n    public static int factorial(int n){\n        if(n == 0)\n            return 1;\n        else{\n            return factorial(n-1)*n;\n        }\n    }\n}\n",
  "import java.util.Scanner;\n\nclass Main {\n\n  public static void main(String[] args) {\n    final Scanner sc = new Scanner(System.in);\n    while (sc.hasNextInt()) {\n      int n = sc.nextInt();\n      System.out.println(Solution.factorial(n));\n    }\n  }\npublic static int factorial(int n){\n        if(n == 0)\n            return 1;\n        else{\n            return factorial(n-1)*n;\n        }\n    }\n}\n",
  "import java.util.Scanner;\n\nclass Main {\n\n  public static void main(String[] args) {\n    final Scanner sc = new Scanner(System.in);\n    while (sc.hasNextInt()) {\n      int n = sc.nextInt();\n      System.out.println(factorial(n));\n    }\n  }\npublic static int factorial(int n){\n        if(n == 0)\n            return 1;\n        else{\n            return factorial(n-1)*n;\n        }\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n<=1) return 1;\r\n\telse {\r\n\t\tn = n*factorial(n-1);\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n<=1) return 1;\r\n\telse {\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint fact ( int a ) {\n\n\tif ( a == 0 or a == 1 ) return 1;\n\telse return a*fact(a-1);\n\n}\n\nint main () {\n\n\tint n;\n\tcin>>n;\n\n\tcout<<fact(n);\n\t\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial ( int n ) {\n\n\tif ( n == 0 or n == 1 ) return 1;\n\telse return n*factorial(n-1);\n\n}\n\nint main () {\n\n\tint a;\n\tcin>>a;\n\n\tcout<<factorial(a);\n\n}",
  "#include <stdio.h>\r\n\r\nint factorial(int n) {\r\n\tif (n == 0)\r\n\t\treturn 1;\r\n\telse\r\n\t\treturn (factorial(n - 1)*n);\r\n}\n\nint main(){\nprintf(\"Hello world!\\n\");\n}\n",
  "package main;\r\n\r\nimport java.util.*;\r\n\r\npublic class Main {\r\n\tstatic Scanner scan = new Scanner(System.in);\r\n\tpublic static int factorial(int n) {\r\n\t\tif(n<=1) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn factorial(n-1)*n;\r\n\t}\r\n}\r\n",
  "import java.util.*;\r\n\r\npublic class main {\r\n\tstatic Scanner scan = new Scanner(System.in);\r\n\tpublic static int factorial(int n) {\r\n\t\tif(n<=1) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn factorial(n-1)*n;\r\n\t}\r\n}\r\n",
  "class Main {\r\n\tpublic static int factorial(int n) {\r\n\t\tif(n<=1) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn factorial(n-1)*n;\r\n\t}\r\n}\r\n",
  "import java.util.*;\r\n\r\nclass Main {\r\n\tstatic Scanner scan = new Scanner(System.in);\r\n\tpublic static void main (String args[]) {\r\n\t\tint n = scan.nextInt();\r\n\t\tSystem.out.println(factorial(n));\r\n\t}\r\n\tpublic static int factorial(int n) {\r\n\t\tif(n<=1) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn factorial(n-1)*n;\r\n\t}\r\n}\r\n",
  "import java.util.*;\r\n\r\nclass Main {\r\n\tstatic Scanner scan = new Scanner(System.in);\r\n\tpublic static void main (String args[]) {\r\n\t\tlong n = scan.nextInt();\r\n\t\tSystem.out.println(factorial(n));\r\n\t}\r\n\tpublic static long factorial(long n) {\r\n\t\tif(n == 0) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n>1) return n*factorial(n-1);\r\n\treturn 1;\r\n}\r\n",
  "int factorial(int n)\r\n{\r\n\tif (n < 2)\r\n\t\treturn 1;\r\n\treturn n * factorial(n - 1); \r\n}",
  "int factorial(int n){\n\tif (n == 1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "int factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "import java.util.*;\r\n\r\nclass Main {\r\n\tstatic Scanner scan = new Scanner(System.in);\r\n\tpublic static void main (String args[]) {\r\n\t\tint n = scan.nextInt();\r\n\t\tSystem.out.println(factorial(n));\r\n\t}\r\n\tpublic static int factorial(int n) {\r\n\t\tif(n==0) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n",
  "import java.util.*;\r\n\r\nclass Main {\r\n\tpublic static int factorial(int n) {\r\n\t\tif(n==0) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int res;\n    if (n == 0 or n == 1) res = 1;\n    else res = n*factorial(n-1);\n    return res;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int v;\n    if (n == 0 or n == 1) v = 1;\n    v = n * factorial(n-1);\n    return v;\n   \n    \n    \n        \n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int v;\n    if (n == 0 or n == 1) v = 1;\n    v = n * factorial(n-1);\n    return v;\n   \n    \n    \n        \n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   \n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int res;\n    if (n == 0 or n == 1) res = 1;\n    else res = n * factorial(n - 1);\n    return res;\n        \n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   \n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n < 2) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int f;\n    if (n == 1 or n == 0) f = 1;\n    else {\n        f = n * factorial(n-1);\n    } \n    return f;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main ()\n{\n    int x, r;\n    while (cin >> x)\n    {\n        r = factorial(x);\n        cout << r << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main ()\n{\n    int x, r;\n    while (cin >> x)\n    {\n        r = factorial(x);\n        cout << r << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int x = n;\n    while (n > 1) {\n        --n;\n        x = x * n;\n}\nreturn x;\n}\n\nint main () {\n    int n;\n    cin >> n ;\n    cout<< factorial (n) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int x = n;\n    if (x == 0) ++x;\n    while (n > 1) {\n        --n;\n        x = x * n;\n}\nreturn x;\n}\n\nint main () {\n    int n;\n    cin >> n ;\n    cout<< factorial (n) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    int res;\n    if (n <= 1) res = 1;\n    else res = n*factorial(n - 1);\n    return res;\n}\n\nint main ()\n{\n    int x, r;\n    while (cin >> x)\n    {\n        r = factorial(x);\n        cout << r << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if(n == 1) return 1;\n    \n    else return n*factorial(n-1);\n}\n\nint main()\n{\n    int iNumero;\n    cin >> iNumero;\n    cout << factorial(iNumero)<< endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if(n == 0) return 1;\n    \n    else\n    {\n        int iRespuesta = factorial(n-1);\n        \n        return n*iRespuesta;\n    }\n}\n\nint main()\n{\n    int iNumero;\n    cin >> iNumero;\n    cout << factorial(iNumero)<< endl;\n}\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1); \n}\n\n\n\n\n\nint main () {\n    int n;\n    cin >> n; \n    cout << factorial(n) << endl;\n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n>1){\n        return n*factorial(n-1);\n    }\n    else return 1;\n}\n\n\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n    \n            \n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int s;\n    if (n > 1){\n        s= n * factorial(n - 1);\n    }\n    else {s = 1;}\n    \n    return s;\n    \n}\n\n\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n    \n            \n    \n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n) {\n    \n    int s;  \n    if (n == 0) s = 1;\n    else s = n*factorial(n-1); \n    return s; \n}\n\n\n\n\n\nint main () {\n    int n;\n    cin >> n; \n    cout << factorial(n) << endl;\n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n*factorial(n-1);\n    else return 1;\n}\n  \n\nint main () {\n    int n;\n    cin >> n ;\n    cout<< factorial (n) << endl;\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    // Especificamos el caso base para cuando n sea igual a 0\r\n    if (n == 0) {\r\n        return 1;\r\n    }\r\n    else {\r\n        //Especificamos la función que debe hacer la recursiva en caso de que no se cumpla el caso base\r\n        return n * factorial (n - 1);\r\n    }\r\n}\r\nint main () {\r\n    int n;\r\n    //Pedimos un número por pantalla y llamamos a la función recursiva\r\n    while(cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\t\r\n\tif (n>1) return n*factorial(n-1);\r\n\telse return 1;\r\n\r\n\r\n\t\r\n}\r\n\r\nint main(){\r\n\t\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\t\n\tif(n == 0)\n\t\treturn 1;\n\telse\n\t\treturn n * factorial(n-1);\n\n\n\n\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\t\n\tif(n == 0)\n\t\treturn 1;\n\telse\n\t\treturn n * factorial(n-1);\n\n\n\n\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x){\n    if (x == 0)\n        return 1;\n    else {\n        return x*factorial(x-1);\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return factorial(n-1) * n;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n) {\r\n \tif(n==0 or n==1) {\r\n \t\treturn 1;\r\n\t }\r\n\t else {\r\n\t \treturn n*factorial(n-1);\r\n\t }\r\n }\r\n \r\n int main() {\r\n \tint n;\r\n \tcin >> n;\r\n \tcout << factorial(n) << endl;\r\n }\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "def factorial(n):\n\tif n == 1:\n\t\treturn 1\n\telse:\n\t\treturn n*factorial(n-1)\n\n\n\n",
  "x = [-1,-24,-65,-12,-54,-123,-76,-15]\nz = x[0]\nfor i in x:\n\tif i>z:\n\t\tz = i\n\t\t\nprint(z)\n",
  "def factorial(n):\n\tif n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n*factorial(n-1)\n\n\nprint(factorial (5))\n",
  "def factorial(n):\n\tif n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n*factorial(n-1)\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n){\r\n\tint a = n;\r\n\tif (a-1!=0) return (a * factorial (a-1));\r\n\telse return a;\r\n\r\n}\r\nint main () {\r\n\tint a;\r\n\twhile (cin>>a){\r\n\tint b = factorial (a);\r\n\tcout<<b<<endl;\r\n\t}\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int r = factorial(n-1);\n        return n*r;\n    }\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n int factorial(int n){\r\n int x=1;\r\n for(int i=1;i<=n;++i){\r\n     x=x*i;\r\n }\r\n return x;\r\n }\r\n int main(){\r\n     int n;\r\n     cin>>n;\r\n     int d= factorial (n);\r\n     cout<<d<<endl;\r\n }\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main()\n{\n    int x;\n    while (cin >> x)\n    {\n        cout << factorial(x) << endl;\n    }\n}\n\nint factorial(int n)\n{\n    if(n <= 1)\n    {\n        return 1;\n    }\n    else\n    {\n        return n * factorial(n-1);\n    }\n    \n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tint i = 0;\n\tint f = 1;\n\twhile (i < n) {\n\t\ti++;\n\t\tf = f*i;\n\t}\n\treturn f;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int c = 1;\n    while (n > 0){\n        c = c*n;\n        --n;\n    }\n    return c;\n}\nint main (){\n    int a;\n    cin >> a;\n    cout << factorial(a) <<endl;\n}\n    \n        \n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n>1) {\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\telse {\r\n\t\t return 1 ;\r\n\t}\r\n}\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==0){\r\n\t\treturn 1;\r\n\t}else{\r\n\t\treturn (n*factorial(n-1));\r\n\t}\r\n\t\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    int m= factorial(n-1);\n    return  n*m;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n        \n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int x) {\r\n    if (x==0) return 1;\r\n    else return x*factorial(x-1);\r\n   \r\n}\r\n \r\nint main() {\r\n    int n;\r\n    while (cin>>n) cout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif(n==0) return 1;\r\n\t\r\n\telse return n*factorial(n-1);\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\t}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main()\n{\n    int n;\n    \n    while (cin >> n) {\n\n    cout << \"Factorial of \" << n << \" = \" << factorial(n) << endl;\n\n    return 0;\n}\n}\n\nint factorial(int n)\n{\n    if(n > 1)\n        return n * factorial(n - 1);\n    else\n        return 1;\n    \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n\n#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \n",
  "int factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n);\nint factorial(int n){\n    if(n==0){\n        return 1;\n    }else if(n==1){\n        return 1;\n    }\n    else\n        return n*factorial(n-1);\n\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int i=0;\n    int f1 = 1;\n    while (i < n){\n        ++i;\n        f1 = f1 * i;\n    }\nreturn f1;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n==0) return 1;\n\telse return factorial(n-1)*n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main () {\n    int n;\n    while (cin>>n) {\n        cout<<factorial(n)<<endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n  if(n==0) return 1;\n  else return (n*factorial(n-1));\n}\n\nint main(){\n  int x;\n  while (cin>>x)\n  {\n    cout<<factorial(x)<<endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n      }\n}\n\nint factorial (int n){\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n>1){\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\telse return 1;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1) return (1);\n    else return (n*(factorial(n-1)));\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n == 0) {\r\n\t\treturn 1;\r\n\t}\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\t\r\n\tint num;\r\n\t\r\n\twhile (cin >> num) {\r\n\t\tcout << factorial(num) << endl;\r\n\t}\t\r\n}\r\n",
  "import java.util.*;\r\nclass Main {\r\n\tstatic Scanner scan = new Scanner(System.in);\r\n\tpublic static void main (String args[]) {\r\n\t\tint n = scan.nextInt();\r\n\t\tSystem.out.println(factorial(n));\r\n\t\t\r\n\t}\r\n\tpublic static int factorial(int n) {\r\n\t\tif((n<=0)) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n <= 1){\r\n    return 1;\r\n  } else {\r\n    return (n * factorial(n-1));\r\n  }\r\n}\r\n\r\nint main() {\r\n}",
  "import java.util.ArrayList;\r\nimport java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n    }\r\n\r\n    public static int factorial(int n) {\r\n        if (n == 1) {\r\n            return 1;\r\n        } else {\r\n            return (n * factorial(n-1));\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n",
  "import java.util.ArrayList;\r\nimport java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static int factorial(int n) {\r\n        if (n == 1) {\r\n            return 1;\r\n        } else {\r\n            return (n * factorial(n-1));\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n",
  "\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n\r\n    }\r\n\r\n    public static int factorial(int n) {\r\n        if (n == 1) {\r\n            return 1;\r\n        } else {\r\n            return (n * factorial(n-1));\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n",
  "from jutge import read\nimport math\n\nx = read(int)\n\ndef factorial(x):\n\n    m = math.factorial(x)\n\n    return m\n\nwhile x is not None:\n\n    print(factorial(x))\n    x = read(int)\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout <<factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if(n==1)\r\n        return 1;\r\n    else\r\n        return n*factorial(n-1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    int f = factorial(n);\r\n    cout << f << endl;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if(n==0 or n==1)\r\n        return 1;\r\n    else\r\n        return n*factorial(n-1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    int f = factorial(n);\r\n    cout << f << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\t\r\n\tn = n*factorial(n-1)\r\n\treturn n;\r\n}\r\n\r\n\r\nint main (){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\t\r\n\tn = n*factorial(n-1);\r\n\treturn n;\r\n}\r\n\r\n\r\nint main (){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\t\r\n\tif (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\n\r\nint main (){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return factorial(n-1)*n;\n    }\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n < 2) return 1;\n\telse return n*factorial(n-1);\n}",
  "#! /usr/bin/python3\n\n\n'''\nProcedure\n\n* The function fact(x) will keep calling itself with argument (x-1) until (x-1) == 1.\n* When the condition is met, it will perform a bottom-up approach all the way to the value\npassed as argument (x) where (0 <= x <= 12)\n* If it's already lower (0) it will return 0 directly. \n\n(x = 4) -> Returns 4 * fact(3)\n(x = 3) -> Returns 3 * fact(2)\n(x = 2) -> Returns 2 * fact(1)\n\n(x = 1) -> Returns 1\t\t\t\t\t-> 1\n\n(x = 2) -> Returns 2 * fact(1) -> 2 * 1 -> 2\n(x = 3) -> Returns 3 * fact(2) -> 3 * 2 -> 6\n(x = 4)\t-> Returns 4 * fact(3) -> 4 * 6 -> 24\n\n(x = 0) -> Returns 0\t\t\t\t\t-> 0\n\n\nNote: This is my first submission on this platform. Any kind of feedback is \nvery much appreciated. \n\npbufre@gmail.com\n\n'''\n\n# Code\n\t\ndef fact(x):\n\tif x < 0 or x > 12:\n\t\treturn None\n\tif x == 1:\n\t\treturn 1\n\tif x == 0:\n\t\treturn 0\n\t\n\telse:\n\t\treturn x * fact(x-1)\n\nprint(fact(0))\nprint(fact(1))\nprint(fact(2))\nprint(fact(3))\nprint(fact(4))\n",
  "\n\n'''\nProcedure\n\n* The function fact(x) will keep calling itself with argument \n  (x-1) until (x-1) == 1.\n* When the condition is met, it will perform a bottom-up\n  approach all the way to the value passed as argument (x)\n  where (0 <= x <= 12)\n* If it's already lower (0) it will return 0 directly. \n\n(x = 4) -> Returns 4 * fact(3)\n(x = 3) -> Returns 3 * fact(2)\n(x = 2) -> Returns 2 * fact(1)\n\n(x = 1) -> Returns 1                                   \n(x = 2) -> Returns 2 * fact(1) -> 2 * 1 -> 2\n(x = 3) -> Returns 3 * fact(2) -> 3 * 2 -> 6\n(x = 4)       -> Returns 4 * fact(3) -> 4 * 6 -> 24\n\n(x = 0) -> Returns 0                                   \n\n\nNote: This is my first submission on this platform. Any\nkind of feedback is very much appreciated. \n\npbufre@gmail.com\n\n'''\n\n# Code\n       \ndef fact(x):\n       if x < 0 or x > 12:\n              return None\n       if x == 1:\n              return 1\n       if x == 0:\n              return 0\n       \n       else:\n              return x * fact(x-1)\n\nprint(fact(0))\nprint(fact(1))\nprint(fact(2))\nprint(fact(3))\nprint(fact(4))\n",
  "\n# Code\n       \ndef fact(x):\n       if x < 0 or x > 12:\n              return None\n       if x == 1:\n              return 1\n       if x == 0:\n              return 0\n       else:\n              return x * fact(x-1)\n\nprint(fact(0))\nprint(fact(1))\nprint(fact(2))\nprint(fact(3))\nprint(fact(4))\n",
  "# Code\n       \ndef fact(x):\n    if x < 0 or x > 12:\n        return None\n    if x == 1:\n        return 1\n    if x == 0:\n        return 0\n    else:\n        return x * fact(x-1)\n\nprint(fact(0))\nprint(fact(1))\nprint(fact(2))\nprint(fact(3))\nprint(fact(4))\n",
  "# Code\n\ndef fact(x):\n    if x < 0 or x > 12:\n        return None\n    if x == 1:\n        return 1\n    if x == 0:\n        return 0\n    else:\n        return x * fact(x-1)\n\n\nprint(fact(0))\nprint(fact(1))\nprint(fact(2))\nprint(fact(3))\nprint(fact(4))\n",
  "# Code\n\n\ndef fact(x):\n    if x < 0 or x > 12:\n        return None\n    if x == 1:\n        return 1\n    if x == 0:\n        return 0\n    else:\n        return x * fact(x-1)\n\n",
  "# Code\n\n\ndef fact(x):\n    if x < 0 or x > 12:\n        return None\n    if x == 1:\n        return 1\n    if x == 0:\n        return 0\n    else:\n        return x * fact(x-1)",
  "# Code\n\n\ndef fact(x):\n    if x < 0 or x > 12:\n        return None\n    if x == 1:\n        return 1\n    if x == 0:\n        return 0\n    else:\n        return x * fact(x-1)\n",
  "from jutge import read\n\ndef factorial(n):\n  if n < 0 or n > 12:\n    return None\n  if n == 1:\n    return 1\n  if n == 0:\n    return 0\n  else:\n    return n * factorial(n-1)\n\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\n",
  "from jutge import read\n\ndef factorial(n):\n  if n < 0 or n > 12:\n    return None\n  elif n == 1:\n    return 1\n  elif n == 0:\n    return 0\n  else:\n    return n * factorial(n-1)\n\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\n",
  "from jutge import read\n\ndef factorial(n):\n  if n < 0 or n > 12:\n    return 0\n  if n == 1:\n    return 1\n  if n == 0:\n    return 1\n  else:\n    return n * factorial(n-1)\n\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tint res;\n\tif(n==0){res=1;}\n\telse if(n==1){res=1;}\n\telse res=factorial(n-1)*n;\n\treturn res;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint x;\r\n\tif (n=1 or 0) {\r\n\t\treturn x\r\n\t}\r\n\telse {\r\n\t\tx=n*factorial(n)\r\n\t\tn=n-1;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint x;\r\n\tif (n==1 or 0) {\r\n\t\treturn x;\r\n\t}\r\n\telse {\r\n\t\tx=n*factorial(n)\r\n\t\tn=n-1;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint x;\r\n\tif (n==1 or 0) {\r\n\t\treturn x;\r\n\t}\r\n\telse {\r\n\t\tx=n*factorial(n)\r\n\t\tn=n-1;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint x;\r\n\tif (n==1 or 0) {\r\n\t\treturn x;\r\n\t}\r\n\telse {\r\n\t\tx=n*factorial(n);\r\n\t\tn=n-1;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint x;\r\n\tif (n==1 or 0) {\r\n\t\treturn x;\r\n\t}\r\n\telse {\r\n\t\tx=n*factorial(n);\r\n\t\tn=n-1;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==1 or n==0) {\r\n\t\treturn n;\r\n\t}\r\n\telse {\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n = 0) factorial = 1;\r\n\telse n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "// Example program\r\n#include <iostream>\r\n#include <string>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n != 0) {\r\n        n = n*factorial(n-1);\r\n        return (n);\r\n    }\r\n    else {\r\n        return (1);\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\n#include <math.h>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    return factorial(n-1)*n;\r\n}\r\n\r\nint main (){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\nint factorial(int n){\nif (n <=1){\nreturn 1;\n}\nelse {\nreturn (n*factorial(n-1)) \n}\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\nint factorial(int n){\nif (n <=1){\nreturn 1;\n}\nelse {\nreturn (n*factorial(n-1));\n}\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\nint main()\n{\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\treturn 0;\n}\nint factorial(int n)\n{\n\tif (n > 0)\n\t{\n\t\treturn n * factorial(n - 1);\n\t}\n\telse\n\t{\n\t\treturn 1;\n\t}\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==1){\n    return n;\n  }\n  else{\n    return n = n * factorial(n-1);\n  }\n}\n\nint main(){\n\tint x;\n\tcin >> x;\n  cout << factorial(x) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==1){\n    return n;\n  }\n  else{\n    return n * factorial(n-1);\n  }\n}\n\nint main(){\n\tint x;\n\tcin >> x;\n  cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1){\n        return 1;\n    } else{\n        return n * factorial(n-1);\n    }\n}\n",
  "\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) {\n\treturn 1;\n\t}\n\treturn factorial(n)*(n-1)\n}\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) {\n\treturn 1;\n\t}\n\treturn factorial(n)*(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n/*\nint double_factorial(int x){\n\tbool isEven;\n\tint result = 1;\n\tif(x%2 == 1){\n\t\tisEven = false;\n\t}else if(x%2 == 0){\n\t\tisEven = true;\n\t}\n\tfor(int i = 1;i<=x;i++){\n\t\tif(isEven == true){\n\t\t\tif(i%2 == 0){\n\t\t\t\tresult = result*i;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(i%2 == 1){\n\t\t\t\tresult = result*i;\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\treturn result;\n}\n*/\n\nint double_factorial(int x){\n\tint res = 1;\n\tfor(int i = 1;i<=x;i++){\n\t\tif (x % 2 == i % 2) res *= i;\n\t}\n\treturn res;\n}\n\nint main(){\n\tint input;\n\twhile(cin>>input){\n\tcout<<double_factorial(input)<<endl;\n\t}\t\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif(n==0){\n\t\treturn 1;\n\t}\n\treturn n*factorial(n-1);\n}\nint main (){\n\tint input;\n\tcin>>input;\n\tcout<<factorial(input)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1){\n        return 1;\n    }else{\n        return (n * factorial(n-1));\n    }\n}\n\nint main(){\n    cout << factorial(0) << endl;\n    cout << factorial(1) << endl;\n    cout << factorial(2) << endl;\n    cout << factorial(3) << endl;\n    cout << factorial(4) << endl;\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tint res = 1;\n\tif(n == 0){\n\t\treturn 1;\n\tfor (int i = 1; i <= n; ++i){\n\t\tres = res * i;\n\t}\n\treturn res;\n}\nint main(){ \n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) {\n\treturn 1;\n\t}\n\telse return factorial*(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tint res = 1;\n\tif(n == 0){\n\t\treturn 1;\n\t}\n\tfor (int i = 1; i <= n; ++i){\n\t\tres = res * i;\n\t}\n\treturn res;\n}\nint main(){ \n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) {\n\treturn 1;\n\t}\n\telse return factorial*(n-1);\n}\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) {\n\treturn 1;\n\t}\n\treturn factorial(n)*(n-1);\n}\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) {\n\t\treturn 1;\n\t}\n\treturn factorial(n)*(n-1);\n}\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) {\n\t\treturn 1;\n\t}\n\treturn factorial(n-1)*(n);\n}\n\n",
  "#include <iostream>\nusing namespace std;\nunsigned long long int factorial (int n){\n\tif(n==0){\n\t\treturn 1;\n\t}\n\treturn n*factorial(n-1);\n}\nint main(){\n\tunsigned long long int input;\n\twhile(cin>>input){\n\t\tcout<<factorial(input)<<endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n\tif(n==0){\n\t\treturn 1;\n\t}\n\treturn n*factorial(n-1);\n}\nint main(){\n\tint input;\n\twhile(cin>>input){\n\t\tcout<<factorial(input)<<endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n>1){\n\t\treturn n*factorial(n-1);\n\t}else{return 1;}\n}\n\nint main(){\n} \n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\nint n,a;\ncin>>n;\na=factorial(n);\ncout<<a<<endl;\n    \nreturn 0;\n}\n\nint factorial(int n){\n    if(n==0){\n        return 1;\n    }\n    n=n*factorial(n-1);\n    \n    return n;\n    \n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 1){\n\t\treturn 1;\n\t}\n\telse{\n\t\treturn n * factorial(n-1);\n\t}\n\t\n}\n\nint main(){\n\tint x;\n\tcin >> x;\n\t\n\tcout << factorial(x) << endl;\n}\n    \n    \n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 1){\n\t\treturn 1;\n\t}\n\telse{\n\t\tn = n * factorial(n-1);\n\t}\n\treturn n;\n\t\n}\n\nint main(){\n\tint x;\n\tcin >> x;\n\t\n\tcout << factorial(x) << endl;\n}\n    \n    \n",
  "#include <iostream>\nusing namespace std;\nint number_of_digits(int n){\n\tif(n<10){\n\t\treturn 1;\n\t}else{\n\t\tn=n/10;\n\t}\n\treturn 1+number_of_digits(n);\n\t\n}\nint main(){\n\tint a;\n\twhile(cin>>a){\n\tcout<<number_of_digits(a)<<endl;\n\t}\n}\n",
  "#include<iostream>\n#include<math.h>\n#include<vector>\n \nusing namespace std;\n \nint factorial(int n){\n\tif(n == 1){\n\t\treturn 1;\n\t}\n\telse{\n\t\tn = n*factorial(n-1);\n\t}\n\treturn n;\n}\n \nint main(){\n    int n; \n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <vector>\n \nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0){\n\t\tn = 1;\n\t}\n\telse{\n\t\tn = n*factorial(n-1);\n\t}\n\treturn n;\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n * (n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\n",
  "#include <iostream>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\tint w = 1;\n\tfor (int a = 1; a <= n; ++a){\n\t\tw = w*a;\n\t}\n\treturn w;\n\t\n}\n\nint main() {\n\tint q;\n\tcin >> q;\n\tcout << factorial(q) << endl;\t\n}\n",
  "//factorial\n\n#include <iostream>\nusing namespace std;\n\nint main () {\nint factorial(int n) {\n    cin>>n;\n    if (n==0) return 1;\n    return n*factorial(n-1);\n    cout<<n<<endl;\n}      \n    \n\n",
  "//factorial\n\n#include <iostream>\nusing namespace std;\n\nint main () {\nint factorial(int n) \n    cin>>n;\n    if (n==0) return 1;\n    return n*factorial(n-1);\n    cout<<n<<endl;\n}      \n    \n\n",
  "#include <cmath>\n#include <iostream>\nusing namespace std;\n\n int factorial(int n) {\n      if (n==0) return 1;\n      else return n*factorial(n-1);\n      }\n",
  "//iterative factorial\n\n#include <iostream>\n#include <cmath>\nusing namespace std;\n\n   int factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main () {\n\n   int n;\n   while (cin>>n){\n   cout<<factorial(n)<<endl;\n}   \n   return 0;\n}      \n    \n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  return n*factorial(n - 1);\n}\n\nint main() {\n  int n;\n  while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n    \n",
  "#include <iostream>\n/*#include <cmath>*/\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n\tint n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n);\nint main() {\nint n;\ncin >> n;\ncout << \"factorial(\" << n << \") -> \"<<factorial(n);\nreturn 0;\n}\nint factorial(int n) {\nif(n > 1)\nreturn n * factorial(n - 1);\nelse return 1;\n}\n",
  "#include  <iostream>\n\nusing namespace std;\n\n int factorial(int n){\n\t if ( n < 1 ) return 1;\n\t return n * factorial(n-1);\n\t \n\t \n\t }\n\n int main() {\nint a ;\ncin >> a ;\ncout <<  endl;\ncout << factorial(a) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nfor (int i = 0; i < n; ++i) n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nfor (int i = 1; i < n; ++i) n * factorial(n - 1);\n}\n",
  "hola quÃ¨ tal\n",
  "hola que tal\n",
  "#include <iostream>\nusing namespace std;\n\nint main() {\n  cout << \"hola\" << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  return n*factorial(n - 1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint main() {\n    int x, y;\n    int z = 0;\n    cin >> x >> y;\n    int res = 0;\n    for (int i = 0; i < x; ++i) {\n        for (int j = 0; j < y; ++j) {\n            char c;\n            cin >> c;\n            if (z%2 == 0) res +=c - '0';\n            ++z;\n        }\n        if (y%2 == 0) ++z;\n    }\n    cout << res << endl;\n}\n\n\n\n\n//mmroia\n\n\n\n//3 4 273504791508\n// 01234567890123456789\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint fact(int n) {\n    if (n == 0) return 1;\n    else return n*fact(n - 1);\n}\n\n\nint main() {\n    int n;\n    while (cin >> n) cout << fact(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n    else return n*factorial(n - 1);\n}\n\n\nint main() {\n    int n;\n    while (cin >> n) cout << fact(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\n\nint main() {\n    int n;\n    while (cin >> n) cout << fact(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  " \nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n \npublic class tp {\npublic static void main(String[] args) {\ntry {\nBufferedReader br = new BufferedReader(new InputStreamReader(\nSystem.in));\nSystem.out.print(\"Ingrese el nÃºmero de filas del triangulo de pascal:\");\n \nint n = Integer.parseInt(br.readLine());\n \nfor (int i = 0; i < n; i++) {\n\t\n\tfor (int j = 0; j < n - i; j++) {\n\t\tSystem.out.print(\"   \");\n\t}\n\tfor (int k = 0; k <= i; k++) {\n\t\tSystem.out.print(\"   \");\n\t\tSystem.out.print(pascal(i,k));\n\t\tSystem.out.print(\"  \");\n\t\t//number = number * (i - k) / (k + 1);\n\t\t//pascal(i,k);\n\t}\n\tSystem.out.println();\n \n}\n\n} catch (Exception e) {\nSystem.out.println(e);\n}\n}  \n\n\nprivate static int pascal(int n, int k)\n{\nif (k>n || k<0)\n   return 0;\nelse if (k==n || k==0)\n\treturn 1;\nelse \n   return pascal(n-1,k-1)+pascal(n-1,k);\n\n\n}\n}\n",
  "from jutge import read_many\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nfor n in read_many(int):\n    print(factorial(n))\n\n",
  "int factorial(int n) {\r\n  if (n == 0) return 1;\r\n  return n * factorial(n-1);\r\n}",
  "int factorial(int n) {\n\tif (nn <= 1) {\n\t\treturn 1;\n\t}\n\treturn n * factorial(n - 1);\n}\n",
  "int factorial(int n) {\n\tif (n <= 1) {\n\t\treturn 1;\n\t}\n\treturn n * factorial(n - 1);\n}\n",
  "int factorial(int n) {if (n <= 1) {return 1;}return n * factorial(n - 1);}\n",
  "int factorial(int n) {\n\tswitch (n) {\n\t\tcase 2: return 2; \n\t\tcase 3: return 6;\n\t\tcase 4: return 24;\n\t\tcase 5: return 120;\n\t\tcase 6: return 720;\n\t\tcase 7: return 5040;\n\t\tcase 8: return 40320;\n\t\tcase 9: return 362880;\n\t\tcase 10: return 3628800;\n\t\tcase 11: return 39916800;\n\t\tcase 12: return 479001600;\n\t\tdefault : return 1;\n\t}\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}",
  "\n//Buttsaved by the FIBerHub Team\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "ï»¿\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio 15\r\nVisualStudioVersion = 15.0.28307.421\r\nMinimumVisualStudioVersion = 10.0.40219.1\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"surprise\", \"surprise.vcxproj\", \"{E3A352E0-2E3B-40BD-B5A6-EA01AE491DDC}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|x64 = Debug|x64\r\n\t\tDebug|x86 = Debug|x86\r\n\t\tRelease|x64 = Release|x64\r\n\t\tRelease|x86 = Release|x86\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{E3A352E0-2E3B-40BD-B5A6-EA01AE491DDC}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{E3A352E0-2E3B-40BD-B5A6-EA01AE491DDC}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{E3A352E0-2E3B-40BD-B5A6-EA01AE491DDC}.Debug|x86.ActiveCfg = Debug|Win32\r\n\t\t{E3A352E0-2E3B-40BD-B5A6-EA01AE491DDC}.Debug|x86.Build.0 = Debug|Win32\r\n\t\t{E3A352E0-2E3B-40BD-B5A6-EA01AE491DDC}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{E3A352E0-2E3B-40BD-B5A6-EA01AE491DDC}.Release|x64.Build.0 = Release|x64\r\n\t\t{E3A352E0-2E3B-40BD-B5A6-EA01AE491DDC}.Release|x86.ActiveCfg = Release|Win32\r\n\t\t{E3A352E0-2E3B-40BD-B5A6-EA01AE491DDC}.Release|x86.Build.0 = Release|Win32\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\n\tGlobalSection(ExtensibilityGlobals) = postSolution\r\n\t\tSolutionGuid = {BE4BA7F9-32D0-4B21-9F4B-B601FB89D505}\r\n\tEndGlobalSection\r\nEndGlobal\r\n",
  "from jutge import read\n\ndef factorial(n):\n    result = 1\n    for i in range(1, n + 1):\n        result *= i\n    return result\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint b,c;\n\tc=n;\n\tb=1;\n\tif (n==0) return 1;\n\t\n\twhile (c>0) {\n\t\tb=b*c;\n\t\t--c;\t\n}\nreturn b;\n}\nint main () {\n\tint a;\n\tcin >> a;\n\tcout << factorial(a);\n\t\n}\n",
  "n = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return(n*factorial(n-1))\n\noutput = factorial(n)\nprint(output)",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0 && n == 1) return 1;\n    return n * factorial(n - 1);\n}\n\n\nint main(){\n      \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0 || n == 1) return 1;\n    return n * factorial(n - 1);\n}\n\n\nint main(){\n      \n}\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n       \n}\n\nint main(){\n    \n    \n}\n",
  "def factorial(n):\n    if n ==  0:\n        return 1\n\n    else:\n        return factorial(n-1)*n\n",
  "#include<iostream>\nusing namespace std;\nint main(){\n\tint n,fact=1;\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\tfact*=i;\n\t}cout<<fact<<endl;\n\treturn 0;\n}\n",
  "def factorial(n):\n    res = 1\n    if n == 0 or n == 1:\n        res = 1\n    else:\n        res = n * factorial(n-1)\n    return res\n\n#print(factorial(6))\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n <= 0) return 1;\n\telse return n*factorial(n-1);\n\t}\n\nint main() {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0){ \n        return 1;\n    }\n    return n*factorial(n-1);\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n){\n    if(n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n\n}\n",
  "def factorial(n):\n\tif n==1:\n\t\treturn 1\n\telif n == 0:\n\t\treturn 0\n\telse:\n\t\treturn n * factorial(n-1)\n\n",
  "def factorial(n):\n\tif n==1:\n\t\treturn 1\n\telif n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n-1)\n\n",
  "int factorial(int n) {\r\n\tif (n != 0) {\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n\telse {\r\n\t\treturn 1;\r\n\t}\r\n}",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n);\n\nint main () {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n\n int factorial(int n) {\n    if (n == 1) return 1;\n    return n*factorial(n-1);\n }",
  "using namespace std;\n\n int factorial(int n) {\n    if (n == 1) return 1;\n    return n*factorial(n-1);\n }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n }",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n    \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n<=1) return 1;\r\n\telse return n*factorial(n-1);\t\r\n}\r\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial( int n ) {\r\n\tif ( n == 1 or n == 0 ) return 1 ;\r\n\telse return n*factorial( n - 1) ;\r\n\t}\r\n\t\r\nint main(){\r\n\tint n ;\r\n\tcin >> n ;\r\n\tcout << factorial(n) <<endl ;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n<=1) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 1 or n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (n) {\n  factorial (0) = 1;\n  factorial (n) = n * factorial (n-1)\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (n) {\n  factorial (0) = 1;\n  factorial (n) = n * factorial (n-1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (n) {\n  factorial (0) = 1;\n  factorial (n) = n * factorial (n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  return n * factorial (n-1);\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n        if (n == 0) return 1;\n        for (int i = n-1; i != 0; --i){\n         n = n * i;\n        }\n        return n;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main (){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\nint fact (int a){\n    int i = 1;\n    int resultat = 1;\n    while ( i<=a){\n    resultat = resultat * i;\n    ++i;    \n    }\n    return resultat;\n}\n\nint factorial (int n){\n    return n*fact(n-1); \n}\nint main() {\n     }\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\nint fact (int a){\n    if (a==0) return 1;\n    else{\n    int i = 1;\n    int resultat = 1;\n    while ( i<=a){\n    resultat = resultat * i;\n    ++i;    \n    }\n    return resultat;\n}\n}\n\nint factorial (int n){\n    return n*fact(n-1); \n}\nint main() {\n     }\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\nint fact (int a){\n    if (a==0) return 1;\n    else{\n    int i = 1;\n    int resultat = 1;\n    while ( i<=a){\n    resultat = resultat * i;\n    ++i;    \n    }\n    return resultat;\n}\n}\n\nint factorial (int n){\n    if (n==0) return 1;\n    else return n*fact(n-1); \n}\nint main() {\n     }\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <iomanip>\n#include <cmath>\n\nusing namespace std;\n\nint factorial(n) {\n    if (n==0 or n==1) return 1; \n    else return n * factorial(n-1);     \n}\n\n\nint main() {\n    int a; \n    cin >> a; \n    cout << factorial(a) << endl; \n}\n",
  "#include <iostream>\n#include <iomanip>\n#include <cmath>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0 or n==1) return 1; \n    else return n*factorial(n-1);     \n};\n\nint main(){\n   int num;\n   cin>>num;\n   cout<<factorial(num) << endl;\n\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if ( n== 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n; \n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else if (n == 1) return 1;\n    else return n*factorial(n-1);    \n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;    \n}\n",
  "#include <iostream>\n#include <cmath> \n\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 0;\n\treturn n * factorial(n - 1);\n}\n\nint main(){}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\treturn n * factorial(n - 1);\n}\n\nint main(){}\n",
  "# Recursive factorial:\ndef factorial(n):\n    if n<=1:\n        return 1\n    else:\n        return (n * factorial(n-1))\n\n'''\nprint (factorial(0))\nprint(factorial(1))\nprint(factorial(2) ) \nprint(factorial(3))  \nprint(factorial(4))\n'''",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n <= 1) return 1;\n    else return n*factorial (n-1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std\r\n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\r\n\r\nint main(int argc, char** argv) {\r\n\tstr text;\r\n\tint total;\r\n\tmyarray = [1,2,3,4,5,6,7,8,9,0]\r\n\tcout << \"The sum of the digits in the text \" + text + \" is \" + total\r\n}\r\nint sumNumbers(int s) {\r\n\tfor(int i = 0, i<s.lenght(), i++){\r\n\t\t\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n\tif (n > 1)\r\n\t{\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n\r\n\telse if (n == 1)\r\n\t{\r\n\t\treturn n;\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\r\n\tcin >> n;\r\n\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n\tif (n > 1)\r\n\t{\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n\r\n\telse if (n == 1)\r\n\t{\r\n\t\treturn n;\r\n\t}\r\n\r\n\telse\r\n\t{\r\n\t\treturn 1;\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\r\n\twhile (cin >> n)\r\n\t{\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int result = 1;\r\n    for (int i = n; i > 0; --i) result = result * i;\r\n    return result;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n>1){return n*factorial(n-1);}\r\n    else{return 1;}\r\n}\r\nint main()\r\n{\r\n    int m;\r\n    while(cin>>m){\r\n        cout<<factorial(m)<<endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n>1){return n*factorial(n-1);}\r\n    else{return 1;}\r\n}\r\nint main()\r\n{\r\n    int m;\r\n    while(cin>>m){\r\n        cout<<factorial(m)<<endl;\r\n    }\r\n}\r\n",
  "from jutge import read\r\n\r\ndef factorial(n):\r\n    if(n>1):\r\n        return n * factorial(n-1)\r\n    else:\r\n        return 1\r\n\r\na = read(int)\r\nprint(factorial(a))",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n < 2) return 1;\n\treturn n * factorial(n-1);\n}",
  "\nint factorial(int n) {\n    if (n == 0)\n        return 1;\n    else\n        return(n * factorial(n - 1));\n}",
  "#include <stdio.h>\n#include <stdlib.h>\n#define _CRT_SECURE_NO_WARNING_\n\n\nint factorial (int n){\n    int fact=1;\n    for (int i=1; i<=n; i++){\n        fact*=i;\n    }\n    return fact;\n}\n\nint main(){\n    int a;\n    scanf(\"%d\", &a);\n    int b;\n    b=factorial(a);\n    printf(\"%d\\n\", b);\n    system(\"pause\");\n    return 0;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if(n>0) return n*factorial(n-1);\n  else return 1;\n}\n\nint main(){\n  cout << factorial(0) << endl;\n  cout << factorial(1) << endl;\n  cout << factorial(2) << endl;\n  cout << factorial(3) << endl;\n  cout << factorial(4) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int x)\n{\n    if (x <=1)\n        return 1;\n    else\n    {\n        return x * factorial(x-1);\n    }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  " #include <iostream> \n#include <string>\n\nusing namespace std;\n\n \nint factorial(int n)\n{\n    if (n ==1)\n        return 1;\n    else return n*factorial(n-1);\n}\n",
  " #include <iostream> \n#include <string>\n\nusing namespace std;\n\n \nint factorial(int n)\n{\n    if (n ==1 or n ==0)\n        return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "def factorial(n):\n    '''\n\t>>> factorial(0)\n\t1\n\t>>> factorial(1)\n\t1\n\t>>> factorial(2)\n\t2\n\t>>> factorial(3)\n\t6\n\t>>> factorial(4)\n\t24\n\t>>> factorial(10)\n\t3628800\n\t'''\n    if n == 0:\n        return 1\n    else:\n        return n*factorial(n-1)\n        \n        \n#from doctest import testmod\n#testmod(verbose=True)\n",
  "from jutge import read\n\ndef factorial(n):\n\tif n == 0:\n\t\treturn(1)\n\telse:\n\t\treturn(n * factorial(n - 1))\n\nn = read(int)\nwhile n is not None:\n\tprint(factorial(n))\n\tn = read(int)\n",
  "from jutge import read\n\ndef factorial(n):\n\tif n ==1:\n\t\treturn 1\n\telif n== 0:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n-1)\n\n\n",
  "from jutge import read\n# Recursive factorial\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n*factorial(n-1)\nn = read(int)\nwhile n is not None:\n    print(factorial(n))\n    n = read(int)",
  "def factorial(n):\n\t\n\t'''\n\t>>> factorial(4)\n\t24\n\t'''\n\t\n\tif n == 0:\n\t\treturn(1)\n\telse:\n\t\treturn(n * factorial(n-1))\n\t\t\n\t\t\n\n#from doctest import testmod\n#testmod (verbose = True)\n",
  "from jutge import read\n\nn = read(int)\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n*factorial(n-1)\n\nwhile n is not None:\n    n = read(int)\n    print(factorial(n))\n\n",
  "def factorial(n:int):\n    if n == 0:\n        return 1\n    else:\n        return n*factorial(n-1)",
  "from jutge import read\n\nn = read(int)\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n*factorial(n-1)\n\nwhile n is not None:\n    print(factorial(n))\n    n = read(int)",
  "\ndef factorial(n):\n\t'''\n\t>>> factorial(0)\n\t1\n\t>>> factorial(1)\n\t1\n\t>>> factorial(2)\n\t2\n\t>>> factorial(3)\n\t6\n\t>>> factorial(4)\n\t24\n\t\t\n\t'''\n\tif n == 0: \n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n - 1)\n\n\n#from doctest import testmod\n#testmod(verbose=True)\n",
  "from jutge import read, read_many\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n    \nfor x in read_many(int):\n    print(factorial(x))\n",
  "#from jutge import read, read_many\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n    \n#for x in read_many(int):\n    #print(factorial(x))\n",
  "from jutge import read_many\n\ndef factorial(n):\n        if n == 0:\n            return 1\n        else:\n            return n * factorial(n-1)\n        \nfor n in read_many(int):\n    print(factorial(n))\n        \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else  return n * factorial(n-1);\n    }\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\tint f = n*factorial(n-1);\n\treturn f;\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n\n}",
  "#Recursive factorial\n\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n*factorial(n-1)\n",
  "# Recursive factorial\n\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n*factorial(n-1)\n",
  "def recursive_factorial(num):\n    '''\n\t>>> recursive_factorial(0)\n\t1\n\t>>> recursive_factorial(1)\n\t1\n\t>>> recursive_factorial(2)\n\t2\n\t>>> recursive_factorial(3)\n\t6\n\t>>> recursive_factorial(4)\n\t24\n\t>>> recursive_factorial(10)\n\t3628800\n\t'''\n    if num == 0:\n        return 1\n    else:\n        return num*(recursive_factorial(num-1))\n        \n        \n#from doctest import testmod\n#testmod(verbose=True)\n\n",
  "def factorial(num):\n    '''\n\t>>> factorial(0)\n\t1\n\t>>> factorial(1)\n\t1\n\t>>> factorial(2)\n\t2\n\t>>> factorial(3)\n\t6\n\t>>> factorial(4)\n\t24\n\t>>> factorial(10)\n\t3628800\n\t'''\n    if num == 0:\n        return 1\n    else:\n        return num*factorial(num-1)\n        \n        \n#from doctest import testmod\n#testmod(verbose=True)\n",
  "from jutge import read\nn = read(int)\n\ndef rfactorial(n):\n\tif n==0:\n\t\treturn 1\n\telse:\n\t\treturn n*rfactorial(n-1)\n\nwhile n is not None:\n\tprint(rfactorial(n))\n\tn = read(int)\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n\tif (n == 1) return n;\r\n\telse return n*factorial(n - 1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n\tif (n == 1 || n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}",
  "def factorial(x):\n\tif x == 0:\n\t\treturn 1\n\telse:\n\t\treturn x * factorial(x-1)\n\t\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "def factorial(n: int):\n    if 0 <= n <= 12:\n        if n == 0:\n            return 1\n        if n == 1:\n            return n\n        else:\n            return n * factorial(n-1)\n",
  "def factorial(n: int):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n    \n\n",
  "from jutge import read\n\nn = read(int)\n\ndef factorial(n: int) -> int:\n    if n < 2:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nwhile n is not None:\n    print(factorial(n))\n    n = read(int)\n",
  "def factorial(n):\n\tif n == 1:\n\t\treturn n\n\telse:\n\t\treturn n* factorial(n-1)\nprint(factorial(3))\n",
  "def factorial(n):\n\tif n == 1:\n\t\treturn n\n\telse:\n\t\treturn n* factorial(n-1)\n#print(factorial(3))\n",
  "from jutge import read\nn = read(int)\n\ndef factorial(n):\n\tif n == 1 or n == 0:\n\t\treturn n\n\telse:\n\t\treturn n* factorial(n-1)\n\nwhile (n is not None):\n\tprint(factorial(n))\n\tn = read(int)\n",
  "from jutge import read\nn = read(int)\n\ndef factorial(n):\n\tif n == 1 or n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n* factorial(n-1)\n\nwhile (n is not None):\n\tprint(factorial(n))\n\tn = read(int)\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "def factorial(n):\r\n    return 1 if (n==1 or n==0) else n * factorial(n - 1)",
  "def factorial(n):\n    \n    0 <= n <= 12\n    \n    if n == 0:\n        return(1) \n    else:\n        return(n * factorial(n-1))\n    \n\nprint(factorial(5))\n",
  "def factorial(n):\n    \n    0 <= n <= 12\n    \n    if n == 0:\n        return(1) \n    else:\n        return(n * factorial(n-1))\n    \n",
  "# Recursive factorial\n\n\ndef factorial(n):\n    if not n:\n        return 1\n    else:\n        return n*factorial(n-1)\n",
  "from jutge import read_many \ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n*factorial(n-1)\n\nfor n in read_many(int):\n    print(int(factorial(n)))\n",
  "#include <iostream> \nusing namespace std; \n\nint factorial(int n) {\n    if (n == 0) return 1; \n    else return n*factorial(n - 1); \n}\n\nint main () {\n    int n; \n    while (cin >> n) {\n        cout << factorial(n) << endl; \n    }\n}\n",
  "int factorial(int n){return n?n*factorial(n-1):1;}\n",
  "def factorial(n):\r\n\tdecompose = range(1,n+1)\r\n\tvalue = 1\r\n\tfor i in decompose:\r\n\t\tvalue*=i\r\n\treturn value\r\n",
  "def factorial_recursive(n):\r\n    if n == 1:\r\n        return 1\r\n    else:\r\n        return n * factorial_recursive(n-1)\r\n\r\n",
  "def factorial(n):\r\n\tdecompose = range(1,n+1)\r\n\tvalue = 1\r\n\tfor i in decompose:\r\n\t\tvalue*=i\r\n\treturn value\r\n\r\n",
  "from jutge import read\n\nn=read(int)\n\ndef factorial(n):\n\tif n <1: \n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n-1)\n\t\nwhile n is not None:\n\tprint(factorial(n))\n\tn=read(int)\n",
  "def factorial(n):\r\n\tif n < 2:\r\n\t\treturn 1\r\n\telse:\r\n\t\treturn n * factorial(n-1)\r\n",
  "def factorial(n):\n    if n < 2:\n        return 1\n    else:\n        return n * factorial(n-1)\n",
  "from jutge import read\n\ndef factorial(x):\n\tif x == 0:\n\t\treturn 1\n\telse:\n\t\treturn x * factorial(x-1)\n\t\t\n",
  "def factorial(n):\n\tif n <= 1:\n\t\treturn 1\n\telse:\n\t\treturn n*factorial(n-1)\n\n",
  "def factorial (n , b = 1):\r\n    while n != 0:\r\n        n , b = n - 1 , b * n\r\n    return b",
  "from jutge import read\nn = read(int)\ndef factorial(n):\n\tif n == 0:\n\t\treturn 1\n\telse :\n\t\treturn n*factorial( n - 1)\nwhile n is not None:\n\tprint(factorial(n))\n\tn = read(int)\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if(n>1) return n*factorial(n-1);\n    else return 1;\n}\nint main() {}\n",
  "def factorial(n):\n\tif n < 0:\n\t\tpass\n\telif n < 2:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n-1)\n\n",
  "from jutge import read_many\n\ndef factorial(n):  \n   if n == 1 or n == 0:  \n       return 1  \n   else:  \n       return n*factorial(n-1)  \n   \nfor i in read_many(int):\n    print(factorial(i))\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\ndouble factorial(int n){\n    return n*factorial(n-1);\n}\n\nint main () {\n    cout.setf(ios::fixed);\n    cout.precision(10);\n    double n;\n    while (cin >> n){ \n        double aprox_e = 0.0;\n        for (int i = 1; i <= n; ++i) aprox_e = aprox_e + (1/factorial(i));\n        cout << \"Amb \" << n << \" terme(s) s'obte \" << aprox_e << \".\" << endl;\n    }\n}\n",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\ndouble factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main () {\n    cout.setf(ios::fixed);\n    cout.precision(10);\n    double n;\n    while (cin >> n){ \n        double aprox_e = 0.0;\n        for (int i = 1; i <= n; ++i) aprox_e = aprox_e + (1/factorial(i));\n        cout << \"Amb \" << n << \" terme(s) s'obte \" << aprox_e << \".\" << endl;\n    }\n}\n",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main () {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint suma_entrades(int n){\n    if (n == 1) return 1;\n    else return n + suma_entrades(n - 1);\n}\n\nint missing(int n, int n1){\n    int total_teoric, total = n1;\n    total_teoric = suma_entrades(n);\n    for(int i = 1; i < n; i++){\n        cin >> n1;\n        total = total + n1;\n        }\n    return total_teoric - total;\n    }\n\n\n\nint main(){\n    int n, n1;\n    cin >> n >> n1;\n    cout << missing(n, n1);\n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n    if (x == 0) return 1;\n    else return x * fact(x-1);\n}\n\nint main() {\n\n} ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n    if (x == 0) return 1;\n    else return x * factorial(x-1);\n}\n\nint main() {\n\n} ",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n) {\n    int t; \n    t = 1; \n    for (int i = 1; i <= n; ++i){\n        t = t*i; \n    }\n    return t;\n}\n\nint main (){\n    int a; \n    cin >> a; \n    cout << factorial(a)<<endl;\n}\n\n    \n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1) \r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1); \r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int num) {\r\n    if (num == 0) return 1;\r\n    else {\r\n        return num*factorial(num - 1);\r\n    }\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x);\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if(n>1) return n*factorial(n-1);\n    else return 1;\n}\nint main() {}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n{\n    if (n == 1) return(1);\n    else return(n*factorial(n - 1));\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n    \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n{\n    if (n <= 1) return(1);\n    else return(n*factorial(n - 1));\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n    \n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 0 ) return 1;\n    else return n * factorial( n - 1 );\n}\n\nint main () {\n    int n;\n    \n    while ( cin >> n ) {\n        cout << factorial(n) << endl;\n    }\n    \n       \n    \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n)\r\n{\r\n    if (n==1 || n==0)\r\n    {\r\n        return 1;\r\n    }\r\n    else\r\n    {\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\nint main ()\r\n{\r\n}",
  " #include <iostream> \n#include <string>\n\nusing namespace std;\n\n \nint factorial(int n)\n{\n    if (n ==1 or n ==0)\n        return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) n = 1;\n    else if (n > 1) {\n        n = n*factorial(n-1);\n    }\n    return n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else {\n        return (n*factorial(n-1));\n    }  \n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    \r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else {\n        int factoriall = factorial(n-1);\n        return factoriall*n;\n    }\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return (n * factorial(n - 1));\n}\n\nint main() {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n//0<= n <= 12\n//retorna n!\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial(n-1);\n        return n*f;\n    }\n}\n\n\n\nint main() {\n    int num;\n    while (cin >> num)  {\n        cout << factorial(num) << endl;\n    }\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int a){\r\n\tif (a == 0) return 1;\r\n\treturn a * factorial (a - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "//\n// Created by dreax on 2019-10-30.\n//\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n  int n;\n\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}\n\nint factorial(int n) {\n  if (n <= 1) {\n    return 1;\n  } else {\n    return (n * factorial(n - 1));\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\tif (n < 2) return 1;\n\treturn n*factorial(n-1);\n}\n\n\nint main() {\n\n\tcout << factorial(3) << endl;\n\n\treturn 0;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n <= 1) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nint main (){\r\n    int x;\r\n    cin >> x;\r\n    \r\n    cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n <= 1) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n){\n\tif(n==0 or n==1) return 1;\n\telse return factorial(n-1) * n;\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == n or n==1) return 1;\n\telse return fcatorial(n-1) * n;L\n\n}\n\n\nint main(){\n\tint n;\n\twhile(cin >> n) cout << factorial(n) << endl; \n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == n or n==1) return 1;\n\telse return fcatorial(n-1) * n;\n\n}\n\n\nint main(){\n\tint n;\n\twhile(cin >> n) cout << factorial(n) << endl; \n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == n or n==1) return 1;\n\telse return fcatorial(n-1)*n;\n\n}\n\n\nint main(){\n\tint n;\n\twhile(cin >> n) cout << factorial(n) << endl; \n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n <=1) return 1;\n\telse return fcatorial(n-1)*n;\n\n}\n\n\nint main(){\n\tint n;\n\twhile(cin >> n) cout << factorial(n) << endl; \n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n <=1) return 1;\n\telse return factorial(n-1)*n;\n\n}\n\n\nint main(){\n\tint n;\n\twhile(cin >> n) cout << factorial(n) << endl; \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint nombre_digits(int n) {\n\tif (n < 10) return 1;\n\telse return nombre_digits(n/10) + 1;\n\t\n}\n\t\n\t\n\t\nint main(){\n\tint n;\n\twhile(cin >>n) cout << nombre_digits(n) << endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0){\n        return 1;\n    } else (\n        return n + factorial(n-1);\n    )\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0){\n        return 1;\n    } else {\n        return n + factorial(n-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0){\n        return 1;\n    } else {\n        return n * factorial(n-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial (n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1)\n        return 1;\n    \n    return n * factorial(n - 1);\n}\n\nint main()\n{\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0)\n        return 1;\n    else\n        return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "//recursive factorial\n#include <iostream>\nusing namespace std;\n\n//Pre: el numero es major o igual que 0 i menor o igual que 12\n//Post:retorna el seu factorial\n\nint factorial(int n) {\n\tif (n == 0)\treturn 1; // cas base\n\telse return n*factorial(n-1); // cas recursiu\n}\t\n\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    return n == 0 ? 1 : n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint f = n;\n\tif (n == 0) return 1;\n\tif ((n - 1) > 0) f = f*factorial(n-1);\n\treturn f;\n}\n\nint main() {\n\tint num;\n\twhile (cin >> num) { \n\t\tcout << factorial(num) << endl;\t\n\t}\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    //Pre: Enter n >= 1.\r\n    //Post: n factorial.\r\n    if (n == 1) return 1;\r\n    else return (n*factorial(n-1));\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    //Pre: Enter n >= 1.\r\n    //Post: n factorial.\r\n    if (n == 0) return 1;\r\n    else return (n*factorial(n-1));\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    else return factorial(n-1) * n; \n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tint fact;\n\tif (n==0) return 1;\n\telse{\n\t\treturn n*(factorial(n-1));\n\t\n}\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main(){\n\tint x;\n\twhile (cin >> x){\n\t\tcout << factorial(x) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main(){\n\tint x;\n\twhile (cin >> x){\n\t\tcout << factorial(x) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint sum = 1, x = 0;\n\twhile (x < n) {\n\t\tx = x + 1;\n\t\tsum = sum*x;\n\t}\n\treturn sum;\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint sum = 0;\n\tif (n == 0) {\n\t\tsum = 1;\n\t}\n\telse {\n\t\tsum = n*factorial(n-1);\n\t}\n\treturn sum;\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// Pre: x >= 0 y x <= 12\n// Post: x!\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\t\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}\n}\n\n",
  "\r\n#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n>0) return n*(factorial(n-1));\r\n    else return 1;\r\n}\r\n\r\n\r\nint main () {\r\nint n;\r\ncin >> n;\r\ncout << factorial(n) << endl;\r\n    \r\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n < 2) return 1;\n    else return (n * factorial(n-1);\n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n < 2) return 1;\n    else return (n * factorial(n-1));\n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n#define PRECISION(a) cout.setf(ios::fixed); cout.precision(a);\n\nint factorial(int n){\n    if(n == 0) return 1;\n    return factorial(n-1) * n;\n}\nint main(){    \n\n    cout << factorial(5) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n==0) return 1;\n\telse return n*(factorial(n-1));\n}\n\t\n\t\n\t\nint main () {\n\tint n=1;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\t\n\t}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int x)\n{\n    if (x <=1)\n        return 1;\n    else\n    {\n        return x * factorial(x-1);\n    }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\t\r\n\tint factorial = 1;\r\n\tif (n == 0) return factorial;\r\n\telse return factorial(n - 1) * n;\r\n}\r\n\r\nint main()\r\n{\r\n\tint m;\r\n\twhile (cin >> m)\r\n\t{\r\n\t\tint a = factorial(m);\r\n\t\tcout << a << endl;\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\t\r\n\tif (n == 0) return 1;\r\n\telse return  factorial(n - 1) * n;\r\n}\r\n\r\nint main()\r\n{\r\n\tint m;\r\n\tcin >> m;\r\n\tcout << factorial(m) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n<=1) return n=1;\n    else return n=n*factorial(n-1);\n    \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial(n-1);\n        return n*f;\n    }\n}\n     \n",
  "\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\r\n\tcin >> n;\r\n\t\r\n\tcout << factorial(n) << endl;\r\n}\r\n\r\n\r\nint factorial(int n)\r\n{\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint s = 1;\r\n\tfor (int i = n; i>=1; --i){\r\n\t\ts = s*i;\r\n\t}\r\n\treturn s;\r\n}\r\n\r\nint main(){\r\n\tcout << factorial(4);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint mian () {\n    int n,r;\n    cin >> n;\n    \n    r = factorial(n);\n    cout << r << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main () {\n    int n,r;\n    cin >> n;\n    \n    r = factorial(n);\n    cout << r << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n==0) return 1;\r\n  else return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n  int x;\r\n  cin >> x;\r\n  cout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n == 0) {\r\n\t\treturn 1;\r\n\t}\r\n\telse return (n * factorial(n - 1));\r\n}\r\n/*\r\nint main () {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n\t} \r\n}\r\n*/\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse {\n\t\treturn n*factorial(n-1);\n\t}\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n==0) return 1;\r\n  else return n * fact(n-1);\r\n}\r\n\r\nint main() {\r\n  int x;\r\n  cin >> x;\r\n  cout << fact(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}   \n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}   \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\nif (n == 0) return 1;\nelse return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n < 0) return 0;\r\n    if (n > 1) return n*factorial (n-1);\r\n    return 1;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n/*\n *Calculates the factorial recursively\n */\n\n//Returns n!, n > 0\nint factorial(int n){\n    if(n == 1) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n/*\n *Calculates the factorial recursively\n */\n\n//Returns n!, n > 0\nint factorial(int n){\n    if(n == 0) return 1;\n    if(n < 3) return n;\n    else return n * factorial(n-1);\n}\n\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n/*\n *Calculates the factorial recursively\n */\n\n//Returns n!, n > 0\nint factorial(int n){\n    if(n == 0) return 1;\n    if(n < 3) return n;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n/*\n *Calculates the factorial recursively\n */\n\n//Returns n!, n a natural number\nint factorial(int n){\n    if(n < 2) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n){\n    if (n == 0) return 1;\n    else return n * fact (n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n){\n    if (n == 0) return 1;\n    else {\n        int f = fact(n-1);\n        return n * f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n){\n    if (n == 0) return 1;\n    else {\n        int f = fact(n - 1);\n        return n * f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n){\n    if (n == 0) return 1;\n    else {\n        int f = fact(n - 1);\n        return n * f;\n} }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\telse return factorial(n-1)*n;\r\n\t}\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n ",
  "/*int factorial(int n){\n\tif (n==0) return 1;\n\telse{\n\t\tint f=factorial(n-1);\n\t\treturn n*f;\n\t}\n}*/\n\nint factorial(int n){\n\tif (n==0) return 1;\n\treturn n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else {\n        int f = fact(n - 1);\n        //HI f = n - 1!\n        return n * f;\n} }\n\n/* Podria ser\n * int factorial(int n){\n    if (n == 0) return 1;\n    else {\n       return n * factorial(n - 1);\n    }\n} }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else {\n        int f = factorial(n - 1);\n        //HI f = n - 1!\n        return n * f;\n} }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    while (cin >> x){\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    return factorial(n-1) * n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "\r\n\t\r\n\t\r\n\t\r\n#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif(n==0) return 1;\r\n\telse return (n*factorial(n-1));\t\r\n\t\r\n}\r\n\r\n\r\nint main(){\r\n\t\r\n\tint x;\r\n\t\r\n\twhile(cin>>x)\r\n\t\r\n\t\tcout<<factorial(x);\r\n\t\r\n\r\n}\r\nJutge.org\r\n",
  "\r\n\t\r\n\t\r\n\t\r\n#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif(n==0) return 1;\r\n\telse return (n*factorial(n-1));\t\r\n\t\r\n}\r\n\r\n\r\nint main(){\r\n\t\r\n\tint x;\r\n\t\r\n\twhile(cin>>x)\r\n\t\r\n\t\tcout<<factorial(x);\r\n\t\r\n\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial(n-1);\n        return f*n;\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "/* Ref.: P12509, Recursive Factorization\n   Pre.: A natural number n.\n   Post: n! = n*(n-1)*(n-2)*...3*2*1\n\t\t 0! = 1\n\n\n*/\n\n\n\n#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n\n\tif (n == 0 or n < 2) return 1;\n\t\n\treturn n * factorial(n - 1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    int s = factorial(n-1);\n    return n*s;\n    \n}\n\nint main() {\n    \n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n\n  else return n * factorial(n - 1);\n}\n\nint main() {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) {\n\t\treturn 1;\n\t} else {\n\t\treturn n*factorial(n-1);\n\t}\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tfactorial(n);\n\t\n}\n",
  "// (c) FIBerHub, https://fiberhub.tk\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint f = 1;\n\tint i = 0;\n\twhile (i < n) {\n\t\t++i;\n\t\tf *= i;\n\t}\n\treturn f;\n}\n",
  "#include<iostream>\n#include<cmath>\n#include<iomanip>\nusing namespace std;\n\nint factorial(int n){\n     if(n==0)n=1;\n     else{\n     n=n*factorial(n-1);\n}\nreturn n;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}   \n",
  "from jutge import read\n\ndef factorial(n: int):\n\tif n == 1 or n == 0: return 1\n\treturn n*factorial(n-1)\n\ndef main():\n\tn = read(int)\n\twhile n is not None:\n\t\tprint(factorial(n))\n\t\tn = read(int)\n\nmain()",
  "from jutge import read\n\ndef factorial(n: int):\n\tif n == 0: return 0\n\tif n == 1: return 1\n\treturn n*factorial(n-1)\n\ndef main():\n\tn = read(int)\n\twhile n is not None:\n\t\tprint(factorial(n))\n\t\tn = read(int)\n\nmain()",
  "int factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==1) return 1;\n\tint f=n;\n\n\t   f = f * factorial (n-1);\n\t\nreturn f;\n}\t\t\n\t\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n<=1) return 1;\n\tint f=n;\n\n\t   f = f * factorial (n-1);\n\t\nreturn f;\n}\t\t\n\t\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\t\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int x) {\r\n    if (x==0) return 1;\r\n    else return x*factorial(x-1);\r\n   \r\n}\r\n \r\nint main() {\r\n    int n;\r\n    while (cin>>n) cout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n//retorna n! per 0 <= n <= 12\nint factorial(int n) {\n\tif (n == 0) {\n\t\treturn 1;\n\t}\n\telse {return n*factorial(n-1);}\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//pre: 0<=n<12\r\n//post: return n!\r\nint factorial(int n) {\r\n\tif (n == 1 or n == 0) return 1;\r\n\telse {\r\n\t\tint f = factorial(n - 1);\r\n\t\treturn n*f;\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n    // cas base I: factorial(0)=1\n    // cas base II: fact(1)=1\n    // cas genÃ¨ric: fact(n)=fact(n-1)*n\n\nint factorial (int n) {\n    if (n<=1) return 1;\n    else {\n        return (n * factorial (n-1));\n    }\n}\n\nint main () {\n    int n;\n    \n    while (cin >> n) {\n        cout << factorial (n) << endl;\n    }\n}\n\n",
  "include <iosteam>\nusing namesapce std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iosteam>\nusing namesapce std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namesapce std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() { \n    int m;\n    cin >> m;\n    cout << factorial(m) << endl;\n}\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int c = 1;\n  cin >> n;\n for (int i = 1;i <= n;++i) c = c*i;\n  return c;\n }\nint main (){\n   \n int x;\n while (cin >> x){\n  cout << factorial(x) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int c = 1;\n  cin >> n;\n for (int i = 1;i <= n;++i) c = c*i;\n  return c;\n }\nint main (){\n   \n int x;\n while (cin >> x){\n  cout << factorial(x) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int c = 1;\n  cin >> n;\n for (int i = 1;i <= n;++i) c = c*i;\n  cout << c;\n }\nint main (){\n   \n int x;\n while (cin >> x){\n  cout << factorial(x) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    \n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1)\n\t\treturn 1;\n\telse\n\t\treturn factorial(n-1)*n;\n}\n\nint main() {\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\t\nint main() {\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\t\n\t",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    return ((n <= 1)? 1 : n * factorial(n-1));\n}\n\nint main() {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif (n==0){\r\n\t\treturn 1;\r\n\t}\r\n\telse{\r\n\t\treturn n*(factorial(n-1));\r\n\t}\r\n}\r\n\r\n\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;           //Base case\n    else return n*factorial(n-1);   //Recursive case\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n        if(n == 0) return 1;\n        return n*factorial(n-1);\n    \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main(){\n    int n;\n    cin >> n;\n    int a = factorial(n);\n    cout << a << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int res;\n    \n    if (n <= 1){ \n        res = 1;\n    }\n\n    else {\n        res = n*factorial(n-1);\n    }\n    return res;\n    \n}\n\n\nint main(){\n    int num, result;\n    cin >> num;\n    \n    result = factorial(num);\n    \n    cout << result << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 1)\n    return 0;\n  else\n    return n*factorial (n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main()\n{\n        int x;\n        cin >> x;\n        cout << factorial(x) << endl;\n} \n\nint factorial(int n){\n    if (n==1) return 1;\n    else {\n        return n * factorial(n-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0)\n    return 1;\n  else\n    return n*factorial(n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main()\n{\n        int x;\n        cin >> x;\n        cout << factorial(x) << endl;\n} \n\nint factorial(int n){\n    if (n==0) return 1;\n    else {\n        return n * factorial(n-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n    int num;\n    cin >> num;\n    \n    cout << factorial(num) << endl;;\n}\n\nint factorial(int n) {\n    int num = n;\n    \n    if (num == 1) return 1;\n    else num = num * factorial(n-1);\n    \n    return num;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n    \n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    \n    if (n == 1 or n == 0) return 1;\n    return n*factorial(n-1);\n    \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }  \n}\n\nint factorial(int n){\n    if(n == 0){\n        return 1;\n    }\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n    int num;\n    cin >> num;\n    \n    cout << factorial(num) << endl;;\n}\n\nint factorial(int n) {\n    int num = n;\n    \n    if (num == 1 or num == 0) return 1;\n    else num = num * factorial(n-1);\n    \n    return num;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    while (n > 1) {\n        n = n*factorial(n-1);\n        return n;\n    }\n    return 1;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n    //base cases\n    if (n == 0) {\n        return 1;\n    }\n    //recursive case\n    return n * fact(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << fact(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  //Base case - what makes it stop\n  if (n == 0)\n    return 1;\n  //Recursive\n  return n * factorial(n-1);\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n\n  }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\nif (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\nint n;\ncin >> n;\ncout << factorial(n)<< endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n    //base cases\n    if (n == 0) {\n        return 1;\n    }\n    //recursive case\n    return n * fact(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << fact(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }   \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int a){\n    if(a==0) return 1;\n    else{\n        return a*factorial(a-1);\n    }\n}\n\nint main(){\n    \n        int n;\n        cin >> n;\n        \n        cout << factorial(n) << endl;\n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n    //base cases\n    if (n == 0) {\n        return 1;\n    }\n    //recursive case\n    return n * fact(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n    cout << fact(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return factorial(n-1) * n;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    \n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }       \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\telse return n*factoral(n - 1);\n}\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n    //base cases\n    if (n == 0) {\n        return 1;\n    }\n    //recursive case\n    return n * fact(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n    cout << fact(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main() {\n    \n    int m;\n    cin >> m;\n    \n    cout << factorial(m) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n    //base cases\n    if (n == 0) {\n        return 1;\n    }\n    //recursive case\n    return n * fact(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n    cout << fact(n) << endl;\n    }\n}\n",
  "//FunciÃ³n FACTORIAL\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n){ \t\t//leo n\n\tif (n == 0) return 1; \t//si n = 0, devuelvo 1 (caso base)\n\telse return n * factorial(n - 1); //si n != 0, funciÃ³n  (caso recursivo)\n}  \nint main (){\n\tint x;\n\twhile (cin >> x){\n\t\tcout << factorial(x) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    //base cases\n    if (n == 0) {\n        return 1;\n    }\n    //recursive case\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n    cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else n = n * factorial (n - 1);\n    return n;\n}\n",
  "#include <iostream>\nusing namespace std;\n    int factorial(int n){\n    if (n<=1) return 1;\n    else return n*factorial (n-1);\n}\nint main(){\n    int a;\n    cin>>a;\n    cout<<factorial(a)<<endl;\n}\n        \n    \n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int x){\n\n    if (x==0) return 1;\n    else {int f=factorial(x-1);\n    return x*f;\n    }\n        \n    }\n\nint main(){\n    int x;\n    while (cin>>x) cout << factorial(x)<<endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    \n    if (n == 0) return 1;\n    \n    else {\n        int f = factorial(n-1);\n        // f is n-1!;\n        return n*f;\n    }\n} \nint main(){\n    int n;\n    while (cin >>n) cout << factorial(n) << endl;\n    \n}\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\n#include<cmath>\nusing namespace std;\n// n>= 0\n//retorna n!\nint factorial(int n){\n    \n   if (n == 0) return 1;\n   else {\n       int f = factorial(n-1);\n       // f es (n - 1)! por hipotesis de induccion\n       return f*n;\n   }\n   \n   \n    \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main (){\n    int n;\n    cin >>n;\n    cout <<factorial(n) <<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return n * factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n){\n     if( n < 2) return 1;\n     else return n*factorial(n-1);\n\n}\n \n int main(){\n     int a,s;\n     cin >> a;\n     cout << factorial(a) << endl;\n}\n",
  "//Pre: lee un numero entre 0 y 12 incluidos\n//Post: retorna el factorial del numero\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn n * factorial(n - 1);\n\t}\n}\n\n\nint main() {\n\tint num;\n\tcin >> num;\n\tcout << factorial(num) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint main(){\n    int n;\n    cin>>n;\n    int fact=1;\n    while (n!=0){\n        fact=fact*n;\n        n=n-1;\n    }\n    cout<<fact<<endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f = 1;\n    int a = 1;\n    if (n == 0 and n == 1) return 1;\n    for (int i = 1; i < n; ++i){\n        ++f;\n        a *= f; \n        \n    }\n    return a;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n    \nint factorial(int n) {\n    int fact;\n    if (n <= 0) fact = 1;\n    else fact = n * factorial(n - 1);\n    return fact;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int facts = factorial(n);\n    cout << facts << endl;\n}\n",
  "//Pre: Nos llegara un numero n del 0 al 12\n//Post: Imprimiremos en pantalla el factorial de n\n\n#include <iostream>\nusing namespace std;\n\n/* Mientras n sea mayor que 0, que vaya descontando 1\na n. una vez n sea 1, que vaya devolviendo el producto de\nn en cada llamada. */\nint factorial(int n) {\n    if (n <= 0) return 1;\n    else return n*factorial(n-1);\n}\n\n/* Inicializamos n, leemos su valor y despues de llamar a la\nfuncion factorial y que nos haya devuelto su valor lo imprimimos. */\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n) {\n\tif (n == 0) {\n\t\treturn 1;\n\t} \n\treturn n * factorial(n-1);\n} \n\nint main() {\n\tint n;\n\tcin >> n; \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint m = n;\r\n\tif (m == 0) return 1;\r\n\telse {\r\n\t\tfor(int i = 1; i < n; ++i){\r\n\t\t\tm = m * (n-i);\r\n\t\t}\r\n\t\treturn m;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n = o) return 1;\n    else return n*(factorial(n-1))\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*(factorial(n-1))\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*(factorial(n-1));\n}\n",
  "#include <iostream>\nusing namespcae std;\nint factorial(int n){\nif (n == 0) return 1;\nelse return factorial(n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\nif (n == 0) return 1;\nelse return factorial(n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 1;\n    else{\n        int b=factorial(n-1);\n        return b*n;\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "// Factorial Recursivo\n#include<iostream>\nusing namespace std;\n\n\n//pre Numeros Naturales\n//pos Numeros Naturales > 0\nint factorial(int n) {\n    int fact;\n    if (n == 0) fact = 1; //Caso Base\n    else fact = (n * factorial(n - 1));\n    return fact;\n}\n\nint main() {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream> \n\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return factorial(n-1)*n;\n}\n\n\nint main() {\n    int n; \n    while(cin >> n) {\n    if (n >= 0 and n <= 12) cout << factorial(n) << endl;\n    }\n\n}\n",
  "ELF\u0002\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000>\u0000\u0001\u0000\u0000\u0000ð\b\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u00008\u0000\t\u0000@\u0000\u001d\u0000\u001c\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000ø\u0001\u0000\u0000\u0000\u0000\u0000\u0000ø\u0001\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0004\u0000\u0000\u00008\u0002\u0000\u0000\u0000\u0000\u0000\u00008\u0002\u0000\u0000\u0000\u0000\u0000\u00008\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00000\f\u0000\u0000\u0000\u0000\u0000\u00000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000p\r\u0000\u0000\u0000\u0000\u0000\u0000p\r \u0000\u0000\u0000\u0000\u0000p\r \u0000\u0000\u0000\u0000\u0000 \u0002\u0000\u0000\u0000\u0000\u0000\u0000ð\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\r \u0000\u0000\u0000\u0000\u0000\r \u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000T\u0002\u0000\u0000\u0000\u0000\u0000\u0000T\u0002\u0000\u0000\u0000\u0000\u0000\u0000T\u0002\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000Påtd\u0004\u0000\u0000\u0000´\n\u0000\u0000\u0000\u0000\u0000\u0000´\n\u0000\u0000\u0000\u0000\u0000\u0000´\n\u0000\u0000\u0000\u0000\u0000\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000Qåtd\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000Råtd\u0004\u0000\u0000\u0000p\r\u0000\u0000\u0000\u0000\u0000\u0000p\r \u0000\u0000\u0000\u0000\u0000p\r \u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000/lib64/ld-linux-x86-64.so.2\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000GNU\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0003\u0000\u0000\u0000GNU\u0000%ÊYF6À8¦\u0005§±f½Ø\u0015#tðûx\u0002\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0010\u0002\u0001\u0000\u0004\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\fCs\u0007\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0001\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000x\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000m\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ò\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000³\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Þ\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001f\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000;\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ô\u0000\u0000\u0000\u0011\u0000\u0018\u0000 \u0010 \u0000\u0000\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0011\u0000\u0018\u0000@\u0011 \u0000\u0000\u0000\u0000\u0000\u0018\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000libstdc++.so.6\u0000__gmon_start__\u0000_ITM_deregisterTMCloneTable\u0000_ITM_registerTMCloneTable\u0000_ZNSt8ios_base4InitD1Ev\u0000_ZNSirsERi\u0000_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_\u0000_ZNSt8ios_base4InitC1Ev\u0000_ZSt3cin\u0000_ZSt4cout\u0000_ZNSolsEi\u0000libc.so.6\u0000__stack_chk_fail\u0000__cxa_atexit\u0000__cxa_finalize\u0000__libc_start_main\u0000GLIBCXX_3.4\u0000GLIBC_2.4\u0000GLIBC_2.2.5\u0000\u0000\u0000\u0000\u0002\u0000\u0003\u0000\u0003\u0000\u0002\u0000\u0004\u0000\u0003\u0000\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0003\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000 \u0000\u0000\u0000t)\b\u0000\u0000\u0003\u00001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u0000è\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014ii\r\u0000\u0000\u0004\u0000=\u0001\u0000\u0000\u0010\u0000\u0000\u0000u\u001ai\t\u0000\u0000\u0002\u0000G\u0001\u0000\u0000\u0000\u0000\u0000\u0000p\r \u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\t\u0000\u0000\u0000\u0000\u0000\u0000x\r \u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\b\u0000\u0000\u0000\u0000\u0000\u0000\r \u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000°\t\u0000\u0000\u0000\u0000\u0000\u0000\b\u0010 \u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0010 \u0000\u0000\u0000\u0000\u0000Ð\u000f \u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ø\u000f \u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000à\u000f \u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000è\u000f \u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\u000f \u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ø\u000f \u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0010 \u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0011 \u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u000f \u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¨\u000f \u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000°\u000f \u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¸\u000f \u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u000f \u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000È\u000f \u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Hì\bH\u0005=\b \u0000HÀt\u0002ÿÐHÄ\bÃ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ÿ5Ê\u0007 \u0000ÿ%Ì\u0007 \u0000\u000f\u001f@\u0000ÿ%Ê\u0007 \u0000h\u0000\u0000\u0000\u0000éàÿÿÿÿ%Â\u0007 \u0000h\u0001\u0000\u0000\u0000éÐÿÿÿÿ%º\u0007 \u0000h\u0002\u0000\u0000\u0000éÀÿÿÿÿ%²\u0007 \u0000h\u0003\u0000\u0000\u0000é°ÿÿÿÿ%ª\u0007 \u0000h\u0004\u0000\u0000\u0000é ÿÿÿÿ%¢\u0007 \u0000h\u0005\u0000\u0000\u0000éÿÿÿÿ%\u0007 \u0000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Hì\u0018H=õ\b \u0000Ht$\u0004dH\u0004%(\u0000\u0000\u0000HD$\b1Àè{ÿÿÿD$\u0004¾\u0001\u0000\u0000\u0000ø\u0001~\u0010\u000f\u001fD\u0000\u0000\u000f¯ðè\u0001ø\u0001uõH=\u0007 \u0000èÿÿÿHÇè9ÿÿÿ1ÀHT$\bdH3\u0014%(\u0000\u0000\u0000u\u0005HÄ\u0018ÃèMÿÿÿ\u000f\u001f\u0000f.\u000f\u001f\u0000\u0000\u0000\u0000\u0000H=\t \u0000Hì\bè@ÿÿÿH=!\u0007 \u0000H\u0015*\u0007 \u0000H5t\t \u0000HÄ\bé\u0002ÿÿÿf1íIÑ^HâHäðPTL\u0005\u0001\u0000\u0000H\r#\u0001\u0000\u0000H=,ÿÿÿÿ\u0015Æ\u0006 \u0000ô\u000f\u001fD\u0000\u0000H=é\u0006 \u0000UH\u0005á\u0006 \u0000H9øHåt\u0019H\u0005\u0006 \u0000HÀt\r]ÿàf.\u000f\u001f\u0000\u0000\u0000\u0000\u0000]Ã\u000f\u001f@\u0000f.\u000f\u001f\u0000\u0000\u0000\u0000\u0000H=©\u0006 \u0000H5¢\u0006 \u0000UH)þHåHÁþ\u0003HðHÁè?H\u0001ÆHÑþt\u0018H\u0005a\u0006 \u0000HÀt\f]ÿàf\u000f\u001f\u0000\u0000\u0000\u0000\u0000]Ã\u000f\u001f@\u0000f.\u000f\u001f\u0000\u0000\u0000\u0000\u0000=¡\b \u0000\u0000u/H=\u000f\u0006 \u0000\u0000UHåt\fH=:\u0006 \u0000è]þÿÿèHÿÿÿÆ\u0005y\b \u0000\u0001]Ã\u000f\u001f\u0000\u0000\u0000\u0000óÃf\u000f\u001fD\u0000\u0000UHå]éfÿÿÿf\u000f\u001fD\u0000\u0000ÿ\u0001¸\u0001\u0000\u0000\u0000~\u0016f\u000f\u001fD\u0000\u0000\u000f¯Çï\u0001ÿ\u0001uõóÃ\u000f\u001f\u0000óÃf.\u000f\u001f\u0000\u0000\u0000\u0000\u0000\u000f\u001f@\u0000AWAVI×AUATL%.\u0003 \u0000UH-6\u0003 \u0000SAýIöL)åHì\bHÁý\u0003è?ýÿÿHít 1Û\u000f\u001f\u0000\u0000\u0000\u0000\u0000LúLöDïAÿ\u0014ÜHÃ\u0001H9ÝuêHÄ\b[]A\\A]A^A_Ãf.\u000f\u001f\u0000\u0000\u0000\u0000\u0000óÃ\u0000\u0000Hì\bHÄ\bÃ\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0001\u001b\u0003;H\u0000\u0000\u0000\b\u0000\u0000\u0000\fýÿÿ\u0000\u0000\u0000|ýÿÿ¼\u0000\u0000\u0000ýÿÿè\u0000\u0000\u0000\fþÿÿ\u0004\u0001\u0000\u0000<þÿÿd\u0000\u0000\u0000LÿÿÿÔ\u0000\u0000\u0000|ÿÿÿ\u001c\u0001\u0000\u0000ìÿÿÿd\u0001\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001zR\u0000\u0001x\u0010\u0001\u001b\f\u0007\b\u0001\u0007\u0010\u0014\u0000\u0000\u0000\u001c\u0000\u0000\u0000Ðýÿÿ+\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001zR\u0000\u0001x\u0010\u0001\u001b\f\u0007\b\u0001\u0000\u0000$\u0000\u0000\u0000\u001c\u0000\u0000\u0000püÿÿp\u0000\u0000\u0000\u0000\u000e\u0010F\u000e\u0018J\u000f\u000bw\b\u0000?\u001a;*3$\"\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000D\u0000\u0000\u0000¸üÿÿ\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\\\u0000\u0000\u0000pþÿÿ\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000p\u0000\u0000\u0000üÿÿs\u0000\u0000\u0000\u0000D\u000e \u0002i\n\u000e\bA\u000b\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000ýÿÿ.\u0000\u0000\u0000\u0000K\u000e\u0010^\u000e\b\u0000D\u0000\u0000\u0000¤\u0000\u0000\u0000Xþÿÿe\u0000\u0000\u0000\u0000B\u000e\u0010\u0002B\u000e\u0018\u0003E\u000e \u0004B\u000e(\u0005H\u000e0\u0006H\u000e8\u0007M\u000e@r\u000e8A\u000e0A\u000e(B\u000e B\u000e\u0018B\u000e\u0010B\u000e\b\u0000\u0010\u0000\u0000\u0000ì\u0000\u0000\u0000þÿÿ\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\t\u0000\u0000\u0000\u0000\u0000\u0000À\b\u0000\u0000\u0000\u0000\u0000\u0000°\t\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000è\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0007\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000¤\n\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0000p\r \u0000\u0000\u0000\u0000\u0000\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r \u0000\u0000\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000õþÿo\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000(\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0002\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000S\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000f \u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\u0005\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0001\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ûÿÿo\u0000\u0000\u0000\u0000\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000þÿÿo\u0000\u0000\u0000\u0000 \u0005\u0000\u0000\u0000\u0000\u0000\u0000ÿÿÿo\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000ðÿÿo\u0000\u0000\u0000\u0000|\u0005\u0000\u0000\u0000\u0000\u0000\u0000ùÿÿo\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ö\u0007\u0000\u0000\u0000\u0000\u0000\u0000æ\u0007\u0000\u0000\u0000\u0000\u0000\u0000ö\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0006\b\u0000\u0000\u0000\u0000\u0000\u0000\u0016\b\u0000\u0000\u0000\u0000\u0000\u0000&\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0010 \u0000\u0000\u0000\u0000\u0000GCC: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u00008\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0002\u0000T\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0003\u0000t\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0004\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0005\u0000À\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0006\u0000(\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0007\u0000|\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\b\u0000 \u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\t\u0000ð\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\n\u0000\u0010\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u000b\u0000 \u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\f\u0000À\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\r\u00000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u000e\u0000@\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u000f\u0000¤\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0010\u0000°\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0011\u0000´\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0012\u0000\u0000\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0013\u0000p\r \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0014\u0000\r \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0015\u0000\r \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0016\u0000\u000f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0017\u0000\u0000\u0010 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0018\u0000 \u0010 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000ñÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0002\u0000\u000e\u0000À\b\u0000\u0000\u0000\u0000\u0000\u0000.\u0000\u0000\u0000\u0000\u0000\u0000\u00005\u0000\u0000\u0000\u0001\u0000\u0018\u0000Y\u0012 \u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0004\u0000ñÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000O\u0000\u0000\u0000\u0002\u0000\u000e\u0000 \t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Q\u0000\u0000\u0000\u0002\u0000\u000e\u0000`\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0000\u0000\u0000\u0002\u0000\u000e\u0000°\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000z\u0000\u0000\u0000\u0001\u0000\u0018\u0000X\u0012 \u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0014\u0000\r \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000°\u0000\u0000\u0000\u0002\u0000\u000e\u0000ð\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¼\u0000\u0000\u0000\u0001\u0000\u0013\u0000p\r \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0004\u0000ñÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Û\u0000\u0000\u0000\u0001\u0000\u0012\u0000,\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000é\u0000\u0000\u0000\u0000\u0000\u0011\u0000´\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ü\u0000\u0000\u0000\u0001\u0000\u0015\u0000\r \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0013\u0000\r \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0016\u0001\u0000\u0000\u0000\u0000\u0013\u0000p\r \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0001\u0000\u0016\u0000\u000f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0010\u0000\u0017\u0000\u0010\u0010 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000>\u0002\u0000\u0000 \u0000\u0017\u0000\u0000\u0010 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F\u0001\u0000\u0000\u0011\u0000\u0010\u0000°\n\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000U\u0001\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0001\u0000\u0000\u0012\u0000\u000e\u0000@\b\u0000\u0000\u0000\u0000\u0000\u0000s\u0000\u0000\u0000\u0000\u0000\u0000\u0000v\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¾\u0001\u0000\u0000\u0011\u0002\u0017\u0000\b\u0010 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ë\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ç\u0002\u0000\u0000\u0012\u0000\u000f\u0000¤\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ã\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000B\u0002\u0000\u0000\u0012\u0000\u000e\u0000ð\b\u0000\u0000\u0000\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\u0000ý\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000'\u0000\u0000\u0000\u0012\u0000\u000e\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0012\u0000\u000b\u0000 \u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0002\u0000\u0000\u0011\u0002\u0017\u0000\u0010\u0010 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0002\u0000\u0000\u0011\u0000\u0018\u0000 \u0010 \u0000\u0000\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0000\u0000\u0000\u0000<\u0002\u0000\u0000\u0010\u0000\u0017\u0000\u0000\u0010 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0010\u0000\u0018\u0000`\u0012 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000I\u0002\u0000\u0000\u0010\u0000\u0018\u0000\u0010\u0010 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U\u0002\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000z\u0002\u0000\u0000\u0012\u0000\u000e\u00000\n\u0000\u0000\u0000\u0000\u0000\u0000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¡\u0002\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000½\u0002\u0000\u0000\u0012\u0000\u000e\u0000 \n\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000Í\u0002\u0000\u0000\u0011\u0000\u0018\u0000@\u0011 \u0000\u0000\u0000\u0000\u0000\u0018\u0001\u0000\u0000\u0000\u0000\u0000\u0000ã\u0002\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0003\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0003\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000+\u0003\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000recursive_factorial.cc\u0000_GLOBAL__sub_I__Z9factoriali\u0000_ZStL8__ioinit\u0000crtstuff.c\u0000deregister_tm_clones\u0000__do_global_dtors_aux\u0000completed.7697\u0000__do_global_dtors_aux_fini_array_entry\u0000frame_dummy\u0000__frame_dummy_init_array_entry\u0000__FRAME_END__\u0000__GNU_EH_FRAME_HDR\u0000_DYNAMIC\u0000__init_array_end\u0000__init_array_start\u0000_GLOBAL_OFFSET_TABLE_\u0000_edata\u0000_IO_stdin_used\u0000__cxa_finalize@@GLIBC_2.2.5\u0000main\u0000_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@@GLIBCXX_3.4\u0000__dso_handle\u0000_ZNSirsERi@@GLIBCXX_3.4\u0000__cxa_atexit@@GLIBC_2.2.5\u0000__stack_chk_fail@@GLIBC_2.4\u0000__TMC_END__\u0000_ZSt4cout@@GLIBCXX_3.4\u0000__data_start\u0000__bss_start\u0000_ZNSt8ios_base4InitC1Ev@@GLIBCXX_3.4\u0000__libc_csu_init\u0000_ZNSolsEi@@GLIBCXX_3.4\u0000_ITM_deregisterTMCloneTable\u0000__libc_csu_fini\u0000_ZSt3cin@@GLIBCXX_3.4\u0000__libc_start_main@@GLIBC_2.2.5\u0000__gmon_start__\u0000_ITM_registerTMCloneTable\u0000_ZNSt8ios_base4InitD1Ev@@GLIBCXX_3.4\u0000\u0000.symtab\u0000.strtab\u0000.shstrtab\u0000.interp\u0000.note.ABI-tag\u0000.note.gnu.build-id\u0000.gnu.hash\u0000.dynsym\u0000.dynstr\u0000.gnu.version\u0000.gnu.version_r\u0000.rela.dyn\u0000.rela.plt\u0000.init\u0000.plt.got\u0000.text\u0000.fini\u0000.rodata\u0000.eh_frame_hdr\u0000.eh_frame\u0000.init_array\u0000.fini_array\u0000.dynamic\u0000.data\u0000.bss\u0000.comment\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u00008\u0002\u0000\u0000\u0000\u0000\u0000\u00008\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0002\u0000\u0000\u0000\u0000\u0000\u0000T\u0002\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0002\u0000\u0000\u0000\u0000\u0000\u0000t\u0002\u0000\u0000\u0000\u0000\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000öÿÿo\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000N\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0002\u0000\u0000\u0000\u0000\u0000\u0000À\u0002\u0000\u0000\u0000\u0000\u0000\u0000h\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000V\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000(\u0004\u0000\u0000\u0000\u0000\u0000\u0000(\u0004\u0000\u0000\u0000\u0000\u0000\u0000S\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000^\u0000\u0000\u0000ÿÿÿo\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000|\u0005\u0000\u0000\u0000\u0000\u0000\u0000|\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000k\u0000\u0000\u0000þÿÿo\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0005\u0000\u0000\u0000\u0000\u0000\u0000 \u0005\u0000\u0000\u0000\u0000\u0000\u0000P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000z\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\u0005\u0000\u0000\u0000\u0000\u0000\u0000ð\u0005\u0000\u0000\u0000\u0000\u0000\u0000 \u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0016\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0007\u0000\u0000\u0000\u0000\u0000\u0000 \u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0007\u0000\u0000\u0000\u0000\u0000\u0000À\u0007\u0000\u0000\u0000\u0000\u0000\u0000p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u00000\b\u0000\u0000\u0000\u0000\u0000\u00000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\b\u0000\u0000\u0000\u0000\u0000\u0000@\b\u0000\u0000\u0000\u0000\u0000\u0000b\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000£\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000¤\n\u0000\u0000\u0000\u0000\u0000\u0000¤\n\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000©\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000°\n\u0000\u0000\u0000\u0000\u0000\u0000°\n\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000±\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000´\n\u0000\u0000\u0000\u0000\u0000\u0000´\n\u0000\u0000\u0000\u0000\u0000\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¿\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0000\u0000\u00000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000É\u0000\u0000\u0000\u000e\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000p\r \u0000\u0000\u0000\u0000\u0000p\r\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Õ\u0000\u0000\u0000\u000f\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r \u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000á\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r \u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000f \u0000\u0000\u0000\u0000\u0000\u000f\u0000\u0000\u0000\u0000\u0000\u0000x\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ê\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010 \u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\u0000\u0000\u0000\b\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0010 \u0000\u0000\u0000\u0000\u0000\u0010\u0010\u0000\u0000\u0000\u0000\u0000\u0000@\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000õ\u0000\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0010\u0000\u0000\u0000\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0010\u0000\u0000\u0000\u0000\u0000\u0000ð\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0000\u0000\u0000-\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00000\u0017\u0000\u0000\u0000\u0000\u0000\u0000P\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0000\u0000þ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int m;\n    if(n == 0) m = 1;\n    else m = (n * factorial(n - 1));\n    return m;\n}\n\nint main() {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) return n * factorial(n - 1);\n    else return 1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << \"factorial(\" << n << \") \" << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//OperaciÃ³ factorial\nint factorial(int n) {\n\tint fact;\n\tif (n <= 1) {\n\t\tfact = 1;\n\t}\n\telse fact = n * factorial(n - 1);\n\treturn fact;\n}\n\n\n\n\n\n\n//programa que retorna el factorial !x\nint main() {\n\tint x;\n\twhile (cin >> x) {\n\t\tcout << factorial(x) << endl;\n\t}\n}\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint f=1;\r\n\t\r\n\tif(n!=1){\r\n\t\treturn (n * factorial(n-1));\r\n\t}\r\n\telse return n;\r\n}\r\n\r\nint main(){\r\n\tint n,total;\r\n\tcin>>n;\r\n\ttotal=factorial(n);\r\n\t\r\n\tcout<<total<<endl;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n!=1){\r\n\t\treturn (n * factorial(n-1));\r\n\t}\r\n\telse return n;\r\n}\r\n\r\nint main(){\r\n\tint n,total;\r\n\tcin>>n;\r\n\ttotal=factorial(n);\r\n\t\r\n\tcout<<total<<endl;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif(n==0) return 1;\r\n\tif(n!=1){\r\n\t\treturn (n * factorial(n-1));\r\n\t}\r\n\telse return n;\r\n}\r\n\r\nint main(){\r\n\tint n,total;\r\n\tcin>>n;\r\n\ttotal=factorial(n);\r\n\t\r\n\tcout<<total<<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse{\r\n\t\treturn factorial(n-1)*n;\r\n\t} \r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\n\n\nint factorial(int n) {\n\n\tif (n <= 1) return 1;\n\n\telse return n * factorial(n-1);\n\n}\n\n\n\nint main() {\n\n\tint x;\n\n\tcin >> x;\n\n\tcout << factorial(x) << endl;\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\n\nint factorial(int n) {\n\n\tif (n <= 1) return 1;\n\n\telse return n * factorial(n-1);\n\n}\n\n\n\nint main() {\n\n\tint x;\n\n\tcin >> x;\n\n\tcout << factorial(x) << endl;\n\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\n/*\nint main(){\n    cout << factorial(0);\n    cout << factorial(1);\n    cout << factorial(4);\n}\n*/",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n * factorial(n - 1);\n}\n\nint main () {\n  int x;\n  cin >> x;\n\n  cout << factorial (x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n>1) return n*factorial(n-1);\n    else return 1 ;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if(n == 0) return 1;\n    else return factorial(n-1) * n;\n    \n}\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    cout << factorial(0) << endl;\n    cout << factorial(1) << endl;\n    cout << factorial(2) << endl;\n    cout << factorial(3) << endl;\n    cout << factorial(4) << endl;\n         \n  \n}\n    \n        \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact=1;\n    for(int i=1;i<=n;++i){\n        fact*=i;\n    }\n    return fact;\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    else return factorial(n);\n}\n\nint main(){\n    int x;\n    \n    cin>>x;\n    cout<<factorial(x)<<endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x){\n    if(x==0) return 1;\n    else return x*factorial(x-1);        \n}\n\nint main(){\n    factorial(2);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 0) return 1;\n    else return n+factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tint f;\n\tif (n == 0) f = 1;\n\telse f = n * factorial(n-1);\n\treturn f;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int x) {\n\tint fact;\n\tif (x == 0) fact = 1;\n\telse fact = x * factorial ( x - 1);\n\treturn fact;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   \t\n}\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\treturn n * factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n  int a=1;\n  for (int i=1; i<=n; ++i) {\n    a=i*a;\n  }\n  return a;\n}\nint main() {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1;\n    else return n * factorial(n-1);\n} \nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int factor = 0;\n  if (n == 0) factor = 1;\n  else factor = n * factorial(n - 1);\n\n  return factor; \n}\n\nint main() {\n  int x;\n  cin >> x;\n  \n  cout << factorial(x) << endl;\n}",
  "// Â¿QuÃ©? Calcular factorial;\n// Â¿CÃ³mo? De forma recursiva;\n\n#include <iostream>\nusing namespace std;\n\n// Pre: n >= 0 and n <= 12;\n// Post: Calcular el factorial de n;\nint factorial(int n) {\n\tint fact = 0;\n\tif (n == 0) fact = 1;\n\telse {\n\t\tfact = n * factorial(n - 1);\n\t}\n\treturn fact;\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint a = n;\n\tint fact = 1;\n\tif (n == 0) {\n\t\treturn fact;\n\t}\n\telse {\n\t\tfor (int i = 1; i <= n; ++i) {\n\t\t\tfact = fact * a;\n\t\t\ta = a - 1;\n\t\t}\n\t\treturn fact;\n\t}\n}\n\nint main () {\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n//Pre: n >= 0 y <= 12; \n//Post: factorial de n; \n//QuÃ©: calcular el factorial de n recursivamente\nint factorial (int n) {\n\tint fact;\n\t// caso base\n\tif (n <= 1) fact = 1;\n\telse fact = n * factorial (n - 1);\n\treturn fact;\n}\nint main () {\n\tint x;\n\twhile (cin >> x) {\n\t\tcout << factorial (x) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int x) {\n\tint fact;\n\tif (x <= 1) fact = 1;\n\telse fact = x * factorial ( x - 1);\n\treturn fact;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   \t\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tint factor;\n\tif (n <= 1) factor = 1;\n\telse factor = n * factorial(n-1);\n\treturn factor;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n//Pre: 0 <= n <= 12\r\n//Post: Escribir el factorial de n.\r\nint fact(int x) {\r\n\tif (x == 0) x = 1; \r\n\telse x = x*fact(x-1);\r\n\treturn x;\r\n\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\twhile (cin >> x) {\r\n\t\tcout << fact(x) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint fact;\n\tif (n <= 1) fact = 1;\n\telse fact = n * factorial(n-1);\n\treturn fact;\t\n}\n \nint main () {\n\tint x;\n\twhile (cin >> x){\n\t\tcout << factorial(x) << endl;\n\t}\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) n = 1;\n    else n = factorial(n-1)*n;\n     return n;\n}\n\n\n\n\nint main() {\n    int n; \n    while(cin >> n) {\n    if (n >= 0 and n <= 12) cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else {\n        int f = factorial (n - 1);\n        return n * f;\n    }\n    \n}\n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n == 0) return 1;\nelse return n * factorial(n-1);\n}\n\nint main(){\nint x;\ncin >> x;\ncout << factorial(x) << endl;\n}\n",
  "\n#include <iostream>\nusing namespace std;\n\n/* Pre: Nos dan un numero n que es 0 <= n >= 12.\n * Post: Hay que sacar un numero natural.\n * Â¿QuÃ©?: factorial recursivode un numero natural.\n */\nint factorial(int n) {\n\t//caso base, bien n es 0 o 1\n\tint fact = 1;\n\tif (n > 1) fact = factorial (n - 1) * n;\n\treturn fact;\n}\n\n\nint main() {\n\tint x;\n\twhile (cin >> x) {\n\t\tif ((x >= 0) and (x <= 12))\n\t\tcout << factorial(x) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0 or n==1) return 1;\n    else {\n        int f = factorial (n-1);\n        return n*f;\n    }\n}\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\t\tif (n <= 1) return 1;\n\t\telse return n * factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}\n\n}\n\n",
  "#include <iostream> \r\nusing namespace std;\r\n\r\n//pre: 0 < n < 12\r\n//return: n!\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\t//PB: n=0\r\n\telse {\r\n\t\tint f = factorial(n-1);\r\n\t\t//HI: f=(n-1)\r\n\t\treturn f*n;\r\n\t}\r\n}\r\n\r\n\r\nint main () {\r\n\t\r\n\tint x;\r\n\twhile (cin >> x){\r\n\tcout << factorial(x) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\tint factorial(int n) {\n\t\tif (n == 0) return 1;\n\t\telse {\n\t\t\treturn n * factorial (n - 1);\n\t\t}\n",
  "#include <iostream>\nusing namespace std;\n\n\tint factorial(int n) {\n\t\tif (n == 0) return 1;\n\t\telse {\n\t\t\treturn n * factorial (n - 1);\n\t\t}\n\t}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int sum = 1;\n  while (n != 0) {\n    sum = n*sum;\n    --n;\n  }\n  return sum;\n}\n\n\nint main() {\n  int a;\n  while (cin>>a) cout<<factorial(a)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse {\n\t\tint f = factorial (n - 1);\n\t\treturn f*n;\n\t}\n}\n\nint main() {\n\tint k;\n\tcin >> k;\n\tcout << factorial (k) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "//Factorial recursiu\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int a=1;\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\t\r\n\tif (n<=0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\t\r\n\tint n;\r\n\twhile (cin>>n) cout<<factorial(n)<<endl;\r\n\t\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0)\n        return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint  factorial(int n) {\n        if (n == 0) return 1;\n        else return n*factorial(n - 1);\n}\n    \nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1)\n}\n\nint main() {\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main() {\n\t\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    int fact;\r\n    if (n<=1) fact=1;\r\n    else fact=n*factorial(n-1);\r\n\r\n    return fact;\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int x) {\n    int fact;\n    \n    if (x <= 1) fact = 1;\n    \n    else fact = x * factorial(x - 1);\n    \n    return fact;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    \n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Input: 0 <= x <= 12\n//Out: x!\nint factorial(int x) {\n    int fact;\n    if (x <= 1) fact = 1;\n    else fact = x * factorial(x-1);\n    return fact;\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n==0 or n==1) return 1;\r\n    else{\r\n        n= n*factorial(n-1);\r\n        return n;\r\n    } \r\n}\r\nint main(){\r\n    int n;\r\n    while (cin>>n){\r\n        cout<<factorial(n)<<endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else {\n        int k = factorial(n-1);\n        return n*k}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else {\n        int k = factorial(n-1);\n        return n*k;}\n}\n",
  "#includePath <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n==1) return 1;\r\n    else return n*factorial(n-1);\r\n    }\r\nint main () {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial (x) << endl;\r\n    }\r\n} ",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n==1) return 1;\r\n    else return n*factorial(n-1);\r\n    }\r\n\r\nint main () {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial (x) << endl;\r\n    }",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n<=1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin>>x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n    }\n\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial (x) << endl;\n    }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    int f=1 ;\n    int i=0 ;\n    \n    while (n<i) {\n        \n        i=i+1;\n        f=f*i;}\n        return f;}\n",
  "#include <iostream> \nusing namespace std;\n\n\nint factorial(int n){\n    int res = 1;\n    if (n == 0) res = 1;\n    else {\n        res = (n)*factorial(n-1);\n        n = n-1;\n    }\n    return res;\n}\nint main (){\n    int n;\n    \n    cin >> n;\n    \n    n = factorial(n);\n    \n    cout << n << endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint factorial(int n)\n{\n    if(n>0)return n*factorial(n-1);\n    else return 1;\n}\n\nint main()\n{\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;    \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    \n    int n;\n    cin>>n ;\n    factorial(n);\n    cout<< f << endl ;\n    \n}\n\nint factorial(int n){\n    \n    int f=1 ;\n    int i=0 ;\n    \n    while (n<i) {\n        \n        i=i+1;\n        f=f*i;}\n        return f;}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint main()\n{\n    return 0;\n}\n\nint factorial(int n){\n    \n    int f=1 ;\n    int i=0 ;\n    \n    while (n<i) {\n        \n        i=i+1;\n        f=f*i;}\n        return f;}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n   if (n>1){\n       return n*factorial(n-1);}\n       \n       else{ return 1;}\n    \n}\n\nint main(){\n    \n    int n ;\n    cin>> n ;\n    cout<< factorial(n)<< endl ;\n\n    }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n{\n    if (n <= 1)\n    {\n        return n;\n    }\n    \n    else\n    {\n        return n*factorial(n-1);\n    }\n}\n\nint main()\n{\n    int x;\n    \n    cin >> x;\n    \n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n{\n    if (n <= 1)\n    {\n        return 1;\n    }\n    \n    else\n    {\n        return n*factorial(n-1);\n    }\n}\n\nint main()\n{\n    int x;\n    \n    cin >> x;\n    \n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n    \n}\n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else{\r\n        return n*factorial(n-1);\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n    \r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int suma=1;\n    if (n==0)suma=1;\n    else {\n        while(n>0){\n        suma*=n;\n        --n;\n        }\n    }\n    return suma;\n}\n\n\n\nint main(){\n    int n;\n    while(cin>>n)cout<<factorial(n)<< endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int suma=1;\n    if (n==0)suma=1;\n    else {\n        while(n>0){\n        suma*=n;\n        --n;\n        }\n    }\n    return suma;\n}\n\n\n\nint main(){\n    int n;\n    while(cin>>n)cout<<factorial(n)<< endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0)return 1;\n    else return n*factorial(n-1);\n    \n    \n    \n}\n\n\n\nint main(){\n    int n;\n    while(cin>>n)cout<<factorial(n)<< endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return (n*factorial(n-1));\r\n }\r\n\r\n int main() {\r\n     int n;\r\n     cin >> n;\r\n     cout << factorial(n) << endl;\r\n }\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int x;\n    if(n == 0)x = 1;\n    else x = factorial(n - 1)*n;\n    return x;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include<iostream>\nusing namespace std;\n int factorial(int n){\n int x=1;\n for(int i=1;i<=n;++i){\n     x=x*i;\n }\n return x;\n }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(x==1){\r\n\t\treturn 1;\r\n\t}\r\n\telse{\r\n\t\treturn n*n_factorial(x-1);\r\n\t}\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==1){\r\n\t\treturn 1;\r\n\t}\r\n\telse{\r\n\t\treturn n*n_factorial(x-1);\r\n\t}\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==1){\r\n\t\treturn 1;\r\n\t}\r\n\telse{\r\n\t\treturn n*n_factorial(n-1);\r\n\t}\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==1){\r\n\t\treturn 1;\r\n\t}\r\n\telse{\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==1 or n==0){\r\n\t\treturn 1;\r\n\t}else{\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n\r\n",
  "include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<2) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<2) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    int f = 1;\n    int i = 0;\n    \n    while (i<n) {\n        ++i;\n        f = f*i;\n    }\n    return f;\n}\n\nint main () {\n}\n",
  "#include \"iostream\"\r\nusing namespace std;\r\nint factorial(int n) {\r\nif (n=0) return 1;\r\nelse return factorial(n-1);\r\n}\r\nint main();",
  "#include \"iostream\"\r\nusing namespace std;\r\nint factorial(int n) {\r\nif (n==0) return 1;\r\nelse return factorial(n-1);\r\n}\r\nint main();",
  "#include \"iostream\"\r\nusing namespace std;\r\nint factorial(int n) {\r\nif (n==0) return 1;\r\nelse return n*factorial(n-1);\r\n}\r\nint main();",
  " #include <iostream>\n using namespace std;\n\n int factorial(int n) {\n     if (n <= 1) return 1;\n     else return n * factorial(n-1);\n }\n\n int main() {\n     int x;\n     cin >> x;\n     cout << factorial(x) << endl;\n }\n",
  "int factorial(int n){\n  if (n > 1){\n    return n*factorial(n - 1);\n  }\n  else return 1;\n}\n",
  "   \n#include <iostream>\nusing namespace std;\n\n\n\n#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main()\n{\n  int n;\n  while(cin>>n){\n    cout<<factorial(n)<<endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\t\n\tif (n == 0) return 1;\n\telse return n * factorial(n-1);\n\t\n}\n\n\nint main()  {\n\n\tint x;\n\twhile (cin >> x) {\n\t\t\n\t\tcout << factorial(x) << endl;\n\n\t}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n <= 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main (){\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int x = 1;\n    for(int i = 1; i <= n; i++) x *= i;\n    return x;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n == 0){\r\n\t\tn = 1;\t\t\r\n\t}else{\r\n\t\tn = n * factorial(n-1);\r\n\t}\r\n\treturn n;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std; \r\n\r\n int factorial(int n) {\r\n\tif (n <= 1) return 1; \r\n \telse return n * factorial(n - 1); \r\n }\r\n\r\nint main () {\r\n\tint n; \r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n<=1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main (){\r\nint n;\r\n\twhile (cin >> n ) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    int m= factorial(n-1);\n    return  n*m;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n        \n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1 or n == 0) return 1;\n\telse return n * factorial(n-1);\n\t\n}\n\nint main() {\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\t\n\t\n\t\n\tif (n == 0) return 1;\n\treturn n* factorial(n-1);\n\t\t\n\t\n}\n\nint main () {\n\t\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n\tif (n <= 0) return 1;\n\treturn n * fact(n-1);\n}\n\nint main (){\n\tint x;\n\tcin >> x;\n\tcout << fact(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f=1;\n    for(int i=1;i<=n;i+=1){\n        f*=i;\n    }\n    return f;\n}\n\nint main(){\n    int c;\n    cin>>c;\n    cout<<factorial(c);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 0 or n == 1) return 1;\r\n    else return factorial(n-1)*n;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n/*\r\nPre: Nos dan un numero natural.\r\nPost: Hay que sacar un numero natural.\r\n¿Qué?: Represente en binario el numero natural\r\nintroducido.\r\n*/\r\nvoid binario (int x) {\r\n// caso base, si el natural es mas pequeño que 2\r\n// hay que sacar ese numero.\r\n\tif (x < 2) cout << x;\r\n\telse {\r\n\t\tbinario (x/2);\r\n\t\tcout << x%2;\r\n\t}\r\n}\r\n/*\r\nPre: Nos dan un numero natural.\r\nPost: Hay que sacar un numero natural.\r\n¿Qué?: Represente en octal el numero natural\r\nintroducido.\r\n*/\r\nvoid octal (int y) {\r\n// caso base, si el natural es mas pequeño que 8\r\n// hay que sacar ese numero.\r\n\tif (y < 8) cout << y;\r\n\telse {\r\n\t\toctal (y/8);\r\n\t\tcout << y%8;\r\n\t}\r\n}\r\n/*\r\nPre: Nos dan un numero natural.\r\nPost: Hay que sacar un numero natural.\r\n¿Qué?: Represente en octal el numero natural\r\nintroducido.\r\n*/\r\nvoid hexa (int z) {\r\n// caso base, si el natural es mas pequeño que 16\r\n// hay que sacar ese numero.\r\n\tif (z < 16) {\r\n\t\tif (z==15) cout << 'F';\r\n\t\telse if (z==14) cout << 'E';\r\n\t\telse if (z==13) cout << 'D';\r\n\t\telse if (z==12) cout << 'C';\r\n\t\telse if (z==11) cout << 'B';\r\n\t\telse if (z==10) cout << 'A';\r\n\t\telse cout << z;\r\n\t} \r\n\telse {\r\n        hexa (z/16); \r\n\t\tif (z%16==15) cout << 'F';\r\n\t\telse if (z%16==14) cout << 'E';\r\n\t\telse if (z%16==13) cout << 'D';\r\n\t\telse if (z%16==12) cout << 'C';\r\n\t\telse if (z%16==11) cout << 'B';\r\n\t\telse if (z%16==10) cout << 'A';\r\n\t\telse cout << z%16;\r\n\t}\r\n}\r\n\r\n\r\nint main() {\r\n\tint x;\r\n\twhile (cin >> x) {\r\n        cout << x << ' ' << '=' << ' ';\r\n\t\tbinario (x);\r\n\t\tcout << ',' << ' ';\r\n\t\toctal (x);\r\n\t\tcout << ',' << ' ';\r\n\t\thexa (x);\r\n\t\tcout << endl;\r\n\t}\t\r\n}\r\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    //cas directe\n    if (n == 0) return 1;\n    //hipotesis induccio\n    else {\n        return n*factorial(n-1);\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int count = 1;\n    for (int i = n; i > 0; i--) count *= i;\n    return count;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n       cout << factorial(x) << endl;\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    cout << factorial(4) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int num) {\n    if (num == 0) return 1;\n    else {\n        return num*factorial(num - 1);\n    }\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x);\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin>>n;\r\n    int t;\r\n    cin>>t;\r\n    int x;\r\n    cin>>x;\r\n    if (n>=5 and t>=2 and x>=50){\r\n        cout<<\"You can run the game\"<<endl;\r\n    }\r\n    else{\r\n        cout<<\"You can NOT run the game\"<<endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin>>n;\r\n    int t;\r\n    cin>>t;\r\n    int x;\r\n    cin>>x;\r\n    if (n>=5 and t>=2 and x>=50){\r\n        cout<<\"You can run the game\"<<endl;\r\n    }\r\n    else{\r\n        cout<<\"You can NOT run the game\"<<endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin>>n;\r\n    int t;\r\n    cin>>t;\r\n    int x;\r\n    cin>>x;\r\n    if (n>=5 and t>=2 and x>=50){\r\n        cout<<\"You can run the game\"<<endl;\r\n    }\r\n    else{\r\n        cout<<\"You can NOT run the game\"<<endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n){\r\n    int numero = 0;\r\n    if(n==0){\r\n        return n;\r\n    }\r\n    else{\r\n        for(numero;numero<=n;numero++){\r\n            numero = numero*numero;\r\n        }\r\n    }\r\n}\r\nint main()\r\n{\r\n\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n){\r\n    int numero = 1;\r\n    int numero2 = 1;\r\n    if(n==0){\r\n        return 0;\r\n    }\r\n    else{\r\n        for(numero;numero2<=n;numero2++){\r\n            numero = numero*numero2;\r\n        }\r\n        return numero;\r\n    }\r\n}\r\nint main()\r\n{\r\n\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n){\r\n    int numero = 1;\r\n    int numero2 = 1;\r\n    if(n==0){\r\n        return 1;\r\n    }\r\n    else{\r\n        for(numero;numero2<=n;numero2++){\r\n            numero = numero*numero2;\r\n        }\r\n        return numero;\r\n    }\r\n}\r\nint main()\r\n{\r\n\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n int factorial(int n){\r\n     if(n==0){\r\n        return 0;\r\n     }\r\n     return n*(n-1);\r\n }\r\n\r\nint main()\r\n{\r\n\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n int factorial(int n){\r\n     if(n==0){\r\n        return 1;\r\n     }\r\n     return n*(n-1);\r\n }\r\n\r\nint main()\r\n{\r\n\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n int factorial(int n){\r\n     if(n==0){\r\n        return 1;\r\n     }\r\n     else{\r\n        return n*(n-1);\r\n     }\r\n }\r\n\r\nint main()\r\n{\r\n\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n int factorial(int n){\r\n     if(n==0){\r\n        return 1;\r\n     }\r\n     else{\r\n        return n*factorial(n-1);\r\n     }\r\n }\r\n\r\nint main()\r\n{\r\n\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n==0){\r\n        return 1;\r\n    }\r\n    else{\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    factorial(4);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n    if (n > 1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else return 1;\r\n\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0) return 1;\r\n\telse{\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n    if(x < 1){\n        return 1;\n    } \n    else {\n        return x * factorial(x-1);\n    }\n}\n \nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n{\n    if(n>0)return n*factorial(n-1);\n\n    return 1;\n}\n\nint main()\n{\n    int n;\n    cin>>n,\n    cout<<factorial(n)<<endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint (factorial (int n)){\n\nif (n==0){\n\n\tn = 1;\n}\n\nelse {\n\n\t (n)= factorial(n-1) * n;\n\t}\n\nreturn n;\n}\n\nint main(){\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else{\n        int ans = factorial(n-1);\n        return n*ans;\n    }\n}\n\nint main(){\n    int iNumero;\n    cin >> iNumero;\n    cout << factorial(iNumero)<< endl;\n}\n    \n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n)\r\n{\r\n   if (n <= 1) return 1;\r\n   else return n * factorial(n-1);\r\n}\r\nint main()\r\n{\r\n   int x;\r\n   \r\n   cin >> x;\r\n   \r\n   cout << factorial(x) << endl;\r\n   \r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) <<endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n) {\r\n \tif(n == 0) return 1;\r\n \telse return n * factorial(n-1);\r\n \t\r\n }\r\n int main() {\r\n \tint n;\r\n \tcin >> n;\r\n \tcout << factorial(n) << endl;\r\n }\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact;\n    if (n == 0) {\n        fact = 1;\n    }\n    else {\n        fact = n * factorial(n - 1);\n    }\n    return fact;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main () {\n    int y; \n    cin >> y; \n    cout << factorial(y) << endl; \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int fact;\n  if (n == 0 or n == 1) fact = 1;\n  else fact = n * factorial(n - 1);\n\n  return fact;\n}\n\nint main() {\n  int x;\n  while (cin >> x) cout << factorial(x) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "\n \n\n#include <iostream>\nusing namespace std;\n\nint factorial (int num) {\n    if (num == 0) return 1;\n    else {\n        return num*factorial(num - 1);\n    }\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x);\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n   int i;\r\n   int fact=1;\r\n   int fac;\r\n   cin>>n;\r\n   if(n<0) fact =0;\r\n   else if(n==0) fact=1;\r\n   else{\r\n      for (i = 1; i <= n; i++){\r\n         fac = fact*i;\r\n      }\r\n      cout << \"\" << fac << endl;\r\n}\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n* factorial (n-1);\r\n\t\r\n}\r\n\r\nint main () {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial (x) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n        cout << factorial(0) << endl;\r\n        cout << factorial(1) << endl;\r\n        cout << factorial(2) << endl;\r\n        cout << factorial(3) << endl;\r\n        cout << factorial(4) << endl;\r\n}\r\n",
  "#include <iostream> \n#include <algorithm>\n#include <math.h>\n#include <vector>\n#include <string>\n#include <iomanip>\nusing namespace std; \n\n\n\n\nint number_of_digits(int n){\n    int total = 1;\n    while (n > 9){\n        n /= 10;\n        total++;\n    }\n    return total;\n    \n    \n    \n}\n\n\n\nint gcd(int a, int b){\n    \n    while (a != 0 and b != 0){\n        if (a > b) a %= b;\n        else b %= a;\n        \n    }\n    return a + b;\n    \n}\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n * factorial (n - 1);\n}\n\n\nint main(){ \n    \n   int n;\n   cin >> n;\n   cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n//Precondition: 0 <= n <= 12\n//Postcondition: n!\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n    return 0;\n}\n",
  "int factorial(int n) {\n\tswitch (n) {\n\t\tcase 2: return 2; \n\t\tcase 3: return 6;\n\t\tcase 4: return 24;\n\t\tcase 5: return 120;\n\t\tcase 6: return 720;\n\t\tcase 7: return 5040;\n\t\tcase 8: return 40320;\n\t\tcase 9: return 362880;\n\t\tcase 10: return 3628800;\n\t\tcase 11: return 39916800;\n\t\tcase 12: return 479001600;\n\t\tdefault : return 1;\n\t}\n}",
  "//Factorial recursiu\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}",
  "#include <iostream> \nusing namespace std;\nint factorial(int n){\nint res;\nif(n==0) res=1;\nelse res= n*factorial(n-1)\nreturn res\n}\n\n",
  "#include <iostream> \nusing namespace std;\nint factorial(int n){\nint res;\nif(n==0) res=1;\nelse res= n*factorial(n-1)\nreturn res;\n}\n\n",
  "#include <iostream> \nusing namespace std;\nint factorial(int n){\nint res;\nif(n==0) res=1;\nelse res= n*factorial(n-1);\nreturn res;\n}\n\n",
  "//Factorial recursiu - P12509\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}\n",
  "//donat un enter x i un natural n, calcula x ^ n\n//cas base n=0 res=1\n//cas recursiu n>0 x^n= x^(n-1) *x\n\n#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\nint fac=1;\nif (n==0) fac=1;\nelse  fac=n*factorial(n-1);\n\n\n\nreturn fac;\n\n}\n\n\nint main() {\n\nint x=1;\ncout<<factorial(x)<<endl;\n\n\n\n}\n\n\n\n",
  "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint factorial(int n){\nint facto=1;\nif(n==0) facto=1;\nelse facto=n*factorial(n-1);\n\n\n\n\nreturn facto;\n}\nint main(){\n\n\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tint a=0,x=1;\n\twhile(a<=n){\n\t\tif(a==0) x=1;\n\t\telse x=a*x;\n\t\tcout<<x<<endl;\n\t\ta++;\n\t}\n\treturn x;\n}\n\n\nint main(){\n\tint x;\n\tcin>>x;\n\tfactorial(x);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int);\n\nint factorial(int n){\n    if (n > 1) return n*factorial(n-1);\n\telse return 1;\n}\n\n\nint main(){\n\tint x;\n\tcin>>x;\n\tcout<<factorial(x)<<endl;\n\treturn 0;\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0){\n\t\tn=1;\n\t}\n\telse\n\t\tn=n*factorial(n-1);\nreturn n;\n}\n\nint main(){\nint num;\ncin>>num;\nint a;\na=factorial(num);\ncout<<a<<endl;\n}\n",
  "# This file will be used to perform volatile programs xd\n\nfrom jutge import read_many\n\n\ndef factorial(n):\n    if n < 1:\n        return 1\n    else:\n        return factorial(n-1) * n\n    \n        \n",
  "from jutge import read\r\n\r\nn = read(int)\r\n\r\ndef factorial(n):\r\n    if n == 1:\r\n        return 1\r\n    else:\r\n        return n * factorial(n-1)\r\n\r\nprint(factorial(n))\r\n",
  "def factorial(n):\r\n    if n == 1:\r\n        return 1\r\n    else:\r\n        return n * factorial(n-1)\r\n",
  "def factorial(n):\r\n    if n <= 1:\r\n        return 1\r\n    else:\r\n        return n * factorial(n-1)\r\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\n\n\nint factorial(int n) {\n    int result = 1;\n    if (n <= 1) return result;\n    else return n*factorial(n-1);\n\n    }\n    \n\n\nint main() {\n    int n;\n    cin >> n;\n    int res = factorial(n);\n    cout << res << endl;\n\n    }\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1 || n == 0){\n        return 1;\n    }\n    else\n    {\n        return n*factorial(n -1);\n    }\n}\n\nint main(){\n    int n;\n    while (cin >> n) cout << factorial(n)<< endl;\n}",
  "#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tint res;\r\n\tif (n==0) res=1;\r\n\telse {\r\n\t\tres = n * factorial (n-1);\r\n\t}\r\n\treturn res;\r\n}\r\n\r\n\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\tint factorial(int n){\n\t\tint i=n-1,q=n;\n\t\tif (n==0) return 1;\n\t\telse{ while(i!=0){\n\t\t\tq=q*i;\n\t\t\ti--;}\n\t\treturn q;}\n\t\t\n\t\t\n}\n\n\n\n\nint main(){\n\tint n, q;\n\tcin >> n;\n\tq=factorial(n);\n\tcout << q << endl;\n\t\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n == 0 || n == 1)\n\t\treturn 1;\n\telse\n\t\treturn n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n\n",
  "def factorial(n):\r\n\treturn factorial(n-1)*n if n != 0 else 1",
  "def factorial(n):\n\tif n==0:\n\t\treturn 1\n\telse:\n\t\treturn n*factorial(n-1)\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  \r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\tint  factorial ( int  n ){\r\n\t\tint res;\r\n\t\tif(n==0) res=1;\r\n\t\telse{\r\n\t\t\tres= n*factorial(n-1);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\nint main(){\r\n\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\n\tif(n>1)return n*factorial(n-1);\n\telse return 1;\n}\n\nint main(){\nint x;\ncin>>c;\ncout<<factorial(c)<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\n\tif(n>1)return n*factorial(n-1);\n\telse return 1;\n}\n\nint main(){\nint c;\ncin>>c;\ncout<<factorial(c)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x){\n\tif (x == 0 or x == 1){\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn x* factorial(x-1);\n\t}\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t\n\t}\n\t\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n* factorial (n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "from jutge import read\n\ndef factorial (x):\n  if x == 1:\n    return x\n  else:\n    return x*factorial(x-1)\n\ntry:\n  while True:\n    x = read(int)\n    print(factorial(x))\n\nexcept:\n  pass",
  "from jutge import read\n\ndef factorial (x):\n  if x == 1:\n    return x\n  elif x ==0:\n    return 1\n  else:\n    return x*factorial(x-1)\n\ntry:\n  while True:\n    x = read(int)\n    print(factorial(x))\n\nexcept:\n  pass",
  "from jutge import read\nimport math\ndef fac(n):\n    return 1 if (n <= 12) else n * fac(n-1)",
  "def factorial(n): \n    res = 1\n    for i in range(2, n + 1): \n            res *= i \n    return res \n          \n# A Simple Function to return value  \n# of 1/1! + 1/2! + .. + 1/n! \ndef sum(n): \n    s = 0.0\n      \n    for i in range(1, n + 1): \n        s += 1.0 / factorial(i) \n    print(s) \n  \n# Driver program to test above functions \nn = 5\nsum(n)",
  "from jutge import read\ndef factorial(n):\n   if n == 1:\n       return n\n   else:\n       return n*factorial(n-1)\n\nnum = 7\n\n# check if the number is negative\nif num < 0:\n   print(\"Sorry, factorial does not exist for negative numbers\")\nelif num == 0:\n   print(\"The factorial of 0 is 1\")\nelse:\n   print(\"The factorial of\", num, \"is\", factorial(num))",
  "from jutge import read\ndef factorial(n):\n   if n == 1:\n       return n\n   else:\n       return n*factorial(n-1)\n\nnum = read(int)\ntry:\n  num = read(int)\n  if num < 0:\n   print()\n  elif num == 0:\n    print()\n  else:\n    print(num, factorial(num))\nexcept:\n  pass    ",
  "from jutge import read\ndef factorial(n):\n   if n == 1:\n       return n\n   else:\n       return n*factorial(n-1)\n\n\ntry:\n  while True:\n    num = read(int)\n    if num < 0:\n      print()\n     elif num == 0:\n       print()\n    else:\n      print(num, factorial(num))\nexcept:\n  pass    ",
  "from jutge import read\ndef factorial(n):\n   if n == 1:\n       return n\n   else:\n       return n*factorial(n-1)\n\n\ntry:\n  while True:\n    num = read(int)\n    if num < 0:\n      print()\n    elif num == 0:\n      print()\n    else:\n      print(num, factorial(num))\nexcept:\n  pass    ",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int auxSum = n;\n    if (n > 0) {\n        --n;\n        auxSum += factorial(n);\n    }\n    return auxSum;\n};\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "from jutge import read\ndef factorial(n):\n   if n == 1:\n       return n\n   else:\n       return n*factorial(n-1)\n\n\ntry:\n  while True:\n    num = read(int)\n    if num < 0:\n      print()\n    elif num == 0:\n      print()\n    else:\n      print( factorial(num))\nexcept:\n  pass    ",
  "from jutge import read\ndef factorial(n):\n   if n == 1:\n       return n\n   else:\n       return n*factorial(n-1)\n\nprint(1)\ntry:\n  while True:\n    num = read(int)\n    if num < 0:\n      print()\n    elif num == 0:\n      print()\n    else:\n      print( factorial(num))\nexcept:\n  pass    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int auxSum = n;\n    --n;\n    if (n > 0) {\n        auxSum *= factorial(n);\n    }\n    if (n <= 0) {\n        auxSum = 1;\n    }\n    return auxSum;\n};\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\n#include <math.h>\n#include <iomanip>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\treturn 1 / n + factorial(n);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <math.h>\n#include <iomanip>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\treturn n * factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  else return n * factorial (n-1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <set>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n  if(n==1){\r\n    return 1;\r\n  }else {\r\n    return n*factorial (n-1);\r\n  }\r\n}\r\n\r\nint main() {\r\n  cout<<factorial(4);\r\n}\r\n",
  "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <set>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n  if(n==0){\r\n    return 1;\r\n  }else {\r\n    return n*factorial (n-1);\r\n  }\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  while(cin>>n){\r\n    cout<<factorial(n)<<endl;\r\n  }\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif (n==1){\n\t\treturn 1;\n\t}\n\tint a;\n\ta=n*factorial(n-1);\n\treturn a;\n}\n\nint main(){\n\tint a;\n\tcin>>a;\n\tint b= factorial(a);\n\tcout<<b<<endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif (n==1 or n==0){\n\t\treturn 1;\n\t}\n\tint a;\n\ta=n*factorial(n-1);\n\treturn a;\n}\n\nint main(){\n\tint a;\n\tcin>>a;\n\tint b= factorial(a);\n\tcout<<b<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n > 0) return (n * factorial(n-1));\n  else return 1;\n}\n\nint main() {\n  cout << factorial (7) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else {\n        return n * factorial(n-1);\n    }\n}\n        \n\nint main() {\n    int a;\n    while(cin >> a) {\n        cout << factorial(a) << endl;\n    }\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n, int& res) {\n    if (n <= 0) return res;\n    else {\n        res *= n;\n        cout << res << endl;\n        factorial (n-1,res);\n\n\n    }\n    return res;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    int res = 1;\n    res = factorial(n,res);\n    cout << res;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n, int& res) {\n    if (n <= 0) return res;\n    else {\n        res *= n;\n        cout << res << endl;\n        factorial (n-1,res);\n\n\n    }\n    return res;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    int res = 1;\n    res = factorial(n,res);\n    cout << res;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n, int& res) {\n    if (n <= 0) return res;\n    else {\n        res *= n;\n        \n        factorial (n-1,res);\n\n\n    }\n    return res;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    int res = 1;\n    res = factorial(n,res);\n    cout << res;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 0) return n;\n    else {\n        return n* (n-1);\n    }\n    return n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n\n    n = factorial(n);\n    cout << n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return n;\n    else {\n        return n* (n-1);\n    }\n    return n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n\n    n = factorial(n);\n    cout << n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\n    if (n <= 1) return 1;\n    else {\n        return n* (n-1);\n    }\n    return n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n\n    n = factorial(n);\n    cout << n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\n    if (n <= 1) return 1;\n    else {\n        return n* factorial(n-1);\n    }\n    return n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n\n    n = factorial(n);\n    cout << n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact;\n    if (n == 0) {\n        fact = -1;\n    }\n    else {\n        fact = n*factorial(n-1);\n    }\n    return fact;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact;\n    if (n == 0) {\n        fact = -1;\n    }\n    else {\n        fact = n*factorial(n-1);\n    }\n    return fact;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact;\n    if (n == 0) {\n        fact = 1;\n    }\n    else {\n        fact = n*factorial(n-1);\n    }\n    return fact;\n}\n\n",
  "//Imprime el factorial de una numero introducido\n#include <iostream>\nusing namespace std;\n//Funcion que devuelve el factorial de un numero\nint factorial(int n) {\n\tint factor;\n\tif (n <= 1) factor = 1;\n\telse factor = n * factorial(n-1);\n\treturn factor;\n}\n\nint main() {\n  //Introduce el numero\n  int numero;\n  while (cin >> numero) {\n    //Imprime el factorial del numero introducido\n    cout << factorial(numero) << endl;\n\t}\n}",
  "// Pre.: natural number 'n'\n// Post.: n!\nint fact(int n) {\n\tif (n < 2) return 1;\n\treturn n*fact(n - 1);\n}\n",
  "// Pre.: natural number 'n'\n// Post.: n!\nint factorial(int n) {\n\tif (n < 2) return 1;\n\treturn n*fact(n - 1);\n}\n",
  "// Pre.: natural number 'n'\n// Post.: n!\nint factorial(int n) {\n\tif (n < 2) return 1;\n\treturn n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact;\n    if (n == 0) {\n        fact = 1;\n    }\n    else {\n        fact = n*factorial(n-1);\n    }\n    return fact;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else n *= factorial(n - 1);\n    return n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "ï»¿// Jutge.cpp : Bu dosya 'main' iÅlevi iÃ§eriyor. Program yÃ¼rÃ¼tme orada baÅlayÄ±p biter.\r\n//\r\n\r\n#include <iostream>\r\n#include <string>\r\n#include <stdio.h>\r\n#include <ctype.h>\r\n#include<iomanip>\r\n#include<algorithm> \r\n#include<string>  \r\n#include<sstream> \r\n#include <math.h>\r\n#define _USE_MATH_DEFINES\r\n# define M_PIl\r\n#include <cmath>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) { return 1; }\r\n    else{  \r\n        return n* factorial(n - 1);\r\n    }\r\n\r\n}\r\n\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n       cout<< factorial(n)<< endl;\r\n  }\r\n\r\n}\r\n   \r\n",
  "\r\npublic class factorialTest {\r\n\tpublic static int factorial(int n) {\r\n\t\tif (n==0 || n==1)\r\n\t\t\treturn n;\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\r\n}\r\n",
  "\r\n\r\n\tpublic static int factorial(int n) {\r\n\t\tif (n==0 || n==1)\r\n\t\t\treturn n;\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\r\n\r\n",
  "public class Factorial {\r\n\t\r\n\tpublic static int factorial(int n) {\r\n\t\tif (n==0 || n==1)\r\n\t\t\treturn n;\r\n\t\treturn n*factorial(n-1);\r\n\t\t\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSystem.out.println(factorial(6));\r\n\r\n\t}\r\n\r\n}\r\n",
  "class Factorial {\r\n\t\r\n\tpublic static int factorial(int n) {\r\n\t\tif (n==0 || n==1)\r\n\t\t\treturn n;\r\n\t\treturn n*factorial(n-1);\r\n\t\t\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSystem.out.println(factorial(6));\r\n\r\n\t}\r\n\r\n}\r\n",
  "class factorial {\r\n\t\r\n\tpublic static int factorial(int n) {\r\n\t\tif (n==0 || n==1)\r\n\t\t\treturn n;\r\n\t\treturn n*factorial(n-1);\r\n\t\t\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSystem.out.println(factorial(6));\r\n\r\n\t}\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif( n <= 1 ) return 1;\r\n\telse return factorial(n-1);\r\n\r\n\tfactorial(n);\r\n}\r\n\r\nint main(){\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif( n <= 1 ) return 1;\r\n\telse return factorial(n-1)*n;\r\n}\r\n\r\nint main(){\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  //cas base\n  if (n < 2) return 1;\n  //cada n li diu a la mes petita que es calculi ella sola\n  //i quan sapiga el resultat li retorni\n  //quan s'arribi al cas base ell es calcularÃ \n  //i li retornara a una n + gran q ell el seu resultat\n  else return n*factorial(n-1);\n}\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0 or n == 1) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}",
  "int factorial(int n) {\r\n\tif (n > 1) {\r\n\t\tn = n * factorial(n - 1);\r\n\t}\r\n\telse n = ;\r\n}",
  "int factorial(int n) {\r\n\tif (n > 1) {\r\n\t\tn = n * factorial(n - 1);\r\n\t}\r\n\telse n = 1;\r\n}",
  "int factorial(int n) {\r\n\tif (n >= 1) {\r\n\t\tn = n * factorial(n - 1);\r\n\t\treturn(n);\r\n\t}\r\n\telse return(1);\r\n\t\r\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int fact;\r\n    if (n <= 1) fact = 1;\r\n    else fact = n * factorial(n-1);\r\n\r\n\r\n\r\n    return fact;\r\n}\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n}\r\n",
  "   \n#include <iostream>\nusing namespace std;\n\n\n\n#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \n",
  "#include<iostream>\nusing namespace std;\n int factorial(int n){\n int x=1;\n for(int i=1;i<=n;++i){\n     x=x*i;\n }\n return x;\n }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else {\n        n = n * factorial(n-1);\n    }\n    return n;\n}\n\n\nint main() {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint r = 1;\r\n\tfor(int i = 1; i <= n; ++i) r *= i;\r\n\treturn r;\r\n}\r\n\r\nint main(){\r\n\tint a;\r\n\twhile(cin >> a) cout << factorial(a) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint (factorial (int n)){\n\nif (n==0){\n\n\tn = 1;\n}\n\nelse {\n\n\t (n)= factorial(n-1) * n;\n\t}\n\nreturn n;\n}\n\nint main(){\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) n = 1;\n    else n = n * factorial(n-1);\n    return n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <vector>\n#include <string>\n#include <cmath>\n#include <iomanip>\nusing namespace std;\n\nint position(double x, const vector<double>& v, int left, int right)\n{   \n    if (left>right) return -1;\n    int mitad = (left+right)/2;\n    if( x < v[mitad]) return position(x, v, left, mitad-1);\n    else if (x > v[mitad]) return position(x, v, mitad +1, right);\n    return mitad; \n}\n int factorial(int n)\n{   if(n==0)return 1;\n    return n*factorial(n-1);\n}\nint main()\n{  \n    int x;\n    cin>>x;\n    cout<< numerogritado(x)<<endl;\n    \n}\n",
  "#include <iostream>\n#include <vector>\n#include <string>\n#include <cmath>\n#include <iomanip>\nusing namespace std;\n\nint position(double x, const vector<double>& v, int left, int right)\n{   \n    if (left>right) return -1;\n    int mitad = (left+right)/2;\n    if( x < v[mitad]) return position(x, v, left, mitad-1);\n    else if (x > v[mitad]) return position(x, v, mitad +1, right);\n    return mitad; \n}\n int factorial(int n)\n{   if(n==0)return 1;\n    return n*factorial(n-1);\n}\nint main()\n{  \n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\n\tif (n == 0) n = 1;\n\telse {\n\t\tint s = factorial(n-1);\n\t\treturn n*s;\n\t}\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\n\tif (n == 0) return 1;\n\telse {\n\t\tint s = factorial(n-1);\n\t\treturn n*s;\n\t}\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint res = 1;\r\n\tif (n == 0) return 1;\r\n\telse {\r\n\t\tres = n * factorial(n - 1)\r\n\t\t--n;\r\n\t}\r\n\treturn res;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint res = 1;\r\n\tif (n == 0) return 1;\r\n\telse {\r\n\t\tres = n * factorial(n - 1)\r\n\t\tn -= 1;\r\n\t}\r\n\treturn res;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint res = 1;\r\n\tif (n == 0) return 1;\r\n\telse {\r\n\t\tres = n * factorial(n - 1);\r\n\t\tn -= 1;\r\n\t}\r\n\treturn res;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n* (factorial (n - 1));\r\n}\r\n\r\nint main () {\r\n\tint a;\r\n\twhile (cin >> a) {\r\n\t\tcout << factorial(a) << endl;\r\n\t}\r\n}",
  "//Que: donat un nombre retorna el seu factorial de forma recurisva\n#include <iostream>\nusing namespace std;\n\n//Pre: n es major que 0 i menor que 12\n//Post: --\nint factorial(int n) {\n    if (n == 0) return 1; //cas base    \n    else return n * factorial(n-1); //cas recursiu\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n == 0){\n\t\treturn 1;\n\t}else{\n\t\treturn factorial(n-1)*n;\n\t}\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n   if (n <= 1) return 1;\r\n   else  return n * factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n   int x;\r\n   \r\n   cin >> x;\r\n   \r\n   cout << factorial(x) << endl;\r\n}",
  "using namespace std;\r\nint factorial(int n) {\r\n  if (n <= 1) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\nint main() {\r\n  int n;\r\n  while (cin >> n) cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n  if (n <= 1) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\nint main() {\r\n  int n;\r\n  while (cin >> n) {\r\n    cout << factorial(n) << endl;\r\n  }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    else{\n        return n*factorial(n-1);\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)  {\n    int result;\n    if(n <= 1) return 1;\n    else {\n        result = factorial(n-1)*n;\n    }\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)  {\n    if(n <= 1) return 1;\n    else {\n        return factorial(n-1)*n;\n    }\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "int factorial(int n) {\n    if (n == 1) {\n        return 1;\n    } else {\n        return n*factorial(n-1);\n    }\n}\n",
  "int factorial(int n) {\n    if (n == 0) {\n        return 1;\n    } else {\n        return n*factorial(n-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    \r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n    \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n* factorial (n-1);\r\n\t\r\n}\r\n\r\nint main () {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial (x) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n < 2) {\r\n\t\treturn n;\r\n\t}\r\n\telse {\r\n\t\tint x = n - 1;\r\n\t\treturn n * (factorial(x));\r\n\t}\r\n}\r\n\r\nint main() {\r\n\t// Imprimir numeros con 6 digitos de decimal\r\n\t//cout.setf(ios::fixed);\r\n\t//cout.precision(6);\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n < 2) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\tint x = n - 1;\r\n\t\treturn n * (factorial(x));\r\n\t}\r\n}\r\n\r\nint main() {\r\n\t// Imprimir numeros con 6 digitos de decimal\r\n\t//cout.setf(ios::fixed);\r\n\t//cout.precision(6);\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int f=1;\r\n    for(int i=1;i<=n;i+=1){\r\n        f*=i;\r\n    }\r\n    return f;\r\n}\r\n\r\nint main(){\r\n    int c;\r\n    cin>>c;\r\n    cout<<factorial(c);\r\n}",
  "#include <iostream>\nusing namespace std;\n    int factorial(int n){\n    if (n<=1) return 1;\n    else return n*factorial (n-1);\n}\nint main(){\n    int a;\n    cin>>a;\n    cout<<factorial(a)<<endl;\n}\n        \n    \n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n<2){\r\n\t\treturn 1;\r\n\t}\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin>>n){\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==1){\r\n\t\treturn 1;\r\n\t}\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==1){\r\n\t\treturn 1;\r\n\t}\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n == 0){\r\n    return 1;\r\n  }\r\n  else{\r\n    return n * factorial(n-1);\r\n  }\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 ) return 1;\n    else return n * factorial (n - 1);\n}\n\nint main() {\n    int n; \n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint a = n;\n\tint fact = 1;\n\tif (n == 0) {\n\t\treturn fact;\n\t}\n\telse {\n\t\tfor (int i = 1; i <= n; ++i) {\n\t\t\tfact = fact * a;\n\t\t\ta = a - 1;\n\t\t}\n\t\treturn fact;\n\t}\n}\n\nint main (){\n}\n",
  "//Write a function that returns n!.\n//Solve this problem recursively.\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n<= 1) return 1;\n    \n\telse return n*factorial(n-1);\n}\n\n\nint main() {\n\tint y;\n    \n\tcin >> y;\n\tcout << factorial(y) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "//recursive factorital\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) n = 1;\n\telse n = n*factorial(n-1);\n\treturn n;\n}\n\n\nint main(){\nint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int fac;\r\n    if (n==0 or n==1) fac= 1;\r\n    else fac= factorial(n-1)*n;\r\n    return fac;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\n#include <cmath>\n#include <string>\n#include <cstdlib>\n#include <ctype.h>\n#include <stdio.h>\n#include <iomanip>\nusing namespace std;\n\nint P37760();\nint P38045();\nint absolute(int n);\nint max2(int a, int b);\nint max4(int a, int b, int c, int d);\nint factorial(int n);\nint double_factorial(int x);\nint P58653();\nint gcd(int a, int b);\nint gcd4(int a, int b, int c, int d);\nint P96564();\nint number_of_digits(int n);\nbool is_palindromic(int n);\nbool is_leap_year(int year);\nbool is_valid_date(int d, int m, int y);\nstring day_of_the_week (int d, int m, int y);\nbool is_perfect(int n);\nint sum_divisors(int x);\nint main() {\n}\n\n\n\nint P37760(){\ndouble a,s,c;\nwhile (cin>>a) {\n\t            a=a*3.14159265359/180;\n                s=sin(a);\n                c=cos(a);\n                if (s>-pow(10,-6) and s<0) s=-s;\n                if (c>-pow(10,-6) and c<0) c=-c;\n                cout<<fixed<<setprecision(6)<<s<<\" \"<<c<<endl;\n                }\n}\n\n\n\nint P38045(){\nint n,c;\ndouble r;\nwhile (cin>>n) {\n\t            c=n*n;\n\t            r=pow(n,0.5);\n\t            cout<<c<<\" \"<<fixed<<setprecision(6)<<r<<endl;\n\t            }\n}\n\n\n\nint absolute(int n){\nif (n<0) return -n;\nelse return n;\n}\n\n\n\nint max2(int a, int b){\nif (a>b) return a;\nelse return b;\n}\n\n\n\nint max4(int a, int b, int c, int d){\nif (c>a) a=c;\nif (d>b) b=d;\nif (a>b) return a;\nelse return b;\n}\n\n\nint factorial(int n){\nint f=1;\nwhile (n>1) {\n\t         f=f*n;\n\t         n=n-1;\n             }\nreturn f;\n}\n\n\n\nint double_factorial(int x){\nint f=1;\nwhile (x>1) {\n\t         f=f*x;\n\t         x=x-2;\n             }\nreturn f;\n}\n\n\n\nint P58653(){\nchar c,d;\ncin>>c;\nd=tolower (c);\ncout << \"letter\" << \"('\" << c << \"') = \";\nif (isalpha (c)) {\n\t              cout << \"true\" << endl;\n                  cout <<\"vowel\"<< \"('\" << c << \"') = \";\n                  if (d=='a' or d=='e' or d=='i' or d=='o' or d=='u') {\n                \t                                                   cout << \"true\" << endl;\n                                                                       cout <<\"consonant\"<< \"('\" << c << \"') = false\"<<endl;\n                  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t   }\n                  else {\n                \t    cout << \"false\" << endl;\n                \t    cout <<\"consonant\"<< \"('\" << c << \"') = true\"<<endl;\n                        }\n                  if (d==c) {\n                \t         cout<<\"uppercase\"<< \"('\" << c << \"') = false\"<<endl;\n                \t         cout<<\"lowercase\"<< \"('\" << c << \"') = true\"<<endl;\n                             }\n                  else {\n         \t            cout<<\"uppercase\"<< \"('\" << c << \"') = true\"<<endl;\n         \t            cout<<\"lowercase\"<< \"('\" << c << \"') = false\"<<endl;\n                        }\n                  }\nelse {\n\t  cout << \"false\" << endl;\n\t  cout<<\"vowel\"<< \"('\" << c << \"') = false\"<<endl;\n\t  cout<<\"consonant\"<< \"('\" << c << \"') = false\"<<endl;\n\t  cout<<\"uppercase\"<< \"('\" << c << \"') = false\"<<endl;\n\t  cout<<\"lowercase\"<< \"('\" << c << \"') = false\"<<endl;\n      }\ncout << \"digit\" << \"('\" << c << \"') = \";\n         if (isdigit (c)) cout << \"true\" << endl;\n         else cout << \"false\" << endl;\n}\n\n\nint gcd(int a, int b){\nint t;\nwhile (a > 0){\n\t          t = a;\n\t          a = b % a;\n\t          b = t;\n              }\nreturn b;\n}\n\n\n\nint gcd4(int a, int b, int c, int d){\nint t;\nwhile (a > 0){\n\t\t      t = a;\n\t\t      a = b % a;\n\t\t      b = t;\n\t          }\nwhile (c > 0){\n\t          t = c;\n\t          c = d % c;\n\t          d = t;\n              }\nwhile (b > 0){\n\t          t = b;\n\t          b = d % b;\n\t          d = t;\n              }\nreturn d;\n}\n\n\nint P96564(){\nint a,b,c;\nwhile (cin>>a) {\n\t            if (a==0) {}\n\t            else {\n\t            \t  cin>>c;\n                      for (int i=1; i<a; i++) {\n                                               cin>>b;\n                \t                           c=(c/gcd(c,b))*b;\n                \t                           }\n                      cout<<c<<endl;\n                      }\n               }\n}\n\n\n\nint number_of_digits(int n){\nfloat lg;\nlg=1+floor (log10 (n));\nif (n==0) return 1;\nelse return lg;\n}\n\n\n\nbool is_palindromic(int n){\nstring s = to_string(n);\nint length=s.size();\nbool v=true;\nfor (int i=0; i<length/2; i++) {\n\t                            if (s[i]!=s[length-i-1]) {\n\t                            \t                      v=false;\n\t                                                      break;\n\t                                                      }\n                                }\nreturn v;\n}\n\n\n\nbool is_leap_year(int year){\nbool bis=true;\ndiv_t division4 = div (year,4);\ndiv_t division400 = div (year,400);\ndiv_t division100 = div (year,100);\nif (division4.rem != 0) bis=false;\nelse if (division100.rem ==0 and division400.rem!=0) bis=false;\nreturn bis;\n}\n\n\n\nbool is_valid_date(int d, int m, int a){\nbool b;\nif (m > 12 or m < 1 or a < 1800 or a > 9999) b=false;\nelse if(m == 1 and (d > 31 or d < 1)) b=false;\n\t else if(m == 3 and (d > 31 or d < 1)) b=false;\n\t\t  else if(m == 4 and (d > 30 or d < 1)) b=false;\n\t\t       else if(m == 5 and (d > 31 or d < 1)) b=false;\n\t\t            else if(m == 6 and (d > 30 or d < 1)) b=false;\n\t\t                 else if(m == 7 and (d > 31 or d < 1)) b=false;\n\t\t                      else if(m == 8 and (d > 31 or d < 1)) b=false;\n\t\t                           else if(m == 9 and (d > 30 or d < 1)) b=false;\n\t\t                                else if(m == 10 and (d > 31 or d < 1)) b=false;\n\t\t                                     else if(m == 11 and (d > 30 or d < 1)) b=false;\n\t\t                                          else if(m == 12 and (d > 31 or d < 1)) b=false;\n\t\t                                               else if(m == 2 and (d < 29 or d > 1)) {\n\tif ((a%4 == 0 and a%100 != 0) or (a%100 == 0 and(a/100)%4 == 0)) {\n\t\t                                                              if (d > 29 or d < 1) b=false;\n\t\t                                                              else b=true;\n\t\t                                                              }\n    else if (d > 28 or d < 1) b=false;\n\t\t else b=true;\n\t\t                                                                                          }\n\n\t\t                                               else b=true;\nreturn b;\n}\n\n\n\n\n\nstring day_of_the_week (int d, int m, int y){\nint mp,yp,c,a,f;\nyp=y;\nmp=m-2;\nif (mp<=0) {\n\t       mp=mp+12;\n\t       yp=yp-1;\n           }\nc=yp/100;\na=yp%100;\nf= floor (2.6*mp-0.2)+d+a+a/4+c/4-2*c;\nf=f%7;\nif (f<0) f=f+7;\nif (f==1) return \"Monday\";\nelse if (f==2) return \"Tuesday\";\n     else if (f==3) return \"Wednesday\";\n          else if (f==4) return \"Thursday\";\n               else if (f==5) return \"Friday\";\n                    else if (f==6) return \"Saturday\";\n                         else return \"Sunday\";\n}\n\n\n\nbool is_perfect(int n){\nint sumdiv,a;\nif (n==1) sumdiv=0;\nelse sumdiv=1;\na=2;\nwhile (a<=sqrt(n)) {\n\t                if (a*a==n) sumdiv=sumdiv-a;\n\t                if (n%a==0) {\n\t                \t         sumdiv=sumdiv+a+n/a;\n\t                             }\n\t                a=a+1;\n                    }\nreturn n==sumdiv;\n}\n\n\n\nint sum_divisors(int x){\nint sumdiv,a;\nsumdiv=0;\na=1;\nwhile (a<=sqrt(x)) {\n\t\t            if (a*a==x) sumdiv=sumdiv-a;\n\t\t            if (x%a==0) {\n\t\t                \t     sumdiv=sumdiv+a+x/a;\n\t\t                         }\n\t\t                a=a+1;\n\t                }\nreturn sumdiv;\n}\n\n\n\n\n\n\n",
  "def factorial(n):\r\n\tif (n==0):\r\n\t\treturn 1\r\n\telse:\r\n\t\treturn n*factorial(n-1)\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main(){\r\n    int n; cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n    return 0;\r\n}\r\n\r\nint factorial(int n){\r\n    if(n>1){\r\n        return n*factorial(n-1);\r\n    }\r\n    else{\r\n        return 1;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    //cout << \"Start: \" << n << endl;\n    if(n>1){\n        n *= factorial(n-1);\n        //cout << \"-->\" << n << endl;\n    }\n    return n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n==0){\n        return 1;\n    }\n    //cout << \"Start: \" << n << endl;\n    if(n>1){\n        n *= factorial(n-1);\n        //cout << \"-->\" << n << endl;\n    }\n    \n    return n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\tvoid estrellas(int n){\r\n\t\tif(n==1) cout<<'*'<<endl;\r\n\t\telse{\r\n\t\t\testrellas(n-1);\r\n\t\t\testrellas(n-1);\r\n\t\t\tfor(int i=0; i<n; i++){\r\n\t\t\t\tcout<<'*';\r\n\t\t\t}\r\n\t\t\tcout<<endl;\r\n\t\t}\r\n\t}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\testrellas(n);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\t\r\n\tint factorial(int n){\r\n\t\t//Pre:n es un numero entero positivo\r\n\t\t//Post: retorna el numero factorial de n, que es = n*(n-1)*(n-2)..1\r\n\t\tint fac=1;\r\n\t\tif(n==1 or n==0) fac=1;\r\n\t\telse{\r\n\t\t\tfac = n * factorial(n-1);\r\n\t\t}\r\n\t\t\r\n\t\treturn fac;\r\n\t}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin>>n){\r\n\t\tcout<<factorial(n)<<endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n\t\n\t}\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\t}\n",
  "#include<iostream>\r\n\r\nint factorial(int n)\r\n{\t\r\n\tint m = n;\r\n\r\n\tif (n == 0)\r\n\t{\r\n\t\treturn 1;\r\n\t}\r\n\r\n\telse {\r\n\t\twhile (n > 1)\r\n\t\t{\r\n\t\t\tm = m * (n - 1);\r\n\t\t\t--n;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn m;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n\tif (n <= 0) {\r\n\treturn 1;\r\n\t} else {\r\n   return n*factorial(n-1);\r\n\t}\r\n}",
  "def factorial(n, a):\n\tif n == 0:\n\t\treturn a\n\ta = a * n\n\treturn factorial(n - 1, a)\n\t\nnum = int(input())\n\nprint(factorial(num, 1))\n\n",
  "from jutge import read\ndef factorial(n):\n    if n == 1 or n== 0:\n      return 1\n    else:\n      return n*factorial(n-1)\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\n",
  "#include <iostream>\n#include <vector>\n#include <string>\n#include <math.h>\n#include <iomanip>\nusing namespace std;\n\n\nint factorial(int a){\n\tif (a==1) return 1;\n\telse return n*factorial(a-1);\n\t\n\t}\n\t\n\t\n\t\nint main(){\n\t\tint a,b,c,d;\n\t\tcin>>a;\n\t\tcout<<factorial(a)<<endl;\n}\n",
  "#include <iostream>\n#include <vector>\n#include <string>\n#include <math.h>\n#include <iomanip>\nusing namespace std;\n\n\nint factorial(int a){\n\tif (a==1) return 1;\n\telse return n*factorial(a-1);\n\t\n\t}\n\t\n\t\n\t\nint main(){\n\t\tint a,b,c,d;\n\t\tcin>>a;\n\t\tcout<<factorial(a)<<endl;\n}\n",
  "#include <iostream>\n#include <vector>\n#include <string>\n#include <math.h>\n#include <iomanip>\nusing namespace std;\n\n\nint factorial(int a){\n\tif (a==1) return 1;\n\telse return a*factorial(a-1);\n\t\n\t}\n\t\n\t\n\t\nint main(){\n\t\tint a,b,c,d;\n\t\tcin>>a;\n\t\tcout<<factorial(a)<<endl;\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n == 1 or n == 0) return 1;\n    else{\n        return n * factorial(n-1);\n    }\n}\n\n\nint main(){\n    int n;\n    while(cin >> n) cout << factorial(n) << endl;\n}\n",
  "//\n//  main.cpp\n//  Pro1\n//\n//  Created by huiwen cao on 23/08/2020.\n//  Copyright Â© 2020 huiwen cao. All rights reserved.\n//\n\n#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n*factorial(n-1);\n    return 1;\n}\n\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n    if(n > 1)\n        return n * factorial(n - 1);\n    else\n        return 1;\n}\n\nint main(){\n\tint a;\n\tcin>>a;\n\tcout<<factorial(a)<<endl;\n\t\n\t\n\t\n\t}\n",
  "from easyinput import read\r\n\r\ndef factorial(n: int) -> int:\r\n    if n==0:\r\n        return 1\r\n    return n*factorial(n-1)",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n// Pre: n >= 0\r\n// Returns n!\r\n\r\nint factorial(int n) { \r\n\t// recursive solution\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <bits/stdc++.h>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n * factorial(n-1);\n    }\n\nint main() {\n    int n;\n    cin >> n,\n    cout << factorial(n) << endl;\n}\n",
  "#include <bits/stdc++.h>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n * factorial(n-1);\n    }\n\nint main() {\n    int n;\n    cin >> n,\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x)\n{\n    int result = 1;\n    for (int i = 1; i <= x; i++) {\n        result = result * i;\n    }\n    return result;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\treturn n*factorial(n-1);\r\n\t}\t\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n);\r\nint n;\r\nint factorial(int n)\r\n{\r\n\tif (n<=0){return 1;}\r\n\telse\r\n\t{\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n);\r\nint n;\r\nint factorial(int n)\r\n{\r\n\tif (n<=0){return 1;}\r\n\telse\r\n\t{\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\ninf fatorial(int x)\r\n{\r\n    if (x == 0) {\r\n        return 1;\r\n    } else {\r\n        return x * factorial(x - 1);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int x)\r\n{\r\n    if (x == 0) {\r\n        return 1;\r\n    } else {\r\n        return x * factorial(x - 1);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a) << endl;\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if(n == 0) return 1;\n  return n* factorial(n-1);\n}",
  "#include<iostream>\n#include<vector>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\n#include<vector>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    \n    if (n == 0) cout << 1 << endl;\n    else cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\n#include<vector>\n#include<math.h>\n\nusing namespace std;\n\nint factorial(int n){\n    int factorial = 1;\n    for (int i = 1; i <= n; ++i){\n        factorial = factorial*i;\n    }\n    return factorial;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    \n    if (n == 0) cout << 1 << endl;\n    else cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    int f = 1;\n    for (int i = 1; i <= n; ++i)\n        f = f * i;\n    return f;\n}\n\nint main()\n{\n    int n;\n    while (cin >> n)\n        cout << factorial(n) << endl;\n}\n",
  "#include<bits/stdc++.h>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while(cin >> x) cout << factorial(x) << endl;\n}\n",
  "int factorial(int n){\n  if(n==0) return 1;\n  return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n)\n{\n    if (n == 0 || n == 1)\n        return 1;\n    return factorial(n - 1) * n;\n}\nint main()\n{\n    cout << factorial(5) << factorial(10) << factorial(4);\n}\n",
  "#include <stdio.h>\n\n\r\nint factorial(int n) {\r\n    if (n == 1){\r\n        return 1;\r\n    } else {\r\n        return (n * factorial(n-1));\r\n    }\r\n}\r\n\r\n\nint main() {\n\tint n;\n\twhile (scanf(\"%d\", &n) > 0) {\n    printf(\"%d\\n\", factorial(n));\n\t}\n\treturn 0;\n}\n",
  "\"\"\"\r\nCreated on Thu Oct  1 15:26:06 2020\r\n\r\n@author: ofigon\r\n\"\"\"\r\n\r\nfrom jutge import read\r\n\r\n\r\ndef factorial (n ):\r\n    if (n == 1):\r\n        return 1;\r\n    else:\r\n        return (n * factorial(n-1));\r\n\r\n\r\n\r\nn = read(int)\r\nwhile n is not None: \r\n  print(factorial(n))\r\n  n = read(int)",
  "\"\"\"\r\nCreated on Thu Oct  1 16:07:44 2020\r\n\r\n@author: ofigon\r\n\"\"\"\r\n\r\nfrom jutge import read\r\n\r\ndef factorial (n):\r\n    if(n == 1):\r\n        return 1\r\n    else:\r\n        return(n * factorial(n-1)) \r\n        \r\nn = read(int)\r\nwhile n > 0: \r\n  print(factorial(n)) \r\n  n = read(int)",
  "\"\"\"\r\nCreated on Thu Oct  1 16:07:44 2020\r\n\r\n@author: ofigon\r\n\"\"\"\r\n\r\nfrom jutge import read\r\n\r\ndef factorial(n):\r\n    if(n == 1):\r\n        return 1\r\n    else:\r\n        return(n * factorial(n-1))\r\n\r\nn = read(int)\r\nwhile n is not None:\r\n    print(factorial(n))\r\n    n = read(int)",
  "\"\"\"\r\nCreated on Thu Oct  1 16:07:44 2020\r\n\r\n@author: ofigon\r\n\"\"\"\r\n\r\nfrom jutge import read\r\n\r\n\r\ndef factorial(n):\r\n    if(n == 1):\r\n        return 1\r\n    else:\r\n        return(n * factorial(n-1))\r\n\r\n\r\nn = read(int)\r\nwhile n is not None:\r\n    print(factorial(n))\r\n    n = read(int)\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main()\r\n{\r\n\tint x;\r\n\twhile(cin >> x)\r\n\t{\r\n\t\tcout << factorial(x) << endl;\r\n\t}\r\n}\r\n\r\nint factorial(int n)\r\n{\r\n\treturn n == 0 ? 1 : n * factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n){\r\n  int f = 1;\r\n  for (int i = n; i > 0; --i) f = f * i;\r\n  return f;\r\n}\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial (n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n==0) return 1;\r\n  return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int a)\n{\n    if (a <= 1)\n        return 1;\n    return a * factorial(a - 1);\n}\n",
  "\r\n\r\ndef factorial(n):\r\n    if n==0: return 1;\r\n    else: return n*factorial(n-1);\r\n\r\nprint(factorial(5))\r\n",
  "\r\n\r\ndef factorial(n):\r\n    if n==0: return 1;\r\n    else: return n*factorial(n-1);\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n  if (n==0) return 1;\r\n  else return n = n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n==0 or n==1) return 1;\n\telse return factorial(n-1)*n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n  if (n == 0) return 1;\r\n  return n * factorial (n - 1);\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n}\n",
  "from easyinput import read\n\n# returns int\ndef factorial(n):\n    if n == 0:\n        return 1\n    return int(n*factorial(n-1))\n\ndef main():\n    print(factorial(read(int)))\n\nmain()\n\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    factorial(1) = 1;\n    n* factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 1)\n        return 1;\n    else\n        return n = n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    int f = 1;\n    for (int i = n; i > 0; --i)\n        f = f * i;\n    return f;\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 1)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\nint main()\n{\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    int x;\n    x = n * factorial(n - 1);\n    return x;\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial(n - 1);\n}\nint main()\n{\n    int n, z;\n    cin >> n;\n    z = factorial(n);\n    cout << z << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int x){\n  int y = 1;\n  if (x>1) y = x*factorial(x-1);\n  return y;\n}\n\nint main(){\n  int a;\n  cin >> a;\n  cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0 or n == 1) {\n        return 1;\n    }\n    return factorial(n - 1) * n;\n}\n\nint main()\n{\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n  if (n=0){\r\n    return 1;\r\n  }\r\n  return factorial(n-1)*n;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n == 1) {\r\n    return n;\r\n  }\r\n  else {\r\n    return (n * factorial (n - 1));\r\n  }\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n == 0) return 1;\r\n  else return (n * factorial (n - 1));\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if ( n == 0 ) return 1;\n  else return n*factorial(n - 1);\n}\n\nint main(){\n  int n;\n  while (cin >> n){\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n == 0) return 1;\r\n  return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0)\r\n        return 1;\r\n\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n == 0) return 1;\n  if(n > 1){\n    return n * factorial(n-1);\n  }\n  return n;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n  int a=1;\r\n  if (n=0){\r\n    return a;\r\n  } else return ((factorial(n-1))*n);\r\n}\r\nint main(){\r\n  int n;\r\n  cin>>n;\r\n  cout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n  int a=1;\r\n  if (n=0){\r\n    return a;\r\n  } else return ((factorial(n-1))*n);\r\n}\r\nint main(){\r\n  int n;\r\n  cin>>n;\r\n  cout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n  if (n==0){\r\n    return 1;\r\n  }\r\n  return factorial(n-1)*n;\r\n}\r\nint main(){\r\n  int n;\r\n  cin>>n;\r\n  cout<<factorial(n)<<endl;\r\n}\r\n",
  "from easyinput import read\r\n\r\ndef factorial(n: int):\r\n    if (n == 0):\r\n         f = 1\r\n    elif (n == 1):\r\n         f = 1;\r\n    else:\r\n        f = n * factorial(n - 1)\r\n    return f\r\n\r\nn = read(int)\r\nprint(factorial(n))\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\tif(n==1) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\nint main(){\r\nint n;\r\ncin >> n;\r\ncout << factorial(n) << endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n == 0) return 1;\r\n  else return n = n*factorial(n-1);\r\n\r\n\r\n}\r\n\r\nint main()\r\n{\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n)\n{\n    if (n > 0) {\n        return n * factorial(n - 1);\n    } else {\n        return 1;\n    }\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n);\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n\treturn 0;\r\n\t}  \r\n}\r\n\r\nint factorial(int n){\r\n\tlong double fact;\r\n    if (n==0)\r\n        return 1;\r\n    else\r\n         return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) { // recursive solution\r\nif (n == 0) return 1;\r\nelse return n*factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n  if (n == 0) return 1;\r\n  else return n * factorial (n - 1);\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial (n) << endl;\r\n}\r\n",
  "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n\r\nint factorial(int n){\r\n\treturn n == 0 ? 1 : n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n\r\n\treturn 0;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n >= 1) return 1;\n  return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int a)\n{\n    if (a == 0)\n        return 1;\n    else\n        return a * factorial(a - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n  int producte = 1;\nfor (int i = n; i > 0; --i) producte = producte * i;\n    return producte;\n  }\n\nint main (){\n  int a;\n  cin >> a;\n\n  cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 1 or n == 0)\n        return 1;\n    return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n    if (n == 1 or n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n);\r\nint n;\r\nint factorial(int n)\r\n{\r\n\tif (n<=0){return 1;}\r\n\telse\r\n\t{\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1){\n        return 1;\n    } else {\n        return n * factorial(n-1);\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n)\r\n{\r\n    if (n > 1) {\r\n        return n * factorial(n - 1); //apliquem la disminuciÃ³ de n per recursivitat\r\n    } else\r\n        return 1; //tractament dels casos especials n==1 o n==0\r\n}\r\nint main() //programa de prova\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "from easyinput import read\n\ndef factorial(x):\n    if x == 0:  #Cas base\n        return 1\n    else:       #Cas recursiu\n        return x * factorial(x-1)\n\n\n\n\ndef main():\n    n = read(int)\n    print(factorial(n))\n\nmain()\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x)\n{\n    if (x == 0)\n        return 1;\n    else\n        return x * factorial(x - 1);\n}\nint main()\n{\n    int c;\n    cin >> c;\n    cout << factorial(c) << endl;\n}\n",
  "// 0! = 1\n// n! = (n-1)! * n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1) * n;\n} \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n > 1) {\n    n = (n * factorial(n - 1));\n  }\n  return n;\n}\n\nint main() {\n  int n;\n  cin >> n;\n\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) {\n    return 1;\n  } else {\n    if (n > 1) {\n      n = (n * factorial(n - 1));\n    }\n    return n;\n  }\n}\n\nint main() {\n  int n;\n  cin >> n;\n\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 1 or n == 0) return 1;\r\n    else return factorial(n - 1) * n;\r\n}\r\n\r\nint main () {\r\n    cout << factorial(3) << endl;\r\n}\r\n",
  "import java.util.Scanner;\r\n\r\n/**\r\n *\r\n * @author Pablo\r\n */\r\nclass Main {\r\n\r\n    public static void main(String[] args) {\r\n        \r\n    }\r\n    \r\n    public static int factorial(int n) {\r\n        if(n != 0) {\r\n            return n * factorial(n - 1);\r\n        } else {\r\n            return 1;\r\n        }\r\n    }\r\n}",
  "import java.util.Scanner;\r\n\r\n/**\r\n *\r\n * @author Pablo\r\n */\r\nclass Main {\r\n\r\n    public static void main(String[] args) {\r\n        final Scanner sc = new Scanner(System.in);\r\n    \twhile (sc.hasNextInt()) {\r\n      \t     int n = sc.nextInt();\r\n      \t     System.out.println(factorial(n));\r\n    \t}\r\n    }\r\n    \r\n    public static int factorial(int n) {\r\n        if(n != 0) {\r\n            return n * factorial(n - 1);\r\n        } else {\r\n            return 1;\r\n        }\r\n    }\r\n}",
  "    public static int factorial(int n)\r\n    {\r\n        if ((n==0)||(n==1))\r\n        {\r\n            return 1;\r\n        }\r\n        else\r\n        {\r\n            return n*factorial(n-1);\r\n        }\r\n         \r\n    }",
  "class Main {\r\n\t\r\n\t public static int factorial(int n)\r\n    {\r\n        if ((n==0)||(n==1))\r\n        {\r\n            return 1;\r\n        }\r\n        else\r\n        {\r\n            return n*factorial(n-1);\r\n        }\r\n         \r\n    }\r\n\tpublic static void main(String[] args) throws Exception {\r\n   \r\n    }\r\n}",
  "int factorial(int n){\n    if (n == 0 or n == 1)\n        return 1;\n    \n    return n * factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    {\r\n        if (n == 0) {\r\n            return 1;\r\n        } else {\r\n            return n * factorial(n - 1);\r\n        }\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 1)\n        return 1;\n    else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n < 1)\n        return 1;\n    else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  if (n == 1) return 1;\n  return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0) {\r\n        return 1;\r\n    } else {\r\n        return n * factorial(n - 1);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n <= 1) {\r\n        return 1;\r\n    } else {\r\n        return (n * factorial(n - 1));\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0) {\r\n        return 1;\r\n    } else\r\n        return n * factorial(n - 1);\r\n}\r\n",
  "from easyinput import read\n\ndef factorial(n):\n    if (n==0):\n         return 1\n    else:\n         return n*factorial(n-1)\n\n\ndef main():\n    n = read(int)\n    print(factorial(n))\n\nmain()",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n == 1) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n == 1) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nint main (){\r\n\r\nint a;\r\nwhile (cin >> a){\r\n  cout << factorial (a) << endl;\r\n}\r\n\r\n}",
  "#include <iostream>\r\n\r\nint factorial (int n){\r\n    if (n == 1) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nusing namespace std;\r\n\r\nint main (){\r\n\r\n  cout << factorial(0) << endl;\r\n  cout << factorial(1) << endl;\r\n  cout << factorial(2) << endl;\r\n  cout << factorial(3) << endl;\r\n  cout << factorial(4) << endl;\r\n}",
  "#include <iostream>\r\n\r\nint factorial (int n){\r\n    if (n== 0) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nusing namespace std;\r\n\r\nint main (){\r\n  cout << factorial(0) << endl;\r\n  cout << factorial(1) << endl;\r\n  cout << factorial(2) << endl;\r\n  cout << factorial(3) << endl;\r\n  cout << factorial(4) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n  if (n == 0 or n == 1) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1; \r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(a,b) << endl; \r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1; \r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl; \r\n}",
  "# include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0 or n == 1) return 1;\r\n    else return n * factorial (n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while (cin>>n) cout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0)\r\n        return 1;\r\n    return factorial(n - 1) * n;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "class Solution{\n    \n   public static int factorial(int n){\n       \n       if(n>1)\n           return n*factorial(n-1);\n       else\n           return 1;\n   }\n}  ",
  "int factorial(int n){\n    if (n == 0 or n == 1)\n        return 1;\n    \n    return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 1 or n == 0)\n        return 1;\n\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "/*Write a function that returns n!.\r\n\r\nSolve this problem recursively.\r\n\r\nInterface\r\n\r\nC++\r\n     int factorial(int n);\r\nC\r\n     int factorial(int n);\r\nJava\r\n     public static int factorial(int n);\r\nPython\r\n     factorial(n)  # returns int\r\n\r\n     factorial(n: int) -> int\r\nPrecondition\r\n\r\nAssume 0â¤ n â¤ 12.\r\n\r\nObservation You only need to submit the required procedure; your main program\r\nwill be ignored.\r\n*/\r\n\r\n// INCLUDES\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n// FUNCIONS\r\nint factorial(int n)\r\n{\r\n    // Cas base: si n Ã©s 1 o 0\r\n    // PrecondiciÃ³: n enter natural\r\n    if (n <= 1) {\r\n        return 1;\r\n        // Cas recursiu:\r\n    } else {\r\n        return (n * (factorial(n - 1)));\r\n    }\r\n}\r\n\r\n// COS PRINCIPAL\r\nint main()\r\n{\r\n    // Demanem el nombre el qual volem obtenir-ne el factorial\r\n    int nombre;\r\n    cin >> nombre;\r\n    cout << factorial(nombre) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint fact(int x)\r\n{\r\n    if (x == 0) {\r\n        return 1;\r\n    } else {\r\n        return fact(x - 1) * x;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << fact(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint fact(int x)\r\n{\r\n    if (x == 0)\r\n        return 1;\r\n    else\r\n        return fact(x - 1) * x;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << fact(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint fact(int x)\r\n{\r\n    if (x == 0)\r\n        return 1;\r\n    else\r\n        return fact(x - 1) * x;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint fact(int x)\r\n{\r\n    if (x == 0) {\r\n        return 1;\r\n    } else {\r\n        return fact(x - 1) * x;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint fact(int x)\r\n{\r\n    if (x == 0) {\r\n        return 1;\r\n    } else {\r\n        return fact(x - 1) * x;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << fact(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0) {\r\n        return 1;\r\n    } else {\r\n        return factorial(n - 1) * n;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n  int i=1;\r\n  int factorial=1;\r\n    factorial=1;\r\n    while (i <= n){\r\n      factorial= factorial*i;\r\n      i=i+1;\r\n    }\r\n    return factorial;\r\n  }\r\n}\r\nint main(){\r\n  int n;\r\n  while (cin >> n){\r\n    cout << factorial(n) << endl;\r\n  }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n  int i=1;\r\n  int factorial=1;\r\n  while (i <= n){\r\n      factorial= factorial*i;\r\n      i=i+1;\r\n  }\r\n  return factorial;\r\n}\r\nint main(){\r\n  int n;\r\n  while (cin >> n){\r\n    cout << factorial(n) << endl;\r\n  }\r\n}\r\n",
  "ELF\u0002\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000>\u0000\u0001\u0000\u0000\u0000à\b\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000x\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u00008\u0000\t\u0000@\u0000\u001d\u0000\u001c\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000ø\u0001\u0000\u0000\u0000\u0000\u0000\u0000ø\u0001\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0004\u0000\u0000\u00008\u0002\u0000\u0000\u0000\u0000\u0000\u00008\u0002\u0000\u0000\u0000\u0000\u0000\u00008\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \f\u0000\u0000\u0000\u0000\u0000\u0000 \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000p\r\u0000\u0000\u0000\u0000\u0000\u0000p\r \u0000\u0000\u0000\u0000\u0000p\r \u0000\u0000\u0000\u0000\u0000 \u0002\u0000\u0000\u0000\u0000\u0000\u0000ð\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\r \u0000\u0000\u0000\u0000\u0000\r \u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000T\u0002\u0000\u0000\u0000\u0000\u0000\u0000T\u0002\u0000\u0000\u0000\u0000\u0000\u0000T\u0002\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000Påtd\u0004\u0000\u0000\u0000¤\n\u0000\u0000\u0000\u0000\u0000\u0000¤\n\u0000\u0000\u0000\u0000\u0000\u0000¤\n\u0000\u0000\u0000\u0000\u0000\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000Qåtd\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000Råtd\u0004\u0000\u0000\u0000p\r\u0000\u0000\u0000\u0000\u0000\u0000p\r \u0000\u0000\u0000\u0000\u0000p\r \u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000/lib64/ld-linux-x86-64.so.2\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000GNU\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0003\u0000\u0000\u0000GNU\u0000\t¥m¬^ø=áTdÏi¶Xèw\u0002\u0000\u0000\u0000\r\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0010\u0002\u0001\u0000\u0004\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\fCs\u0007\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0001\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000x\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000m\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ò\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000³\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Þ\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001f\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000;\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ô\u0000\u0000\u0000\u0011\u0000\u0018\u0000 \u0010 \u0000\u0000\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ë\u0000\u0000\u0000\u0011\u0000\u0018\u0000@\u0011 \u0000\u0000\u0000\u0000\u0000\u0018\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000libstdc++.so.6\u0000__gmon_start__\u0000_ITM_deregisterTMCloneTable\u0000_ITM_registerTMCloneTable\u0000_ZNSt8ios_base4InitD1Ev\u0000_ZNSirsERi\u0000_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_\u0000_ZNSt8ios_base4InitC1Ev\u0000_ZSt3cin\u0000_ZSt4cout\u0000_ZNSolsEi\u0000libc.so.6\u0000__stack_chk_fail\u0000__cxa_atexit\u0000__cxa_finalize\u0000__libc_start_main\u0000GLIBCXX_3.4\u0000GLIBC_2.4\u0000GLIBC_2.2.5\u0000\u0000\u0000\u0000\u0002\u0000\u0003\u0000\u0003\u0000\u0002\u0000\u0004\u0000\u0003\u0000\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0003\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000 \u0000\u0000\u0000t)\b\u0000\u0000\u0003\u00001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u0000è\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014ii\r\u0000\u0000\u0004\u0000=\u0001\u0000\u0000\u0010\u0000\u0000\u0000u\u001ai\t\u0000\u0000\u0002\u0000G\u0001\u0000\u0000\u0000\u0000\u0000\u0000p\r \u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000à\t\u0000\u0000\u0000\u0000\u0000\u0000x\r \u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000°\b\u0000\u0000\u0000\u0000\u0000\u0000\r \u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \t\u0000\u0000\u0000\u0000\u0000\u0000\b\u0010 \u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0010 \u0000\u0000\u0000\u0000\u0000Ð\u000f \u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ø\u000f \u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000à\u000f \u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000è\u000f \u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\u000f \u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ø\u000f \u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0010 \u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0011 \u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u000f \u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¨\u000f \u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000°\u000f \u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¸\u000f \u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u000f \u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000È\u000f \u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Hì\bH\u0005=\b \u0000HÀt\u0002ÿÐHÄ\bÃ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ÿ5Ê\u0007 \u0000ÿ%Ì\u0007 \u0000\u000f\u001f@\u0000ÿ%Ê\u0007 \u0000h\u0000\u0000\u0000\u0000éàÿÿÿÿ%Â\u0007 \u0000h\u0001\u0000\u0000\u0000éÐÿÿÿÿ%º\u0007 \u0000h\u0002\u0000\u0000\u0000éÀÿÿÿÿ%²\u0007 \u0000h\u0003\u0000\u0000\u0000é°ÿÿÿÿ%ª\u0007 \u0000h\u0004\u0000\u0000\u0000é ÿÿÿÿ%¢\u0007 \u0000h\u0005\u0000\u0000\u0000éÿÿÿÿ%\u0007 \u0000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Hì\u0018H=õ\b \u0000Ht$\u0004dH\u0004%(\u0000\u0000\u0000HD$\b1Àè{ÿÿÿD$\u0004¾\u0001\u0000\u0000\u0000Àt\u000ef\u000f\u001fD\u0000\u0000\u000f¯ðè\u0001uøH=\u0007 \u0000èÿÿÿHÇè<ÿÿÿ1ÀHT$\bdH3\u0014%(\u0000\u0000\u0000u\u0005HÄ\u0018ÃèPÿÿÿH=¢\t \u0000Hì\bèPÿÿÿH=1\u0007 \u0000H\u0015:\u0007 \u0000H5\t \u0000HÄ\bé\u0012ÿÿÿf1íIÑ^HâHäðPTL\u0005\u0001\u0000\u0000H\r#\u0001\u0000\u0000H=<ÿÿÿÿ\u0015Ö\u0006 \u0000ô\u000f\u001fD\u0000\u0000H=ù\u0006 \u0000UH\u0005ñ\u0006 \u0000H9øHåt\u0019H\u0005ª\u0006 \u0000HÀt\r]ÿàf.\u000f\u001f\u0000\u0000\u0000\u0000\u0000]Ã\u000f\u001f@\u0000f.\u000f\u001f\u0000\u0000\u0000\u0000\u0000H=¹\u0006 \u0000H5²\u0006 \u0000UH)þHåHÁþ\u0003HðHÁè?H\u0001ÆHÑþt\u0018H\u0005q\u0006 \u0000HÀt\f]ÿàf\u000f\u001f\u0000\u0000\u0000\u0000\u0000]Ã\u000f\u001f@\u0000f.\u000f\u001f\u0000\u0000\u0000\u0000\u0000=±\b \u0000\u0000u/H=\u001f\u0006 \u0000\u0000UHåt\fH=J\u0006 \u0000èmþÿÿèHÿÿÿÆ\u0005\b \u0000\u0001]Ã\u000f\u001f\u0000\u0000\u0000\u0000óÃf\u000f\u001fD\u0000\u0000UHå]éfÿÿÿf\u000f\u001fD\u0000\u0000ÿ¸\u0001\u0000\u0000\u0000t\u0017\u000f\u001f\u0000\u0000\u0000\u0000\u000f¯Çï\u0001uøóÃf\u000f\u001fD\u0000\u0000óÃf.\u000f\u001f\u0000\u0000\u0000\u0000\u0000\u000f\u001f@\u0000AWAVI×AUATL%>\u0003 \u0000UH-F\u0003 \u0000SAýIöL)åHì\bHÁý\u0003èOýÿÿHít 1Û\u000f\u001f\u0000\u0000\u0000\u0000\u0000LúLöDïAÿ\u0014ÜHÃ\u0001H9ÝuêHÄ\b[]A\\A]A^A_Ãf.\u000f\u001f\u0000\u0000\u0000\u0000\u0000óÃ\u0000\u0000Hì\bHÄ\bÃ\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0001\u001b\u0003;H\u0000\u0000\u0000\b\u0000\u0000\u0000\u001cýÿÿ\u0000\u0000\u0000ýÿÿ¼\u0000\u0000\u0000ýÿÿè\u0000\u0000\u0000\fþÿÿ\u0004\u0001\u0000\u0000<þÿÿd\u0000\u0000\u0000LÿÿÿÔ\u0000\u0000\u0000|ÿÿÿ\u001c\u0001\u0000\u0000ìÿÿÿd\u0001\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001zR\u0000\u0001x\u0010\u0001\u001b\f\u0007\b\u0001\u0007\u0010\u0014\u0000\u0000\u0000\u001c\u0000\u0000\u0000Ðýÿÿ+\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001zR\u0000\u0001x\u0010\u0001\u001b\f\u0007\b\u0001\u0000\u0000$\u0000\u0000\u0000\u001c\u0000\u0000\u0000üÿÿp\u0000\u0000\u0000\u0000\u000e\u0010F\u000e\u0018J\u000f\u000bw\b\u0000?\u001a;*3$\"\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000D\u0000\u0000\u0000Èüÿÿ\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\\\u0000\u0000\u0000pþÿÿ\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000p\u0000\u0000\u0000¬üÿÿp\u0000\u0000\u0000\u0000D\u000e \u0002f\n\u000e\bA\u000b\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000ýÿÿ.\u0000\u0000\u0000\u0000K\u000e\u0010^\u000e\b\u0000D\u0000\u0000\u0000¤\u0000\u0000\u0000Xþÿÿe\u0000\u0000\u0000\u0000B\u000e\u0010\u0002B\u000e\u0018\u0003E\u000e \u0004B\u000e(\u0005H\u000e0\u0006H\u000e8\u0007M\u000e@r\u000e8A\u000e0A\u000e(B\u000e B\u000e\u0018B\u000e\u0010B\u000e\b\u0000\u0010\u0000\u0000\u0000ì\u0000\u0000\u0000þÿÿ\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000à\t\u0000\u0000\u0000\u0000\u0000\u0000°\b\u0000\u0000\u0000\u0000\u0000\u0000 \t\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000è\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0007\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0000p\r \u0000\u0000\u0000\u0000\u0000\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r \u0000\u0000\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000õþÿo\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000(\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0002\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000S\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000f \u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\u0005\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0001\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ûÿÿo\u0000\u0000\u0000\u0000\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000þÿÿo\u0000\u0000\u0000\u0000 \u0005\u0000\u0000\u0000\u0000\u0000\u0000ÿÿÿo\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000ðÿÿo\u0000\u0000\u0000\u0000|\u0005\u0000\u0000\u0000\u0000\u0000\u0000ùÿÿo\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ö\u0007\u0000\u0000\u0000\u0000\u0000\u0000æ\u0007\u0000\u0000\u0000\u0000\u0000\u0000ö\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0006\b\u0000\u0000\u0000\u0000\u0000\u0000\u0016\b\u0000\u0000\u0000\u0000\u0000\u0000&\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0010 \u0000\u0000\u0000\u0000\u0000GCC: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u00008\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0002\u0000T\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0003\u0000t\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0004\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0005\u0000À\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0006\u0000(\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0007\u0000|\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\b\u0000 \u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\t\u0000ð\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\n\u0000\u0010\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u000b\u0000 \u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\f\u0000À\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\r\u00000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u000e\u0000@\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u000f\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0010\u0000 \n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0011\u0000¤\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0012\u0000ð\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0013\u0000p\r \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0014\u0000\r \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0015\u0000\r \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0016\u0000\u000f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0017\u0000\u0000\u0010 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0018\u0000 \u0010 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000ñÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000e\u0000\u0000\u0000\u0002\u0000\u000e\u0000°\b\u0000\u0000\u0000\u0000\u0000\u0000.\u0000\u0000\u0000\u0000\u0000\u0000\u0000+\u0000\u0000\u0000\u0001\u0000\u0018\u0000Y\u0012 \u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000:\u0000\u0000\u0000\u0004\u0000ñÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000E\u0000\u0000\u0000\u0002\u0000\u000e\u0000\u0010\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000G\u0000\u0000\u0000\u0002\u0000\u000e\u0000P\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Z\u0000\u0000\u0000\u0002\u0000\u000e\u0000 \t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000p\u0000\u0000\u0000\u0001\u0000\u0018\u0000X\u0012 \u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0014\u0000\r \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¦\u0000\u0000\u0000\u0002\u0000\u000e\u0000à\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000²\u0000\u0000\u0000\u0001\u0000\u0013\u0000p\r \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000:\u0000\u0000\u0000\u0004\u0000ñÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ñ\u0000\u0000\u0000\u0001\u0000\u0012\u0000\u001c\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ß\u0000\u0000\u0000\u0000\u0000\u0011\u0000¤\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ò\u0000\u0000\u0000\u0001\u0000\u0015\u0000\r \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000û\u0000\u0000\u0000\u0000\u0000\u0013\u0000\r \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0001\u0000\u0000\u0000\u0000\u0013\u0000p\r \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0001\u0000\u0016\u0000\u000f \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0010\u0000\u0017\u0000\u0010\u0010 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00004\u0002\u0000\u0000 \u0000\u0017\u0000\u0000\u0010 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000<\u0001\u0000\u0000\u0011\u0000\u0010\u0000 \n\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000K\u0001\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000g\u0001\u0000\u0000\u0012\u0000\u000e\u0000@\b\u0000\u0000\u0000\u0000\u0000\u0000p\u0000\u0000\u0000\u0000\u0000\u0000\u0000l\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000´\u0001\u0000\u0000\u0011\u0002\u0017\u0000\b\u0010 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Á\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000½\u0002\u0000\u0000\u0012\u0000\u000f\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ù\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00008\u0002\u0000\u0000\u0012\u0000\u000e\u0000à\b\u0000\u0000\u0000\u0000\u0000\u0000+\u0000\u0000\u0000\u0000\u0000\u0000\u0000ó\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001d\u0000\u0000\u0000\u0012\u0000\u000e\u0000ð\t\u0000\u0000\u0000\u0000\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000z\u0002\u0000\u0000\u0012\u0000\u000b\u0000 \u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000f\u0002\u0000\u0000\u0011\u0002\u0017\u0000\u0010\u0010 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0002\u0000\u0000\u0011\u0000\u0018\u0000 \u0010 \u0000\u0000\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0000\u0000\u0000\u00002\u0002\u0000\u0000\u0010\u0000\u0017\u0000\u0000\u0010 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0010\u0000\u0018\u0000`\u0012 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000?\u0002\u0000\u0000\u0010\u0000\u0018\u0000\u0010\u0010 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000K\u0002\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000p\u0002\u0000\u0000\u0012\u0000\u000e\u0000 \n\u0000\u0000\u0000\u0000\u0000\u0000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000³\u0002\u0000\u0000\u0012\u0000\u000e\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ã\u0002\u0000\u0000\u0011\u0000\u0018\u0000@\u0011 \u0000\u0000\u0000\u0000\u0000\u0018\u0001\u0000\u0000\u0000\u0000\u0000\u0000Ù\u0002\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ø\u0002\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0003\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000!\u0003\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000P12509_en.cc\u0000_GLOBAL__sub_I__Z9factoriali\u0000_ZStL8__ioinit\u0000crtstuff.c\u0000deregister_tm_clones\u0000__do_global_dtors_aux\u0000completed.7698\u0000__do_global_dtors_aux_fini_array_entry\u0000frame_dummy\u0000__frame_dummy_init_array_entry\u0000__FRAME_END__\u0000__GNU_EH_FRAME_HDR\u0000_DYNAMIC\u0000__init_array_end\u0000__init_array_start\u0000_GLOBAL_OFFSET_TABLE_\u0000_edata\u0000_IO_stdin_used\u0000__cxa_finalize@@GLIBC_2.2.5\u0000main\u0000_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@@GLIBCXX_3.4\u0000__dso_handle\u0000_ZNSirsERi@@GLIBCXX_3.4\u0000__cxa_atexit@@GLIBC_2.2.5\u0000__stack_chk_fail@@GLIBC_2.4\u0000__TMC_END__\u0000_ZSt4cout@@GLIBCXX_3.4\u0000__data_start\u0000__bss_start\u0000_ZNSt8ios_base4InitC1Ev@@GLIBCXX_3.4\u0000__libc_csu_init\u0000_ZNSolsEi@@GLIBCXX_3.4\u0000_ITM_deregisterTMCloneTable\u0000__libc_csu_fini\u0000_ZSt3cin@@GLIBCXX_3.4\u0000__libc_start_main@@GLIBC_2.2.5\u0000__gmon_start__\u0000_ITM_registerTMCloneTable\u0000_ZNSt8ios_base4InitD1Ev@@GLIBCXX_3.4\u0000\u0000.symtab\u0000.strtab\u0000.shstrtab\u0000.interp\u0000.note.ABI-tag\u0000.note.gnu.build-id\u0000.gnu.hash\u0000.dynsym\u0000.dynstr\u0000.gnu.version\u0000.gnu.version_r\u0000.rela.dyn\u0000.rela.plt\u0000.init\u0000.plt.got\u0000.text\u0000.fini\u0000.rodata\u0000.eh_frame_hdr\u0000.eh_frame\u0000.init_array\u0000.fini_array\u0000.dynamic\u0000.data\u0000.bss\u0000.comment\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u00008\u0002\u0000\u0000\u0000\u0000\u0000\u00008\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0002\u0000\u0000\u0000\u0000\u0000\u0000T\u0002\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0002\u0000\u0000\u0000\u0000\u0000\u0000t\u0002\u0000\u0000\u0000\u0000\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000öÿÿo\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000N\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0002\u0000\u0000\u0000\u0000\u0000\u0000À\u0002\u0000\u0000\u0000\u0000\u0000\u0000h\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000V\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000(\u0004\u0000\u0000\u0000\u0000\u0000\u0000(\u0004\u0000\u0000\u0000\u0000\u0000\u0000S\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000^\u0000\u0000\u0000ÿÿÿo\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000|\u0005\u0000\u0000\u0000\u0000\u0000\u0000|\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000k\u0000\u0000\u0000þÿÿo\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0005\u0000\u0000\u0000\u0000\u0000\u0000 \u0005\u0000\u0000\u0000\u0000\u0000\u0000P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000z\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\u0005\u0000\u0000\u0000\u0000\u0000\u0000ð\u0005\u0000\u0000\u0000\u0000\u0000\u0000 \u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0016\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0007\u0000\u0000\u0000\u0000\u0000\u0000 \u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0007\u0000\u0000\u0000\u0000\u0000\u0000À\u0007\u0000\u0000\u0000\u0000\u0000\u0000p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u00000\b\u0000\u0000\u0000\u0000\u0000\u00000\b\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\b\u0000\u0000\u0000\u0000\u0000\u0000@\b\u0000\u0000\u0000\u0000\u0000\u0000R\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000£\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000©\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \n\u0000\u0000\u0000\u0000\u0000\u0000 \n\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000±\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000¤\n\u0000\u0000\u0000\u0000\u0000\u0000¤\n\u0000\u0000\u0000\u0000\u0000\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¿\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\n\u0000\u0000\u0000\u0000\u0000\u0000ð\n\u0000\u0000\u0000\u0000\u0000\u00000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000É\u0000\u0000\u0000\u000e\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000p\r \u0000\u0000\u0000\u0000\u0000p\r\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Õ\u0000\u0000\u0000\u000f\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r \u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000á\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r \u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000f \u0000\u0000\u0000\u0000\u0000\u000f\u0000\u0000\u0000\u0000\u0000\u0000x\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ê\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010 \u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\u0000\u0000\u0000\b\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0010 \u0000\u0000\u0000\u0000\u0000\u0010\u0010\u0000\u0000\u0000\u0000\u0000\u0000@\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000õ\u0000\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0010\u0000\u0000\u0000\u0000\u0000\u0000)\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0010\u0000\u0000\u0000\u0000\u0000\u0000ð\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0000\u0000\u0000-\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00000\u0017\u0000\u0000\u0000\u0000\u0000\u0000F\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000v\u001a\u0000\u0000\u0000\u0000\u0000\u0000þ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0)return 1;\n  return n*factorial(n-1);\n}\n\nint main(){\n\n  int n;\n  cin>>n; \n  cout<<factorial(n)<<endl;\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n  if (n== 0) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\nint main(){\r\n  int n;\r\n  while (cin >> n){\r\n    cout << factorial(n) << endl;\r\n  }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\treturn factorial(n - 1) * n;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n == 1 or n == 0){\n   return 1;\n  }else{\n  return n * factorial(n-1);\n  }\n\n}\nint main(){\n  int i;\n  while(cin >> i){\n    cout << factorial(i) << endl;\n  }\n}\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 1 or n == 0)\n    {\n        return 1;\n    }\n    else return n * factorial(n - 1);\n}\nint main(){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n    {\n        return 1;\n    }\n    else return n * factorial(n - 1);\n}\nint main(){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}",
  "int factorial(int n) {\n\t\n\tif (n == 1 or n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "a = int(input())\nres = 1\nfor i in range(1, a+1):\n\tres = res * i\nprint(res)",
  "for b in range (5):\n\ta = int(input())\n\tres = 1\n\tfor i in range(1, a+1):\n\t\tres = res * i\n\tprint(res)",
  "//#include <iomanip> //To change io shape: cout << fixed << setprecision(n) << x; x with n digits after decimal point\n#include <iostream>\n//#include <algorithm> //To work with functions like max(), min()\n//#include <cstdlib> //To work with abs()\n//#include <string> //To work with strings.\n//#include <string.h> //To work with strings (strcomp(str1, str2))\n//#include <cstring> //To work with string functions (isupper(string), islower, upper, lower)\n#include <cmath> //To work with functions like floor(), ceil(), round()\n#include <vector> //To work with vectors: vector<type> name(n)\n//#define _USE_MATH_DEFINES //To work with pi (M_PI) or e (M_E)\n//#include <math.h>\n\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0 or n == 1) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n    return 0;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  else return factorial(n - 1) + factorial(n - 2);\n}\n\nint factorial_v2(int n, const vector<int>& t) {\n  if (n <= 1) return 1;\n\n  int t1 = t[n - 1];\n  if (t1 == -1) t1 = factorial(n - 1);\n\n  int t2 = t[n - 2];\n  if (t2 == -1) t2 = factorial(n - 2);\n\n  return t1 + t2;\n}\n\nint main() {\n  int mode, n;\n  cin >> mode >>n;\n\n  if (mode == 1)\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  else return factorial(n - 1) + factorial(n - 2);\n}\n\nint factorial_v2(int n, const vector<int>& t) {\n  if (n <= 1) return 1;\n\n  int t1 = t[n - 1];\n  if (t1 == -1) t1 = factorial(n - 1);\n\n  int t2 = t[n - 2];\n  if (t2 == -1) t2 = factorial(n - 2);\n\n  return t1 + t2;\n}\n\nint main() {\n  int mode, n;\n  cin >> mode >>n;\n\n  if (mode == 1)\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  else return factorial(n - 1) + factorial(n - 2);\n}\n\nint factorial_v2(int n, const vector<int>& t) {\n  if (n <= 1) return 1;\n\n  int t1 = t[n - 1];\n  if (t1 == -1) t1 = factorial(n - 1);\n\n  int t2 = t[n - 2];\n  if (t2 == -1) t2 = factorial(n - 2);\n\n  return t1 + t2;\n}\n\nint main() {\n  int mode, n;\n  cin >> mode >> n;\n\n  if (mode == 1) {\n    factorial(n);\n  } else {\n    factorial_v2(n);\n  }\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  else return factorial(n - 1) + factorial(n - 2);\n}\n\nint factorial_v2(int n, const vector<int>& t) {\n  if (n <= 1) return 1;\n\n  int t1 = t[n - 1];\n  if (t1 == -1) t1 = factorial(n - 1);\n\n  int t2 = t[n - 2];\n  if (t2 == -1) t2 = factorial(n - 2);\n\n  return t1 + t2;\n}\n\nint main() {\n  int mode, n;\n  cin >> mode >> n;\n\n  if (mode == 1) {\n    factorial(n);\n  } else {\n    vector<int> v(n + 1, -1);\n    factorial_v2(n, v);\n  }\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n  if (n == 1){\r\n    return (1);\r\n  }\r\n  else{\r\n    return (n* factorial (n-1));\r\n  }\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n);\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n  if (n == 0){\r\n    return (1);\r\n  }\r\n  else{\r\n    return (n* factorial (n-1));\r\n  }\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n);\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==1) return 1;\r\n\treturn factorial(n-1)*n;\r\n}\r\n\r\nint main (){\r\n\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==1 or n==0) return 1;\r\n\treturn factorial(n-1)*n;\r\n}\r\n\r\nint main (){\r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    int fact;\r\n    if (n == 0) fact = 1;\r\n    else fact = n*factorial(n-1);\r\n    return fact;\r\n}\r\nint main() {\r\n    int nombre;\r\n    cin >> nombre;\r\n    cout << factorial(nombre) << endl;\r\n}\r\n",
  "int factorial(int n){\n    if (n == 0 or n == 1)\n        return 1;\n    \n    return n * factorial(n - 1);\n}\n",
  "using namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n\tif (n < 2) return 1;\r\n\r\n\treturn n*factorial(n - 1);\r\n}\r\n",
  "int factorial(int n) {\r\n\r\n\tif (n < 2) return 1;\r\n\r\n\treturn n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact;\n    if(n < 2){\n        return 1;\n    }else{\n        fact = factorial(n - 1) * n;\n        return fact;\n    }\n}\n\nint main(){\n    int n;\n    \n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "int factorial(int n) {\n\t\n\tif (n == 1 or n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n <= 1) return 1;\r\n    else return n*factorial(n - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n\t\n}\n\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n}   }",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n\tif(n == 0)\r\n\t\treturn 1;\r\n\t\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\t\r\n\twhile(cin >> n)\r\n\t\tcout << factorial(n) << endl;\r\n}\r\n",
  "//Factorial recursiu\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial (n - 1);\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\nif (n == 1 or n == 0) return 1;\r\nelse return n*factorial(n-1);\r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int f;\n    if (n <= 1)\n        f = 1;\n    else\n        f = n * factorial(n - 1);\n    \n    return f;\n}\n\nint main() {\n    int n;\n    while (cin >> n)\n        cout << factorial(n) << endl;\n}",
  "// 0! = 1\n// n! = (n-1)! * n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1) * n;\n} \n \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return (n*factorial(n - 1));\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Calcula el factorial de n\nint factorial(int n) {\n    if (n <= 1) {\n        return 1;\n    }\n    return factorial(n - 1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else return (n * factorial(n-1));\n}\n    \nint main() {\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int f =1;    \n    for (int i = n; i > 1; ++i) {\n        f=f*i;    \n        {\n    return f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int f =1;    \n    for (int i = n; i > 1; ++i) {\n        f=f*i;    \n    }\n    return f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int f =1;    \n    for (int i = n; i > 1; --i) {\n        f=f*i;    \n    }\n    return f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n    \n    \n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n/*int main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }*/\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n==0) {\n        return 1;\n    }\n    else {\n        return n*factorial (n-1);\n    }\n}\n\nint main() {\n    int n;\n    cin>>n;\n    cout<< factorial(n) <<endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    factorial(n);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n\tint z=1;\r\n\tfor(int j=2;j<=n;++j)z=z*j;\r\n}\r\n\t\r\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n\tint z=1;\r\n\tfor(int j=2;j<=n;++j)z=z*j;\r\n}\r\n\t\r\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n\tint z=1;\r\n\tfor(int j=2;j<=n;++j)z=z*j;\r\n\tn=z;\r\n\treturn n;\r\n}\r\n/*\t\r\nint main() {\r\n\tint x;\r\n\twhile(cin>>x){\r\n\t\tcout<<factorial(x)<<endl;\r\n\t}\r\n}\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n  if (n == 0 or n == 1) return 1;\n  return n*factorial(n-1);\n\n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    int x = factorial(n);\n    cout << x << endl;\n}\n",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 1) return 1;\n    return n * factorial(n-1);\n}\n\nint main(){\n}\n",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    return n * factorial(n-1);\n}\n\nint main(){\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else{\n        return n * factorial(n-1);\n    }\n    \n    }\n    \nint main(){\n    int n;\n    cin >> n;\n    int x = factorial(n);\n    cout << x << endl;\n    }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return factorial(n-1) * n;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\r\n\tcout << factorial(n) << endl;\r\n}\t",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x){\n    if(x==0) return 1;\n    else return x*factorial(x-1);\n}\n\nint main () {\n    int x;\n    while (cin >> x) {\n    cout << factorial (x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main (){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int m = 1;\n    for (int i = 1; i <= n; ++i) m *= i;\n    return m;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n        \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n\nint factorial(int n) {\n\n    if (n <= 1) return 1;\n    \n    return (n*factorial(n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n != 1){\r\n        return n * factorial(n-1);\r\n    } else return 1;\r\n    \r\n}\r\n\r\n\r\n\r\nint main()\r\n{\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n <= 1){\r\n        return 1;\r\n    } else return n * factorial(n-1);\r\n    \r\n}\r\n\r\n\r\n\r\nint main()\r\n{\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\n/*int main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}*/\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse {\r\n\t\tint s = 1;\r\n\t\tbool k = true;\r\n\t\tbool found = false;\r\n\t\twhile (not found) {\r\n\t\t\tif (k){\r\n\t\t\t\ts = s * n * (n-1);\r\n\t\t\t\tk = false;\r\n\t\t\t} else {\r\n\t\t\t\twhile (n-1 != 1) {\r\n\t\t\t\t\ts = s * (n-1);\r\n\t\t\t\t\t--n;\r\n\t\t\t\t}\r\n\t\t\t\tfound = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn s;\r\n\t}\r\n}\r\n\r\nint main () {\r\n\tint n = factorial(n);\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse {\r\n\t\tint s = 1;\r\n\t\tbool k = true;\r\n\t\tbool found = false;\r\n\t\twhile (not found) {\r\n\t\t\tif (k){\r\n\t\t\t\ts = s * n * (n-1);\r\n\t\t\t\tk = false;\r\n\t\t\t} else {\r\n\t\t\t\twhile (n-1 != 1) {\r\n\t\t\t\t\ts = s * (n-1);\r\n\t\t\t\t\t--n;\r\n\t\t\t\t}\r\n\t\t\t\tfound = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn s;\r\n\t}\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse {\r\n\t\tint s = 1;\r\n\t\tbool k = true;\r\n\t\tbool found = false;\r\n\t\twhile (not found) {\r\n\t\t\tif (k){\r\n\t\t\t\ts = s * n * (n-1);\r\n\t\t\t\t--n;\r\n\t\t\t\tk = false;\r\n\t\t\t} else {\r\n\t\t\t\twhile (n-1 != 0) {\r\n\t\t\t\t\ts = s * (n-1);\r\n\t\t\t\t\t--n;\r\n\t\t\t\t}\r\n\t\t\t\tfound = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn s;\r\n\t}\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n>1) return n * factorial(n-1);\n    else return 1;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n > 1) return n * factorial(n - 1);\n\telse return 1;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}\n}\n\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n        \n    if (n == 0) return 1;\n    else return n*factorial (n -1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "int factorial (int n) {\n    if (n == 0) return 1;\n    return n*factorial (n - 1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\n    if(n <= 1){\n        return 1;\n    }else{\n        return n*factorial(n-1);\n    }\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n < 2) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "//Exercise P12509 - Recursive factorial.\n//Reads a number and prints its factorial.\n\n#include <iostream>\nusing namespace std;\n\n//pre: n is a number between 0 and 12, both included.\n//post: returns n factorial.\n//Computes the factorial of a given number.\nint factorial(int n) {\n\tint result;\n\t\n\t//Computes the factorial of n by multiplying n by (n - 1) factorial.\n\t\n\tif (n == 0 or n == 1) result = 1;\n\telse result = n * factorial(n - 1);\t\n\t\n\t//Returns its factorial.\n\t\n\treturn result;\n}\n\n\nint main() {\n\t\n\t//Reads a number between 0 and 12, both included.\n\t\n    int x;\n    while (cin >> x) {\n    \t\n    \t//Prints its factorial.\n    \t\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) return n * factorial(n-1);\n    return 1;\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==1 or n==0) return 1;\r\n\treturn factorial(n-1)*n;\r\n}\r\n\r\nint main (){\r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int resultat;\n    if (n == 0) resultat = 1;\n    else{\n        resultat = n*factorial(n-1);\n    }\n    return resultat;\n}\n\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n}   }\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\nint factorial(int n) {\r\n\tif (n == 1 or n == 0) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\treturn n* factorial(n - 1);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tcout << factorial(1) << endl;\r\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "//calculate the factorial of a number\n#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    //keep looping until reaching 0\n    if (n > 0) {\n        return factorial(n - 1) * n;\n        \n    }\n    else return 1 ;\n}\n\nint main() {\n    \n    //n is a natural between 0 and 12\n    int n;\n    while (cin >> n) {\n    cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n){\n     \n    if(n == 0) return 1;\n    \n    factorial(n - 1);\n    \n}\n\nint main(){\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n){\n     \n    if(n == 0) return 1;\n    \n    return n * factorial(n - 1);\n    \n}\n\nint main(){\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n==0 or n==1) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\n\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0 or n == 1) return 1;\n\n  return n * factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int a;\r\n    if(n == 0) return (1);\r\n    a = n * factorial(n-1);\r\n    return (a);\r\n}\r\n\r\nint main() {\r\n    int m;\r\n    while (cin >> m) {\r\n        cout << factorial(m) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int f = 1;\n    if (n != 0) {\n        f = n * factorial(n - 1);\n    }\n    return f;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) { \n    if(n == 0) return 1;\n    else return n*factorial(n -1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact;\n    if(n==1){\n        fact=1;}\n    else{\n        fact=n*factorial(n-1);}\n    return fact;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==1){\n        return 1;}\n    else{\n        return n*factorial(n-1)}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==1){\n        return 1;}\n    else{\n        return n*factorial(n-1);}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0){\n        return 1;}\n    else{\n        return n*factorial(n-1);}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1) return 1;\n    return (factorial (n-1)) * n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) \n    {\n        cout << factorial(x) << endl;\n    }   \n}",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n);\n\nint main () {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}\n\nint factorial(int n){\n    \n    if( n<=1 ) {\n        return 1;\n    }\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=2) return 1;\n    return n*fact(--n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=2) return 1;\n    return n*factorial(--n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=2) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<2) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n/*\ng++ -o Recursive_Factorial Recursive_Factorial.cc\n./Recursive_Factorial\n*/\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    return factorial(n-1) * n;\n}\n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n <= 1) return 1;    \n    else return n*factorial(n - 1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return (n*factorial(n-1));\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n\n}\n\nint main() {\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) {\r\n\t\treturn 1;\r\n\t} else return n*factorial(n - 1);\r\n\r\n}\r\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\nif (n == 0) return 1;\r\nelse return n*factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int m = 1;\n    for (int i = 1; i <= n; ++i) m *= i;\n    return m;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n        \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n - 1);\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*(factorial(n-1));\n}\n\n/**\nint main() {\n    int n;\n\n    while (cin>>n) {\n        cout<<factorial(n)<<endl;\n    }\n}\n**/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0)return 1;\n\telse return n*factorial(n-1);\n}\n\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "int factorial (int n) {\n   int sum = 1;\n   if (n == 0) cout << sum;\n    else {\n        for (int i = 1; i <=n; ++i) {\n            sum = sum * i;\n            }\n        cout << sum;\n    }\n}\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n   int sum = 1;\n   if (n == 0) cout << sum;\n    else {\n        for (int i = 1; i <=n; ++i) {\n            sum = sum * i;\n            }\n        cout << sum;\n    }\n}\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n   int sum = 1;\n   if (n == 0) return sum;\n    else {\n        for (int i = 1; i <=n; ++i) {\n            sum = sum * i;\n            }\n        return sum;\n    }\n}\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n   if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1) return 1; \n    else return n*factorial(n-1);    \n}\n\nint main(){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n// pre: 0 <= n <= 12\n// post: factorial de n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1; \n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0 or n==1) return 1;\n    else factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0 or n==1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1){\n        return(1);\n    }\n    else return(factorial(n-1)*n);\n}\n\nint main(){\n    int x;\n    while (cin >> x){\n        cout << factorial(x) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n <= 1)\n    return 1;\n\n  return n * factorial(n - 1);\n}\n\nint main(){\n\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    cout << factorial(0) << endl;\n    cout << factorial(1) << endl;\n    cout << factorial(2) << endl;\n    cout << factorial(3) << endl;\n    cout << factorial(4) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else return factorial(n-1);\n}\n\n\n\nint main() {\n    int n;\n    cin >> n;\n    \n    cout << \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else return factorial(n-1);\n}\n\n\n\nint main() {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\n\n\nint main() {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\n\nint main(){\n  int n;\n  while (cin >>n){\n    cout << factorial(n)<< endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n/*\n    pre: enters a integer number\n    post: computes the factorial of the number using recursion\n*/\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    cout << factorial(0) << endl;\n    cout << factorial(1) << endl;\n    cout << factorial(2) << endl;\n    cout << factorial(3) << endl;\n    cout << factorial(4) << endl;\n}\n",
  "//\n//  main.cpp\n//  factorial function\n//\n//  Created by Viktor Nechvile on 27/11/2020.\n//\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main() {\n    int n = 0;\n    while(cin >> n) {\n    cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);    \n}\n\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif (n > 1) {\r\n\tn = n * factorial(n -1);\t\t\r\n\t\t\r\n\t}\r\n\telse {\r\n\t\tn = 1;\r\n\t}\r\n\treturn n;\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  if (n <= 1) return 1;\n  else {\n    return n*factorial(n-1);\n  }\n}\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n/*int main () {\n    int n;\n    while (cin >> n and n != 1000) {\n        cout << factorial(n) << endl;\n    }\n}*/",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tint resultado = n;\r\n\twhile (n > 1) {\r\n\t\tresultado = resultado * (n - 1);\r\n\t\t--n;\r\n\t}\r\n\treturn resultado;\r\n}\r\n\r\nint main () {\r\n\tint x;\r\n\twhile (cin >> x) {\r\n\t\tcout << factorial(x) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tint resultado = n;\r\n\twhile (n > 1) {\r\n\t\tresultado = resultado * (n - 1);\r\n\t\t--n;\r\n\t}\r\n\treturn resultado;\r\n}\r\n\r\nint main () {\r\n\tint x;\r\n\twhile (cin >> x) {\r\n\t\tif (x == 0) cout << '1' << endl;\r\n\t\telse cout << factorial(x) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tint resultado = n;\r\n\twhile (n > 1) {\r\n\t\tresultado = resultado * (n - 1);\r\n\t\t--n;\r\n\t}\r\n\treturn resultado;\r\n}\r\n\r\nint main () {\r\n\tint x;\r\n\twhile (cin >> x) {\r\n\t\tif (x == 0) cout << '1' << endl;\r\n\t\telse cout << factorial(x) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n  int c = 1;\n\n  if(n == 0) c = 1;\n  else {\n    for(int i = 1; i <= n; ++i){\n      c *= i;\n    }\n  }\n  return c;\n}\n\n\nint main(){\n\n  int n;\n  while(cin>>n){\n\n    int r = factorial(n);\n    cout<<r<<endl;\n  }\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) { \n    \nif (n <= 1) return 1;\n\nelse return n * factorial(n - 1);\n\n}\n    \n\nint main(){\n    \n    int n;\n    \n    while (cin >> n){\n    \n    cout << factorial(n) << endl;\n    \n    \n}\n\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint total=1;\r\n\tfor (int i=1;i<n+1;++i) total*=i;\r\n\treturn total;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n)\r\n{\r\nif(n==0) return 1;\r\n    else\r\n    {\r\n        return n*factorial(n-1);\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n <= 1) return 1;\r\n\telse {\r\n\t\treturn (n * factorial(n-1));\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tdouble f = 1;\r\n\tfor(int i = 1; i<=n; i++){\r\n\t\tf *= i;\r\n\t}\r\n\treturn f;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin>>n){\r\n\t\tcout<<factorial(n)<<endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0 or n==1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f = 0;\n    if (n == 0) f = 1;\n    else f = n * factorial(n - 1);\n    return f;\n}\n\nint main () { \n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nlong factorial(long n);\n\nint main (){\n    long n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\nlong factorial(long n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n",
  "long factorial(long n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\t\tif(n == 0) n = 1;\n\t\n\telse {\n\t\treturn n * factorial(n-1);\n\t}\n\treturn n;\n\t\n}\n\n\nint main() {\n\tint n;\n\twhile (cin >> n)\n\tcout << factorial(n) << endl;\n\n}\n",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial(int n)  {\r\n\tif (n==1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial(int n)  {\r\n\tif (n==1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\n\r\n",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial(int n)  {\r\n\tif (n<=1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\n\r\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n * factorial (n -1);\n}\n\nint main() {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int aux=n-1;\r\n    if(n==0)return 1;\r\n    else{\r\n        for(int i=n-1; i>0;--i){\r\n            n=n*aux;\r\n            --aux;\r\n        }\r\n        return n;\r\n    }\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n{\n  int n0 = n, n1 = n;\n  if( n == 0) return 0;\n  while(n0 != 0)\n  {\n    n *= n0;\n    --n0;\n  }\n  n /= n1;\n  return n;\n}\n\n\nint main()\n{\n    int x;\n    while (cin >> x)\n    {\n        cout<< factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n{\n  int n0 = n, n1 = n;\n  if( n == 0) return 1;\n  while(n0 != 0)\n  {\n    n *= n0;\n    --n0;\n  }\n  n /= n1;\n  return n;\n}\n\n\nint main()\n{\n    int x;\n    while (cin >> x)\n    {\n        cout<< factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n{\n  if(n <= 1) return 1;\n  else return n * factorial(n - 1);\n}\n\n\nint main()\n{\n    int x;\n    while (cin >> x)\n    {\n        cout<< factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream> \nusing namespace std;\n\n\n\nint factorial(int n) {\n    int fac = 1;\n    for (int i = 1; i <= n; i++) { \n        fac = fac * i;\n    }\n    return fac;\n    \n}\n\nint main() {\n    int f;\n    cin >> f;\n    cout << factorial (f) << endl;\n}\n",
  "/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n > 1){\n        return n*factorial(n-1);\n    }\n    else{\n        return 1;\n    }\n    \n    \n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n    return 0;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n  == 0 ) return 1;\r\n    else return n * factorial(n-1); \r\n}\r\n\r\nint main()\r\n{\r\n   int n ;\r\n   while ( cin >> n)   cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial (int n){\r\n    if(n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main (){\r\n    int x;\r\n    while (cin >> x) {\r\n\r\n        cout << factorial(x) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else {\n       return n*factorial(n-1);\n    }\n    \n}\n/*\nint main() {\n    \n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n    \n}\n*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif(n<=1)return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main (){\r\n\tint n;\r\n\twhile (cin>>n){\r\n\t\tcout<<factorial(n)<<endl;\r\n\t}\r\n}\r\n\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\telse return n * factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) { // iterative solution\r\n\tint f = 1;\r\n\tint i = 0;\r\n\t// Invariant: f = i! and i ï£ n\r\n\twhile (i < n) {\r\n\t\ti = i + 1;\r\n\t\tf = fïªi;\r\n\t}\r\n\treturn f;\r\n}\r\n\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) { // iterative solution\r\n\tint f = 1;\r\n\tint i = 0;\r\n\t// Invariant: f = i! and i ï£ n\r\n\twhile (i < n) {\r\n\t\ti = i + 1;\r\n\t\tf = f * i;\r\n\t}\r\n\treturn f;\r\n}\r\n\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n>1) return factorial(n-1);\r\n    else return 1;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n>1) return n*factorial(n-1);\r\n    else return 1;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint fact(int n){\r\n\tif (n==0 or n==1) return 1;\r\n\telse return n*fact(n-1);\r\n}\r\nint main(){\r\n\tint n;\r\n\twhile (cin>>n){\r\n\t\tcout<<fact(n)<<endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0 or n==1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\nint main(){\r\n\tint n=1;\r\n\twhile (cin>>n){\r\n\t\tcout<<factorial(n)<<endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin >> x;\n        factorial(x);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n==0){\r\n        return 1;\r\n    }\r\n    else {\r\n        return n*factorial(n-1);\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n//pre: n es mayor o igual que 0 y menor o igual que 12\n//post: calcula el factorial de n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return (n * factorial(n - 1));\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else if (n == 2) return 2;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int a;\r\n    while (cin >> a) cout << factorial(a) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n; cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n    int n;\n    \n    cin >> n;\n\n    cout << factorial(n);\n\n    return 0;\n}\n\nint factorial(int n) {\n    \n    if(n > 1) return n * factorial(n - 1);\n    else\n        return 1;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse {\r\n\t\treturn n * factorial(n-1);\r\n\t}\r\n}\r\n\r\n/*\r\nint main() {\r\n\tcout << factorial(5);\r\n}\r\n*/\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n <= 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main (){\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse if (n == 1) return 1;\r\n\telse {\r\n\t\twhile (n > 1) return n * factorial (n - 1);\r\n\t}\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) cout << factorial (n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse if (n == 1) return 1;\r\n\telse {\r\n\t\twhile (n > 1) return n * factorial (n - 1);\r\n\t}\r\n\treturn -1;\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) cout << factorial (n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n * factorial(n - 1);\n    return 1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) return n * factorial(n - 1);\n    return 1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) return n * factorial(n - 1);\n    return 1;\n}\n\nint main() {\n}\n",
  "//recursive factorial ----> P12509\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif (n <= 1){\r\n\t\treturn 1;\r\n\t}\r\n\telse{\t\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n\t\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tfactorial(n);\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n<=1) return 1;\r\n\tif (n==2) return 2;\r\n\treturn n*factorial(n-1);\t\r\n}\r\n\r\nint main(){\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    factorial(n);\n}\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if(n<=1){\n        return 1;\n    }\n    else{\n        n=n*factorial(n-1);\n    }\n    return n;\n}\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        n = n * factorial(n-1);\n        return n;\n    }\n        \n    \n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial (n-1);\r\n}\r\n\r\nint main (){\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n = n * factorial(n-1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "void Hanoi(int n, char from, char to, char aux) {\n    if (n > 0) {\n        Hanoi(n - 1, from, aux, to);\n        cout << âMove disk from â << from << â to â << to << endl;\n        Hanoi(n - 1, aux, to, from);\n    }\n}",
  "void Hanoi(int n, char from, char to, char aux) {\n    if (n > 0) {\n        Hanoi(n - 1, from, aux, to);\n        cout << \"Move disk from \" << from << \" to \" << to << endl;\n        Hanoi(n - 1, aux, to, from);\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nvoid Hanoi(int n, char from, char to, char aux) {\n    if (n > 0) {\n        Hanoi(n - 1, from, aux, to);\n        cout << \"Move disk from \" << from << \" to \" << to << endl;\n        Hanoi(n - 1, aux, to, from);\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) { // iterative solution\n    int f = 1;\n    int i = 0;\n    // Invariant: f = i! and i ï£ n\n    while (i < n) {\n        i = i + 1;\n        f = f*i;\n    }\n    return f;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int r = 1;\r\n    int j = 0;\r\n    for (int i = 1; i <= n; ++i) {\r\n        r = r*i;\r\n    }\r\n    return r;\r\n}\r\nint main () {\r\n    int num;\r\n    cin >> num;\r\n    cout << factorial(num) << endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int r = 1;\r\n    for (int i = 1; i <= n; ++i) {\r\n        r = r*i;\r\n    }\r\n    return r;\r\n}\r\nint main () {\r\n    int num;\r\n    cin >> num;\r\n    cout << factorial(num) << endl;\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact=1;\n    if(n==0) fact=1;\n    else{\n        for (int i = 1; i <= n; i++) fact = fact*i;\n        return fact;\n    }\n    return fact;\n}\n\nint main(){\n    int n;\n    while(cin>>n){\n        cout<<factorial(n)<<endl;\n    }\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main () {\n    \n int a;\n \n cin >> a;\n \n cout << factorial(a) << endl;\n    \n}\n\n\nint factorial(int n) {\n    if ( n == 1 ) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main () {\n    \n int a;\n \n while ( cin >> a) {\n    cout << factorial(a) << endl;\n }\n    \n}\n\n\nint factorial(int n) {\n    if ( n == 1 ) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main () {\n    \n int a;\n \n while ( cin >> a) {\n    cout << factorial(a) << endl;\n }\n    \n}\n\n\nint factorial(int n) {\n    if ( n <= 1 ) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n        else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while(cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nint factorial(int n){\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n\t\n}\n\nint main(){\n\tint n, s;\n\tcin >> n;\n\n\ts = factorial(n);\n\n\tcout << s << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint r = 1;\r\n\tfor (int i = n; i > 0; --i) {\r\n\t\tr *= i;\r\n\t}\r\n\treturn r;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\nint main() {\n    int n;\n    int factorial(int n);\n    while (cin >> n) cout << factorial(n) << endl;\n}\nint factorial(int n) {\n    if (n == 0 or n ==1) return 1;\n    else {\n        int f = factorial(n-1);\n        //!n = n*(n-1)\n        return n*f;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1;\n    \n    else return n * factorial(n - 1);\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return (1);\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n < 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    cout << factorial(5) << endl;\n}\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\n    int a = 1;\n    \n    if (n == 0){\n    \n        return a;\n    }\n    else return(n*factorial(n-1));\n}\n\nint main(){\n\n    int b;\n    \n    cin >> b;\n    \n    cout << factorial(b) << endl;\n\n}\n",
  "#include <iostream>;\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return n * factorial(n - 1);\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return n * factorial(n - 1);\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n<=1)return 1;\n    else return n * factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif( n <= 1){\n\t\treturn 1; \n\t}\n\telse{\n\t\treturn(n*factorial(n-1));\n\t}\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial (n - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\nint a;\ncin >> a;\ncout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n<=1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n <= 1){\r\n    return 1;\r\n  } else {\r\n    return (n * factorial(n-1));\r\n  }\r\n}\r\n\r\nint main(){\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n{\n    if(n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main (){\n    int n;\n    while (cin >> n) {\n        cout << factorial (n) << endl;\n    }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\nif (n ==  0) return 1;\nelse return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl; \n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial( int n ) {\r\n    if ( n == 0 ) return 1;\r\n    else return n * factorial( n - 1 );\r\n\r\n}\r\n\r\n\r\nint main() {\r\n\r\n    cout << factorial( 0 ) << endl;\r\n    cout << factorial( 1 ) << endl;\r\n    cout << factorial( 2 ) << endl;\r\n    cout << factorial( 3 ) << endl;\r\n    cout << factorial( 4 ) << endl;\r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\n//Pre.: n enter tal que 0<=n<=12.\n//Post.: Retornem n!.\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//pre:Assume 0 <= n <= 12.\n//post:returns n!.\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int f = n;\n    f = f * (n - 1);\n    --n;\n    if (n > 0){\n        factorial(f);\n    }\n    return f;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int f = n;\n    f = f * (n - 1);\n    --n;\n    if (n > 0){\n        factorial(f);\n    }\n    n = f;\n    return n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if(n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    \n    n = factorial(n);\n    \n    cout << n << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if(n==0) n=1;\r\n    else n=n*factorial(n-1);\r\n    return n;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while (cin>>n) cout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n        if (n <= 1) return 1;\n        else return n * factorial(n-1);\n        \n}\n\nint main() {\n        int x;\n        cin >> x;\n        cout << factorial(x) << endl;\n    }\n    \n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse {\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n}\r\n\r\nint main () {\r\n\tint x;\r\n\twhile (cin >> x) cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "//Returns the factorial of a number\n\n#include<iostream>\nusing namespace std;\n\nint factorial(int number) {\n    if (number <= 1) return 1;\n    else return number * factorial(number - 1);\n}\n\nint main() {\n    int first;\n    cin >> first;\n    cout << factorial(first) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==1) return (1);\n    else return (n*factorial(n-1));\n}\n\nint main() {\n    int n;\n    while (cin>>n) {\n        cout<<factorial(n)<<endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n <= 1) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int x;\r\n\r\n    while(cin >> x){\r\n        cout << factorial(x) << endl;\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n < 1)\n        return 1;\n    else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else  return n * factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int);\n\nint main(){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n    \n}\n\nint factorial(int n){\n    if (n==0){ //Caso base\n        n = 1;\n    }\n    else{ //Caso general\n        n *= factorial(n-1); //AquÃ­ la funciÃ³n se llama a sÃ­ misma dentro de ella = RECURSIVIDAD\n    }\n    return n;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n);\nint f = 1;\nint i = 0;\n   while (i < n) {\n     i = i + 1;\n     f = f*i;\n  }\n   return f;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\nif (n == 0) return 1;\nelse return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 0 )\n        return 1;\n    else\n        return n*factorial(n - 1);\n}\n\nint main () {\n    int num;\n    cin >> num;\n    num = factorial(num);\n    cout << num << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n <= 1) return 1;\n  else return n*factorial (n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif(n==0)\n\t\treturn n=1;\n\telse\n\t\tn=n * factorial(n-1);\n\treturn n;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(n) {\r\n\tif (n=0) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\nint main() {\r\n\tint n;\r\n\twhile(cin>>n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n=0) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\nint main() {\r\n\tint n;\r\n\twhile(cin>>n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\nint main() {\r\n\tint n;\r\n\twhile(cin>>n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n > 1) return n * factorial(n-1);\r\n\telse return 1;\r\n}\r\n\r\nint main () {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x)<< endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n{\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int x;\n    if (n == 0) x = 1;\n    else if (n == 1) x = 1;\n    else {\n        x = n * factorial(n-1);\n    }\n    return x;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main(){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "//Returns the factorial of a number\n\n#include<iostream>\nusing namespace std;\n\nint factorial(int number) {\n    if (number <= 1) return 1;\n    else return number * factorial(number - 1);\n}\n\nint main() {\n    int first;\n    cin >> first;\n    cout << factorial(first) << endl;\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n <= 1){\r\n    return 1;\r\n  } else {\r\n    return (n * factorial(n-1));\r\n  }\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n\t\t}   \r\n}\r\n\t\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint expression() {\n\tchar c;\n\tcin >> c;\n\tif (c >= '0' and c <= '9') return c-'0';\n\telse {\n\t\tint a = expression();\n\t\tint b = expression();\n\t\tif (c == '+') return(a+b);\n\t\telse if (c == '-') return(a-b);\n\t\telse return(a * b);\n\t}\n}\n\nint main() {\n\tcout << expression() << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream> \nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1) return 1; \n    else {\n        return n * factorial (n -1);   \n    }\n    \n    \n    \n}\n\nint main () {\n int x; \n cin >> x;\ncout << factorial (x) << endl;\n}\n",
  "#include <iostream> \nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1; \n    else {\n        return n * factorial (n - 1);   \n    }\n    \n    \n    \n}\n\nint main () {\n int x; \n cin >> x;\ncout << factorial (x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial (n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "//RECURSIVE FACTORIAL\n//function the returns n!\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\n\n\nint main(){\n    int a;\n    while (cin >> a) cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if(n == 0) return 1;\r\n    else{\r\n        n = n * factorial(n - 1);\r\n    }\r\n    return n;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\nif (n <= 1) return 1;\nelse return n * factorial(n-1);\n}\n",
  "\n#include <iostream>\nusing namespace std;\n\n/* Pre: Nos dan un numero n que es 0 <= n >= 12.\n * Post: Hay que sacar un numero natural.\n * Â¿QuÃ©?: factorial recursivode un numero natural.\n */\nint factorial(int n) {\n\t//caso base, bien n es 0 o 1\n\tint fact = 1;\n\tif (n > 1) fact = factorial (n - 1) * n;\n\treturn fact;\n}\n\n\nint main() {\n\tint x;\n\twhile (cin >> x) {\n\t\tif ((x >= 0) and (x <= 12))\n\t\tcout << factorial(x) << endl;\n\t}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if ( n<=1 ) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n  int main (){\r\n    int x;\r\n    cin>>x;\r\n    cout<< factorial(x)<< endl;\r\n  }\r\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int f;\n    if (n == 0) f = 1;\n    else {  \n        n = n * factorial(n-1);\n        f = n;\n    }\n    return f;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "def factorial(n):\n   if n == 1:\n       return n\n   else:\n       return n*recur_factorial(n-1)\n",
  "def factorial(n):\n   if n == 1:\n       return n\n   else:\n       return n*factorial(n-1)\n",
  "def factorial(n):\n    if n == 1:\n        return n\n    elif n== 0:\n        return 1\n    else:\n        return n*factorial(n-1)\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    int res = 1;\n    while (n>1) {\n        res = res*n;\n        n = n - 1;\n    }\n    \n    return (res);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n<=1) return 1;\n\tif(n==2) return 2;\n\n\treturn n*factorial(n-1);\n\n}\n\nint main() {\n\t\n\tint n;\n\twhile (cin>>n) cout<<factorial(n)<<endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n    \n}\n/*int main() {\n    \n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n == 1 or n == 0) return 1;\n    else return n*factorial(n-1);\n    \n}\nint main() {\n    \n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n",
  "//\n\n#include <iostream>\nusing namespace std;\n\n//Pre: un numero\n//Post el seu factorial\n//una recursio que no para de multiplicar el numero pel numero - 1 fins a \n//arribar a 1.\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\n\n\nint main() {\n    int numero;\n    cin >> numero;\n    cout << factorial(numero) << endl;\n}\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n    \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 1) return 1;\r\n\treturn n * factorial(n-1);\r\n}\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n <= 1) return 1;\r\n\treturn n * factorial(n-1);\r\n}\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n\t  else return n * factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n//pre: number >= 0\n//post: gives a number's factorial\nint factorial (int number) {\n    //0! is 1\n    if (number == 0) return 1;\n    //otherwise return number*number-1!\n    //because number! = number * number-1!\n    else return number * factorial(number - 1);\n}\n\n//print number!\nint main() {\n    int number;\n    while (cin >> number) cout << factorial(number) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}",
  "def factorial(n):\n\tr = 1\n\tfor x in range(2,n+1):\n\t\tr = r*x\n\t\t\n\treturn r\n",
  "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <math.h>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1 || n == 0){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n}\n    \nint main(){\n    int n;\n    while(cin >> n){\n        int result = factorial(n);\n        cout << result << endl;\n    }\n}\n    \n",
  "int factorial(int n){\n    if (n == 1 || n == 0){\n        return 1;\n    }\n    else{\n        return n * factorial(n-1)\n    }\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        int result = factorial(n)\n        cout << result << endl;\n    }\n}\n",
  "int factorial(int n){\n    if (n == 1 || n == 0){\n        return 1;\n    }\n    else{\n        return n * factorial(n-1)\n    }\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        int result = factorial(n)\n        cout << result << endl;\n    }\n}\n",
  "int factorial(int n){\n    if (n == 1 || n == 0){\n        return 1;\n    }\n    else{\n        return n * factorial(n-1);\n    }\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        int result = factorial(n)\n        cout << result << endl;\n    }\n}\n",
  "#include <iostream>\n\nint factorial(int n){\n    if (n == 1 || n == 0){\n        return 1;\n    }\n    else{\n        return n * factorial(n-1);\n    }\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        int result = factorial(n)\n        cout << result << endl;\n    }\n}\n",
  "from jutge import read\nfrom jutge import read_many\nimport math\n\ndef factorial(n):\n    if n==1 or n==0:\n        return 1\n    else:\n        return n*factorial(n-1)\n\nfor n in read_many(int):\n    result = factorial(n)\n    print(result)\n",
  "#include <iostream>\n\nint factorial(int n){\n    if (n == 1 || n == 0){\n        return 1;\n    }\n    else{\n        return n * factorial(n-1);\n    }\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        int result = factorial(n)\n        cout << result << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1 || n == 0){\n        return 1;\n    }\n    else{\n        return n * factorial(n-1);\n    }\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        int result = factorial(n)\n        cout << result << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1 || n == 0){\n        return 1;\n    }\n    else{\n        return n * factorial(n-1);\n    }\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        int result = factorial(n);\n        cout << result << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n > 1){\n        return n*factorial(n-1);\n    }\n    else{\n        return 1;\n    }\n}\n",
  "from jutge import read\n\ndef factorial(n):\n\tif n==0:\n\t\treturn 1\n\treturn n*factorial(n-1)\n\nn=read(int)\nwhile n is not None:\n\tprint(factorial(n))\n\tn=read(int)\n\n",
  "from jutge import read\n\ndef factorial(n):\n\tif n==1:\n\t\treturn 1\n\treturn n*factorial(n-1)\t\n\t\nn=read(int)\nprint(factorial(n))\t\t\n",
  "\ndef factorial(n):\n\tif n==1:\n\t\treturn 1\n\treturn n*factorial(n-1)\t\n\t\n",
  "\ndef factorial(n):\n\tif n==0:\n\t\treturn 1\n\treturn n*factorial(n-1)\t\n\t\n",
  "from jutge import read\n\ndef factorial(n):\n\tif n==0:\n\t\treturn 1\n\telif n==1:\n\t\treturn 1\n\treturn n*factorial(n-1)\n\nn=read(int)\nwhile n is not None:\n\tprint(factorial(n))\n\tn=read(int)\n",
  "#include <iostream> \nusing namespace;\n\nint factorial(int n){\n\tif (n==0){\n\t\treturn 1;\n\t}\n\treturn n*factorial(int n-1);\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(int n) << endl;\n\t}\n}\n\t\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n){\n\tif (n==0){\n\t\treturn 1;\n\t}\n\treturn n*factorial(int n-1);\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(int n) << endl;\n\t}\n}\n\t\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n){\n\tif (n==0){\n\t\treturn 1;\n\t}\n\treturn n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n\t\n",
  "#include <string>\n#include <iostream>\n#include <map>\n#include <algorithm>\n#include <math.h>\n#include <vector>\nusing namespace std;\n\nint factorial(int n){\n    while(n>1){\n        return n*factorial(n-1);\n    }\n    if (n==0 or n==1){\n        return 1;\n    }\n}",
  "#include <string>\n#include <iostream>\n#include <map>\n#include <algorithm>\n#include <math.h>\n#include <vector>\nusing namespace std;\n\nint factorial(int n){\n    while(n>1){\n        return n*factorial(n-1);\n    }\n    if (n==0 or n==1){\n        return 1;\n    }\n}",
  "from jutge import read\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\ndef factorial(n):\n    if n==0: return 1\n    return n * factorial(n-1)",
  "from jutge import read\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\ndef factorial(n):\n    if n==0: return 1\n    return n * factorial(n-1)",
  "from jutge import read\n\ndef factorial(n):\n    if n==0: return 1\n    return n * factorial(n-1)\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\n",
  " \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\n \nusing namespace std;\n\n//El factorial de n, n! Ã©s 1 * 2 * Â·Â·Â· * n\nint factorial(int n){\n    if (n == 0) return 1; //Cas base: el factorial de 0, Ã©s 1: 0! = 1\n    return n * factorial(n - 1); //RecursiÃ³, en general, n! = n * (n-1)!\n}\n\n\nint main (){\n    \n}   ",
  "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <math.h>\nusing namespace std;\n\nint factorial(int n) {\n    int res=n;\n    if (n>1) {\n        res *= factorial(n-1);\n        return res;\n    }\n    else if (n==0) return 0;\n    else return 1;\n}\n\n\n\nint main() {\n    int n;\n    while (cin>>n) {\n        cout<<factorial(n)<<endl;\n    }\n}\n\n",
  "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <math.h>\nusing namespace std;\n\nint factorial(int n) {\n    int res=n;\n    if (n>1) {\n        res *= factorial(n-1);\n        return res;\n    }\n    else if (n==0) return 1;\n    else return 1;\n}\n\n\n\nint main() {\n    int n;\n    while (cin>>n) {\n        cout<<factorial(n)<<endl;\n    }\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0 or n==1) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\nint main() {\r\n\tint x;\r\n\tcin>>x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    cout << factorial(4);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n > 1) return 1;\n\treturn n * factorial(n - 1);\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl; \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n < 1) return 1;\n\treturn n * factorial(n - 1);\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl; \n}\n",
  "#include <iostream>\n\nusing namespace std;\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main () {\n    int n;\n    cin>>n;\n    cout<< factorial(n) <<endl;\n}\n",
  "/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    int fact = 1;\n    int i = 0;\n    \n    while (i < n) {\n        ++i;\n        fact *= i;\n    }\n    return fact;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n\r\n}\r\n\r\n\r\n\r\nint main (){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n\r\n\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n// pre: entrada 0â¤ n â¤ 12;\r\n// pos: salida la sumatorio de n;\r\nint factorial(int n) {\r\n\tint sum;\r\n\tif (n == 0 or n == 1) {\r\n\t\tsum = 1;\r\n\t}\r\n\telse {\r\n\t\tsum = n * factorial(n - 1);\r\n\t}\r\n\treturn sum;\r\n}\r\n\r\n\r\nint main() {\r\n\tcout << factorial(5) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n int factorial(int n) {\r\n\t\tif (n == 1) return n;\r\n\t\telse {\r\n\t\t\tn = n * factorial (n - 1);\r\n\t\t}\r\n }\r\n \r\n int main () {\r\n\t\tint x;\r\n\t\twhile (cin >> x) {\r\n\t\t\tcout << factorial(x) << endl;\r\n\t\t}\r\n }\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n int factorial(int n) {\r\n\t\tif (n == 1) return n;\r\n\t\telse {\r\n\t\t\treturn n = n * factorial (n - 1);\r\n\t\t}\r\n }\r\n \r\n int main () {\r\n\t\tint x;\r\n\t\twhile (cin >> x) {\r\n\t\t\tcout << factorial(x) << endl;\r\n\t\t}\r\n }\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n int factorial(int n) {\r\n\t\tif (n == 0) n = 1;\r\n\t\tif (n == 1) return n;\r\n\t\telse {\r\n\t\t\treturn n = n * factorial (n - 1);\r\n\t\t}\r\n }\r\n \r\n int main () {\r\n\t\tint x;\r\n\t\twhile (cin >> x) {\r\n\t\t\tcout << factorial(x) << endl;\r\n\t\t}\r\n }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if(n == 0) return 1;\r\n    else return factorial(n-1) * n;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    int a = factorial(n);\r\n    cout << \"factorial es \" << a << endl;\r\n}\r\n",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial (n - 1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tint f = factorial(n);\n\tcout << f << endl;\n}\t",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0)\r\n        return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#!usr/bin/python\r\n\r\nfrom easyinput import read\r\n\r\ndef factorial(n):\r\n    if n==1 or n==0:\r\n        return 1\r\n    return n*factorial(n-1)\r\ndef main():\r\n    n=read(int)\r\n    while n!=None:\r\n        print(factorial(n))\r\n        n=read(int)\r\nmain()\r\n",
  "#!usr/bin/python\r\n\r\nfrom easyinput import read\r\n\r\ndef factorial(n):\r\n    if n==1 or n==0:\r\n        return 1\r\n    return n*factorial(n-1)\r\ndef main():\r\n    n=read(int)\r\n    while n!=None:\r\n        print(factorial(n))\r\n        n=read(int)\r\nmain()\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    if (n == 0) return 1;\n    else {\n        while (n > 0) {\n\n            n = n * factorial(n-1);\n            return n;        \n            \n        }\n    }\n    \n    \n}\n\nint main () {\n    \n    cout << factorial (0) << endl;\n    cout << factorial (1) << endl;\n    cout << factorial (2) << endl;\n    cout << factorial (3) << endl;\n    cout << factorial (4) << endl;\n    cout << factorial (12) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    if (n <= 0) return 1;\n    else return n * factorial(n-1);\n    \n    \n}\n\nint main () {\n    \n    cout << factorial (0) << endl;\n    cout << factorial (1) << endl;\n    cout << factorial (2) << endl;\n//     cout << factorial (3) << endl;\n//     cout << factorial (4) << endl;\n//     cout << factorial (12) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int f;\r\n    if (n <= 1) f = 1;\r\n    else f = (n * factorial(n-1));\r\n    return f;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n    cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) {\n        return 1;\n    } else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n == 0){\n    return 1;\n  } else {\n    return factorial(n-1) * n;\n  }\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\nif (n  <=1) return 1;\nelse \n   return n* factorial(n-1);\n}\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\nif (z = 0) return 1;\nelse \n   return n* factorial(n-1)\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\nif (z = 0) return 1;\nelse \n   return n* factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\nif (n = 0) return 1;\nelse \n   return n* factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\nif (n = 0) return 1;\nelse \n   return n* factorial(n-1);\n}\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\nif (n <=0) return 1;\nelse \n   return n* factorial(n-1);\n}\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "# zeros i uns\nimport sys\n\ndef factorial(n):\n\tif n == 0:\n\t\treturn 1\n\treturn factorial(n - 1) * n\n\nprint( factorial(int(sys.argv[1])))\n\t\n",
  "# zeros i uns\n#import sys\n\ndef factorial(n):\n\tif n == 0:\n\t\treturn 1\n\treturn factorial(n - 1) * n\n\n#print( factorial(int(sys.argv[1])))\n\t\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\nint n;\r\ncin >> n;\r\ncout << factorial(n) << endl;\r\n}\r\n",
  "\r\n class Solution {\r\n\r\n    public static int factorial(int n) {\r\n        if (n == 0) {\r\n            return 1;\r\n        } else {\r\n            return n * factorial(n - 1);\r\n        }\r\n    }\r\n\r\n}\r\n",
  "import math\r\ndef factorial (n):\r\n    if n==0:\r\n        return 1\r\n    else:\r\n        return math.factorial(n)\r\nn= int(input())\r\nprint(factorial(n))",
  "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\n\r\n\r\nint main() {\r\n\tcout << factorial(3) << endl;\r\n}",
  "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\n\r\n\r\nint main() {\r\n\tcout << factorial(3) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n <= 1) return 1;\r\n    else return factorial(n-1) * n;\r\n}\r\n\r\nint main(){\r\n    int x;\r\n    while (cin >> x) cout << factorial (x) << endl;\r\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\t\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n\t\n}\n\nint main() {\n\t\n\tint n;\n\twhile (cin >> n) {\n\t\t\n\t\tcout << factorial(n) << endl;\n\t\t\n\t}\n\t\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int x){\n\n    if(x==0) return 1;\n    else return x*factorial(x-1);\n}\n\nint main(){\n\n    int n;\n    while (cin>>n) cout<<factorial(n)<<endl;\n\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) {\n        return n;\n    } else return factorial(n - 1)*n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) {\n        return n;\n    } else return factorial(n - 1)*n;\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    } else return factorial(n - 1)*n;\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "// P12509: recursive factorial\n\n// int: n\n// out: n!\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int x) {\n    \n    // cas base\n    if (x == 0) return 1;\n    \n    // apropar-nos al cas base\n    // n! = n * (n-1)!\n    else return x*factorial(x-1);\n    \n}\n\nint main() {\n    \n    int x;\n    \n    while (cin >> x) {\n    \n        cout << factorial(x) << endl;\n        \n    }\n    \n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\n\nint factorial(int n) {\n\n\tif (n <= 1) return 1;\n\n\telse return n * factorial(n-1);\n\n}\n\n\n\nint main() {\n\n\tint x;\n\n\tcin >> x;\n\n\tcout << factorial(x) << endl;\n\n}\n",
  "//\n//  main.cpp\n//  factorial function\n//\n//  Created by Viktor Nechvile on 27/11/2020.\n//\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main() {\n    int n = 0;\n    while(cin >> n) {\n    cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return n;\n    else{  \n        return factorial(n - 1) * n;\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return n;\n    else{  \n        return factorial(n - 1) * n;\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    if (n >= 1) cout << factorial(n) << endl;\n    else cout << '1' << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return n;\n    else{  \n        return factorial(n - 1) * n;\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    if (n >= 1) cout << factorial(n) << endl;\n    else cout << '1' << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else{  \n        return factorial(n - 1) * n;\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int sum = 1;\n    if (n < 2) return sum;\n    else return sum = n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse {\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n}\r\n\r\nint main () {\r\n\tint x;\r\n\twhile (cin >> x) cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int multiplicacio = 1;\n    if(n == 0 or n == 1) return 1;\n    for(int i = 1; i <= n; ++i) {\n        multiplicacio *= i;\n    }\n    return multiplicacio;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n == 0) n = 1;\n    else return n * factorial(n-1);\n    return n;\n}\n\n\n\nint main() {\n    int numero;\n    cin >> numero;\n    cout << factorial(numero) << endl;\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint result;\r\n\tif (n <= 1) result = 1;\r\n\telse {\r\n\t\tresult = n * factorial(n - 1);\r\n\t}\r\n\treturn result;\t\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact = 1;\n    if (n == 0) fact = 1;\n    if ( n == 1) fact = fact * n;\n    else fact = n * factorial(n-1);\n    return fact;\n}\n\nint main(){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) <<endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact = 1;\n    if (n == 0) fact = 1;\n    else if ( n == 1) fact = fact * n;\n    else fact = n * factorial(n-1);\n    return fact;\n}\n\nint main(){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) <<endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if(n==0) return 1 ;\n    else {\n        return n*factorial(n-1);\n}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "\n#include <iostream>\nusing namespace std;\n\n/* Pre: Nos dan un numero n que es 0 <= n >= 12.\n * Post: Hay que sacar un numero natural.\n * Â¿QuÃ©?: factorial recursivode un numero natural.\n */\nint factorial(int n) {\n\t//caso base, bien n es 0 o 1\n\tint fact = 1;\n\tif (n > 1) fact = factorial (n - 1) * n;\n\treturn fact;\n}\n\n\nint main() {\n\tint x;\n\twhile (cin >> x) {\n\t\tif ((x >= 0) and (x <= 12))\n\t\tcout << factorial(x) << endl;\n\t}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n <= 1) return n;\r\n    else return n * (factorial (n - 1));\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n <= 1) return 1;\r\n    else return n * (factorial (n - 1));\r\n}",
  "//a function that returns n!\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int result = 0;\r\n    if (n <= 1) result = 1;\r\n    else result = n * factorial(n-1);\r\n    return result;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n = n * factorial(n-1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return factorial(n-1)*n;\n    \n}\n\nint main() {\n    int x;\n    cin >> x;\n    \n    cout << factorial(x) << endl;\n}\n",
  "import java.util.Scanner;\r\n\r\npublic class Main {\r\n\r\n    public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int number = scanner.nextInt();\r\n        System.out.println(factorial(number));\r\n\r\n    }\r\n\r\n    public static int factorial(int n) {\r\n        if(n == 1) {\r\n            return 1;\r\n        }\r\n        return n * factorial(n -1);\r\n    }\r\n}\r\n\r\n",
  "\r\npublic class Factorial {\r\n\r\n    public static int factorial(int n) {\r\n        if(n == 1) {\r\n            return 1;\r\n        }\r\n        return n * factorial(n -1);\r\n    }\r\n}\r\n\r\n",
  "public static int factorial(int n) {\r\n    if(n == 1) {\r\n        return 1;\r\n    }\r\n    return n * factorial(n -1);\r\n}\r\n\r\n\r\n",
  "import java.util.Scanner;\r\n\r\npublic class Main {\r\n\r\n    public static int factorial(int n){\r\n        if (n == 0) return 1;\r\n        return n*factorial(n-1);\r\n    }\r\n\r\n    public static void main (String[] args) {\r\n\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int x = scanner.nextInt();\r\n\r\n        System.out.println(factorial(x));\r\n\r\n    }\r\n}",
  "public static int factorial(int n){\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) { // iterative solution\r\n\tint f = 1;\r\n\tint i = 0;\r\n\t// Invariant: f = i! and i Ã¯âÂ£ n\r\n\twhile (i < n) {\r\n\t\ti = i + 1;\r\n\t\tf = f * i;\r\n\t}\r\n\treturn f;\r\n}\r\n\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "//Factorial recursiu\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1) * n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n  if(n == 0) return 0;\n  else return (n*factorial(n-1))\n      \n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n  if(n == 0) return 0;\n  else return (n*factorial(n-1));\n      \n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n  if(n == 0) return 0;\n  else return (n*factorial(n-1));\n      \n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return factorial(n-1)*n;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "//recursive factorial\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "//P12509 - Recursive factorial\n\n//Escribir una funciÃ³n que devuelva el factorial de un nÃºmero\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n - 1) * n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint permutacion (int x) {\r\n    if (x - 1 == 0) return 1; \r\n    else return x*permutacion (x - 1);\r\n}\r\n\r\nint main () {\r\n    int num;\r\n    cin >> num;\r\n    cout << permutacion(num);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (x - 1 == 0) return 1; \r\n    else return x*factorial (x - 1);\r\n}\r\n\r\nint main () {\r\n    int num;\r\n    cin >> num;\r\n    cout << factorial(num);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n - 1 == 0) return 1; \r\n    else return n*factorial (n - 1);\r\n}\r\n\r\nint main () {\r\n    int num;\r\n    cin >> num;\r\n    cout << factorial(num);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1; \r\n    else return n*factorial (n - 1);\r\n}\r\n\r\nint main () {\r\n    int num;\r\n    cin >> num;\r\n    cout << factorial(num);\r\n}",
  "from jutge import read\r\n\r\ndef factorial (n):\r\n    if (n == 0):\r\n        return (1)\r\n    return (n*factorial(n-1))\r\n\r\n    \r\n        \r\n\r\nprint (factorial(5))\r\n\r\n                \r\n",
  "from jutge import read\r\n\r\ndef factorial (n):\r\n    if (n == 0):\r\n        return (1)\r\n    return (n*factorial(n-1))\r\n\r\n    \r\n        \r\n\r\n\r\n\r\n                \r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0 or n== 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) //factorial(5) = 120 = 1*2*3*4*5;\n{\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x)\n    {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n\r\n}",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) {\n        return 1;\n    } else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return n*factorial(n - 1);\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*(factorial(n - ));\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*(factorial(n - 1));\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "// Recursive factorial\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) n = 1;\t\t\t\t// Caso base\n\telse n = n * factorial(n-1);\t// Caso general\n\treturn n;\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n <= 1){\r\n    return 1;\r\n  } else {\r\n    return (n * factorial(n-1));\r\n  }\r\n}\r\n\r\nint main() {\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\nif (n <=0) return 1;\nelse \n   return n* factorial(n-1);\n}\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n <= 1) return 1;\n  else return n*factorial (n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1) return 1; \n    else return n*factorial(n-1);    \n}\n\nint main(){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nbool primer(int a) {\n\tif (a <= 1) return false;\n\tfor (int i = 2; i * i <= a; ++i) {\n\t\tif (a % i == 0) return false;\n\t}\n\treturn true;\n}\n\nbool es_primer_perfecte(int n) {\n\tif (not primer(n)) return false;\n\tint resultat = 0;\n\tint digits = 0;\n\twhile (n > 0) {\n\t\tresultat = resultat+n % 10;\n\t\tn = n / 10;\n\t\t++digits;\n\t}\n\tbool resultat_primer = primer(resultat);\n\tif (resultat_primer && digits == 1) return true;\n\telse if (resultat_primer) return es_primer_perfecte(resultat);\n\telse return false;\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << es_primer_perfecte(n) << endl;\n\t}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else {\r\n        return n * factorial(n-1);\r\n    }\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while (cin >> n){\r\n        cout << factorial(n) << endl;    \r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n > 1) return n * factorial(n-1);\r\n\telse return 1;\r\n}\r\n\r\nint main () {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x)<< endl;\r\n}",
  "//\n//\n//\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact = 1;\n    \n    for (int i = 1; i <= n; ++i) {\n        fact *= i;\n    }\n    \n    return fact;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nbool es_perfecte(int x);\n\nint main() {\n  int x;\n  while (cin >> x) cout << (es_perfecte(x) ? \"true\" : \"false\") << endl;\n}\n\nbool es_perfecte(int n) {\n    int m = 0, k;\n    \n    if (n == 0 or n == 1) return false;\n    else for (int i = 0; i < n/2; ++i) {\n        k = n/i;\n        if ((n != k) and (n%i == 0)) m += i + k;\n        }\n    return m == n;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n\r\n\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "int factorial(int n){\r\n    int factorial = 1;\r\n    for (int i = 1; i <= 0; ++i) {\r\n        factorial *= i;\r\n    }\r\n    return factorial;\r\n}\r\n",
  "int factorial(int n){\r\n    int factorial = 1;\r\n    for (int i = 1; i <= n; ++i) {\r\n        factorial *= i;\r\n    }\r\n    return factorial;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\nif (n <= 1) return 1;\nelse return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return n * factorial(n-1);\n    }\n}\n\nint main() {\n    int num;\n    cin >> num;\n    int fac = factorial(num);\n    cout << fac << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n    \n}\n\nint main() {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) {\n        return 1;\n    }\n    else {\n        return factorial(n-1) * n;\n    }\n}\n\nint main () {\n    int z;\n    cin >> z;\n    cout << factorial(z) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <bits/stdc++.h>\r\nusing namespace std;\r\nint factorial(int n);\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tfactorial(n);\r\n}\r\nint factorial(int n){\r\n\tint r=1;\r\n\tfor(int i=2;i<=n;i++){\r\n\t\tr*=i;\r\n\t}\r\n\tcout << r << endl;\r\n\treturn r;\r\n}\r\n",
  "// 3.cpp : Este archivo contiene la funciÃ³n \"main\". La ejecuciÃ³n del programa comienza y termina ahÃ­.\r\n//\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string x, y;\r\n    cin >> x;\r\n    int s = 1;\r\n    int r = 0;\r\n    while (cin >> y) {\r\n        if (y == x) {\r\n            s++;\r\n        }\r\n        else {\r\n            if (r < s) r = s;\r\n            s = 0;\r\n        }\r\n\t\t   if (r < s) r = s;\r\n    }\r\n\tif (r < s) r = s;\r\n\r\n    cout << r << endl;\r\n}\r\n\r\n// Ejecutar programa: Ctrl + F5 o menÃº Depurar > Iniciar sin depurar\r\n// Depurar programa: F5 o menÃº Depurar > Iniciar depuraciÃ³n\r\n\r\n// Sugerencias para primeros pasos: 1. Use la ventana del Explorador de soluciones para agregar y administrar archivos\r\n//   2. Use la ventana de Team Explorer para conectar con el control de cÃ³digo fuente\r\n//   3. Use la ventana de salida para ver la salida de compilaciÃ³n y otros mensajes\r\n//   4. Use la ventana Lista de errores para ver los errores\r\n//   5. Vaya a Proyecto > Agregar nuevo elemento para crear nuevos archivos de cÃ³digo, o a Proyecto > Agregar elemento existente para agregar archivos de cÃ³digo existentes al proyecto\r\n//   6. En el futuro, para volver a abrir este proyecto, vaya a Archivo > Abrir > Proyecto y seleccione el archivo .sln\r\n",
  "ï»¿\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio Version 16\r\nVisualStudioVersion = 16.0.31205.134\r\nMinimumVisualStudioVersion = 10.0.40219.1\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"3\", \"3\\3.vcxproj\", \"{40507FD0-F4BB-4D6D-A3AE-ED6E59D80B37}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|x64 = Debug|x64\r\n\t\tDebug|x86 = Debug|x86\r\n\t\tRelease|x64 = Release|x64\r\n\t\tRelease|x86 = Release|x86\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{40507FD0-F4BB-4D6D-A3AE-ED6E59D80B37}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{40507FD0-F4BB-4D6D-A3AE-ED6E59D80B37}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{40507FD0-F4BB-4D6D-A3AE-ED6E59D80B37}.Debug|x86.ActiveCfg = Debug|Win32\r\n\t\t{40507FD0-F4BB-4D6D-A3AE-ED6E59D80B37}.Debug|x86.Build.0 = Debug|Win32\r\n\t\t{40507FD0-F4BB-4D6D-A3AE-ED6E59D80B37}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{40507FD0-F4BB-4D6D-A3AE-ED6E59D80B37}.Release|x64.Build.0 = Release|x64\r\n\t\t{40507FD0-F4BB-4D6D-A3AE-ED6E59D80B37}.Release|x86.ActiveCfg = Release|Win32\r\n\t\t{40507FD0-F4BB-4D6D-A3AE-ED6E59D80B37}.Release|x86.Build.0 = Release|Win32\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\n\tGlobalSection(ExtensibilityGlobals) = postSolution\r\n\t\tSolutionGuid = {3DADF419-C775-4F7E-A292-24669EF27841}\r\n\tEndGlobalSection\r\nEndGlobal\r\n",
  "// 3.cpp : Este archivo contiene la funciÃ³n \"main\". La ejecuciÃ³n del programa comienza y termina ahÃ­.\r\n//\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n    system(\"pause\");\r\n    return 0;\r\n    \r\n}\r\n\r\n// Ejecutar programa: Ctrl + F5 o menÃº Depurar > Iniciar sin depurar\r\n// Depurar programa: F5 o menÃº Depurar > Iniciar depuraciÃ³n\r\n\r\n// Sugerencias para primeros pasos: 1. Use la ventana del Explorador de soluciones para agregar y administrar archivos\r\n//   2. Use la ventana de Team Explorer para conectar con el control de cÃ³digo fuente\r\n//   3. Use la ventana de salida para ver la salida de compilaciÃ³n y otros mensajes\r\n//   4. Use la ventana Lista de errores para ver los errores\r\n//   5. Vaya a Proyecto > Agregar nuevo elemento para crear nuevos archivos de cÃ³digo, o a Proyecto > Agregar elemento existente para agregar archivos de cÃ³digo existentes al proyecto\r\n//   6. En el futuro, para volver a abrir este proyecto, vaya a Archivo > Abrir > Proyecto y seleccione el archivo .sln\r\n",
  "// 3.cpp : Este archivo contiene la funciÃ³n \"main\". La ejecuciÃ³n del programa comienza y termina ahÃ­.\r\n//\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n\r\n// Ejecutar programa: Ctrl + F5 o menÃº Depurar > Iniciar sin depurar\r\n// Depurar programa: F5 o menÃº Depurar > Iniciar depuraciÃ³n\r\n\r\n// Sugerencias para primeros pasos: 1. Use la ventana del Explorador de soluciones para agregar y administrar archivos\r\n//   2. Use la ventana de Team Explorer para conectar con el control de cÃ³digo fuente\r\n//   3. Use la ventana de salida para ver la salida de compilaciÃ³n y otros mensajes\r\n//   4. Use la ventana Lista de errores para ver los errores\r\n//   5. Vaya a Proyecto > Agregar nuevo elemento para crear nuevos archivos de cÃ³digo, o a Proyecto > Agregar elemento existente para agregar archivos de cÃ³digo existentes al proyecto\r\n//   6. En el futuro, para volver a abrir este proyecto, vaya a Archivo > Abrir > Proyecto y seleccione el archivo .sln\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int res;\r\n    if (n == 0) res = 1;\r\n    else res = n*factorial(n-1);\r\n    return res;\r\n}\r\n\r\nint main (){\r\n    int n = 4;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n) {\n    if (n <= 1) return 1;\n    if (n == 2) return 2;\n    return n*factorial(n-1);\n }\n\nint main () {\n\tint n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "def factorial(n):\n\tif n == 0 or n == 1:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n-1)",
  "def factorial(n):\r\n   if n == 1:\r\n       return n\r\n   else:\r\n       return n*factorial(n-1)\r\nprint(eval(input()))",
  "def factorial(n):\r\n    if n == 1:\r\n        return n\r\n    else:\r\n        return n*factorial(n-1)\r\n\r\nf = input()\r\nif f == 0: print(1)\r\nelse: print(eval(f))",
  "def factorial(n):\r\n    if n == 1:\r\n        return n\r\n    else:\r\n        return n*factorial(n-1)\r\n\r\nf = input()\r\nif f == 0: print(1)\r\nelse: print(factorial(f))",
  "import math\r\nprint(math.factorial(int(input())))",
  "import math\r\nn = int(input().split('(')[1].split(')')[0])\r\nprint(n)\r\nprint(math.factorial(n))",
  "import sys\r\nimport math as m\r\n\r\nfor line in sys.stdin:\r\n    if line == '' or len(line) <= 0:\r\n        break\r\n    \r\n    print(m.factorial(int(line)))",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else {\r\n        return n * factorial(n-1);\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    int f = factorial(n);\r\n    cout << f << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n  int x;\n  while (cin >> x) {\n    cout << factorial(x) << endl;\n    }\n}\n",
  "/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\n\n/*int max2(int a, int b) {\n    if (a > b) return a;\n    return b;\n}*/\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n * factorial(n - 1);\n}\n\nint main()\n{\n    cout<<\"Hello World\";\n\n    return 0;\n}\n",
  "/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\n\n/*int max2(int a, int b) {\n    if (a > b) return a;\n    return b;\n}*/\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    if (n == 0) return 0;\n    return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n);\n\n    return 0;\n}\n",
  "/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\n\n/*int max2(int a, int b) {\n    if (a > b) return a;\n    return b;\n}*/\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n);\n\n    return 0;\n}\n",
  "def factorial(n: int) -> int:\n    if n == 1:\n        return n\n    else:\n        return n*factorial(n-1)",
  "def factorial(n: int) -> int:\n    if n <= 1:\n        return n\n    else:\n        return n*factorial(n-1)",
  "def factorial(n):\n    if n <= 1:\n        return n\n    else:\n        return n*factorial(n-1)",
  "def factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1)",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main(){\n    int x;\n    while(cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\tif (n > 1)\n\t{\n\t\treturn (n * factorial(n-1));\n\t}\n\telse return 1;\n}\n\nint main()\n{\n\tint n;\n\tcin >> n;\n\n\tcout << factorial(n)<< endl;\n\treturn 0;\n}",
  "#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint factorial (int n);{\n    if (n < 1)\n        return n * factorial(n-1);\n    else\n        return 1;\n}\n\n\n",
  "#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint factorial (int n){\n    if (n < 1)\n        return n * factorial(n-1);\n    else\n        return 1;\n}\n\n\n",
  "#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint factorial (int n){\n    if (n > 1)\n        return n * factorial(n-1);\n    else\n        return 1;\n}\n\n\n",
  "#include <bits/stdc++.h>\nusing namespace std;\n\nint factorial(int n){\n    if(n > 1){\n        return n*factorial(n-1);\n    }else{return 1;}\n}\n",
  "#include <iostream>\n#include <math.h>\n\nusing namespace std;\n\n\n\nint factorial (int n) {\n    if (n == 0) {\n    return 1;\n    }\n    else {\n    return n*factorial (n-1);\n    }\n}\n        \n    \nint main () {\n    int n;\n    while (cin >> n) cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\nif (n==0) \nreturn 1;\n\nelse \nreturn n*factorial (n-1);\n\n}\n\n\n\n\nint main() {\nint n;\nwhile (cin >> n) cout << factorial(n) << endl;} \n\n    \n\n\n\n\n\n\n    \n    \n    \n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int a){\n    if (a > 1) {\n        return a * factorial(a - 1);\n    } else {\n        return 1;\n    }\n}\n\nint main() {\n    int a;\n    cin >> a;\n    int result = factorial (a);\n    cout << result << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int a){\n    if (a==1)\n        return a;\n    else \n        return a*(factorial(a-1));\n        \n    \n        \n}\n\nint main(){\n    int n;\n    cin >>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int a){\n    if (a==1)\n        return a;\n    else \n        return a*(factorial(a-1));\n        \n    \n        \n}\n\nint main(){\n    int n;\n    while (cin >>n){\n        cout<<factorial(n)<<endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int a){\n    if (a==0)\n        return 1;\n    else \n        return a*(factorial(a-1));\n        \n    \n        \n}\n\nint main(){\n    int n;\n    while (cin >>n){\n        cout<<factorial(n)<<endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\nlong double factorial(int);\nint main()\n{   int n;\n    cin >> n;\n    cout << \"factorial: \" << factorial(n) << endl;\n    system(\"pause\");\n}\nlong double factorial(int n)\n{\n    long double fact;\n    if (n==0)\n        return 1;\n    else\n         return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n)\n{\n    int fact;\n    if (n==0)\n        return 1;\n    else\n         return n*factorial(n-1);\n}\nint main()\n{   int n;\n    cin >> n;\n    cout <<factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n /*int factorial (int n) {\n     int p = 1;\n     for (int i = 1; i <= n; ++i) p = p*i;\n     return p;\n } \n */\n int factorial (int n) {\n     if (n==0) return 1;\n     return n*factorial (n - 1);\n    \n }\n int main () {\n     int n;\n     while (cin >> n) cout << factorial (n) << endl;\n }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n\n    int x;\n    while(cin >> x)\n    cout << factorial(x) << endl;\n}\n",
  "#include <bits/stdc++.h>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\telse if (n==1) return 1;\n\telse return factorial(n-1)*n;\n\t\n\t}\n\nint main(){\n\tint n;\n\tcin >> n;\t \n\tcout << factorial(n)<<endl;\n\t}\n",
  "int factorial(int n) {\r\n    if (n < 1) return 1;\r\n    return n * factorial(n - 1);\r\n}",
  "int factorial(int n) {\r\n    if (n < 2) return 1;\r\n    return n * factorial(n - 1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int i = 1;\r\n    int fact = 1;\r\n    while (i <= n){\r\n        fact = fact * i;\r\n        i += 1;\r\n    }\r\n    return fact;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    int f = factorial(n);\r\n\r\n    cout << f << endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0 || n ==1)\r\n        return 1;\r\n    n*=factorial(n-1);\r\n    \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    factorial(n);\r\n    return 0;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0 || n ==1)\r\n        return 1;\r\n    n*=factorial(n-1);\r\n    \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n    return 0;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0 || n ==1)\r\n        return 1;\r\n    return n*=factorial(n-1);\r\n    \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    factorial(n);\r\n    return 0;\r\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif(n==1) {\n\t\treturn 1;\n\t}\n\treturn n*factorial(n-1);\n}\n\n\nint main ()\n{\n\tcout << factorial(5) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif(n==0) {\n\t\treturn 1;\n\t}\n\treturn n*factorial(n-1);\n}\n\n\nint main ()\n{\n\tcout << factorial(5) << endl;\n}",
  "\ndef factorial(n):\n\tif n == 1:\n\t\treturn n\n\telse:\n\t\treturn n * factorial(n-1)\n",
  "def factorial(n):\n\tif n == 1:\n\t\treturn n\n\telse:\n\t\treturn n * factorial(n-1)\n",
  "\ndef factorial(n):\n\tif n == 1:\n\t\treturn n\n\telse:\n\t\treturn (n * factorial(n - 1))\n",
  "\ndef factorial(n):\n\tif n == 1:\n\t\treturn n\n\telse:\n\t\treturn n * factorial(n - 1)\n\nfor x in range(5):\n\tprint(factorial(x))\n",
  "def factorial(n):\n\tif n == 1:\n\t\treturn n\n\telse:\n\t\treturn n * factorial(n-1)\n\nfrom jutge import read\n\nx=read(int)\nwhile x is not None:\n\tprint(factorial(x))\n\tx= read(int)\n",
  "\ndef factorial(n):\n\tif n == 1:\n\t\treturn n\n\telse:\n\t\treturn n * factorial(n - 1)\n\nfrom jutge import read\nn = read(int)\n\nwhile n is not None:\n\tprint(factorial(n))\n\tn = read(int)\n",
  "from jutge import read\n\ndef factorial(n):\n\tif n == 1:\n\t\treturn n\n\telse:\n\t\treturn n * factorial(n - 1)\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\n",
  "from jutge import read\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\ndef factorial(n):\n\tif n == 1:\n\t\treturn n\n\telse:\n\t\treturn n * factorial(n - 1)\n",
  "from jutge import read\n\ndef factorial(n):\n\tif n == 1:\n\t\treturn n\n\telse:\n\t\treturn (n*factorial(n-1))\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n",
  "\n\ndef factorial(n):\n\tif n==1:\n\t\treturn 1\n\telse:\n\t\treturn (n * factorial(n-1))\n\n\n\n",
  "from jutge import read\n\ndef factorial(n):\n\tif n==1:\n\t\treturn 1\n\telse:\n\t\treturn (n * factorial(n-1))\n\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\n\n",
  "\nfrom jutge import read\n\ndef factorial(n):\n\tif n == 1:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n - 1)\n\n\nn = read(int)\nwhile n is not None:\n\tprint(factorial(n))\n\tn = read(int)\n",
  "def factorial(n):\n\tif n == 1 or n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n-1)\n\n\nfrom jutge import read\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\n",
  "\nfrom jutge import read\n\ndef factorial(n):\n\tif n == 1 or n == 0:\n\t\treturn 1\n\telse:\n\t\treturn(n*factorial(n-1))\n\n\nn = read(int)\nwhile n is not None:\n\tprint(factorial(n))\n\tn = read(int)\n",
  "from jutge import read\n\ndef factorial(n):\n\tif n==1 or n==0:\n\t\treturn 1\n\telse:\n\t\treturn (n * factorial(n-1))\n\n\nn = read(int)\nwhile n is not None: \n\tprint(factorial(n))\n\tn = read(int)\n\n\n",
  "def factorial(n):\n\t\"\"\"\n\tOnly non-negative numbers\t\n\t\"\"\"\n\tif n == 0 or n == 1:\n\t\treturn 1\n\telse:\n\t\treturn factorial(n-1) * n\n\t\t\nfor n in range(4):\n\tprint(\"factorial\"+\"(\"+str(n)+\")\"+ \" â \" + str(factorial(n)))\n\t\n",
  "def factorial(n):\n\t\"\"\"\n\tOnly non-negative numbers\t\n\t\"\"\"\n\tif n == 0 or n == 1:\n\t\treturn 1\n\telse:\n\t\treturn factorial(n-1) * n\n\t\t\nfor n in range(4):\n\tprint(\"factorial\"+\"(\"+str(n)+\")\"+ \" --> \" + str(factorial(n)))\n\t\n",
  "def factorial(n):\n\t\"\"\"\n\tOnly non-negative numbers\t\n\t\"\"\"\n\tif n == 0 or n == 1:\n\t\treturn 1\n\telse:\n\t\treturn factorial(n-1) * n\n\t\t\n\n\t\n",
  "from jutge import read\n\ndef factorial(n):\n\t'''\n\tReturn the factorial of a number between 0 and 12\n\t'''\n\tif n == 1 or n == 0:\n\t\treturn n\n\telse:\n\t\treturn n*factorial(n-1)\n\nn = read(int)\n\nn = factorial(n)\n\nprint(n)\n",
  "from jutge import read\n\ndef factorial(n):\n\t'''\n\tReturn the factorial of a number between 0 and 12\n\t'''\n\tif n == 1 or n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n*factorial(n-1)\n\nn = read(int)\n\nn = factorial(n)\n\nprint(n)\n",
  "def Rec_Fac(n):\r\n    '''\r\n    input : Int >= 0 and <=12\r\n    '''\r\n    if n == 0 or n == 1:\r\n        return 1\r\n    else:\r\n        return n*Rec_Fac(n-1)\r\n",
  "def factorial(n):\r\n    '''\r\n    input : Int >= 0 and <=12\r\n    '''\r\n    if n == 0 or n == 1:\r\n        return 1\r\n    else:\r\n        return n*factorial(n-1)\r\n",
  "#Recursive factorial, define factorial(n) with 0 <= n <= 12\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n*(factorial(n-1))\n'''print(factorial(0))\nprint(factorial(1))\nprint(factorial(2))\nprint(factorial(3))\nprint(factorial(4))\n'''",
  "#include <iostream>\nusing namespace std;\nint main()\n{\n    int n, i;\n    cin >> n;\n    i = 1;\n    while (n > 0) {\n        i = i * n;\n        n = n - 1;\n    }\n    cout << i << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n)\n{\n    int i;\n    i = 1;\n    while (n > 0) {\n        i = i * n;\n        n = n - 1;\n    }\n    return i;\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "from jutge import read\n\nn = read(int)\n\ndef factorial(n):\n\twhile n is not None:\n\t\tif n == 0:\n\t\t\treturn 1\n\t\t\t\n\t\telse:\n\t\t\treturn n*factorial(n-1)\n\t\n\t\n\t\n\n\n\n",
  "def recursive_factorial(num):\n    if num == 0 or num == 1:\n        return 1\n    else:\n        return num * recursive_factorial(num-1)\n\n\nif __name__ == '__main__':\n    print('El factorial de 5 es:')\n    print(recursive_factorial(5))\n\n",
  "def recursive_factorial(num):\n    if num == 0 or num == 1:\n        return 1\n    else:\n        return num * recursive_factorial(num-1)\n\n\nif __name__ == '__main__':\n    print('El factorial de 5 es:')\n    print(recursive_factorial(5))\n\n",
  "def factorial(num):\n    if num == 0 or num == 1:\n        return 1\n    else:\n        return num * factorial(num-1)\n",
  "\n#FACTORIAL\n\ndef factorial(n):\n\tif n <= 1:\n\t\treturn 1\n\telse:\n\t\treturn n*factorial(n-1)\n\n\n",
  "def factorial(x):\n    if x <=1:\n        return 1\n    else:\n        x * factorial(x-1)\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1){\n        return 1;\n    }\n    else{\n        return n * factorial(n - 1);\n    }\n}\n/*\nint main(){\n    cout << factorial(3) << endl;\n}\n*/",
  "def factorial(x):\n    if x <=1:\n        return 1\n    else:\n        return x * factorial(x-1)\n        \n\n",
  "def factorial(n):\n    if n <= 1:\n        return 1\n    \n    else:\n        return n * factorial(n-1)",
  "def factorial(n):\n    '''\n    >>> factorial(0)\n    1\n    >>> factorial(1)\n    1\n    >>> factorial(2)\n    2\n    >>> factorial(3)\n    6\n    >>> factorial(4)\n    24\n    '''\n    if n < 0:\n        return \"No factorial for negative numbers\"\n    elif n == 1 or n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod(verbose=True)",
  "def factorial(n):\n\n    if n == 1 or n == 0:\n        return 1\n    else: #recursive class\n        return n * factorial(n-1)\n",
  "\ndef factorial(n):\n\n    n = int\n    factorial = 1\n\n    if n < 0:\n        return ''\n        \n    elif n == 0:\n        print('1')\n        \n    else:\n        for i in range(1, n + 1):\n            factorial = factorial * i\n        print(factorial)",
  "def recursion_factorial(n):\n\t#n has to be a non-negative number\n\tif n == 1 or n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n*recursion_factorial(n - 1)\n\nprint(recursion_factorial(3))\n",
  "\ndef factorial(n):\n\n    n = int\n    factorial = 1\n\n    if n < 0:\n        return 1\n        \n    elif n == 0:\n        print('1')\n        \n    else:\n        for i in range(1, n + 1):\n            factorial = factorial * i\n        print(factorial)",
  "recursive factorial\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1){\n        return 1;\n    }\n    else{\n        return n * factorial(n - 1);\n    }\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    return 0\n}   }",
  "def factorial(x):\n\t'''\n\tfactorial(0) â 1\n\tfactorial(1) â 1\n\tfactorial(2) â 2\n\tfactorial(3) â 6\n\tfactorial(4) â 24\n\t'''\n\tif n == 1 or n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n* factorial(n-a)\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0 || n == 1){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n}\n\nint main(){ \n    cout << factorial(8);\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1){\n        return 1;\n    }\n    else{\n        return n * factorial(n - 1);\n    }\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    return 0;\n}   }",
  "def factorial(n):\n\tif n == 1:\n\t\treturn n\n\telse:\n\t\treturn n*factorial(n-1)",
  "def factorial(n):\n\t'''\n\tfactorial(0) â 1\n\tfactorial(1) â 1\n\tfactorial(2) â 2\n\tfactorial(3) â 6\n\tfactorial(4) â 24\n\t'''\n\twhile n in range(1,13):\n\t\t\tif n == 1 and n == 0:\n\t\t\t\treturn(1)\n\t\t\telse: \n\t\t\t\treturn (int(n*factorial(n-1)))\n\t\t\n",
  "def factorial(x):\n\t'''\n\tfactorial(0) â 1\n\tfactorial(1) â 1\n\tfactorial(2) â 2\n\tfactorial(3) â 6\n\tfactorial(4) â 24\n\t'''\n\tif n == 1 or n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n* factorial(n-1)\n",
  "def factorial(n):\n\tif n==0 or n==1:\n\t\treturn 1\n\treturn n*factorial(n-1)\n",
  "recursive factorial\n\n",
  "# Factorial of a number using recursion\n\ndef recur_factorial(n):\n   if n == 1:\n       return n\n   else:\n       return n*recur_factorial(n-1)\n\nnum = 7\n\n# check if the number is negative\nif num < 0:\n   print(\"Sorry, factorial does not exist for negative numbers\")\nelif num == 0:\n   print(\"The factorial of 0 is 1\")\nelse:\n   print(\"The factorial of\", num, \"is\", recur_factorial(num))",
  "def factorial(n):\n\tif n == 0 or n ==1:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n-1)\n\t\t\nfrom jutge import read\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\t\t\n",
  "from jutge import read\nn = read(int)\nwhile n is not None:\n    print(factorial(n))\n    n = read(int)\ndef factorial(n):\n\tif n == 1:\n\t\treturn n\n\telse:\n\t\treturn n*factorial(n-1)",
  "recursive factorial\n\n",
  "def factorial(n):\n    if n == 0 or n == 1:\n        return 1\n    else:\n        return n*factorial(n-1)",
  "# Factorial of a number using recursion\n\ndef recur_factorial(n):\n   if n == 1:\n       return n\n   else:\n       return n*recur_factorial(n-1)\n\nnum = 7\n\n# check if the number is negative\nif num < 0:\n   print('')\nelif num == 0:\n   print(1)\nelse:\n   print(recur_factorial(num))",
  "from jutge import read\n\ndef factorial(n):\n    '''\n    This function will return the factorial value of the number given\n    it will also take only positive nÂº and 0 or lower than 12.\n    '''\n    if n<=1 :\n        return(1)\n    else:\n        return(n*factorial(n-1))",
  "def factorial(n):\n\t#n has to be a non-negative number\n\tif n == 1 or n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n*factorial(n - 1)\n",
  "from jutge import read\ndef factorial(n):\n\tif n == 1:\n\t\treturn n\n\telse:\n\t\treturn n*factorial(n-1)\n\nn = read(int)\nwhile n is not None:\n    print(factorial(n))\n    n = read(int)",
  "def factorial(n):\n\t'''\n\tfactorial(0) â 1\n\tfactorial(1) â 1\n\tfactorial(2) â 2\n\tfactorial(3) â 6\n\tfactorial(4) â 24\n\t'''\n\tif n == 1 or n == 0:\n\t\treturn 1\n\n\treturn n* factorial(n-1)\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0 || n == 1){\n        return 1;\n    }\n    else{\n        return n * factorial(n-1);\n    }\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    return 0;\n}",
  "def factorial(n):\n\t'''\n\tfactorial(0) â 1\n\tfactorial(1) â 1\n\tfactorial(2) â 2\n\tfactorial(3) â 6\n\tfactorial(4) â 24\n\t'''\n\tif n == 1 and n == 0:\n\t\treturn 1\n\t\n\treturn int(n*factorial(n-1))\n\t\t\n",
  "\ndef factorial(n):\n\n    if n <=1:\n        return 1\n        \n    else:\n        return(n*factorial(n-1))",
  "def factorial(n):\n    if n == 0 or n == 1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\n",
  "def factorial(n):\n\t'''\n\tfactorial(0) â 1\n\tfactorial(1) â 1\n\tfactorial(2) â 2\n\tfactorial(3) â 6\n\tfactorial(4) â 24\n\t'''\n\tif n == 1 or n == 0:\n\t\treturn 1\n\t\n\treturn n*factorial(n-1)\n\t\t\n",
  "def factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n * factorial(n-1)",
  "#from jutge import read\ndef factorial(n):\n\tif n == 1:\n\t\treturn n\n\telse:\n\t\treturn n*factorial(n-1)\n\n#n = read(int)\n#while n is not None:\n#    print(factorial(n))\n#    n = read(int)",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 || n == 1){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n        }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n);\n    return 0;\n}",
  "#from jutge import read\ndef factorial(n):\n\tif n == 1 or n == 0:\n\t\treturn n\n\telse:\n\t\treturn n*factorial(n-1)\n\n#n = read(int)\n#while n is not None:\n#    print(factorial(n))\n#    n = read(int)",
  "#from jutge import read\ndef factorial(n):\n\tif n == 1 or n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n*factorial(n-1)\n\n#n = read(int)\n#while n is not None:\n#    print(factorial(n))\n#    n = read(int)",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 || n == 1){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n        }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n);\n    return 0;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 || n == 1){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n        }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n);\n    return 0;\n}",
  "recursive factorial\n\n",
  "def factorial(n):\n    \n    if n == 1 or n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n \nfrom jutge import read\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 || n == 1){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n        }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n);\n    return 0;\n}",
  "\ndef factorial(n):\n\n    '''\n    >>> factorial(0)\n    1\n    \n    >>> factorial(1)\n    1\n\n    >>> factorial(2)\n    2\n\n    >>> factorial(3)\n    6\n\n    >>> factorial(4)\n    24\n\n    '''\n\n    \n    if n <= 1:  #Base case\n\n        return 1\n\n    else: #Recursive case\n\n        return n * factorial(n - 1)\n\n    # In this case, the general rule is that n is multiplied by the next smallest number,\n    # which will again be multiplied by its next smallest number and so on, \n    # so it is n * (n-1) in a loop. To indicate the loop we put the function \n    #calling itself.\n\nif __name__ == '__main__':\n\timport doctest\n\tdoctest.testmod(verbose=True)\n",
  "from jutge import read\n\ndef factorial(n):\n   if n == 1:\n       return n   #base case\n   else:\n       return n*factorial(n-1)   # recursiÃ³\n\nnum = read(int)\n\n# possibles casos \nif num < 0:\n   print(0)\nelif num == 0:\n   print(0)\nelse:\n   print(\"factorial (\", num, \")->\", factorial(num))",
  "from jutge import read\n\nn = read(int)\n\ndef f(n):\n\tif n == 1:\n\t\treturn n\n\t\t\n\telse:\n\t\treturn n*f(n-1)\n\t\t\n\t\t\n\t\n\nprint(f(n))\n",
  "from jutge import read\n\nn = read(int)\n\ndef factorial(n):\n\tif n == 1:\n\t\treturn n\n\t\t\n\telse:\n\t\treturn n*f(n-1)\n\t\n\n",
  "from jutge import read\n\nn = read(int)\n\ndef factorial(n):\n\tif n == 1:\n\t\treturn n\n\t\t\n\telse:\n\t\treturn n*factorial(n-1)\n\t\n\n\n",
  "from jutge import read\n\ndef factorial(n):\n   if n == 1:\n       return n   #base case\n   else:\n       return n*factorial(n-1)   # recursiÃ³\n\nnum = read(int)\n\n# possibles casos \nif num < 0:\n   print(0)\nelif num == 0:\n   print(\"factorial (\",num,\")->\", factorial(1))\nelse:\n   print(\"factorial (\", num,\")->\", factorial(num))",
  "from jutge import read\n\ndef factorial(n):\n   if n == 1:\n       return n   #base case\n   else:\n       return n*factorial(n-1)   # recursiÃ³\n\nnum = read(int)\n\n# possibles casos \nif num == 0:\n   print(\"factorial (\",num,\")->\", factorial(1))\nelse:\n   print(\"factorial (\", num,\")->\", factorial(num))",
  "from jutge import read\n\nn = read(int)\n\ndef factorial(n):\n\t\n\tif n == 1:\n\t\treturn n\n\t\t\n\telse:\n\t\treturn n*factorial(n-1)\n\t\n\n\n\nprint(factorial(n))\n",
  "from jutge import read\n\nn = read(int)\n\ndef factorial(n):\n\t\n\tif n == 1:\n\t\treturn n\n\t\t\n\telse:\n\t\treturn n*factorial(n-1)\n\t\n\n\n\n\n",
  "from jutge import read\n\nn = read(int)\n\ndef factorial(n):\n\tif n == 0:\n\t\treturn 1\n\t\n\tif n == 1:\n\t\treturn n\n\t\t\n\telse:\n\t\treturn n*factorial(n-1)\n\t\n\n\n\n\n",
  "from jutge import read\n\nn = read(int)\n\ndef factorial(n):\n\tif n == 0:\n\t\treturn 1\n\t\n\telif n == 1:\n\t\treturn n\n\t\t\n\telse:\n\t\treturn n*factorial(n-1)\n\t\n\n\n\n\n",
  "from jutge import read\n\ndef factorial(n):\n   if n == 1:\n       return n   #base case\n   else:\n       return n*factorial(n-1)   # recursiÃ³\n\nnum = read(int)\n\n# possibles casos \nif num == 0:\n   print(factorial(1))\nelse:\n   print(factorial(num))",
  "from jutge import read\n\nn = read(int)\n\ndef factorial(n):\n\twhile n is not None:\n\t\tif n == 0:\n\t\t\treturn 1\n\t\t\n\t\tif n == 1:\n\t\t\treturn n\n\t\t\n\t\telse:\n\t\t\treturn n*factorial(n-1)\n\t\n\t\n\t\n\n\n\n",
  "from jutge import read\n\ndef factorial(n):\n   if n == 1:\n       return n   #base case\n   else:\n       return n*factorial(n-1)   # recursiÃ³\n\nnum = read(int)\n\n# possibles casos \nif num == 0:\n   print(factorial(1))\nelse:\n   print(factorial(num))",
  "\ndef factorial(n):\n   if n == 1:\n       return n   #base case\n   else:\n       return n*factorial(n-1)   # recursiÃ³\n\n",
  "\ndef factorial(n):\n   if n == 1 or n== 0:\n       return 1   #base case\n   else:\n       return n*factorial(n-1)   # recursiÃ³\n\n",
  "from jutge import read\n\nn = read(int)\n\ndef factorial(n):\n\t\n\tif n == 0:\n\t\treturn 1\n\t\t\n\telse:\n\t\treturn n*factorial(n-1)\n\t\n\t\n\n\n\n\n",
  "#Recursion factorial\ndef rec_factorial(n):\n\tif n == 1 or n == 0:\n\t\tprint(1)\n\telse:\n\t\tprint(n*rec_factorial(n-1))\n",
  "#Recursion factorial\ndef factorial(n):\n\t'''\n\t>>> factorial(0)\n\t1\n\t>>> factorial(1)\n\t1\n\t>>factorial(2)\n\t2\n\t>>factorial(3)\n\t6\n\t>>> factorial(4)\n\t24\n\t'''\n\tif n == 1 or n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n*factorial(n-1)\n\nif __name__ == \"__main__\":\n\timport doctest\n\tdoctest.testmod(verbose=True)\n",
  "#include<bits/stdc++.h>\r\n#define fastio ios_base::sync_with_stdio(false);cin.tie(NULL)\r\n#define ull unsigned long long\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n\tif(n<2)return 1;\r\n\treturn factorial(n-1)*n;\r\n}\r\n\r\nint main()\r\n{\r\n\tfastio;\r\n\tint n, x, sum;\r\n\twhile(cin>>n)\r\n\t{\r\n\t\tsum=0;\r\n\t\tfor(int i=0; i<n-1; i++)\r\n\t\t{\r\n\t\t\tcin>>x;\r\n\t\t\tsum+=x;\r\n\t\t}\r\n\t\tcout<<((n*(n+1))/2)-sum<<\"\\n\";\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0)\r\n        return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int num;\r\n    cin >> num;\r\n    cout << \"Factorial of \" << num << \" is \" << factorial(num) << endl;\r\n}\r\n",
  "\n\n//package P12509_Factorial;\n\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        final Scanner sc = new Scanner(System.in);\n        while (sc.hasNextInt()) {\n            int n = sc.nextInt();\n            System.out.println(factorial(n));\n        }\n    }\n\n    public static int factorial(int n) {\n        if(n==0) {\n            return 1;\n        } else {\n            return n * factorial(n-1);\n        }\n    }\n}\n",
  "public static int factorial(int n) {\n    if(n==0) {\n        return 1;\n    } else {\n        return n * factorial(n-1);\n    }\n}\n",
  "\n\n//package P12509_Factorial;\n\n\npublic class Solution {\n\n    public static int factorial(int n) {\n        if (n == 0) {\n            return 1;\n        } else {\n            return n * factorial(n - 1);\n        }\n    }\n}\n",
  "\n\n//package P12509_Factorial;\n\n\nclass Solution {\n\n    public static int factorial(int n) {\n        if (n == 0) {\n            return 1;\n        } else {\n            return n * factorial(n - 1);\n        }\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    cout << factorial(12) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) {\n    return 1;\n  }\n  return n * factorial(n - 1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n)\n{\n    if (n == 0) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <vector>\n#include <string>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial(n-1);\n}\n\nint main() {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n    return 0;\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n}\r\n\t",
  "#include <iostream>\r\n#include <string>\r\n#include <math.h>\r\n#include <map>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n == 0){\r\n        return 1;\r\n    }else{\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\n\r\nint main (){\r\n    int fac;\r\n    cin >> fac;\r\n    int answer;\r\n    answer = factorial (fac);\r\n    cout << \"factorial (\" << fac << \") --> \" << answer <<endl;\r\n}\r\n",
  "#include <cmath>\r\n#include <iomanip>\r\n#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n  if (n > 1) {\r\n    return (n * factorial(n - 1));\r\n  } else\r\n    return 1;\r\n}\r\n",
  "#include <iostream>\n#include <string>\n#include <iomanip>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n  if (n >= 1) return n*factorial(n-1);\n  return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "\r\npublic class Main{\r\n\tpublic static void main(String[] args){\r\n\t\t\r\n\t}\r\n\tpublic static int factorial(int n){\r\n\t\tif (n==1){\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn factorial(n-1)*n;\r\n\t}\r\n}",
  "//recursividad factorial\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint n;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n > 0)\r\n        return factorial(n - 1) * n;\r\n    else\r\n        return 1;\r\n}\r\nint main()\r\n{\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n) {\r\n   if (n==0) return 1;\r\n   else return n*factorial(n-1);\r\n }\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0 or 1) {\n        return 1;\n    } else {\n        return n * factorial(n - 1)\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0 or 1) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0 or 1) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0 or n == 1) {\n        return 1;\n    } else {\n        return (n * factorial(n - 1));\n    }\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    int factorial = 1;\r\n    for (int i = 2; i < n + 1; i++) {\r\n        factorial = factorial * i;\r\n    }\r\n    return factorial;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n)\n{\n    if (n == 0)\n        return (1);\n    else\n        return (n * factorial(n - 1));\n}\n\nint main()\n{\n    int n;\n    while (cin >> n)\n        cout << factorial(n) << endl;\n}\n",
  "def recursive_factorial(a):\n    if (a <= 1): return 1;\n    return (a*recursive_factorial(a-1));\n\nx = int(input());\nprint(recursive_factorial(x));",
  "def factorial(a):\n    if (a <= 1): return 1;\n    return (a*recursive_factorial(a-1));",
  "def factorial(a):\n    if (a <= 1): return 1;\n    return (a*recursive_factorial(a-1));",
  "def factorial(a):\n    if (a <= 1):\n        return 1\n    return (a*recursive_factorial(a-1))",
  "def factorial(a):\n    if (a <= 1):\n        return 1\n    return (a*factorial(a-1))",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0)\r\n        return 1;\r\n    return factorial(n - 1) * n;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 1) {\n    return 1;\n} else {\n  return n * factorial (n - 1);\n}\n}\nint main() {\n  int a;\n  cin >> a;\n  cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) {\n    return 1;\n} else {\n  return n * factorial (n - 1);\n}\n}\nint main() {\n  int a;\n  cin >> a;\n  cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n  if (n==0) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n  int n;\r\n  while(cin>>n)\r\n  cout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  int f;\r\n  if (n==0) return 1;\r\n  else f=n*factorial(n-1);\r\n  return f;\r\n}\r\n\r\nint main(){\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0 or n == 1)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n < 2)\r\n        return 1;\r\n    n = n * factorial(n - 1);\r\n    return n;\r\n}\r\n\r\nint main()\r\n{\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n == 1 or n == 0) return 1;\r\n  return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n <= 1)\r\n        return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n",
  "// P12509\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0) // base step\r\n        return 1;\r\n    else\r\n        return n * (factorial(n - 1)); // inductive step\r\n}\r\n\r\nint main()\r\n{\r\n    cout << factorial(0) << endl;\r\n    cout << factorial(1) << endl;\r\n    cout << factorial(2) << endl;\r\n    cout << factorial(3) << endl;\r\n    cout << factorial(4) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n)\r\n{\r\n    if (n == 0 or n == 1)\r\n        return 1;\r\n\r\n    else\r\n        return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "\ndef factorial(n: int) -> int:\n    if (n == 0): return 1\n    return (n * factorial(n - 1))\n\nprint (factorial(3))\n\n",
  "\ndef factorial(n: int) -> int:\n    if (n == 0): return 1\n    return (n * factorial(n - 1))\n\nprint (factorial(3))\n\n",
  "\ndef factorial(n: int) -> int:\n    if (n == 0): return 1\n    return (n * factorial(n - 1))\n\nprint (factorial(3))\n\n",
  "\ndef factorial(n: int) -> int:\n    if (n == 0): return 1\n    return (n * factorial(n - 1))\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int fact = n;\n  if(n == 0) return 1;\n  else{\n    return fact *= factorial(n-1);\n  }\n}\n\nint main(){\n  int n;\n  cin >> n;\n\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0)\r\n        return 1;\r\n    else\r\n        return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n  int factorial = 1;\r\n  if (n == 0 or n == 1)\r\n  factorial = 1;\r\n  while (n > 1){\r\n    factorial = factorial * n;\r\n    n--;\r\n  }\r\n  return factorial;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n)\n{\n    if (n < 2)\n        return 1;\n    else\n        return (n * factorial(n - 1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    int f = 1;\n    for (int i = n; i > 0; --i)\n        f = f * i;\n    return f;\n}\n\nint main()\n{\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint min(int n, int c, int p)\n{\n    while (n > 1) {\n        c = c - (p - 1);\n        n = n - 1;\n    }\n    return c / p;\n    if (c < 0)\n        return 0;\n}\n\nint max(int n, int c, int p)\n{\n    return c / p;\n}\n\nint main()\n{\n    int n, c, p;\n    while (cin >> n >> c >> p) {\n        cout << min(n, c, p) << \" \" << max(n, c, p) << endl;\n    }\n}\n",
  "#include <cmath>\n#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0 or n == 1)\n        return 1;\n\n    n = n * factorial(n - 1);\n    return n;\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    int f;\n    if (n == 0)\n        return 1;\n    else\n        f = n * (factorial(n - 1));\n    return f;\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "\n//P79817 Powers / potencias\n#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0) {\n        return 1;\n    } else {\n        int a = 1;\n        for (n = n; n > 0; n--) {\n            a = a * n;\n        }\n        return a;\n    }\n}\n\n/*Private case:\n1 30\n975310246899999999991111111111*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1) {\n        return 1;\n    } else {\n        return (n * factorial(n - 1));\n    }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//Return n!. Precondition: 0<=n<=12.\r\nint factorial(int n){\r\n  if (n == 0) {\r\n    return 1;\r\n  }\r\n  return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    if (n == 1)\n        return 1;\n    else\n        return factorial(n - 1) * n;\n}\n\nint main()\n{\n    int number;\n    cin >> number;\n    cout << factorial(number) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int x){\r\n  if(x==0) return 1;\r\n  else {\r\n    return x*factorial(x-1);\r\n  }\r\n}\r\n\r\nint main(){\r\n  int x;\r\n  cin >> x;\r\n  cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 1)\n        return n;\n    else\n        return n * (factorial(n - 1));\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return n;\n    else\n        return n * (factorial(n - 1));\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * (factorial(n - 1));\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n = 0){\n\t\treturn 1;\n\t} else {\n\t\treturn n * factorial(n-1);\n\t}\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n <= 1){\n\t\treturn 1;\n\t} else {\n\t\treturn (n * factorial(n-1));\n\t}\n}\n\nint main(){\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    int f = 1;\r\n    for (int i = 2; i <= n; ++i) {\r\n        f = f * i;\r\n    }\r\n    return f;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    if (n == 0)\r\n        cout << 1 << endl;\r\n    else\r\n        cout << factorial(n - 1) * n << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if ((n == 0) or (n == 1)) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    int f = 1;\r\n    for (int i = 2; i <= n; ++i) {\r\n        f = i * f;\r\n    }\r\n    return f;\r\n}\r\n\r\nint factorialrecursiva(int n)\r\n{\r\n    if (n == 0) {\r\n        return 1;\r\n    } else {\r\n        return n * factorial(n - 1);\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return (n * factorial(n - 1));\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n)\r\n{\r\n    if (n == 0)\r\n        return 1;\r\n    else\r\n        return n * factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    for (int i = 0; i <= 6; i++) {\r\n        cout << factorial(i) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 1 or n == 0)\r\n        return 1;\r\n    else\r\n        return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    for (int i = 0; i <= 6; i++) {\r\n        cout << factorial(i) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n  if (n == 0) return 1;\r\n  else  return factorial(n-1);\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n  if (n == 0) return 1;\r\n  else  return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0 or n == 1) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1)\n        return 1;\n    return n * factorial(n - 1);\n}\nint main()\n{\n    cout << factorial(5) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n// Pre: 0 <= n <= 12\r\n// Post: returs n!\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial1(int n)\n    :\n\n    i = 2 while (n > i)\n{\n    n = n * i;\n    i = i + 1\n}\n}\n\nint factorial(int& n, int a)\n{\n\n    return n * factorial(n - 1, a);\n}\n\nint main()\n{\n\n    int n;\n    int a;\n    cin >> n;\n    factorial(n, a);\n\n    cout << a << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\n    if (n == 0) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0 or n == 1)\r\n        return 1;\r\n    else\r\n        return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\tif(n == 1) return 1;\n\telse return n * factorial(n-1);\n\n}\n\nint main()\n{\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\tif(n == 0) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main()\n{\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <bits/stdc++.h>\r\nint factorial(int n){\r\n\tif(n>0){\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\telse{\r\n\t\treturn 1;\r\n\t}\r\n}\r\nint main(){\r\n\tint n;\r\n\twhile(std::cin >> n){\r\n\t\tstd::cout << factorial(n);\r\n\t}\r\n}\r\n",
  "// Recursive factorial\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1; // End of factorial\n\treturn n*factorial(n-1); // Recursivity\n}\n\nint main() {\n    int n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n//DESC: FunciÃ³ que retorna el factorial d'un nombre.\n//PRE: Valor enter n\n//POST: Retorna el factorial del valor n.\nint factorial (int n){\n    int cont = 1;\n    int multi = 1;\n    while ( cont <= n ){\n\t    multi *= cont;\n\t    cont++;\n    }\n    return multi;\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n){\n\t\tcout << \"Factorial de \" << n << \": \" << factorial(n) << endl;\n\t}\n\treturn 0;\n}\n",
  "#include <iostream>\n\n\nint factorial (int n) {\n\n    if (n < 2) return 1;\n\n    return n*factorial(n-1);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n\n    return n*factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n\n    return n*factorial(n - 1);\n}\n\n\n// int main() {\n//     int x;\n//     while (cin >> x) {\n//         cout << factorial(x) << endl;\n//     }\n// }\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n) {\r\n \tint f;\r\n \tif (n <= 1) return 1;\r\n \tf = n * factorial(n-1);\r\n }\r\n \r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n) {\r\n \tint f;\r\n \tif (n <= 1) return 1;\r\n \tf = n * factorial(n-1);\r\n \treturn f;\r\n }\r\n \r\n",
  "// Recursive factorial\n// write a function that returns n!\n\n#include <iostream>\nusing namespace std;\n\n// pre: 0 â¤ n â¤ 12\n// post: returns n!\nint factorial(int n) {\n    // direct case\n    if (n == 0) return 1;\n    else {\n        int z = factorial(n - 1);\n        // magic: z = (n-1)!\n        return z*n;\n    }\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "// Recursive factorial\n// write a function that returns n!\n\n#include <iostream>\nusing namespace std;\n\n// pre: 0 â¤ n â¤ 12\n// post: returns n!\nint factorial(int n) {\n    // direct case\n    if (n == 0) return 1;\n    // magic: factorial(n-1) = (n-1)!\n    else return factorial(n - 1)*n;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int f = 1;\n    int i = 0;\n    while (i < n) {\n        i = i + 1;\n        f = f*i;\n    }\n    return f;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n   if (n==0) return 1;\n   else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n    \n}\n",
  "#include <iostream>\r\nusing namespace std; \r\n\r\nint factorial(int n){\r\n\t\r\n\tif(n==0) return 1; \r\n\t return n*factorial(n-1); \r\n\t\r\n\t\r\n\t\r\n\t\r\n}\r\n\r\n\r\n\r\nint main () {\r\n\t\r\n\tint n; \r\n\twhile (cin >> n) {\r\n\t\t\r\n\t\tcout<<factorial(n)<<endl;\r\n\t}\r\n\t\r\n}\r\n",
  "//write the factorial of a given number;\n//Precondition: the number must be a natural number between 0 and 12\n//including both\n//Postcondition: the output will be a natural number\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int number;\n    cin >> number;\n    cout << factorial(number) << endl;\n}\n",
  "//Write a function that returns n!. Solve this problem recursively.\n//precondition: 1 <= n <= 12\n//postcondition: n!\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n; // 0 <= n <= 12\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n == 1) return 1;\n    else factorial(n - 1);\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n",
  "#iunclude <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 1) return 1;\n    else return n * factorial(n - 1);\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else return n*factorial (n - 1);\n}\n\n// n = 5 --> n * factorial (n - 1) --> 5 * factorial (5 - 1) --> factorial (4) ... factorial (2) factorial (1)\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    else if (n == 0) return (1)\n    else return n*factorial (n - 1);\n}\n\n// n = 5 --> n * factorial (n - 1) --> 5 * factorial (5 - 1) --> factorial (4) ... factorial (2) factorial (1)\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial (n - 1);\n}\nvoid print (int n) {\n\tfor (int i = 0; i < n; ++i) {\n\tcout << \"*\" << endl;\n\t}\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    else if (n == 0) return (1);\n    else return n*factorial (n - 1);\n}\n\n// n = 5 --> n * factorial (n - 1) --> 5 * factorial (5 - 1) --> factorial (4) ... factorial (2) factorial (1)\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n    \n}\n\nint main () {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return (1);\n    else return n*factorial (n - 1);\n}\n\n// n = 5 --> n * factorial (n - 1) --> 5 * factorial (5 - 1) --> factorial (4) ... factorial (2) factorial (1)\n",
  "//recursive factorial\r\n//Write a function that returns n!.\r\n//Recursive code\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    //Base case\r\n    if (n <= 1) return 1;\r\n    //General case\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return factorial(n-1)*n;\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (0 == n) return 0;\n    if (n == 1) return 1;\n    return factorial(n-1)*n;\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (0 == n) return 1;\n    if (n == 1) return 1;\n    return factorial(n-1)*n;\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n ) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n/*\nint main(){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n*/\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    int fact=1;\n    \n    for(int i=1;i<=n;++i) {\n        fact*=i;\n    }\n    return fact;\n}\n\nint main() {\n    int n;\n    \n    while(cin>>n) {\n        cout<<factorial(n)<<endl;\n    }\n    \n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if ( n > 0) {\n        //factorial(n-1);\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n",
  "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std; \r\n\r\nint factorial(int n){\r\n\tif(n-1 == 0){\r\n\t\treturn 1; \r\n\t}else return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main(){\r\n\tint n; \r\n\tcin >> n; \r\n\tcout << factorial(n) << endl; \r\n\r\n}\r\n",
  "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std; \r\n\r\ndouble factorial(int n){\r\n\tdouble r = n-1;\r\n\tif(n == 0 or r == 0){\r\n\t\treturn 1; \r\n\t}else return n*factorial(r);\r\n}\r\n\r\n\r\nint main(){\r\n\tint n; \r\n\tcin >> n; \r\n\tcout << factorial(n) << endl; \r\n\r\n}\r\n",
  "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std; \r\n\r\nint factorial(int n){\r\n\tint r = n-1;\r\n\tif(n == 0 or r == 0){\r\n\t\treturn 1; \r\n\t}else return n*factorial(r);\r\n}\r\n\r\n\r\nint main(){\r\n\tint n; \r\n\tcin >> n; \r\n\tcout << factorial(n) << endl; \r\n\r\n}\r\n",
  "// Recursive factorial\n// write a function that returns n!\n\n#include <iostream>\nusing namespace std;\n\n// pre: 0 â¤ n â¤ 12\n// post: returns n!\nint factorial(int n) {\n    // direct case\n    if (n == 0) return 1;\n    // magic: factorial(n-1) = (n-1)!\n    else return factorial(n - 1)*n;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return factorial(n*(n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "//\n//  main.cpp\n//  pract\n//\n//  Created by Viktor Nechvile on 6/11/21.\n//\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n}\n\nint main() {\n    int n = 0;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "//\n//  main.cpp\n//  factorial function\n//\n//  Created by Viktor Nechvile on 27/11/2020.\n//\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main() {\n    int n = 0;\n    while(cin >> n) {\n    cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n",
  "int factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n   int res=0;\n   if(n==0) res=1;\n   else res=n*factorial(n-1);\n   return res;\n   }\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n    int factorial(int n){\n        if (n == 1) return n;\n        else return n*factorial(n-1);\n    }\n\n    int main() {\n        int x;\n        cin >> x;\n        cout << factorial(x) << endl;\n    }\n",
  "#include <iostream>\nusing namespace std;\n\n    int factorial(int n){\n        if (n == 0) return 1;\n        else return n*factorial(n-1);\n    }\n\n    int main() {\n        int x;\n        cin >> x;\n        cout << factorial(x) << endl;\n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f = 1;\n    int i = 0;\n    \n    while (i < n) {\n        ++i;\n        f *= i;\n    }\n    \n    return f;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\t\nint factorial(int n){\n\n\tint f = 1 , i = 0;\n\t\twhile ( i < n ) {\n\n\t\ti = i + 1 ;\n\t\tf = f * i ;\n\t\t}\n\treturn f ;\n\t}\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\t\nint factorial(int n){\n\n\tint f = 1 , i = 0;\n\t\twhile ( i < n ) {\n\n\t\ti = i + 1 ;\n\t\tf = f * i ;\n\t\t}\n\treturn f ;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main () {\n    \n    iny n; while (cin >> n) cout << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n//PRE: 0 <= n <= 12\n//POST: retorna !n\n\nint factorial(int n) {\n\tif (n == 0 or n == 1) return 1;\n\telse return n * factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main () {\n    \n    int n; \n    while (cin >> n) cout << factorial(n) << endl;\n    \n}\n",
  "int factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else return factorial(n-1)*n;\r\n}\r\nint main(){\r\n    \r\n}\r\n    ",
  "int factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main(){\r\n    \r\n}\r\n    ",
  "int factorial(int n) {\r\n    if (n == 1 or n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main(){\r\n    \r\n}\r\n    ",
  "// P12509   Recursive factorial\n// Created by arnxxau on 18/11/21.\n//\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n > 0) return n*factorial(n - 1);\n    return 1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "//\n// Created by raulg on 11/18/21.\n//\n\n/*\nA function that returns n!\n */\n\n#include <iostream>\n\nusing namespace std;\n\n// Precondition:\n//      0 <= n <= 12\n//\n// Postcondition:\n// \t    returns n!\nint factorial(int n) {\n    if (n > 0)\n        return n*factorial(n - 1);\n\n    return 1;\n}\n\n\nint main() {\n    int num;\n\n    while (cin >> num)\n        cout << factorial(num) << endl;\n}\n",
  "//write the factorial of a given number;\n//Precondition: the number must be a natural number between 0 and 12\n//including both\n//Postcondition: the output will be a natural number\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int number;\n    cin >> number;\n    cout << factorial(number) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1) return 1; \n    else return n*factorial(n-1);    \n}\n\nint main(){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n",
  "int factorial(int n) {\n    if (n < 2) return 1;\n    return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0 or n == 1) return 1;\n    else return n*factorial(n-1)\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int mult = 0;\n    if (n == 0) mult = 1;\n    else {\n        mult = n * factorial(n-1);\n    }\n    return mult;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\n\nint main(){\n    \n    int x;\n    while (cin >> x){\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n   if (n == 0) return 1;\n   else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: n >= 0\n//Post: numero de digitos de 'n'\n\nint number_of_digits(int n) {\n    int suma = 1;\n    if (n/10 <= 0) return suma;\n    else return suma + number_of_digits(n/10);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << number_of_digits(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: n >= 0\n//Post: numero de digitos de 'n'\n\nint number_of_digits(int n) {\n    int suma = 1;\n    if (n/10 <= 0) return suma;\n    else return suma + number_of_digits(n/10);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << number_of_digits(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n",
  "\n//factorial(recursiva)\n\nint factorial(int(x)) {\n   if (x == 0) return 1;\n   else return x*factorial(x-1);\n}\n",
  "\n//factorial(recursiva)\n\nint factorial(int x) {\n   if (x == 0) return 1;\n   else return x*factorial(x-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n);\n    cout << endl;\n}\n",
  "// Recursive factorial\n// A function that returns n!\n\n// Pre: 0 â¤ n â¤ 12\n// Post: Returns n!\nint factorial (int n) {\n    if (x == 0) return 1;\n    else return x*factorial(x - 1);\n}\n",
  "// Recursive factorial\n// A function that returns n!\n\n// Pre: 0 â¤ n â¤ 12\n// Post: Returns n!\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   fact = 1;\n    if (n > 0){\n       fact = fact*n;\n        n = n-1;\n       \n    } \n    else n = 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact = 1;\n    if (n > 0){\n       fact = fact*n;\n        n = n-1;\n    } \n    else n = 1;\n}^\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact = 1;\n    if (n > 0){\n       fact = fact*n;\n        n = n-1;\n    } \n    else fact *= 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact = 1;\n    if (n > 0){\n       fact = fact*n;\n        n = n-1;\n    } \n    else fact *= 1;\n    return;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact = 1;\n    if (n > 0){\n       fact = fact*n;\n        n = n-1;\n    } \n    else fact *= 1;\n    return fact;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact = 1;\n    while (n > 0){\n       fact = fact*n;\n        n = n-1;\n    } \n    else fact *= 1;\n    return fact;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact = 1;\n    while (n > 0){\n       fact = fact*n;\n        n = n-1;\n    } \n    if(n = 0) fact *= 1;\n    return fact;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact = 1;\n    while (n > 0){\n       fact = fact*n;\n        n = n-1;\n    } \n    if(n == 0) fact *= 1;\n    return fact;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: 0 <= n <= 12\n//Post: return the factorial of n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n    \nint main () {\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: 0 <= n <= 12\n//Post: return the factorial of n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n    \nint main() {\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\n",
  "\n#include <iostream>\nusing namespace std;\n\n/* Pre: Nos dan un numero n que es 0 <= n >= 12.\n * Post: Hay que sacar un numero natural.\n * Â¿QuÃ©?: factorial recursivode un numero natural.\n */\nint factorial(int n) {\n\t//caso base, bien n es 0 o 1\n\tint fact = 1;\n\tif (n > 1) fact = factorial (n - 1) * n;\n\treturn fact;\n}\n\n\nint main() {\n\tint x;\n\twhile (cin >> x) {\n\t\tif ((x >= 0) and (x <= 12))\n\t\tcout << factorial(x) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial_iteratiu(int n) {\n    int f = 1;\n    for (int i = 1; i <= n; ++i) f = f * i;\n    return f;\n}\n\nint main () {\n    int x;\n    cin >> x;\n\n    cout << factorial_iteratiu(x) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f = 1;\n    for (int i = 1; i <= n; ++i) f = f * i;\n    return f;\n}\n\nint main () {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n) {\r\n \tint f;\r\n \tif (n <= 1) return 1;\r\n \tf = n * factorial(n-1);\r\n \treturn f;\r\n }\r\n \r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0 or n == 1) return 1;\r\n\telse return n * factorial(n-1);\t\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact = 0;\n    if (n == 0) return 1;\n    else {\n        fact = n*factorial(n - 1);\n        return fact;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//recursive factorial\n//Pre: Assume 0â¤ n â¤ 12\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n-1);\n}\n",
  "   \n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return  n*factorial(n-1);\n    }\n    \n}\n",
  "//ncreasing numbers \n\n#include <iostream>\nusing namespace std;\n\nbool is_increasing(int n) {\n    if (n < 10) return true;\n    else if (n % 10 < (n / 10) % 10) return false;\n    return is_increasing(n / 10);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << (is_increasing(n) ? \"true\" : \"false\") << endl;\n}\n",
  "//Recursive factorial\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial (n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "//Recursive factorial\n\n#include <iostream> \nusing namespace std; \n\nint factorial(int n) {\n    \n    if (n == 0 or n == 1) return 1; \n    else {\n        \n        return n *  factorial (n - 1); \n    }\n}\n\nint main() {\n    \n    int n; \n    cin >> n; \n    \n    while (cin >> n) cout << factorial(n) << endl; \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    //Cas base\n    if (n <= 1) return 1;\n    \n    //Cas inductiu\n    return factorial(n - 1) * n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0){\n        return 1;\n    }\n    return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main(){\n\n}\n",
  "int factorial(int n){\n    if(n==0 or n==1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else {\n        return n*factorial(n - 1);\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int m;\n\n    cin >> m;\n\n    cout << factorial(m) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==1 or n==0) return 1;\r\n    int x=n;\r\n    x*=factorial(n-1);\r\n    return x;\r\n}",
  "int factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    //Basic case\n    if (n < 2) return 1;\n    //General case\n    else return n * factorial(n-1);\n    \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n// Pre: 0 <= n <= 12\r\n// Post: returs n!\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n - 1)*n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "//The function returns n!.\n//Precondition: Assume 0â¤ n â¤ 12.\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    //Precondiction: 0 <= n <= 12.\n    //Postcondition: returns n!\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int number;\n    cin >> number;\n    cout << factorial(number) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n > 1) return n *= factorial(n-1);\n    return 1;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "\r\n#include <cmath>\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0)\r\n        return 1;\r\n    else {\r\n        for (int i = n - 1; i >= 1; i--) {\r\n            n = n * i;\r\n        }\r\n        return n;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n    for (int i = 0; i <= 8; ++i) {\r\n        cout << factorial(i) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "from jutge import read\n\nn = read(int)\n\ndef factorial(n):\n\t\n\tif n < 2:\n\t\treturn 1\n\t\t\n\telse:\n\t\treturn n*factorial(n-1)\n\t\n\t\n\n\n\n\n",
  "def factorial(n):\n\t\n\tif n < 2:\n\t\treturn 1\n\t\t\n\telse:\n\t\treturn n*factorial(n-1)\n\t\n\t\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\r\n    if (n < 2) return 1;\r\n    else return n * factorial(n-1);\r\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0 or n == 1) return 1;\r\n\telse if (n > 1) n = n * factorial(n-1);\r\n\treturn n;\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {    \n    if (n > 0) {\n        return n * factorial (n - 1);\n    }\n    else return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        n = 1;\n    }\n    else {\n        n = n * factorial(n-1);\n    }\n\n    return n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n > 1) return factorial(n-1) * n;\n\telse return 1;\n}\nint main() {\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if (n == 0) return 1;\n    else {\n        return factorial(n-1)*n;\n    }\n\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) <<endl;\r\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n    for (int i = 1; i < n; ++i){\n        n *= i;\n    }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n    for (int i = 1; i < n; ++i){\n        n *= i;\n    }\n    return n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int f = 1;\n    int i = 0;\n    \n    while(i < n){\n        i = i + 1;\n        f = f*i;\n    }\n    return f;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n    \n    if (n == 0) return 1;\n    else return factorial (n-1) * n;\n    \n}\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\n//pre: Assume 0â¤ n â¤ 12.\n//post: returns n!.\nint factorial(int n) {\n    int result = 1;\n    //it is a treat all loop.\n    for (int i = n; i > 0; --i) {\n        result *= i;\n    }\n    return result;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial (n - 1);\n}\nvoid print (int n) {\n\tfor (int i = 0; i < n; ++i) {\n\tcout << \"*\" << endl;\n\t}\n}",
  "#include <iostream>\nusing namespace std;\n\nint expressio_prefixada() {\n        char val;\n        cin >> val;\n        if(val== '+') return expressio_prefixada() + expressio_prefixada();\n        else if(val== '-') return expressio_prefixada() - expressio_prefixada();\n        else if(val== '*') return expressio_prefixada() * expressio_prefixada();\n        else if(val >= '0' and val <= '9') return val - '0';\n}\n\nint main() {\n\n    cout >> expressio_prefixada() << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    int fact = n;\n    if(n != 1) n = factorial(n-1);\n    fact *= n;\n    return fact;\n}\n\nint main() {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    int fact = n;\n    if(n != 1 and n != 0) n = factorial(n-1);\n    fact *= n;\n    if(n == 0) fact = 1;\n    return fact;\n}\n\nint main() {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    int fact;\n    if(n <= 0) fact = 1;\n    else fact = factorial(n -1) * n;\n    return fact;\n}\n\nint main() {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "int factorial(int n) {\n    int fact;\n    if(n <= 0) fact = 1;\n    else fact = factorial(n -1) * n;\n    return fact;\n}\n",
  "int factorial(int n) {\n    if (n <= 0) return 1;\n    else return factorial(n - 1) * n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) {\n        return n*factorial(n-1);\n    }\n    else return 1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "//Recursive factorial\n#include <iostream>\nusing namespace std;\n\n//This function returns the factorial\n//of the given number\nint factorial(int n) { //0â¤ n â¤ 12.\n    if (n == 0) return n;\n    else return n * factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n\r\n}\r\n\r\nint main () {\r\n\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "//Recursive factorial\n#include <iostream>\nusing namespace std;\n\n//This function returns the factorial\n//of the given number\nint factorial(int n) { //0â¤ n â¤ 12.\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1); \r\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int res;\n    if (n == 0) {\n        res = 1;\n    }else res = n * factorial(n-1);\n    return res;\n}\n\nint main () {\n    int num;\n    cin >> num;\n    cout << factorial(num);\n    cout << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n==0 or n==1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n     if (n == 0) return 1;\n     return factorial(n-1)*n;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n    if (x == 0) return 1;\n    else return x*factorial(x-1);\n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f = 1;\n    if (n<=1) return f;\n    else {\n        f = n*factorial(n-1);\n        return f;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1) return n;\r\n\telse if (n == 0) return 1;\r\n\treturn n * factorial(n - 1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n\r\n    return n*factorial(n - 1);\r\n}",
  "// Recursive factorial\n\n//#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1; // End of factorial\n\treturn n*factorial(n-1); // Recursivity\n}\n\n/*\nint main() {\n    int n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return factorial(n-1) * n;\n}\nint main(){\n    int n;\n     cin >> n;\n     cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n\n    return n*factorial(n - 1);\n}\n\n\n// int main() {\n//     int x;\n//     while (cin >> x) {\n//         cout << factorial(x) << endl;\n//     }\n// }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int i = 1;\n    \n    while (n > 0) {\n        i *= n;\n        --n;\n    }\n    return i;\n    \n}\n\nint main() {\n    int n;\n    \n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int f = 1;\n    for (int i = 1; i<=n; ++i)\n        f *= i;\n    return f;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n   if (n==0) return 1;\n   else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n    \n}\n",
  "\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    return (factorial(n - 1)*n);\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n - 1)\n\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n \n}\n",
  "#include <iostream<\nusing namespace std;\n\nint factorial(int n) \n{\n    if (n == 0) return n;\n    return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) \n{\n    if (n == 0) return n;\n    return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) \n{\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    // Pre: int 0<=n<=12\n    // Post: return n!\n    // Base case: n == 0\n    if (n == 0) return 1;\n    // General case: n > 0\n    else return n*factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 ) return 1 ;\n     else  {\n    n = n *factorial( n- 1 ) ;\n     return n ;\n     }\n}\n\nint main() {\n    int x ;\n    cin >> x ;\n    cout << factorial( x ) << endl ;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int m;\n    if (n == 1) m = 1;\n    else m = factorial(n-1)*n;\n    return m;\n}\n\nint main() {\n\tint a;\n\twhile (cin >> a) {\n\t    cout << a << \"! = \" << factorial(a) << '.' << endl;\n\t}\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int m;\n    if (n == 0) m = 1;\n    else m = factorial(n-1)*n;\n    return m;\n}\n\nint main() {\n\tint a;\n\tcin >> a;\n\tcout << a << \"! = \" << factorial(a) << '.' << endl;\n}",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n if (n == 0) return 1;\n else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include<iostream>\n\nusing namespace std;\n\n//pre: Assume 0â¤ n â¤ 12.\n//post: returns n!.\nint factorial(int n) {\n    if (n <= 1) {\n        return 1;\n    } \n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tint r;\n\tif (n==0) r = 1;\n\telse r = n*factorial(n-1);\n\treturn r;\n\t\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// Pre:\n//  a natural number (n) so that 0 <= n <= 12\n//\n// Post:\n//  returns n!\n\nint factorial(int n) {\n    int result = 1;\n    if (n == 0 or n == 1) return result;\n    else {\n        while (n > 1) {\n            result *= n;\n            --n;\n        }\n        return result;\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return (n * factorial(n - 1));\n    \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    else return (n * factorial(n - 1));\n    \n}\n\n",
  "//Calculate the factorial\n//INPUT: An integer number\n//OUTPUT: The factorial of the integer, that it's another integer\n\n#include <iostream>\nusing namespace std;\n\n//Calculate the factorial recursively\n//Precondition: An integer bigger than 0 and smaller than 12\n//Postcodition: The facotrial of the integer, that it's a ingeter\n\nint factorial(int n) {\n\n\t//The facotrial of the number\n\tint factorial = 1;\n\n\tfor (int i = 1; i <= n; ++i) factorial *= i;\n\n\treturn factorial;\n}\n\nint main() {\n\n\tint n;\n\tcin >> n;\n\n\tcout << factorial(n) << endl;\n}",
  "\n#include<iostream>\nusing namespace std;\n\n// calculate factorial\n// Precond: 0 <= n <= 12\n// Postcond: factorial\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int number;\n    while (cin >> number) cout << factorial(number) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\nint main(){\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n\nint main () {\n    int x;\n    while (cin >> x) cout << factorial (x) << endl;\n}",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) {\n        return 1;\n    } else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int x;\n    while (cin >> x)\n        cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n<2) return 1; //multiplying n by 1 is a factorial of identity\n    else return n*factorial(n-1); \n    \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<2) return 1;\n    else return n*factorial;\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0){\n        return 1;\n        }\n    else{\n        return n*factorial(n - 1);\n    }\n    }\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n);\n    \n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n; \n    while(cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// Fucnio per calcular el factorial\nint factorial(int n) {\n    // Condicions del retorn \n    if (n<2) return 1;\n    else return n*factorial(n-1);  \n}\n// Fucio principal\nint main () {\n    int n;\n    while (cin >> n) cout << factorial (n);    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 0;\n    else if (n==1) return 0;\n    else return ((n*factorial(n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 0;\n    else if (n==1) return 0;\n    else return (n*factorial(n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int f;\n    if(n <= 1) f = 1;\n    else f = n*factorial(n-1);\n    return f;\n\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n    \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return (n*factorial(n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0) return 1;\n  else n=n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0) return 1;\n  else n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return (1);\n    else return n*factorial (n - 1);\n}\n\n// n = 5 --> n * factorial (n - 1) --> 5 * factorial (5 - 1) --> factorial (4) ... factorial (2) factorial (1)\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n *= factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << \"el factorial de \" << n << \" es \" << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    \r\n    int c = 1;\r\n    if (n == 0) return 1;\r\n    if (n == 1) return 1;\r\n    else {\r\n        for (int i = 1; i <= n; i++) c *= i;\r\n    }\r\n    return c;\r\n}\r\n\r\nint main () {\r\n    \r\n    int n;\r\n    \r\n    while (cin >> n) {    \r\n        factorial(n);\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n\t\r\n\t\r\n\r\n\t",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n        if (n > 1) return n*factorial(n-1);\n        else return 1;\n\n}\n\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) <<endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0) {\r\n        return n;\r\n    }\r\n    return n * factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0) {\r\n        return 1;\r\n    }\r\n    return n * factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nchar encoded(char c, int k){\n\n    int const MAYU = 'a'-'A';\n\n    int const Z = 'Z' - 'A';  // max = 25\n\n\n    int cod;\n\n    if (Z < k) cod = (k%Z);\n\n    else cod = k;\n\n\n    int real = cod -('z' - c);\n\n\n    return real - MAYU;\n\n\n\n}\n\n\n\n\n\nint main(){\n\n    int k;\n\n    while (cin>>k){\n\n        char c;\n        cin>> c;\n        while (c != '.'){\n            if (('a'<= c) and (c <= 'z'))cout<< encoded(c,k);\n            else cout<<' ';\n            cin>>c;\n        }\n\n        cout<<endl;\n    }\n\n\n\n}\n",
  "#include <iostream>\nusing namespaces std;\n\nint factorial(int n){\n\n    if (n == 0 or n == 1) return 1;\n\n    else return (n*(factorial(n-1));\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if (n == 0 or n == 1) return 1;\n\n    else return (n*(factorial(n-1));\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if (n == 0 or n == 1) return 1;\n\n    return (n*(factorial(n-1));\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if (n == 0 or n == 1) return 1;\n\n    return n*factorial(n-1);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n * factorial (n - 1);\n}\n\nint main(){\n    int x;\n   while (cin >> x) cout << factorial (x) <<endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n > 1){\r\n        return n * factorial(n-1);\r\n    }\r\n    else return 1;\r\n}\r\n\r\nint main() {\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    if (n == 1) return 1;\r\n    return factorial(n-1) + n;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }   \r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    if (n == 1) return 1;\r\n    return factorial(n-1) * n;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }   \r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return factorial(n-1) * n;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 0) return 1;\r\n    else {\r\n        return factorial(n-1)*n;\r\n    }\r\n}\r\n\r\n\r\nint main()  {\r\n   int n;\r\n   cin >> n;\r\n   cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "\n\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    int vec = 1;\n    for (int i = 1; i <= n; ++i) vec *= i;\n    return vec;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}",
  "#include<iostream>\nusing namespace std;\n\n//pre: n >= 0\n//post: n factorial\nint factorial(int n) {\n    int fact;\n    //base step: n = 0\n    if (n == 0) fact = 1;\n    //magic step: assume it works for (n-1)\n    else fact = n*factorial(n-1);\n    return fact;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    int rec_fact = factorial(n);\n    cout << rec_fact << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n == 0) return 1;\r\n    else{\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\nint main(){\r\n    int x;\r\n    while(cin >> x){\r\n        cout << factorial(x) << endl;\r\n    }\r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 1)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n = 5;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n = 5;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) {\n        return 1;\n    } else {\n\n       return n * factorial(n - 1);\n    }\n\n}\nint main() {\n\n    int n;\n    while (cin >> n) {\n\n        cout << \"factorial(\" << n << ')' << 'â' << factorial(n) << endl;\n\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) {\n        return 1;\n    } else {\n\n       return n * factorial(n - 1);\n    }\n\n}\nint main() {\n\n    int n;\n    while (cin >> n) {\n\n        cout << \"factorial(\" << n << ')' << \"â\" << factorial(n) << endl;\n\n    }\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nvoid read_rational(int& num, int& den) {\n\twhile (num % 2 == 0 and den % 2 == 0) {\n\tnum /= 2;\n\tden /= 2;\n\t}\n\twhile (num % 3 == 0 and den % 3 == 0) {\n\tnum /= 3;\n\tden /= 3;\n\t}\n\twhile (num % 5 == 0 and den % 5 == 0) {\n\tnum /= 5;\n\tden /= 5;\n\t}\n\twhile (num % 7 == 0 and den % 7 == 0) {\n\tnum /= 7;\n\tden /= 7;\n\t}\n\twhile (num % 11 == 0 and den % 11 == 0) {\n\tnum /= 11;\n\tden /= 11;\n\t}\n\twhile (num % 13 == 0 and den % 13 == 0) {\n\tnum /= 13;\n\tden /= 13;\n\t}\n\twhile (num % 17 == 0 and den % 17 == 0) {\n\tnum /= 17;\n\tden /= 17;\n\t}\n\twhile (num % 19 == 0 and den % 19 == 0) {\n\tnum /= 19;\n\tden /= 19;\n\t}\n\twhile (num % 23 == 0 and den % 23 == 0) {\n\tnum /= 23;\n\tden /= 23;\n\t}\n\twhile (num % 29 == 0 and den % 29 == 0) {\n\tnum /= 29;\n\tden /= 29;\n\t}\n\twhile (num % 31 == 0 and den % 31 == 0) {\n\tnum /= 31;\n\tden /= 31;\n\t}\n\twhile (num % 37 == 0 and den % 37 == 0) {\n\tnum /= 37;\n\tden /= 37;\n\t}\n\twhile (num % 41 == 0 and den % 41 == 0) {\n\tnum /= 41;\n\tden /= 41;\n\t}\n\twhile (num % 43 == 0 and den % 43 == 0) {\n\tnum /= 43;\n\tden /= 43;\n\t}\n\twhile (num % 47 == 0 and den % 47 == 0) {\n\tnum /= 47;\n\tden /= 47;\n\t}\n}\nint main() {\n\tint num, den;\n\tcin >> num >> den;\n\tread_rational(num,den);\n\tcout << num << \" \" << den << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nvoid read_rational(int& num, int& den) {\n\twhile (num % 2 == 0 and den % 2 == 0) {\n\tnum /= 2;\n\tden /= 2;\n\t}\n\twhile (num % 3 == 0 and den % 3 == 0) {\n\tnum /= 3;\n\tden /= 3;\n\t}\n\twhile (num % 5 == 0 and den % 5 == 0) {\n\tnum /= 5;\n\tden /= 5;\n\t}\n\twhile (num % 7 == 0 and den % 7 == 0) {\n\tnum /= 7;\n\tden /= 7;\n\t}\n\twhile (num % 11 == 0 and den % 11 == 0) {\n\tnum /= 11;\n\tden /= 11;\n\t}\n\twhile (num % 13 == 0 and den % 13 == 0) {\n\tnum /= 13;\n\tden /= 13;\n\t}\n\twhile (num % 17 == 0 and den % 17 == 0) {\n\tnum /= 17;\n\tden /= 17;\n\t}\n\twhile (num % 19 == 0 and den % 19 == 0) {\n\tnum /= 19;\n\tden /= 19;\n\t}\n\twhile (num % 23 == 0 and den % 23 == 0) {\n\tnum /= 23;\n\tden /= 23;\n\t}\n\twhile (num % 29 == 0 and den % 29 == 0) {\n\tnum /= 29;\n\tden /= 29;\n\t}\n\twhile (num % 31 == 0 and den % 31 == 0) {\n\tnum /= 31;\n\tden /= 31;\n\t}\n\twhile (num % 37 == 0 and den % 37 == 0) {\n\tnum /= 37;\n\tden /= 37;\n\t}\n\twhile (num % 41 == 0 and den % 41 == 0) {\n\tnum /= 41;\n\tden /= 41;\n\t}\n\twhile (num % 43 == 0 and den % 43 == 0) {\n\tnum /= 43;\n\tden /= 43;\n\t}\n\twhile (num % 47 == 0 and den % 47 == 0) {\n\tnum /= 47;\n\tden /= 47;\n\t}\n}\nint main() {\n\tint num, den;\n\tcin >> num >> den;\n\tread_rational(num,den);\n\tcout << num << \" \" << den << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nvoid read_rational(int& num, int& den) {\n\twhile (num % 2 == 0 and den % 2 == 0) {\n\tnum /= 2;\n\tden /= 2;\n\t}\n\twhile (num % 3 == 0 and den % 3 == 0) {\n\tnum /= 3;\n\tden /= 3;\n\t}\n\twhile (num % 5 == 0 and den % 5 == 0) {\n\tnum /= 5;\n\tden /= 5;\n\t}\n\twhile (num % 7 == 0 and den % 7 == 0) {\n\tnum /= 7;\n\tden /= 7;\n\t}\n\twhile (num % 11 == 0 and den % 11 == 0) {\n\tnum /= 11;\n\tden /= 11;\n\t}\n\twhile (num % 13 == 0 and den % 13 == 0) {\n\tnum /= 13;\n\tden /= 13;\n\t}\n\twhile (num % 17 == 0 and den % 17 == 0) {\n\tnum /= 17;\n\tden /= 17;\n\t}\n\twhile (num % 19 == 0 and den % 19 == 0) {\n\tnum /= 19;\n\tden /= 19;\n\t}\n\twhile (num % 23 == 0 and den % 23 == 0) {\n\tnum /= 23;\n\tden /= 23;\n\t}\n\twhile (num % 29 == 0 and den % 29 == 0) {\n\tnum /= 29;\n\tden /= 29;\n\t}\n\twhile (num % 31 == 0 and den % 31 == 0) {\n\tnum /= 31;\n\tden /= 31;\n\t}\n\twhile (num % 37 == 0 and den % 37 == 0) {\n\tnum /= 37;\n\tden /= 37;\n\t}\n\twhile (num % 41 == 0 and den % 41 == 0) {\n\tnum /= 41;\n\tden /= 41;\n\t}\n\twhile (num % 43 == 0 and den % 43 == 0) {\n\tnum /= 43;\n\tden /= 43;\n\t}\n\twhile (num % 47 == 0 and den % 47 == 0) {\n\tnum /= 47;\n\tden /= 47;\n\t}\n}\nint main() {\n\tint num, den;\n\tcin >> num >> den;\n\tread_rational(num,den);\n\tcout << num << \" \" << den << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n) {\t\n\tif (n <= 1) {\n\t\treturn 1;\n\t}\n\telse {\n\t\tint i = 1;\n\t\tint c = 1;\n\t\twhile (i <= n) {\n\t\t\tc = c * i;\n\t\t\t++i;\n\t\t}\n\treturn c;\n\t}\n}\t\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n - 1);\n}\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\nint factorial (int n) {\n int f = 1;\n int i = 1;\n \n while (i<=n) {\n    f = f * i;\n    ++i;\n}\nreturn f;\n}\n",
  "#include<iostream>\nusing namespace std;\nint factorial (int n) {\nif (n == 1 or n==0) return 1;\nreturn n * factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 1 or n == 0) return 1;\n\telse return (n*factorial(n-1));\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\treturn n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1)\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include<iostream>\r\n#include<cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif(n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n\r\n}\r\n\r\nint main(){\r\n\t\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n);\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int c;\n    while (cin >> c)\n        cout << factorial (c) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//Pre: Assume 0â¤ n â¤ 12.> 0\r\n//Post: retrns n!\r\nint factorial(int n){\r\n\tif(n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\nint main(){\r\n\tint n;\r\n    cin >> n;\r\n   cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\n\tif (n < 2) return 1;\n\telse return n*factorial(n-1); \n}\nint main() {\n\n\tint x;\n\twhile (cin >> x) {\n\n\t\tcout << factorial(x) << endl;\n\t}\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    \r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = n*factorial(n - 1);\n        return f;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}",
  "// P12509 - Recursive factorial - Anna Vincken\n// S001 //..\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int aux = n;\n    int fax = 1;\n    for (int i = 0; i < n - 1; ++i){\n        fax = fax*(aux);\n        --aux;\n    }\n    return fax;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "//\r\n// Created by alexc on 29/11/2021.\r\n//\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return factorial(n-1)*n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\n\r\nint main () {\r\n    int x;\r\n    cin >> x;\r\n    factorial(x);\r\n    cout << x << endl;\r\n}",
  "//write a function that returns n!\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n//calcula factorial\r\n//Precon: un numero 0 <= n <= 12\r\n//postcon: un numero natural\r\nint factorial(int n) {\r\n\t//cas base n=0; factorial = 1\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "//a function that returns n!\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int result = 0;\r\n    if (n <= 1) result = 1;\r\n    else result = n * factorial(n-1);\r\n    return result;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n/*\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n <= 1){\r\n    return 1;\r\n  } else {\r\n    return (n * factorial(n-1));\r\n  }\r\n}\r\n\r\nint main() {\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n)\n{\n\tif (n==0) return 1;\n\treturn n* factorial (n-1);\n}\n\nint main ()\n{\n\tint n;\n\twhile(cin>>n)\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n         if (n == 0) return 1;\n         return n * factorial (n-1);\n}\n\nint main()\n{\n       int n;\n       while (cin >> n)\n            cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n){\n \t\n \tif ( n == 0) return 1; \n \treturn n * factorial(n-1);\n \t\n }\n \n \n int main() {\n \t\n \tint n; \n \twhile (cin >> n ) {\n \t\tcout << factorial(n) << endl; \n \t}\n \t\n }\n",
  "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\r\n\treturn n * factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n\t\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    int b=n-1;\r\n    if(b==1){\r\n        b*=n;\r\n    }else{\r\n        b=n*factorial(b);\r\n    }\r\n    return b;\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n==0 or n==1){\r\n        return 1;\r\n    }\r\n    int b=n-1;\r\n    if(b==1){\r\n        b*=n;\r\n    }else{\r\n        b=n*factorial(b);\r\n    }\r\n    return b;\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;  \n    cout << factorial(n) << endl;\n    \n    \n}\n\n\n",
  "// Recursive factorial\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact=1;\n    for (int i = 1; i <= n; ++i) {\n            fact = fact * i;\n        }\n    return fact;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    int factori = factorial(n);\n    cout << factori << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n <= 1) return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    cout << factorial(3);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int x = 1;\n    for (int i = 1; i <= n; ++i) {\n        x *= i;\n    }\n    return x;\n\n}\n\nint main() {\n    int num;\n    while (cin >> num) {\n        cout << factorial(num) << endl;\n    }\n\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\t\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\r\n\tcout << factorial(n) << endl;\r\n\r\n}",
  "#include <iostream>\nusing namespace std ;\n\nint factorial ( int n ) {\n\tif ( n == 1 or n == 0 ) return 1 ;\n\telse {\n\t\treturn ( n * factorial(n-1))\n\t}\n}\n\nint main () {\n\tint n ;\n\twhile ( cin >> n ) {\n\t\tfactorial (n) ;\n\t}\n}",
  "#include <iostream>\nusing namespace std ;\n\nint factorial ( int n ) {\n\tif ( n == 1 or n == 0 ) return 1 ;\n\telse {\n\t\treturn ( n * factorial(n-1)) ;\n\t}\n}\n\nint main () {\n\tint n ;\n\twhile ( cin >> n ) {\n\t\tcout << factorial (n) << endl ;\n\t}\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else{\n        return n * factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial (n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    n=n*factorial(n-1);\n    return n;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1 or n == 0) {\r\n\t\treturn 1;\r\n\t} else {\r\n\t\treturn factorial(n - 1) * n;\r\n\t}\r\n\r\n}\r\n\r\nint main() {\r\n\tint a;\r\n\tcin >> a;\r\n\tcout << factorial(a) << endl;\r\n}\r\n\r\n\r\n",
  "#include <iostream>\r\n#include <string>\r\n#include <sstream>\r\n#include <math.h>\r\nusing namespace std;\r\nint factorial(int n) {\r\nif (n==0 or n==1){\r\n\treturn 1;\r\n}\r\nelse{\r\nint factorial=1;\r\nfor (int i=1;i<=n;++i){\r\n\tfactorial=factorial*i;\r\n}\r\nreturn factorial;\r\n}\r\n}\r\nint main (){\r\nint n;\r\ncin >>n;\r\ncout << factorial(n) << endl;\r\n\t\r\n}\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "//Recursive factorial\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact;\n    if (n <= 1) return 1;\n    else return (n * factorial(n-1));\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n",
  "//Recursive factorial\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return (n * factorial(n-1));\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}",
  "#include <iostream>\n\nusing namespace std;\n\n\n\nint factorial(int n) {\n\n\tif (n <= 1) return 1;\n\n\telse return n * factorial(n-1);\n\n}\n\n\n\nint main() {\n\n\tint x;\n\n\tcin >> x;\n\n\tcout << factorial(x) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n    \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    for (int i = 1; i < n; ++i) {\n        n += i;\n    }\n    return n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        factorial(n);\n    }\n    \n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    for (int i = 1; i < n; ++i) {\n        n += i;\n    }\n    if (n == 0) return 1;\n    else return n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        factorial(n);\n    }\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) {\n        return 1;\n    } else {\n        return n * factorial(n-1);\n    }\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) {\n        return 1;\n    } else {\n        return n * factorial(n-1);\n    }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) n *= factorial(n-1);\n    else return 1;\n    return n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        factorial(n);\n    }\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1 or n > 12) {\n        return 1;\n    } else {\n        return n * factorial(n-1);\n    }\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) {\n        return 1;\n    } else {\n        return n * factorial(n-1);\n    }\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n==0){\n        return 1;\n    }\n    n *= factorial(n-1);Â´\n    return n;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n==0){\n        return 1;\n    }\n    n *= factorial(n-1);\n    return n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n == 0 or n == 1) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n    \n   \n    \n}\n\nint main(){\n    int n; cin >> n;\n    cout << factorial (n)<< endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int sum = 1;\n    if (n == 0) {\n        sum = 1;\n    }\n    else {\n        factorial(n-1);\n        sum = n*factorial(n-1);\n    }\n    return sum;\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact;\n    if (n <= 1) return 1;\n    fact = n*factorial(n - 1);\n    return fact;\n    \n}\n\n\nint main() {\n    int n = 0;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n <= 1 )\n        return 1;\n    else\n        return n * factorial(n-1);\n}\n\n\nint main() {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0 or n == 1) return 1;\r\n\telse {\r\n\t\treturn n * factorial (n-1);\r\n\t}\r\n}\r\n\r\nint main () {\r\n\tint x;\r\n\twhile (cin >> x) {\r\n\t\tcout << factorial(x) << endl;\r\n\t} \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int result = 1;\n    if (n < 2) return result;\n    else{\n        result = result * n;\n        factorial (--n);\n    }\n    return result;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return factorial(n-1) * n;\n}\nint main (){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n - 1) * n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n    \n",
  "//input: read a integer number n\n//output: print the factorial number of n\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) { // recursive solution\n// Pre: n >= 0\n// Post: returns n!\n if (n == 0) return 1;\n else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n\r\n    return n*factorial(n - 1);\r\n}\r\n\r\n\r\n// int main() {\r\n//     int x;\r\n//     while (cin >> x) {\r\n//         cout << factorial(x) << endl;\r\n//     }\r\n// }\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n - 1) * n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main (){\n    int n;\n    cin>> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include<iostream>\n//pre n>=0\n//post retorna n!\nusing namespace std;\nint factorial(int n){\n    if(n==0)return 1;\n    else return n*factorial(n-1);\n\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if(n==0) {\n        n = 1;\n    }\n    else {\n        n = n*factorial(n-1);\n    }\n    return n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) n = 1;\n    else n = n * factorial (n - 1);\n    return n;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial (x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 1 or n == 0) return 1;\n\telse if (n>1) return n*factorial(n-1);\n\treturn 1;\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n){\n\t\tcout <<factorial(n)<< endl;\n\t}\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) {return 1;}\n    else return {n*factorial(n-1);}\n}\n\n}\n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) {return 1;}\n    else {return n*factorial(n-1);}\n}\n\n}\n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) {return 1;}\n    else {return n*factorial(n-1);}\n}\n\n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) {\n        return n;\n    }\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) {\n        return 1;\n    }\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main () {\n    int x;\n    cin >> x;\n    \n    cout << factorial(x) << endl;\n    \n}\n",
  "//Write a function that returns n!. Solve this problem recursively.\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0)\n        return n*factorial(n - 1);\n\n    return 1;\n}\n\nint main() {\n    int num;\n\n    while (cin >> num)\n        cout << factorial(num) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factiorial (int n){\r\n\tif(n == 0) return 1;\r\n\telse return n*(n-1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factiorial (int n){\r\n\tif(n == 0) return 1;\r\n\telse return n*(n-1);\r\n}\r\nint main() {\r\n\t\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif(n == 0) return 1;\r\n\telse return n*(n-1);\r\n}\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x);\r\n\t\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n = 0) return 1;\n    else n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif ( n <= 1) return 1;\r\n\telse return (n*factorial(n-1));\r\n}\r\n\r\n\r\nint main() {\r\n\tint x;\r\n\twhile (cin >> x){\r\n\t\tcout << factorial(x) << endl;\r\n\t}\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namepsace std;\nint factorial(int n) {\n    if (n < 1) return 1;\n    else n*factorial(n - 1);\n}\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n < 1) return 1;\n    else n*factorial(n - 1);\n}\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n < 1) return 1;\n    else return n*factorial(n - 1);\n}\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\telse {\n\t\tn=1;\n\t\tfor (int i=1;i>=n;++i) {\n\t\t\tn = n * i;\n\t\t}\n\t\treturn n;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\telse {\n\t\tint m=1;\n\t\tfor (int i=1;i>=n;++i) {\n\t\t\tm = m * i;\n\t\t}\n\t\treturn m;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\telse {\n\t\tint m=1;\n\t\tfor (int i=1;i<=n;++i) {\n\t\t\tm = m * i;\n\t\t}\n\t\treturn m;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n\n    return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(--n);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if (n == 0) {\n        return 1;\n    } else {\n        return n * factorial(n-1);\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "//Recursive factorial\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n <= 1){\r\n    return 1;\r\n  } else {\r\n    return (n * factorial(n-1));\r\n  }\r\n}\r\n\r\nint main() {\r\n}",
  "#include <iostream>\nusing namespace std;\n\n// Pre: nÃºmero entre 0 <= n <= 12\n// Post: n!\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n    if (x == 0) return 1;\n    else return x*factorial(x-1);\n}\n\nint main () {\n    int x;\n    while(cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int z = 1;\n    for (int i = 1; i <= n; ++i) {\n        z = z * i;\n    }\n    return z;\n}\n        \n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\nint factorial(int n){\n    if (n < 2) return 1;\n    else return n*factorial(n - 1);\n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n);\n}   \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    for (int i = 1; i <= n; ++i) {\n        int sum = 1;\n        sum *= i;\n    }\n    return sum;\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n == 0 ) return 1;\n    else return n*factorial(n - 1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int sum = 1;\n    for (int i = 1; i <= n; ++i) {\n        sum *= i;\n    }\n    return sum;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n <= 1) {\r\n    return 1;\r\n  } \r\n  else {\r\n    return (n * factorial(n - 1));\r\n  }\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n\n    return n*factorial(n - 1);\n}\n\n\n// int main() {\n//     int x;\n//     while (cin >> x) {\n//         cout << factorial(x) << endl;\n//     }\n// }\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    else return n*factorial(n -1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0)\n        return n*factorial(n - 1);\n\n    return 1;\n}\n\n\nint main() {\n    int num;\n\n    while (cin >> num)\n        cout << factorial(num) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "int factorial (int n){\r\nif (n==0) return 1;\r\nelse return n*factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int sum = 1;\n    if (n < 2) return sum;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n\tint k = 1;\r\n\tfor (int i = 1; i <= n; i++)\r\n\t{\r\n\t\tk *= i;\r\n\t}\r\n\treturn k;\r\n}\r\n\r\n/*int main() {\r\n\tint n;\r\n\twhile(cin >> n)\r\n\t{\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}*/",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    while(cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\n//pre: 0 <= n <= 12\r\n//post: returns the factorial of n\r\nint factorial(int n){\r\n    if (n == 0 or n == 1) return 1;\r\n    else {\r\n        int f = factorial(n-1);\r\n        // f es el factorial de n-1\r\n        return f*n;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    \n    int number;\n    cin >> number;\n    cout << factorial(number) << endl;\n    \n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "int factorial(int n){\r\n    if(n <= 1) return 1;\r\n    else return (n * factorial( n -1));\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main()\n{\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n\n    return 0;\n}\n\nint factorial(int n)\n{\n    if(n > 1)\n        return n * factorial(n - 1);\n    else\n        return 1;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    \r\n    cin >> n;\r\n    \r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\treturn n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0 or n == 1) return 1;\r\n\treturn n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\n\tif (n == 0)\n\t{\n\t\treturn 1;\n\t}\n\n\telse\n\t{\n\t\treturn n*factorial(n-1);\n\t}\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n\n    return n*factorial(n - 1);\n}\n\n\nint main() {\n     int x;\n     while (cin >> x) {\n         cout << factorial(x) << endl;\n }\n }\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n <= 1){\r\n    return 1;\r\n  } else {\r\n    return (n * factorial(n-1));\r\n  }\r\n}\r\n\r\nint main() {\r\n}",
  "//This function returns a factorial of a number\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int a) {\n    \n    int f = 1;\n    for (int i = 1; i <= a; ++i) {\n        \n        f *= i;\n        \n    }\n    return f;\n    \n}\n\nint main() {\n    \n    int a;\n    while (cin >> a) {\n        \n        cout << factorial(a) << endl;\n        \n    }\n    \n}\n",
  "from jutge import read\r\nn = read(int)\r\ndef factorial(n):\r\n    if n == 1:\r\n        return n\r\n    else: \r\n        fact = n*(factorial(n-1))\r\n        return fact\r\n",
  "from jutge import read\r\nn = read(int)\r\ndef factorial(n):\r\n    if n == 1: \r\n        return n\r\n    elif n == 0: \r\n        return 1\r\n    else: \r\n        return(n*(factorial(n-1)))",
  "from jutge import read\r\nn = read(int)\r\ndef factorial(n):\r\n    if n == 1: \r\n        return n\r\n    elif n == 0: \r\n        return 1\r\n    else: \r\n        return(n*(factorial(n-1)))\r\n\r\nwhile n is not None:\r\n  print(factorial(n))\r\n  n = read(int)",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n\tif (n == 0) return 1;\n\treturn n * factorial (n-1);\n}\n\nint main(){\n\n\tint n;\n\twhile(cin >> n)\n\t\tcout << factorial(n) << endl;\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\t\n\tif (n == 0) return 1;\n\treturn n * factorial(n-1);\n}\n\nint main() {\n//Pre:\n//Post:\n\tint n;\n\twhile (cin >> n) {\n\t//Inv:\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std ;\n\nint factorial ( int n ){\n\tif ( n==0) return 1 ; \n\treturn n * factorial ( n-1) ; \n}\n\n\n\nint main  ()\n{\n\tint n ;\n\twhile ( cin >> n ){\n\t\tcout << factorial ( n ) << endl ; \n\t}\n\n\n\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\n\tif (n == 0) return 1;\n\treturn n * factorial (n-1);\n}\n\nint main(){\n\n\tint n;\n\twhile (cin >> n)\n\t\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n)\n{\n\tif( n == 0) return 1;\n\treturn n*factorial(n-1);\n\n}\n\nint main(){\n\n\tint n;\n\twhile(cin>>n){\n\t\tcout<<factorial(n) <<endl;\n\t}\n}\t\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial (int n)\n{\n\n\tif (n == 0) return 1;\n\treturn n * factorial(n-1);\n}\n\nint main(){\n\n\tint n;\n\twhile (cin >> n)\n\t\tcout << factorial(n) << endl;\n\n\t\n\n\n\n}\n",
  "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint factorial(int a){\r\n  if(a <= 1){\r\n      return 1;\r\n  }\r\n  else {\r\n      return factorial(a-1) * a;\r\n  }\r\n}\r\n\r\nint main(){\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a) << '\\n';\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0) {\r\n        return 1;\r\n    } else\r\n        return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n==0 or n==1) return 1;\r\nelse if (n==2) return 2;\r\nelse return n * factorial(n-1);\r\n}\r\n\r\nint main (){\r\nint n;\r\ncin >> n;\r\ncout << factorial(n) << endl;\r\n}\r\n",
  "// P12509: recursive factorial\n// Key: how does factorial work, use of recursion\n\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n//     multiplying n by 1 is a factorial of identity\n    if (n<2) return 1;\n    else return n*factorial(n-1)\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "// P12509: recursive factorial\n// Key: how does factorial work, use of recursion\n\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n//     multiplying n by 1 is a factorial of identity\n    if (n<2) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\tint res;\r\n\tif(n==0) return 1;\r\n\telse res= n*factorial(n-1);\r\n\treturn res;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse {\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n}\r\n\r\n\r\nint main(){\r\n\t\r\n\tcout << factorial (6) << endl;\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint facotrial(int n) {\n    if (n == 0) return 1;\n    else return n * facotrial(n-1);\n}\n\nint main() {\n    int n;\n    while(cin >> n) {\n        cout << facotrial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return n*factorial(n - 1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "//recursive factorial\n\n#include <iostream>\nusing namespace std; \n\nint factorial (int n) {\n    if (n == 0 or n == 1) return 1; \n    return n * factorial (n - 1); \n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl; \n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int aux = 1;\n    for (int i = 1; i<=n; ++i) {\n        aux = aux*i;\n    }\n    if (n==0) return 1;\n    return aux;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n    \n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n){\n \tint res = 1;\n \tif (n > 0){\n \t\tres = n * factorial(n-1);\n \t}\n \treturn res;\n }\n\n int main () {\n \tint x, y = 1;\n \tcin >> x;\n \ty = factorial(x);\n \tcout << y << endl;\n\n }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\nint aux;\n  if(n == 0) aux = 1;\n  else aux = n*factorial(n-1);\n  return aux;\n  \n}\nint main() {\n\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\nreturn 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n==0) n=1;\n\telse {\n\t\tn=n*factorial(n-1);\n\t}\n\treturn n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int t = 0;\n    if(n == 0) return 1;\n    else {\n    t += n * factorial(n-1);\n    return t;\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "from easyinput import read\n\ndef factorial(n):\n    if(n==0):\n        return 1\n    if(n==1):\n        return n\n    else:\n        return n*factorial(n-1)\n        \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint s = 0;\n\tif (n == 0) return 0;\n\tif (n == 1) return 1;\n\ts = n*factorial(n-1);\n\treturn s;\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint s = 0;\n\tif (n == 0) return 0;\n\tif (n == 1) return 1;\n\ts = n*factorial(n-1);\n\treturn s;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint s = 0;\n\tif (n == 0 or n == 1) return 1;\n\ts = n*factorial(n-1);\n\treturn s;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "from easyinput import read\r\n\r\n\r\ndef factorial(n):\r\n    if n==0:\r\n        return 1\r\n    else:\r\n        return n*factorial(n-1)\r\n\r\n\r\n\r\nn = read(int)\r\nwhile n is not None:\r\n  print(factorial(n))\r\n  n = read(int)\r\n",
  "//FACTORIAL\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int x;\r\n    while (cin >> x) cout << factorial(x) <<endl;\r\n}",
  "def factorial(n):\n  r=n*factorial(n-1) if n>1 else 1\n  return r\nprint (factorial(12))",
  "def factorial(n):\n  r=n*factorial(n-1) if n>1 else 1\n  return r\nprint (factorial(12))",
  "def factorial(n):\n  r=n*factorial(n-1) if n>1 else 1\n  return r",
  "#include <iostream>\nusing namepace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return factorial(n-1)*n;\n}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\n    if (n == 0 or n == 1) return 1;\n    else return (n * factorial(n-1));\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1) * n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif(n == 0) return 1;\r\n\telse {\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n\t\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile(cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n)\n{\n    if (n == 0 or n == 1)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <unistd.h>\n#include <cstdio>\n#include <cstring>\n#include <fcntl.h>\n#include <stdio.h>\n#include <stddef.h>\n#include <stdlib.h>\n#include <math.h>\n\nint factorial(int n){\n    if(n==0){\n        return 1;\n    }else{\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n    std::cout << \"Hello world!\" << std::endl;\n\n    int test=factorial(4);\n    std::cout <<test<<std::endl;\n\n\n    return 0;\n\n}\n",
  "#recursivity\ndef factorial(n):\n    if n == 0:\n        return 1\n    if n == 0:\n        return n\n    else:\n        return n*factorial(n-1)\nn = int(input())\n\nprint(factorial(n))\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return (n*factorial(n - 1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "from jutge import read\n\ndef factorial(n):\n\tif n==0:\n\t\treturn 1\n\t\n\treturn n*factorial(n-1)\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tint f=1, i=0;\n\twhile (i<n){\n\ti=i+1;\n\tf=f*i;\n\t} \nreturn f;\n}\nint main (){\nint x;\ncin>>x;\ncout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nint i;\n\tif (n>0 and n<13) {\n\t i= n*factorial(n-1);\n\t}\n\telse if(n==0) i=1;\n\t\nreturn i;\n}\n\nint main(){\ncout << factorial(0) << endl;\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tint res;\n\tif(n==0) res=1;\n\telse res=n*factorial(n-1);\nreturn res;\n}\nint main (){\nint x;\ncin>>x;\ncout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n == 0) return 1;\r\n    else return (n * factorial(n - 1)); \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    int resultado = factorial(n);\r\n    cout << resultado << endl;\r\n}  ",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "\r\nfrom easyinput import read\r\n\r\ndef factorial(n):\r\n    if n == 0 or n == 1:\r\n        return n;\r\n    return n*factorial(n-1)\r\n\r\n\r\n\r\ndef main():\r\n    n = read(int)\r\n    print(factorial(n))\r\n\r\nmain()\r\n",
  "\r\nfrom easyinput import read\r\n\r\n\r\ndef factorial(n):\r\n    if n == 0 or n == 1:\r\n        return n;\r\n    return n*factorial(n-1)\r\n\r\n\r\ndef main():\r\n    n = read(int)\r\n    print(factorial(n))\r\n\r\nmain()\r\n",
  "\r\nfrom easyinput import read\r\n\r\n\r\ndef factorial(n):\r\n    if n == 0 or n == 1:\r\n        return 1;\r\n    return n*factorial(n-1)\r\n\r\n\r\ndef main():\r\n    n = read(int)\r\n    print(factorial(n))\r\n\r\nmain()\r\n",
  "\r\nfrom easyinput import read\r\n\r\n\r\ndef factorial(n):\r\n    if n == 0 or n == 1:\r\n        return 1\r\n    return n*factorial(n-1)\r\n\r\n\r\ndef main():\r\n    n = read(int)\r\n    print(factorial(n))\r\n\r\n\r\nmain()\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n <= 1) return n; \n\treturn n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n <= 1) return 1; \n\treturn n*factorial(n-1);\n}",
  "#include <stdio.h>\n#include <string.h>\n#include <malloc.h>\n\n\nint factorial(int n){\n    if (n <= 0){\n        return 1;\n    }\n    return n*factorial(n-1);\n}\n",
  "#include <stdio.h>\n#include <string.h>\n#include <malloc.h>\n\n\nint factorial(int n){\n    if (n <= 0){\n        return 1;\n    }\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial(n-1);\n}\n\nint main() {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n    return 0;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial(n-1);\n}\n\nint main() {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n)\n{\n\tif (n <= 1){\n\t\treturn 1;\n\t}\n\telse \n\t{\n\t\treturn n*factorial (n-1);\n\t}\n\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n\nint factorial(int n){\n    return (n <= 1) ? 1 : n * factorial(n - 1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0 || n == 1) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int factorialres = 1;\n    if (n == 0) factorialres = 1;\n    else {\n        factorialres *= n*factorial(n-1);\n    }\n    return factorialres;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n// Pre: 0 â¤ n â¤ 12.\n// Post: returns the factorial number of n.\nint fact(int n) {\n    if (n < 2) return 1;\n    else return n*fact(n-1);\n}\n\nint main() {\n    int num;\n    while (cin >> num) \n        cout << fact(num) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n// Pre: 0 â¤ n â¤ 12.\n// Post: returns the factorial number of n.\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int num;\n    while (cin >> num) \n        cout << factorial(num) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return (n*factorial(n - 1));\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n <= 1) return 1; \n    else return factorial(n - 1)*n;  \n    \n}\nint main() {\n    int n; \n    cin >> n; \n    \n    cout << factorial(n) << endl; \n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else if (n < 3) return n;\n    else return factorial(n - 1) * n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n; \n    while ( cin >> n ) cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n - 1)*n;\n}\n    \nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}",
  "//input: read a integer number n\n//output: print the factorial number of n\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) { // recursive solution\n// Pre: n >= 0\n// Post: returns n!\n if (n == 0) return 1;\n else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n/*\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n*/",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return factorial(n-1)*n;\n}\n\t\n\n\t\t\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0 || n == 1) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n\r\n}\r\n\r\nint main () {\r\n\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "//\r\n// Created by alexc on 27/04/2022.\r\n//\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return factorial(n-1)*n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n,\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) {\r\n\t\treturn 1;\r\n\t}\r\n\telse return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n\r\n    return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std ;\n\nint factorial (int n ) {\n    if ( n == 0 or n == 1 ) return 1 ;\n    else return ( n*factorial(n-1)) ;\n}\n\nint main () {\n    int n ;\n    while ( cin >> n ) {\n        cout << factorial ( n ) << endl ;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tint cont = 1;\n\tif(n < 2) cont = 1;\n\telse cont = n * factorial(n-1);\n\treturn cont;\n}\n\nint main () {\n\tint n;\n\tcin >> n; \n\tcout << factorial(n) << endl;\n}",
  "//Write a function that returns n!. Solve this problem recursively.\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ((n == 1) or (n == 0)) return 1;\n    else return n * factorial (n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return (n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return (n*factorial(n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact = 1;\n    int aux = n;\n    for (int i = 0; i < aux; ++i) {\n        fact *= n;\n        --n;\n    }\n    return fact;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int num) {\r\n    if(num == 0) return 1;\r\n    else return num*factorial(num - 1);\r\n}\r\n\r\nint main() {\r\n    int num;\r\n    cin >> num;\r\n    cout << factorial(num);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif(n == 0) return 1;\r\n\telse{\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f=1, i=1;\n    if (n==0) return f;\n    else {\n        while (i<=n){\n            f=f*i;\n            i++;\n        }\n        return f;\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int x;\r\n    cin >> x;\r\n\r\n    cout << factorial(x) << endl;\r\n}",
  "// recursive factorial \n//It returns n!.\n//Input sequence natural numbers\n//Output : it prints its factorial\n\n#include <iostream>\nusing namespace std;\n\n//pre: 0 <= n <= 12\n//post: returns n!\nint factorial(int n) {\n    int fact = 1;\n    if (n > 1) fact = n*factorial(n-1);\n    return fact;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n",
  "//RECURSIVE FACTORIAL\n\n//Write a function that returns n!. Solve this problem recursively.\n//Input is an integer number such as 0 <= num <= 12.\n//Output: prints the factorial of num.\n\n#include <iostream>\n\nusing namespace std;\n\n//Calculates the factorial of an integer number.\n//Pre: 0 <= n <= 12.\n//Post: returns result.\nint factorial(int n) {\n    int result = 0;\n\n    //Base condition\n    if (n == 0) result = 1;\n    //Recursive condition\n    else result = n * factorial(n - 1);\n\n    return result;\n}\n\nint main() {\n    int num;\n\n    while (cin >> num) {\n        cout << factorial(num) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n <= 1) return 1;\n    else return n*=factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n <= 1) return 1;\n    else return n*=factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if(n==0) return 1;\n    else return n * factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "//it calulates the factorial of a number n\r\n//input: natural number between 0 and 12 both included \r\n//output: the factorial of this given number\r\n#include<iostream>\r\nusing namespace std;\r\n\r\n//it calulates the factorial of a number n\r\n//pre: a natural number between 0 and 12 both included\r\n//post: the factorial of this given number\r\nint factorial(int n) {\r\n\tint res = 1;\r\n\tif (n < 2) res = 1;\r\n\telse res = n * factorial(n - 1);\r\n\treturn res;\r\n}\r\n\r\nint main() {\r\n\tint n; cin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else {\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    while (std::cin >> n)\r\n    std::cout << factorial(n) << std::endl;\r\n}",
  "#include <iostream>\r\n\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else {\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    while (std::cin >> n)\r\n    std::cout << factorial(n) << std::endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n\n    return n*factorial(n - 1);\n}\n\n\nint main() {\n     int x;\n     while (cin >> x) {\n         cout << factorial(x) << endl;\n     }\n}\n",
  "// Recursive factorial\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact=1;\n    for (int i = 1; i <= n; ++i) {\n            fact = fact * i;\n        }\n    return fact;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    int factori = factorial(n);\n    cout << factori << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n    if (x == 0) return 1;\n    else return x*factorial(x-1);\n}\n\nint main () {\n    int x;\n    while(cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint fact = 0;\r\n\tif (n == 1) fact = 1;\r\n\telse fact = factorial(n - 1) * n;\r\n\treturn fact;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint fact;\r\n\tif (n == 1) fact = 1;\r\n\telse fact = factorial(n - 1) * n;\r\n\treturn fact;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1) return 1;\r\n\treturn factorial(n - 1) * n;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint fact;\r\n\tif (n == 1) fact = 1;\r\n\telse fact = n * factorial(n - 1);\r\n\treturn fact;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint fact;\r\n\tif (n == 0) fact = 1;\r\n\telse fact = n * factorial(n - 1);\r\n\treturn fact;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\n/*int main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\n/*int main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}*/\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0 or n == 1) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return (n*factorial(n-1));\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n\n    return n*factorial(n - 1);\n}\n\n\n// int main() {\n//     int x;\n//     while (cin >> x) {\n//         cout << factorial(x) << endl;\n//     }\n// }\n",
  "//\n//  main.cpp\n//  pact\n//\n//  Created by Viktor Nechvile on 4/5/22.\n//\n\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0)\n        return 1;\n    else\n        return n * factorial(n-1);\n}\n\nint main() {\n    int n = 0;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "//Recursive factorial\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif ( n <= 1) return 1;\r\n\telse return (n*factorial(n-1));\r\n}\r\n\r\n\r\nint main() {\r\n\tint x;\r\n\twhile (cin >> x){\r\n\t\tcout << factorial(x) << endl;\r\n\t}\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int c;\n    cin >> c;\n    cout << factorial(c) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\n    if (n == 0 or n == 1) return 1;\n    else return factorial(n-1) * n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\n    if (n == 0 or n == 1) return 1;\n    else return factorial(n-1) * n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\n    }\n}\n\n",
  "//Write a function that returns n!. Solve this problem recursively.\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main () {\n    int num;\n    while (cin >> num) {\n        cout << factorial(num) << endl;\n    }\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\nint factorial (int n){\n\tint fact=1;\n\tif (n==0) fact=1;\n\telse {\n\t\tfact=n*factorial(n-1);\n\t\t\tn=n-1;\n\t}\n\treturn fact;\n}\nint main (){\nint n;\ncin>>n;\ncout<<factorial (n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n\nint main () {\n    int x;\n    while (cin >> x) cout << factorial (x) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\n\n\nint factorial(int n) {\n\n\tif (n <= 1) return 1;\n\n\telse return n * factorial(n-1);\n\n}\n\n\n\nint main() {\n\n\tint x;\n\n\tcin >> x;\n\n\tcout << factorial(x) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n\n    if(n == 0) return 1;\n    else return n* fact(n-1);\n\n}\nint main() {\n\n    int n;\n    cin >> n;\n    int factorial;\n    factorial = fact(n);\n    cout << factorial << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n\n    if(n <= 1) return 1;\n    else return n*fact(n-1);\n\n}\n\nint main () {\n\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n\n    if(n <= 1) return 1;\n    else return n*fact(n-1);\n\n}\n\nint main () {\n\n    int n;\n    while (cin >> n) cout << fact(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n\n    if (n == 1 or n == 0) return 1;\n    else return n*fact(n-1);\n\n}\n\nint main () {\n\n    int n;\n    while (cin >> n) cout << fact(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n==0 or n==1){\r\n\treturn 1;\r\n}\r\nelse {\r\n\tn=n*factorial(n-1);\r\n}\r\n}\r\nint main() {\r\nint n;\r\nwhile (cin >> n){\r\n\tcout << factorial (n) << endl;\r\n}\r\n}\r\n  \r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n==0){\r\n\treturn 1;\r\n}\r\nelse if (n==1){\r\n\treturn 1;\r\n}\r\nelse {\r\n\treturn n*factorial(n-1);\r\n}\r\n}\r\nint main() {\r\nint n;\r\nwhile (cin >> n){\r\n\tcout << factorial (n) << endl;\r\n}\r\n}\r\n  \r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    int t = 0;\r\n    if(n == 0) return 1;\r\n    else {\r\n    t += n * factorial(n-1);\r\n    return t;\r\n    }\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n\r\n}\r\n\r\nint main () {\r\n\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "//The function returns n!.\n//Precondition: Assume 0â¤ n â¤ 12.\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    //Precondiction: 0 <= n <= 12.\n    //Postcondition: returns n!\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int number;\n    cin >> number;\n    cout << factorial(number) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return n*factorial(n-1);\r\n}   \r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }",
  "\n#include <iostream>\nusing namespace std;\n\n/* Pre: Nos dan un numero n que es 0 <= n >= 12.\n * Post: Hay que sacar un numero natural.\n * Â¿QuÃ©?: factorial recursivode un numero natural.\n */\nint factorial(int n) {\n\t//caso base, bien n es 0 o 1\n\tint fact = 1;\n\tif (n > 1) fact = factorial (n - 1) * n;\n\treturn fact;\n}\n\n\nint main() {\n\tint x;\n\twhile (cin >> x) {\n\t\tif ((x >= 0) and (x <= 12))\n\t\tcout << factorial(x) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;  \n    cout << factorial(n) << endl;\n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "// (c) FIBerHub, https://fiberhub.tk\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n\r\n    return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n   factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n   factorial();\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0)\n        return n*factorial(n - 1);\n\n    return 1;\n}\n\n\nint main() {\n    int num;\n\n    while (cin >> num)\n        cout << factorial(num) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0 or n == 1) return 1;\r\n\treturn n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main()\n{\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n\n    return 0;\n}\n\nint factorial(int n)\n{\n    if(n > 1)\n        return n * factorial(n - 1);\n    else\n        return 1;\n}",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n) {\n    if (n <= 1) return 1;\n    if (n == 2) return 2;\n    return n*factorial(n-1);\n }\n\nint main () {\n\tint n;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "import easyinput\r\n\r\ndef factorial(n):\r\n    return 1 if n == 0 else n*factorial(n-1)\r\n\r\ndef main():\r\n    n = easyinput.read(int)\r\n    print(factorial(n))\r\n\r\nmain()\r\n",
  "import easyinput\r\n\r\ndef factorial(n):\r\n    return 1 if n == 0 else n*factorial(n-1)\r\n\r\ndef main():\r\n    n = easyinput.read(int)\r\n    print(factorial(n))\r\n\r\nmain()\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\n\n\nint main(){\nint x;\ncin >> x;\ncout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nint f;\nif (n <= 1) f = 1;\nelse f = n*factorial(n-1);\n\nreturn f;\n}\nint main() {\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact=1;\n    for (int i = 1; i < n+1; i++) {\n        fact = fact * i;\n    }\n    return fact;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    int factori1= factorial(n);\n    cout << factori1 <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint m=1;\nint factorial(int n){\n    if (n>1){\n        m=m*(n-1);\n        n--;\n        factorial(n);\n    }\n    return m;\n}\nint main () {\n    int n;\n    cin>>m;\n    n=m;\n    cout << factorial(n);\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint m=1;\nint factorial(int n){\n    if(n==0){\n        return 1;\n    }\n    if (n>1){\n        m=m*(n-1);\n        n--;\n        factorial(n);\n    }\n    return m;\n}\nint main () {\n    int n;\n    cin>>m;\n    n=m;\n    cout << factorial(n);\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint m=1;\nint factorial(int n){\n    if(n==0 or n==1){\n        return 1;\n    }\n    if (n>1){\n        m=m*(n-1);\n        n--;\n        factorial(n);\n    }\n    return m;\n}\nint main () {\n    int n;\n    cin>>m;\n    n=m;\n    cout << factorial(n);\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint m;\nint factorial(int n){\n    if(m==0 or m==1){\n        return 1;\n    }\n    if (n>1){\n        m=m*(n-1);\n        n--;\n        factorial(n);\n    }\n    return m;\n}\nint main () {\n    int n;\n    cin>>m;\n    n=m;\n    cout << factorial(n);\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint m;\nint factorial(int n){\n    if(m==0 or m==1){\n        return 1;\n    }\n    if (n>1){\n        m=m*(n-1);\n        n--;\n        factorial(n);\n    }\n    return m;\n}\nint main () {\n    while(1){\n    int n;\n    cin>>m;\n    n=m;\n    cout << factorial(n);\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint m;\nint factorial(int n){\n    if(m==0 or m==1){\n        return 1;\n    }\n    if (n>1){\n        m=m*(n-1);\n        n--;\n        factorial(n);\n    }\n    return m;\n}\nint main () {\n    while(1){\n    int n;\n    cin>>m;\n    n=m;\n    cout << factorial(n);\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint m;\nint factorial(int n){\n    if(m==0 or m==1){\n        return 1;\n    }\n    if (n>1){\n        m=m*(n-1);\n        n--;\n        factorial(n);\n    }\n    return m;\n}\nint main () {\n    while(1){\n    int n;\n    cin>>m;\n    n=m;\n    cout << factorial(n) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint m;\nint factorial(int n){\n    if(m==0 or m==1){\n        return 1;\n    }\n    if (n>1){\n        m=m*(n-1);\n        n--;\n        factorial(n);\n    }\n    return m;\n}\nint main () {\n    while(1){\n    int n;\n    cin>>m;\n    n=m;\n    cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\nint m;\nint factorial(int n){\n    if(m==0 or m==1){\n        return 1;\n    }\n    if (n>1){\n        m=m*(n-1);\n        n--;\n        factorial(n);\n    }\n    return m;\n}\nint main () {\n    while(1){\n    int n;\n    cin>>m;\n    n=m;\n    cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n == 1) return 1;\r\n  return factorial(n-1) * n;\r\n}\r\n\r\nint main() {\r\n  cout << factorial(5) << endl;\r\n  // l = []\r\n  // !5 = 5*4*3*2*1\r\n  vector<int>v;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n == 1 or n == 0) return 1;\r\n    else return (n * factorial(n - 1)); \r\n} \r\n\r\nint main() {\r\n    int n = 1;\r\n    while(cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0 or n == 1)\r\n        return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==1 || n == 0) {\n    return 1;\n  }\n\n  else {\n    return n * factorial(n-1);\n  }\n}\n\nint main(){\nint n;\ncin >> n;\n\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\nint main() {\n  int x;\n  while (cin >> x) {\n    cout << factorial(x) << endl;\n  }  \n}\n\nint factorial(int n) {\n  if (n > 0) {\n    return (factorial(n - 1) * n);\n  }\n  return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1) {\n        return 1;\n    }\n    return n * factorial(n - 1);\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0) {\r\n        return 1;\r\n    }\r\n    return n * factorial(n - 1);\r\n}\r\n",
  "def factorial(n):\r\n   if n <=1:\r\n       return 1\r\n   else:\r\n       return n*factorial(n-1)",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial(n-1);\n}\n\nint main() {\n    int n = 0;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nint factorial (int i){\r\n\tif (i==0 || i==1){\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\treturn i * factorial(i-1);\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint n; cin >> n;\r\n\tcout << factorial(n);\r\n}\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) {\n    return 1;\n  }\n  else {\n    return n*factorial(n-1);\n  }\n}\n\n\nint main(){\n  int n;\n  \n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0)\n    return 1;\n  else\n    return n * factorial(n -1);\n}\n\nint main() {\n  int n;\n\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0)\n        return 1;\n    else\n        return n*factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    \n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing  namespace std;\nint factorial(int n){\n    if(n==0){\n        return 1;\n    }\n    return factorial(n-1)*n;\n}\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n);\n}\n\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial (int n){\nif (n==0)return 1;\n    return n*factorial(n-1);\n}\n",
  "def factorial(x):\n    if x == 1 or x == 0:\n        return(1)\n    else:\n        return(x* factorial(x-1))\n\nprint(factorial(6))",
  "def factorial(x):\n    if x == 1 or x == 0:\n        return(1)\n    else:\n        return(x* factorial(x-1))\n",
  "#include \"iostream\"\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) { return 1; }\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  \n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint n = 10;\n\nint factorial(int n)\n{\n    if (n==0) \n    {\n        return 1;\n    }\n    else \n    {\n        return n*factorial(n-1);\n    }\n}\n\nint main()\n{\n    cout << factorial(4);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint main () {\n  int n;\n  cin >> n;\n  int f = 1;\n  for (int i = 1; i <= n; ++i) f = f*i;\n  cout << f << endl;\n}\n",
  "#include <bits/stdc++.h>\nusing namespace std;\n\nint factorial(int n) {\n    if (n-1 > 0) {\n        return n *= factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n    while(cin >> n) {\n        if(n == 0) {\n            cout << 1 << endl;\n        }\n        else {\n            cout << factorial(n) << endl;\n        }\n    }\n}       \n",
  "#include <bits/stdc++.h>\nusing namespace std;\n\nint factorial(int n) {\n    if (n-1 > 0) {\n        return n *= factorial(n-1);\n    }\n    return n;\n}\n\nint main() {\n    int n;\n    while(cin >> n) {\n        if(n == 0) {\n            cout << 1 << endl;\n        }\n        else {\n            cout << factorial(n) << endl;\n        }\n    }\n}       \n",
  "#include <bits/stdc++.h>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) {\n        n = 1;\n    }\n    else if (n-1 > 0) {\n        return n *= factorial(n-1);\n    }\n    return n;\n}\n\nint main() {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}       \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n==0) return 1;\nelse\n    return n*factorial(n-1);\n}\n\nint main () {\n  int n;\n  while (cin >> n) {\n    cout <<factorial(n) << endl;   \n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else\n    return n*factorial (n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n/*\nint factorial(int n) {\n    int factorial (int n) \n    cout << n << endl;\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n    int f = 1;\n    for (int i = 1; i <= n; ++i) f = f*i;\n    return f;\n\n}\n*/\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n    \n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n\n\n\n\n    \n\n/*\nint factorial (int n) {\n    cout << n << endl;\n    return n*factorial(n - 1);\n    int f = 1;\n    for (int i = 1; i <= n; ++i) f = f*i;\n    return f;\n}\n*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nif (n == 0) return 1;\nelse {\n    return n*factorial (n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial (n) << endl;\n    }\n}\n        \n        \n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nif (n==0) return 1;\nelse \n    return n*factorial (n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial (n) << endl;\n    }\n}\n        \n        \n    \n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n) {\n    if (n <= 1) return 1;\n    if (n == 2) return 2;\n    return n*factorial(n-1);\n }\n\nint main () {\n\tint n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0 || n == 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n; cin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if(n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int m;\n    while(cin >> m) {\n        int ans;\n        ans = factorial(m);\n        cout << ans << endl;\n    }\n}\n    \n",
  "# https://jutge.org/problems/P12509_en\r\n\r\ndef factorial(n):\r\n    return 1 if n == 1 else n * factorial(n - 1)\r\n\r\n\r\n\r\n\r\n",
  "# https://jutge.org/problems/P12509_en\r\n\r\ndef factorial(n):\r\n    return 1 if n == 1 else n * factorial(n - 1)\r\n\r\n\r\n",
  "# https://jutge.org/problems/P12509_en\r\n\r\ndef factorial(n):\r\n    return 1 if n == 1 or n == 0 else n * factorial(n - 1)",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1)\r\n\t\treturn 1;\r\n\telse\r\n\t\treturn (factorial(n - 1) * n);\r\n}\r\n\r\nint main() {\r\n\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n\r\n\treturn 0;\r\n}",
  "\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1)\r\n\t\treturn n;\r\n\telse\r\n\t\treturn (factorial(n - 1) * n);\r\n}\r\n\r\nint main() {\r\n\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n\r\n\treturn 0;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0)\r\n        return 1;\r\n    else\r\n        return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\nint factorial(int n){\n    if (n==1)return 1;\n    else return factorial(n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\nif (n==0) return 1;\nreturn n*factorial( n-1);\n}\nint main (){\nint n;\ncin>>n;\nint x= factorial (n);\ncout<<x;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\nif (n==0) return 1;\nreturn n*factorial( n-1);\n}\nint main (){\nint n;\ncin>>n;\nint x= factorial (n);\ncout<<x; \n}\n//int n;\n//while (cin>>n) cout<<factorial(n)<<endl;\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n if (n == 0) return 1;\n return n*factorial (n-1);\n}\n\nint main()\n{\nint n;\nwhile (cin >> n) cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n\n\tif(n==0) return 1;\n\treturn n*factorial(n-1);\n\n}\n\nint main()\n{\n\nint n;\n\twhile(cin >> n)\n\t\tcout << factorial(n) << endl;\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n{\n\tif (n == 0) return 1;\n\treturn n * factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\tif(n == 0) return 1;\n\treturn n * factorial(n-1);\t\n}\n\nint main()\n{\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif(n==1) return 1;\r\n\telse return factorial(n-1)*n;  \r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\telse return factorial(n-1)*n;  \r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return (n*factorial(n-1))\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return (n*factorial(n-1));\r\n}",
  "#pragma GCC optimize (\"Ofast\")\r\n//#pragma GCC target (\"avx2\")\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define endl \"\\n\"\r\n//#define int long long\r\n#define ar array\r\n#define ll long long\r\n#define ld long double\r\n#define all(x) x.begin(), x.end()\r\n#define rall(x) x.rbegin(), x.rend()\r\n#define ii pair<int, int>\r\n#define vi vector<int>\r\n#define vvi vector<vi>\r\n#define vii vector<ii>\r\n#define vvii vector<vii>\r\n#define vvvii vector<vvii>\r\n#define vs vector<string>\r\n#define vb vector<bool>\r\n#define vvb vector<vb>\r\n#define pb push_back\r\n#define mp make_pair\r\n#define tuple3 tuple<int, int, int>\r\n#define tuple4 tuple<int, int, int, int>\r\n\r\nint factorial(int n) {\r\n\tif (n == 0 || n == 1)\r\n\t\treturn 1;\r\n\telse\r\n\t\treturn factorial(n - 1) * n;\r\n}\r\n\r\nsigned main() {\r\n\tios::sync_with_stdio(0);\r\n\tcin.tie(0);\r\n\r\n\tll n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n\treturn 0;\r\n}",
  "def factorial(n):\n    if (n > 0):\n        return (n*(factorial(n-1)))\n    return (1)\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main(){\n  int num;\n  while (cin>>num){\n    cout << factorial(num) << endl;\n  }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if (!n) return 1;\r\n    return factorial (n-1)*n;\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n\r\n",
  "int factorial(int n){\n    \n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n    \n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int a = 1;\n    for(int i = 1; i <= n ; i++){\n        a *= i;\n    }\n    cout<<a<<endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    while(cin>>n){\n    int a = 1;\n    for(int i = 1; i <= n ; i++){\n        a *= i;\n    }\n    cout<<a<<endl;\n    }\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    while(cin>>n){\n    int a = 1;\n    for(int i = 1; i <= n ; i++){\n        a *= i;\n    }\n    return a;\n    }\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    while(cin>>n){\n    int a = 1;\n    int i = 1;\n    for(i; i <= n ; i++){\n        a *= i;\n    }\n    i = 1;\n    return a;\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    return n * factorial(n-1);\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n    ",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\nif(n==0){\n    n = 1;\n}\nelse(n>0){\n    n = n * factorial(n-1);\n}\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\nif(n==0){\n    n = 1;\n}\nelse{\n    n = n * factorial(n-1);\n}\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    cin>>n;\nif(n==0){\n    n = 1;\n}\nelse{\n    n = n * factorial(n-1);\n}\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\nwhile(cin>>n){\nif(n==0){\n    n = 1;\n}\nelse{\n    n = n * factorial(n-1);\n}\n}\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\nwhile(cin>>n){\nif(n==0){\n    n = 1;\n}\nelse{\n    n = n * factorial(n-1);\n}\nreturn n;\n}\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\nif(n==0){\n    n = 1;\n}\nelse{\n    n = n * factorial(n-1);\n}\nreturn n;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int a){\n  int d=1;\n  if (a>1)d= a * factorial(a-1);\n  return d;\n}\n\n\nint main(){\n  int x;\n  cin >>x;\n  cout << factorial(x)<<endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n)\r\n{\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n)\r\n{\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int k=n;\n    int q=(n-1);\n    while (q>0){\n        n=n*q;\n        q=q-1;\n    }\n    if (k==0)\n        n=1;\n    return n;\n}\n\nint main () {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int a,b;\n    a = 0;\n    b = 1;\n    while(a<n){\n        a = a + 1;\n        b = b*a;\n        }\n        return b;\n    }\n    \nint main(){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}        \n",
  "#include<iostream>\n#include<string>\nusing namespace std;\n\nint factorial(int n){\n    int i=1;\n    int S=1;\n    while(i<=n){\n        S=S*i;\n        i++;\n    }\n    return S;\n}\n",
  "#include<iostream>\n#include<string>\nusing namespace std;\n\nint factorial(int n){\n    int i=1;\n    int S=1;\n    while(i<=n) S=S*i; i++;\n    return S;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  int f = 0;\n  for (int i = 1; i<n; i++){\n    f = f*i;\n  }\n  return f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  int f = 0;\n  for (int i = 1; i<n; i++){\n    f = f*i;\n    return f;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int f = 0;\n  if (n == 0) return 1;\n  else{\n  for (int i = 1; i<n; i++){\n    f = f*i;\n    return f;\n  }\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int f = 0;\n  if (n == 0) return 1;\n  else{\n    while (cin >> n){\n  for (int i = 1; i<n; i++){\n    f = f*i;\n    return f;\n  }\n  }\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int f = 1;\n  if (n == 0) return 1;\n  else{\n  for (int i = 1; i<n; i++){\n    f = f*i;\n    return f;\n  }\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0 or n==1) return 1;\n  else{\n    return n*factorial(n-1);\n  }\n}\n",
  "#include<iostream>\n#include<iomanip>\nusing namespace std;\n\n\nint factorial(int n){\n    \n return n*factorial(n)   \n    \n}\n",
  "#include<iostream>\n#include<iomanip>\nusing namespace std;\n\n\nint factorial(int n){\n    \n return n*factorial(n-1);\n    \n}\n",
  "#include<iostream>\n#include<iomanip>\nusing namespace std;\n\n\nint factorial(int n){\n if(n==1) return 1\n else return n*factorial(n-1);\n    \n}\n",
  "#include<iostream>\n#include<iomanip>\nusing namespace std;\n\n\nint factorial(int n){\n if(n==1) return 1;\n else return n*factorial(n-1);\n    \n}\n",
  "#include<iostream>\n#include<iomanip>\nusing namespace std;\n\n\nint factorial(int n){\n if(n==1) return 1;\n else if(n==0) return 1;\n else return n*factorial(n-1);\n    \n}\n",
  "int factorial(int n){\n  if (n==0) return 1;\n  return n*factorial(n-1);\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n<=1){\r\n    return 1;\r\n  }\r\n  return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n  int n;\r\n  cin>>n;\r\n  cout<<factorial(n)<<endl;\r\n}\r\n",
  "\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\nif (n==0) return 1;\n\nreturn n*factorial(n-1);\n\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main(){\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main(){\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if(n<=1) return 1;\n    return n*factorial(n-1);\n\n}\n\nint main () {\n\n    int n;\n    cin>>n;\n\n    cout<<factorial(n)<<endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n  if (n==0) return 1;\n  else return n*factorial (n-1);\n}\n\nint main(){\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n==0) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "//\n//  main.cpp\n//  jutge\n//\n//  Created by Jaume Reixach on 2/10/22.\n//\n\n#include <iostream>\n//#include <string>\n//#include <math.h>\n//#include <vector> //com ArrayList\nusing namespace std;\nint factorial(int n);\nint main() {\n    return 0;\n}\nint factorial(int n){\n    if(n==1) return 1;\n    return(n*factorial(n-1));\n}\n",
  "//\n//  main.cpp\n//  jutge\n//\n//  Created by Jaume Reixach on 2/10/22.\n//\n\n#include <iostream>\n//#include <string>\n//#include <math.h>\n//#include <vector> //com ArrayList\nusing namespace std;\nint factorial(int n);\nint main() {\n    return 0;\n}\nint factorial(int n){\n    if(n==0) return 1;\n    return(n*factorial(n-1));\n}\n",
  "\r\ndef factorial (n)\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n < 1)\n        return 1;\n    return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n < 1)\n        return 1;\n    return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "from easyinput import read\n\ndef factorial (n):\n    if n<1: return 1\n    return n*factorial(n-1)\n\na = read (int)\nprint (factorial (a))\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==1){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n}\n    \nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main()\n{\n    int n;\n    while (cin >> n)\n        cout << factorial(n) << endl;\n}\n\nint factorial(int n)\n{\n    if (n == 0 || n == 1)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\nif (n==0)return 1;\nelse return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint double_factorial(int n) {\n    if ((n == 0) or (n == 1)) return 1;\n    return n*double_factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << double_factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint double_factorial(int n) {\n    if ((n == 0) or (n == 1)) return 1;\n    return n*double_factorial(n-2);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << double_factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ((n == 0) or (n == 1)) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint recfactorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * recfactorial(n - 1);\n}\nint main()\n{\n    int n;\n    while (cin >> n)\n        cout << recfactorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    return factorial(n - 1) * n;\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint recfactorial(int n)\n{\n    if (n == 0)\n        return 1;\n\n    return n * recfactorial(n - 1);\n}\nint main()\n{\n    int n;\n    while (cin >> n)\n        cout << recfactorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n\n    return factorial(n - 1) * n;\n}\nint main()\n{\n    int n;\n    while (cin >> n)\n        cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n if(n==0) return 1;\n return n*factorial(n-1);\n}\n\nint main(){\n int n;\n cin>>n;\n cout<<factorial(n)<<endl;\n}\n",
  "#include<iostream>\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\nusing namespace std;\nint main(){\n    int f;\n    cin >> f;\n    cout << factorial (f) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main () {\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    return n * factorial(n - 1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\n\n//                               FUNCTIONS\n\n\nint factorial(int n){\n\n  if (n == 0) return 1;\n\n  return n * factorial(n - 1);\n}\n\nint main() {\n\n  int a;\n\n  while (cin >> a){\n\n    cout << factorial(a) << endl;\n}\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return factorial(n - 1) * n;\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return factorial (n-1) * n;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\nint main()\n{\n    int a;\n    while (cin >> a) {\n        int fact = factorial(a);\n        cout << fact << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  return (n*factorial(n))\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  return (n*factorial(n));\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  return (n*factorial(n-1));\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n==0) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0)\n  return 1;\n\n  else\n  return n*factorial(n-1);\n\n}\n\nint main(){\n  int n;\n  cin >>n;\n  cout << factorial(n)<<endl;\n}\n",
  "#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\n\n\nint factorial(int n){\n    if(n == 1)return 1;\n    return n*factorial(n-1)\n}\n",
  "#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\n\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include<bits/stdc++.h>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main(){\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial (n-1);\n\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n    \n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main () {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0 or n == 1) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int n, f;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\tint fact=0;\n\tif (n==0 or n==1) return 1;\n\telse{\n\t\tfact+=factorial(n-1)*n;\n\t\treturn fact;\n\t}\n}\n\nint main (){\n\tint n;\n\tcin>>n; \n\tn=factorial(n);\n\tcout<<n<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0 or n == 1) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "def factorial(s):\n    '''\n    PSEUDOCODE(s)\n    FACTORIAL(s)\n    if s = 1 then\n        return s\n    else then\n        return s * FACTORIAL(s-1)\n    '''\n    if s == 1:\n        return s\n    else:\n        return s * factorial(s-1)\n",
  "def factorial(n):\n    '''\n    PSEUDOCODE(s)\n    FACTORIAL(s)\n    if s = 1 then\n        return s\n    else then\n        return s * FACTORIAL(s-1)\n    '''\n    if n == 1:\n        return n\n    else:\n        return n * factorial(n-1)\n",
  "def factorial(n):\n    '''\n    PSEUDOCODE(s)\n    FACTORIAL(s)\n    if s = 1 then\n        return s\n    else then\n        return s * FACTORIAL(s-1)\n    '''\n    if n == 1:\n        return(1)\n    else:\n        return (n * factorial(n-1))\n",
  "def factorial(n):\n    '''\n    PSEUDOCODE(s)\n    FACTORIAL(s)\n    if s = 1 then\n        return s\n    else then\n        return s * FACTORIAL(s-1)\n    '''\n    if n == 1 or n == 0:\n        return(1)\n    else:\n        return (n*factorial(n-1))\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==1 or n==0){\n        return(1)\n    }\n    else{\n        return(n*factorial(n-1))\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==1 or n==0){\n        return(1);\n    }\n    else{\n        return(n*factorial(n-1));\n    }\n}",
  "/*\ndef factorial(n):\n    if n = 0 or n = 1 then\n        return(1)\n    else then\n        return( n * factorial( n - 1 ) )\n\n*/\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n    int n = 0;\n    while (cin >> n){\n        cout << factorial(n);\n    }\n}\n\nint factorial(int n){\n    if ((n == 0) or (n==1)){\n        return(1);\n    }\n    return( (n) * factorial( n - 1 ) );\n}",
  "int factorial(int n)\n{\n    return n == 0 ? 1 : n * factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\t//Pre: n >=0\r\n\t//Post: factorial n.\r\n\tif (n ==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n}\r\n\t",
  "//\n// Created by Rafael Bardisa Rodes on 25/10/22.\n//\n\nint factorial(int n){\n    return (n ? factorial(n - 1) * n : 1);\n}",
  "from easyinput import read\nn = read(int)\n\ndef factorial(n):\n\tres = 1\n\tfor x in range(1, n+1):\n\t\tres = res * x\n\t\t\n\treturn res\n\t\nprint(factorial(n))\n",
  "factorial = lambda x: 1 if x == 0 else x * factorial(x-1)\n",
  "import sys\n\nn = int(sys.stdin.readline())\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\nprint(factorial(n))\n        ",
  "module Main where\n\nfactorial :: Integral a => a -> a\nfactorial 0 = 1\nfactorial n = n * factorial (n-1)\n\nmain = return ()\n",
  "import sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n    \nfactorial(6)",
  "int factorial(int n) {\n    int f = 1;\n    for (int i = 0; i < n; i++) {\n        f *= i + 1;\n    }\n    return f;\n}\n\nint n = 4\nfactorial(int n)",
  "using namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    else {\n        return n * factorial(n-1);\n    }\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    return 0;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if (!n) return 1;\r\n    return factorial (n-1)*n;\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\treturn factorial(n-1)*n;\n}\n\nint main(){\n\tcout << (8) << \"\\n\";\n}\n",
  "'''\nfunction FACTORIAL(n)\n    if n <= 1 then\n        return 1\n    else\n        return n * FACTORIAL(n-1)\n'''\n\nimport sys\n\ndef factorial(n):\n    n = int(n)\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\nz = sys.stdin.readline().strip()\nif z != \"\":\n    print(factorial(z))\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n * (factorial(n-1));\n    \n}\n\nint main(){\n    int n;\n    cin >> n;\n    int z = factorial(n);\n    cout << z << endl;\n\n}",
  "module Main where\n\nfactorial :: Integral a => a -> a\nfactorial 0 = 1\nfactorial n = n * factorial (n-1)\n\nmain = return ()\n",
  "from easyinput import read\n\ndef factorial(n):\n    if n<=1:\n        return 1\n    else:\n        return (n*factorial(n-1))\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n - 1);\n\t\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "from easyinput import read\ndef factorial(n):\n\tif n == 0:\n\t\treturn 1\n\telse :\n\t\treturn n*factorial(n-1)\nn = read(int)\nwhile n is not None:\n\tprint(factorial(n))\n\tn = read(int)\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1)\n        return 1;\n    return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n  if (n==0||n==1) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\nint main(){\r\n  int x;\r\n  while (cin>>x){\r\n    cout<<factorial(x)<<endl;\r\n  }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }",
  "int factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    return n*factorial(n - 1);\n}",
  "int factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    return n*factorial(n - 1);\n}",
  "int factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    return n*factorial(n - 1);\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// Pre: x Ã©s un nombre >= 0\n// Post: retorna el factorial de x\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n - 1) * n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n    if (n <= 1) return 1;\n    return n * factorial(n-1);\n\n}\n\nint main (){\n\n    int x;\n    cin >> x;\n\n    int f = factorial(x);\n\n    cout << f << endl;\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n) * (n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1) * (n);\n}\n",
  " int factorial(int n) {\r\n     if (n==0) return 1;\r\n     else return n * factorial(n-1);\r\n }",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return n;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0 || n == 1) return n;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0 || n == 1) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  cout << factorial(5) << endl;\n}",
  "\nint factorial(int n) {\n\n    int factor = 1;\n    int count = 1;\n    while (n != 0) {\n        factor *= count;\n        ++count;\n        --n;\n        \n    }\n    return factor;\n}\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if (!n) return 1;\r\n    return factorial (n-1)*n;\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n-1);\n}\n\n",
  "int factorial(int n) {\r\n    return n > 1 ? n * factorial(n - 1) : 1;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n >= 1) return n * factorial(n-1);\n    else return 1;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    n = factorial(n);\n\n    cout << n << endl;\n}\n",
  "//recursive factorial\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n <= 1) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  return n*factorial(n - 1);\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    \n}",
  "//\r\n\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\treturn factorial(n-1)*n;\r\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    cout << factorial(10) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int fact = 1;\n    for (int i = 1; i <= n; ++i){\n        fact = fact + i-1;\n    }\n    return fact;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int fact = 1;\n    for (int i = 2; i <= n; ++i){\n        fact = fact * i-1;\n    }\n    return fact;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int fact = 1;\n    for (int i = 1; i <= n; ++i){\n        fact = fact * i;\n    }\n    return fact;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\n#include <string>\n#include <math.h>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x; \n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    return n * factorial (n-1);\n}\n\nint main (){\n    int n;\n    cin >> n;\n\n    cout << factorial (n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n <= 2 ) return n;\n    else return n * factorial(n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n == 0) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) return n * factorial(n - 1);\n    else return 1;\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    return factorial(n-1)*n;\n}\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint reduction_of_digits(int x){\n    if (x < 10) return x%10;\n    int sum = reduction_of_digits(x/10)+x%10;\n    if (sum < 9) return sum;\n    return reduction_of_digits(sum);\n\n\n}\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << reduction_of_digits(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int sum = 1;\n    for (; n > 1; --n) sum *= n;\n    return(sum);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return(1);\n    return n * factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int sum = 0; \r\n    if (n < 2 and n > -1) return 1;\r\n    else  {\r\n        sum = n*factorial (n-1);\r\n        return sum;\r\n    }\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int res = 1;\r\n    for (int i = 2; i <= n; ++i) res *= i;\r\n    return res;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int mul = n;\r\n    if (n <= 1) return 1;\r\n    mul *= factorial(n - 1);\r\n    return mul;\r\n    \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n        if ( n > 0) return n*factorial(n-1);\r\n        return 1;\r\n}",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\treturn factorial(n-1)*n;\n}\n\nint main(){\n\tcout << (8) << \"\\n\";\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n > 0)\n        return n*factorial(n-1);\n\n    else return 1;\n}\n\nint main() {\n    int num;\n    while (cin >> num) {\n        cout << factorial(num) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n != 0){\n        n *= factorial(n-1);\n        return n;\n    }\n    return 1;\n}\nint main(){\n    cout << factorial(1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) n = 1;\n    else n = n*factorial(n-1);\n    return n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int d = factorial(n);\n\n    cout << d << endl;\n}\n",
  "// p6 // p12509 - recursive factorial\n// Anna Vincken Bascompte\n\n#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n != 0) return n*(factorial(n-1));\n    else return 1;\n}\n\n/*int main(){\n    int x;\n    while (cin >> x){\n        cout << factorial(x) << endl;\n    }\n    \n}*/\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0 or n == 1) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n != 0) return n*factorial(n-1);\n    else return 1;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        n = n*factorial(n-1);\n    }\n    return n;\n}\n\nint main() {\n    int number;\n    cin >> number;\n    cout << factorial(number) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return n + 1;\n    else if (n == 1 or n == 2) return n;\n    else {\n        int z = factorial(n - 1);\n        return n*z;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return n + 1;\n    else if (n == 1) return n;\n    else {\n        int z = factorial(n - 1);\n        return n*z;\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) {\n    return 1;\n  } \n  else {\n    return (n * factorial(n - 1));\n  }\n}\n",
  "/*\n    Program that reads a number and calculates its factorial\n*/\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1) {\n        return n;\n    }\n    else {\n        return factorial(n - 1) * n;\n    }\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    if (n == 1) {\n        return n;\n    }\n    else {\n        return factorial(n - 1) * n;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "using namespace std;\r\n#include <iostream>\r\n\r\nint factorial(int n){\r\n    if(n==0)return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) return n*facotrial(n - 1);\n    return 1;\n\n\n}\n\n\nint main() {\n    int x;\n\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) return n*factorial(n - 1);\n    return 1;\n\n\n}\n\n\nint main() {\n    int x;\n\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\t//Pre: n >=0\r\n\t//Post: factorial n.\r\n\tif (n ==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n}\r\n\t",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial (int n){\r\n  int f = 1;\r\n  int i = 0;\r\n\r\n  while (i < n) {\r\n    i = i + 1;\r\n    f = f*i;\r\n  }\r\n  return f;\r\n  }\r\n\r\nint main () {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\treturn n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int suma;\n    if (n == 0) return 1;\n    else return suma = n *factorial (n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "// Pre: Un nÃºmero mayor o igual que 0 y menor o igual que 12\n// Post: Retornar el factorial del nÃºmero\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n    int resultat;\n    if(n == 0){\n        resultat = 1;\n        return resultat;\n    }\n    else {\n        resultat = n * factorial(n-1);\n        return resultat;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int x) {\n    if (x == 0) return 1;\n    else return x*factorial(x - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==0)return 1;\n    else return factorial(n-1)*n;\n\n}\nint main(){\n    cout<<factorial(4)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) return n*factorial(n - 1);\n    \n    else return 1;\n}\n\nint main() {\n        int num;\n        \n        while (cin >> num) cout << factorial(num) << endl;\n}\n",
  "import sys\nn = int(sys.stdin.readline().strip())\ndef factorial(n):\n    if n<0 or n>12:\n        return 0\n    else:\n        if n == 0:\n            return 1\n        elif n == 1:\n            return n\n        else:\n            return n*factorial(n-1)\nprint(factorial(n))",
  "#include <iostream>\n#include <vector>\n\nusing namespace std;\nint factorial(int n);\n\nint main(){\n    int n, n1, n2, n3, n4;\n    cin >> n >> n1 >> n2 >> n3 >> n4;\n    cout << factorial(n) << endl;\n    cout << factorial(n1) << endl;\n    cout << factorial(n2) << endl;\n    cout << factorial(n3) << endl;\n    cout << factorial(n4) << endl;\n}\n\nint factorial(int n){\n    if (n<0 or n>12){\n        return 0;\n    }\n    else{\n        if (n==0){\n            return 1;\n        }\n        else if (n==1){\n            return n;\n        }\n        else{\n            return n*factorial(n-1);\n        }\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n != 0) return n * factorial(n - 1);\n  else return 1;\n}\n\n\n\n\nint main () {\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n    if (n == 1 or n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nlong long int factorial(long long int n) {\nif (n == 0) return 1;\nelse return n * factorial(n - 1);\n}\n\nint main(){\n   long long int n; cin>>n;\n   cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n int factorial(int n) {\nif (n == 0) return 1;\nelse return n * factorial(n - 1);\n}\n\nint main(){\n    int n; cin>>n;\n   cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) return n*factorial(n-1);\n\n    return 1;\n}\n",
  "//factorial\r\n\r\n#include <iostream>\r\n\r\nusing namespace std; \r\n\r\nint factorial(int n) {\r\n\tif (n <=1) return 1;\r\n\treturn factorial(n-1)*n;\r\n}\r\n\r\nint main() {\r\n\tint n; \r\n\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl; \r\n\t}\r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return factorial(n-1)*n;\n}\n\n\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include<iostream>\n#include<cmath>\n#include<vector>\n\nusing namespace std;\n\n int factorial(int n){\n\n     if (n==0) return 1;\n     else return factorial(n-1)*n;\n }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  fact = n;\n  for (int i = 2; i < n; ++i) fact *= i;\n  return fact;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int fact = n;\n  for (int i = 2; i < n; ++i) fact *= i;\n  return fact;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int fact = 1;\n  for (int i = 2; i <= n; ++i) fact *= i;\n  return fact;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return (n*factorial(n-1));\n}\n\nint main() {\n    int n, r;\n    cin >> n;\n    r = factorial(n);\n    cout << r << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else if (n == 1) return 1;\n    return (n*factorial(n - 1));\n}\n\nint main() {\n    int n, r;\n    cin >> n;\n    r = factorial(n);\n    cout << r << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//pre: 0 <= n <= 12\n//post: return n! recursively\nint factorial(int n) {\n    if (n <= 1)\n        return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int y = 1;\n    for (int i = n; i > 0; --i) {\n        y *= i;\n    }\n    return y;\n    y = 1;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "from easyinput import read, read_line\n\ndef factorial(n):\n\tif n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n*factorial(n-1)\n\nn = read(int)\nprint(factorial(n))\n\n",
  "from easyinput import read\n\ndef factorial(n):\n\tif n < 2:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n-1)\n\t\t\n\nn = read(int)\n\nprint(factorial(n))\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\nint factorial(int n){\n\tif (n == 0){\n\t\treturn 1;}\n\telse{\n\t\treturn n * factorial(n-1);}\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n\tint n;\n\tcin >> n;\n\tint result = factorial(n);\n\tif(result != 0){\n\t\tcout << result << endl;\n\t\t}\n}\n\n\nint factorial(int n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\t\n\telse{\n\t\treturn n*factorial(n-1);\n\t}\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    return factorial(n-1)*n;\n    }\n    return fact;\n}\nint main () {\n    int n;\n    while (cin >> n) {\n    cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return factorial(n-1)*n;\n}\nint main () {\n    int n;\n    while (cin >> n) {\n    cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n*factorial(n-1);\n    return 1;\n}\n\nint main(){\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int result;\n    if (n == 0) {\n        result = 1;\n    }\n    else {\n        result = n * factorial(n-1);\n    }\n    return result;\n}\n\nint main() {\n    int num;\n\n    while (cin >> num) {\n        cout << factorial(num) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nbool c_frac(int n1, int d1, int n2, int d2) {\n    return n1*d2 < n2*d1;\n\n}\n\nint main() {\n\tint n1, d1, n2, d2;\n\n\twhile (cin >> n1 >> d1 >> n2 >> d2) {\n\t\tif (c_frac(n1, n2, d1, d2)) cout << \"yes\" << endl;\n\t\telse cout << \"no\" << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int num;\n\n    while (cin >> num) {\n        cout << factorial(num) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n  int c;\n  cin >> c;\n  cout << factorial(c) << endl;\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//P12509\r\n//pre: un natural n, 0<=n<=12.\r\n//post: retornar n!\r\n\r\nint factorial (int n) {\r\n\tif (n <= 1) return 1;\r\n\treturn n*factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n",
  "//X58169\n\n#include <iostream>\nusing namespace std;\n\nvoid info_sequence(int& max, int& lpos) {\n    if (lpos > max) max = lpos;\n}\n\nint main() {\n    int n1, n0, c = 0, p1 = 0, max = 0, n2, p2 = 1;\n\n    while (cin >> n1 and n1 != 0) {\n        n0 = n1;\n        info_sequence(max, n0);\n        ++c;\n        if (max == n0) p1 = c;\n    }\n    while (cin >> n2 and n2 != max and n2 != 0) ++p2;\n\n    cout << max << ' ' << p1 << ' ';\n    if (n2 == max) cout << p2 << endl;\n    else cout << '-' << endl;\n}",
  "//P12509\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "import sys\n\ndef factorial(x):\n    \"\"\"This is a recursive function\n    to find the factorial of an integer\"\"\"\n\n    if x == 1:\n        return 1\n    else:\n        return (x * factorial(x-1))\n\n\nnum = 4\nprint(\"The factorial of\", num, \"is\", factorial(num))",
  "import sys\n\ndef factorial(x):\n    \"\"\"This is a recursive function\n    to find the factorial of an integer\"\"\"\n\n    if x == 1:\n        return 1\n    else:\n        return (x * factorial(x-1))\n\nx = int(sys.stdin.readline().strip())\nfor i in factorial(x):\n    print(x)\n\n#num = 4\n#print(\"The factorial of\", num, \"is\", factorial(num))\n\n\n",
  "import sys\n\ndef factorial(x):\n    \"\"\"This is a recursive function\n    to find the factorial of an integer\"\"\"\n\n    if x == 1 or x == 0:\n        return 1\n    else:\n        return (x * factorial(x-1))\n\nx = int(sys.stdin.readline().strip())\nprint('factorial' + '(' + str((x)) + ')' + ' -> ' + str(factorial(x)))\n\n#num = 4\n#print(\"The factorial of\", num, \"is\", factorial(num))\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    int fact = 0;\r\n    if(n==0) fact=1;\r\n    else{\r\n        int aux=1;\r\n        for(int i=1; i<=n ; ++i){\r\n            aux*=i;\r\n            fact = aux;\r\n        }\r\n    }\r\n    return fact;\r\n}\r\nint main(){\r\nint n;\r\ncin>>n;\r\ncout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n * factorial (n - 1);\n}\n\n\nint main () {\n    int nombre;\n    cin >> nombre;\n    cout << factorial (nombre) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else{\n        return n * factorial(n-1);\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) return n*factorial(n-1);\n    return n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) return n*factorial(n-1);\n    return 1;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n==0 or n==1 ) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==1)return n;\n    else return n*factorial(n-1);\n}\nint main(){\n    int a;\n    cin>>a;\n    cout<<factorial(a)<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==1)return n;\n    else return n*factorial(n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==1)return n;\n    else return n*factorial(n-1);\n}\nint main(){\n    int a;\n    while(cin>>a){\n    cout<<factorial(a)<<endl;\n    }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0)return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int p = 1;\n    for (int i = 1; i <= n; ++i) {\n        p *= i;\n    }\n    return p;\n}\n\nint main (){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n - 1);\n}\n\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n\n    if (n==0) return 1;\n    else return n * factorial (n-1);\n\n}\n\nint main(){\n\n    int n;\n\n    while (cin >> n){\n\n    cout << factorial(n) << endl;\n\n    }\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int x){\n\n    if (x == 0) return 1;\n\n    return x*factorial(x-1);\n\n    }\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "// Pre : n >= 0\n// Post : retorna el factorial de n\n\nint factorial ( int n ) {\nif ( n == 0 ) return 1 ;\nelse return nâ factorial ( n â 1 ) ;\n}\n",
  "// Pre : n >= 0\n// Post : retorna el factorial de n\n\nint factorial (int n) {\nif ( n == 0 ) return 1 ;\nelse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return factorial(n-1)*n;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  return n * factorial (n-1);\n}\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\r\n    if(n==0)return 1;\r\n    return factorial(n-1)*n;\r\n    \r\n\r\n}\r\n\r\nint main (){\r\n\r\n    cout<<factorial(4)<<endl;\r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int resultado;\n    if (n == 0) resultado = 1;\n    else resultado = n * factorial(n - 1);\n\n    return resultado;\n}\n\nint main(){\n    int numb;\n    cin >> numb;\n    cout << factorial(numb) << endl;\n}\n",
  "def factorial(n):\n    if n == 0: return 1\n    else: return n*factorial(n-1)\n\n",
  "# include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n  if (n == 1 or n == 0) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1; \n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n    \n}\n\n",
  "import sys\ns = sys.stdin.readline()\ns = int(s)\n\ndef rec_factorial(s):\n    if s <= 1:\n        return 1\n    else:\n        return s*rec_factorial(s-1)\nprint(rec_factorial(s))",
  "\n#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return (factorial(n-1)*n);\n}\n\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// Pre: 0 <= n <= 12\n// Post: return n! recursively.\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}",
  "'''\nfunction recursive_factorial(n)\n    if n <= 1 then\n        return 1\n    else\n        return(n x factorial(n - 1))\n'''\n\nimport sys\n\ndef recursive_factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return(n * recursive_factorial(n - 1))\n\nn = int(sys.stdin.readline().strip())\n\nprint(recursive_factorial(n))\n",
  "'''\nfunction recursive_factorial(n)\n    if n <= 1 then\n        return 1\n    else\n        return(n x factorial(n - 1))\n'''\n\nimport sys\n\ndef recursive_factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return(n * recursive_factorial(n - 1))\n\nn = int(sys.stdin.readline().strip())\n\nprint(recursive_factorial(n))\n",
  "'''\nfunction recursive_factorial(n)\n    if n <= 1 then\n        return 1\n    else\n        return(n x factorial(n - 1))\n'''\n\nimport sys\n\ndef recursive_factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return(n * recursive_factorial(n - 1))\n\nn = int(sys.stdin.readline().strip())\n\nwhile n != \"\":\n    print(recursive_factorial(n))\n    n = int(sys.stdin.readline().strip())\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n\n    return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n ",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n  if (n <= 1) return 1;\n  else return n * factorial (n-1);\n}\n\n\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n) {\n    if (n <= 1) return 1;\n    if (n == 2) return 2;\n    return n*factorial(n-1);\n }\n\nint main () {\n\tint n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "int factorial(int n)\r\n{\r\n\tif (n == 0)\treturn 1;\r\n\treturn n*factorial(n - 1);\r\n}",
  "import sys\ns = int(sys.stdin.readline())\n\ndef rec_factorial(s):\n    if s <= 1:\n        return 1\n    else:\n        return s*rec_factorial(s-1)\n\nwhile s is not None:\n    print(rec_factorial(s))\n    s = int(sys.stdin.readline())\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout <<factorial(n)<<endl;\n}\n",
  "\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}",
  "\n\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n\n}\n\n",
  "import sys\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\nn = int(sys.stdin.readline())\n\n# check if the number is negative\nif n < 0:\n   print(\"Sorry, factorial does not exist for negative numbers\")\nelif n == 0:\n   print(\"The factorial of 0 is 1\")\nelse:\n   print(\"The factorial of\", n, \"is\", factorial(n))",
  "import sys\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\nn = int(sys.stdin.readline())\n\n# check if the number is negative\nif n < 0:\n   print(\"Sorry, factorial does not exist for negative numbers\")\nelif n == 0:\n   print(1)\nelse:\n   print(\"The factorial of\", n, \"is\", factorial(n))",
  "import sys\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n   print(1)\nelse:\n   print(factorial(n))",
  "#include<iostream>\nusing namespace std;\n\nint factorial(n) {\n    if(n <= 1) return 1;\n    else return n*factorial(n-1);\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n <= 1) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    int result = 1;\r\n    while(n > 1){\r\n        result *= n;\r\n        --n;\r\n    }\r\n    return result;\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1)\n}\n\nint main() {\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n\n}\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n //casos base:\n    if ( n == 0) return 1;\n    return n*factorial(n -1);\n}\n\n\n\n\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// P12509: Recursive factorial\n\nint factorial(int n){\n    if(n > 0) return n*factorial(n - 1);\n    return 1;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f = 1;\n    while (n > 1) {\n        f = f * n;\n        --n;\n    }\n    return f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while (cin >> n){\n    cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << \"factorial de n Ã©s \" << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int fact=1;\n//     cas base: n=1\n    if (n==1) return fact;\n\n//      cas recursiu: n>1\n        return fact = n*fact *  factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n//     cas base: n=1\n        if (n==1) return 1;\n\n//      cas recursiu: n>1\n        return n *  factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n//     cas base: n=1\n        if (n==1 or n==0) return 1;\n\n//      cas recursiu: n>1\n        return n *  factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n\n\n    if (n==0) n=1;\n    else if(n>0) n=n*factorial(n-1);\n    return n ;\n\n\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t    cout << factorial(n) <<endl;\n\t }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else {\r\n        int ans = factorial(n - 1);\r\n\r\n        return ans * n;\r\n    }\r\n}",
  "# include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n>1) return(n*factorial(n-1));\n    else return(1);\n}\nint main(){\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\tint factorial(int n) {\r\n\t\tint resultat;\r\n\t\tif (n = 0) return 1;\r\n\t\telse return n*factorial (n - 1);\r\n\t}\r\n\tint main () {\r\n\t\tint num;\r\n\t\tcin >> num;\r\n\t\tcout << factorial (num) << endl;\r\n\t}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\tint factorial(int n) {\r\n\t\tif (n == 0) return 1;\r\n\t\telse return n*factorial (n - 1);\r\n\t}\r\n\tint main () {\r\n\t\tint num;\r\n\t\tcin >> num;\r\n\t\tcout << factorial (num) << endl;\r\n\t}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n        if (n == 0) return 1;\n        return n*factorial(n - 1);\n}\n\nint main () {\n        int n;\n        cin >> n;\n        cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int resultat;\r\n    resultat = n*factorial(n-1);\r\n    return resultat;\r\n}\r\n\r\nint main() {\r\n    cout << factorial(6) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint number_of_digits(int n){\n    if (n/10 == 0) return 1;\n    return number_of_digits(n/10) + 1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << number_of_digits(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    for(int x = n-1; x > 0; --x){\n            n = n * x;\n    }\n    return n;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) n = 1;\n    for(int x = n-1; x > 0; --x){\n            n = n * x;\n    }\n    return n;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n\r\n    int n;\r\n    cin >> n;\r\n\r\n    cout << factorial(n) << endl;\r\n\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    int result=1;\r\n    if (n>0){\r\n        result=n*factorial(n-1);\r\n    }\r\n    return result;\r\n}\r\n\r\nint main()\r\n{\r\n    int a;\r\n    cin >> a;\r\n    int fact = factorial(a);\r\n    cout << fact;\r\n\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact = 1;\n\n    for (int i = 1; i <= n; ++i) fact *= i;\n\n    return fact;\n}\n\nint main() {\n    int num;\n\n    while (cin >> num) cout << factorial(num) << endl;\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    int val = 1;\r\n    for(int i = 1; i <=n ; i++){\r\n        val = val * i;\r\n    }\r\n    return val;\r\n}\r\n\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0)\n        return 1;\n    else\n        return n*factorial(n-1);\n}\n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if(n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    for (int i = n-1; i > 0; --i) {\n        n = n*i;\n    }\n    return n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n > 0) {\n        for (int i = n-1; i > 0; --i) {\n            n = n*i;\n        }\n        return n;\n    }\n    else {\n        return 0;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n > 0) {\n        for (int i = n-1; i > 0; --i) {\n            n = n*i;\n        }\n        return n;\n    }\n    else {\n        return 0;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n > 0) {\n        for (int i = n-1; i > 0; --i) {\n            n = n*i;\n        }\n        return n;\n    }\n    else if (n == 0){\n        return 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n   int f = 1;\n   int i = 0;\n\n   while (i < n) {\n       i = i + 1;\n       f = f*i;\n   }\n   return f;\n}\n\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        n = 1;\n    }\n    else {\n        n = n*factorial(n-1);\n    }\n    return n;\n}\n\nint main () {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n > 1) return n*factorial(n - 1);\r\n    else return 1;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int x) {\r\n    int total = 1;\r\n    if (x == 0) return total;\r\n    return x * factorial(x - 1);\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n\r\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n > 0) return n*factorial(n - 1);\r\n    else return 1;\r\n}\r\n\r\nint  main () {\r\n    int num;\r\n\r\n    while (cin >> num) {\r\n        cout << factorial(num) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n - 1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int x = factorial(n);\n    cout << x << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial (n - 1);\n}\nint main() {\n    int x;\n    while (cin >> x)\n        cout << factorial(x) << endl;\n}\n",
  "int factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n)\n{\n    if (n == 0) return 1;\n    int result = n * factorial(n-1);\n    return result;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact = n;\n    if (n != 1) return (fact*factorial(n-1));\n    return fact;\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        if (n == 0) cout << n+1 << endl;\n        else if (n == 1) cout << n << endl;\n        else cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    return factorial(n-1) * n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial( int n ) {\n    \n    if ( n == 1 ) return 1;\n    else return n * factorial( n - 1 );\n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial( int n ) {\n    \n    if ( n <= 1 ) return 1;\n    else return n * factorial( n - 1 );\n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n    int factorial (int n) {\n    if (n == 0) {\n        n = 1;\n    }\n    else {\n        n = n * factorial (n - 1);\n    }\n    return n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n        cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial (int n) {\n   int sum = 1;\n   for (int i = 1; i <= n; ++i) {\n      sum *= i;\n   }\n   return sum;\n}\n\n\nint main() {\n   int n;\n   cin >> n;\n\n   cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint number_of_digits(int n) {\n   int sum = 0;\n   if (n == 0) sum = 1;\n   else while (n != 0) {\n      ++sum;\n      n /= 10;\n   }\n   return sum;\n}\n\nint main() {\n   int n;\n   cin >> n;\n\n   cout << number_of_digits(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint number_of_digits(int n) {\n   int sum = 0;\n   if (n == 0) sum = 1;\n   else while (n != 0) {\n      ++sum;\n      n /= 10;\n   }\n   return sum;\n}\n\nint main() {\n   int n;\n   cin >> n;\n\n   cout << number_of_digits(n) << endl;\n}\n",
  "/*\nWrite a function that returns n!.\n\nSolve this problem recursively.\n\nInterface\nC++\n     int factorial(int n);\n\nPrecondition\nAssume 0â¤ n â¤ 12.\n\nObservation You only need to submit the required procedure; your main program will be ignored.\n*/\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int result = 0;\n    if (n == 0) result = 1;\n    else result = n * factorial(n - 1);\n    return result;\n}\n\nint main() {\n    int num;\n    while (cin >> num) {\n        cout << factorial(num) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int x = n;\n    if (n > 1) x *= factorial(n-1);\n    else return x;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return factorial(n - 1) * n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n\n    cout << endl;\n}\n",
  "int factorial(int n){\n    if(n==0) return n;\n    return n * factorial(n-1)\n}\n",
  "int factorial(int n){\n    if(n==0) return n;\n    return n * factorial(n-1);\n}\n",
  "int factorial(int n){\n    if(n==0) return 1;\n    return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int);\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n\nint factorial (int n) {\n    if (n == 0) n = 1;\n    if (n > 1) n *= factorial(n-1);\n\n    return n;\n}",
  "int factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint result=1;\n\tfor (int i; i<n; ++i){\n\t\tresult=result*i;\n\t}\n\treturn result;\n}\n\nint main(){\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint result=1;\n\tfor (int i=1; i<n; ++i){\n\t\tresult=result*i;\n\t}\n\treturn result;\n}\n\nint main(){\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//pre: 0 <= n <= 12\r\nint factorial(int n) {\r\n    int m = n;\r\n    if (n == 0 or n == 1) return 1;\r\n    if (n > 1) return m*factorial(n-1);\r\n}\r\n\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint result=1;\n\tfor (int i=1; i<=n; ++i){\n\t\tresult=result*i;\n\t}\n\treturn result;\n}\n\nint main(){\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//pre: 0 <= n <= 12\r\n//post: factorial\r\nint factorial(int n) {\r\n    int m = n;\r\n    if (n == 0 or n == 1) return 1;\r\n    else return m*factorial(n-1);\r\n}\r\n\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}",
  "#include<iostream>\r\n#include<cmath>\r\n#include<iomanip>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int temp = 0; \r\n    if(n <= 1) return 1;\r\n    else{\r\n        n = n * factorial((n-1));\r\n        return n;\r\n    }\r\n    \r\n}\r\n\r\nint main(){\r\n\r\n    int n;\r\n    while(cin>>n){\r\n        cout << factorial(n) <<endl;\r\n    }\r\n    \r\n}",
  "#include<iostream>\r\n#include<cmath>\r\n#include<iomanip>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n    if(n <= 1) return 1;\r\n    else{\r\n        n = n * factorial((n-1));\r\n        return n;\r\n    }\r\n    \r\n}\r\n\r\nint main(){\r\n\r\n    int n;\r\n    while(cin>>n){\r\n        cout << factorial(n) <<endl;\r\n    }\r\n    \r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) {\n    return factorial(n-1)*n;\n    }\n    else return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n*(factorial(n-1));\n    if (n == 0) return 1;\n    else return n;\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint res=0;\n\t\n\tif(n==1) res=1;\n\telse {\n\t\tres=n*factorial(n-1);\n\t} return res;\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//performs recursively the factorial of n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint res=0;\n\t\n\tif(n==0) res=1;\n\telse {\n\t\tres=n*factorial(n-1);\n\t} return res;\n}\n\nint main() {\n}\n",
  "#include <iostream>\n#include <vector>\n\n\tusing namespcae std;\n\t\n\tint factorial(int n) {\n\t\n\tint res ;\n\tif (n == 0) res = 1 ;\n\t\n\telse res = n * factorial (n â 1) ;\n\treturn res;\n\t\n\t}\n\t\n\t\n\tint main() {\n\tint res;\n\tint x;\n\t\n\tcin >>x;\n\t\n\tcout << factorial(x) <<endl;\n\t\n\t}\n",
  "#include <iostream>\n#include <vector>\n\n\tusing namespace std;\n\t\n\tint factorial(int n) {\n\t\n\tint res ;\n\tif (n == 0) res = 1 ;\n\t\n\telse res = n * factorial (n - 1) ;\n\treturn res;\n\t\n\t}\n\t\n\t\n\tint main() {\n\tint res;\n\tint x;\n\t\n\tcin >>x;\n\t\n\tcout << factorial(x) <<endl;\n\t\n\t}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n < 3){\n    if (n != 0) return n;\n    else return 1;\n  \n  }\n  else {\n    int z = factorial(n - 1);\n    return (n * z);\n  }\n}\n\n\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n * factorial (n-1);\n}\n\nint main () {\nint x;\ncin >> x;\ncout << factorial (x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) n = 1;\n    else {\n        n *= factorial (n-1);\n    }\n    return n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if (n > 0) return n *factorial (n - 1);\n    return 1;\n\n }\n\n int main (){\n     int n;\n     cin >> n;\n\n     cout << factorial(n) << endl;\n }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nint fact = 1;\nfor (int i = 0; i < n; ++i) {\nfact = fact * i;\n}\nif (n <= 1) return 1;\nelse return n*factorial(n - 1);\n}\n\nint main () {\nint n;\nwhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    int f = 1;\r\n    int i = 0;\r\n\r\n    while (i < n) {\r\n        i += 1;\r\n        f *= i;\r\n    }\r\n    return f;\r\n}",
  "// (c) FIBerHub, https://fiberhub.tk\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n\n}\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n\n\n}\n",
  "int factorial(int n) {\n     if (n <= 1) return 1;\n     else  return (factorial(n - 1) * n);\n }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    if(n==1) return 1;\n    return n*factorial(n-1);\n}\n/*\nint main(){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n > 0) return n*factorial(n-1);\n    else return 1;\n}\n\n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "using namespace std;\n#include <iostream>\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int aux;\n    if (n == 1 or n == 0) return 1;\n    else  return n*factorial(n-1);\n}\n\nint main() {\n    bool primero = true;\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1 or n == 0) return 1;\n    else  return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else{\n        n = n * factorial(n-1);\n        return n;\n    }\n\n\n}\n\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else{\n        n = n * factorial(n-1);\n        return n;\n    }\n\n\n}\n\n\nint main(){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else{\n        n = n * factorial(n-1);\n        return n;\n    }\n\n\n}\n\n\nint main(){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\nint factorial(int n) {\n  if (n == 0) return 1;\n\n  else return n*factorial;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\nint factorial(int n) {\n  if (n == 0) return 1;\n\n  else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n <= 1){\n    n = 1;\n    return n;\n  }\n  else return n * factorial(n - 1);\n}\n\nint main(){\n  int a;\n  cin >> a;\n  int fact = factorial(a);\n  cout << fact << endl;\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int f=1, i=1;\r\n    if (n==0) return f;\r\n    else {\r\n        while (i<=n){\r\n            f=f*i;\r\n            i++;\r\n        }\r\n        return f;\r\n    }\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint result = 0;\r\n\tif (n == 0) result = 1;\r\n\telse result = n * factorial(n - 1);\r\n\treturn result; \r\n\t}\r\n\r\nint main() {\r\n\tint num;\r\n\twhile (cin >> num) {\r\n\tcout << factorial(num) << endl;\r\n\t}\r\n}\r\n",
  "int factorial(int n) {\n    if (n < 2) return 1;\n    return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: 0 <= n <= 12\n//Post: result of n!\nint factorial(int n){\n  int result = 0;\n\n  if (n == 0) result = 1;\n  else result = n * factorial(n-1);\n\n  return result;\n}\n\nint main(){\n  int n;\n  while (cin >> n) cout << factorial(n) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int aux=1;\n    int gj=n;\n    n=n-1;\n    if(n<=0) return aux;\n    else aux=gj*factorial(n);\n}\n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int aux=1;\n    n=n;\n    if(n==0) return aux;\n    else return n*factorial(n-1);\n}\n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n){\n    if (n <= 1) return 1;\n    else{\n        return n*factorial(n - 1);\n    }\n }\n int main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n/*\nint main() {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}*/\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nbool is_increasing(int n);\n\n    if (n <= 9) return true;\n    else if (n%10 < ((n/10)%10))return false;\n    else return is_increasing(n/10);\n\nint main() {\n    int n;\n    while (cin >> n) cout << (is_increasing(n) ? \"true\" : \"false\") << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nbool is_increasing(int n){\n\n    if (n <= 9) return true;\n    else if (n%10 < ((n/10)%10))return false;\n    else return is_increasing(n/10);\n\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << (is_increasing(n) ? \"true\" : \"false\") << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nbool is_increasing(int n){\n\n    if (n <= 9) return true;\n    else if (n%10 < ((n/10)%10))return false;\n    else return is_increasing(n/10);\n\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << is_increasing(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nbool is_increasing(int n){\n\n    if (n <= 9) return true;\n    else if (n%10 < (n/10)%10)return false;\n    else return is_increasing(n/10);\n\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << is_increasing(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nbool is_increasing(int n){\n\n    if (n <= 9) return true;\n    else if (n%10 < (n/10)%10)return false;\n    else return is_increasing(n/10);\n\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0)\r\n        return 1;\r\n    else if (n == 1)\r\n        return n;\r\n    else\r\n        return n * factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0)\r\n        return 1;\r\n    else\r\n        return n * factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    cout << factorial(0) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if ( n <= 1 ) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return factorial(n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Precondition: Assume 0â¤ n â¤ 12.\n\n//Postcondition: Return n!.\n\nint factorial(int n) {\n    int factorial_ret = 1;\n    while (n > 0) {\n        for (int i = 1; i <= n; ++i)\n            factorial_ret *= i;\n        //4 = 1x2x3x4\n    }\n    return factorial_ret;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n//Precondition: Assume 0â¤ n â¤ 12.\n\n//Postcondition: Return n!.\n\nint factorial(int n) {\n    int factorial_ret = 1;\n    while (n > 0) {\n        for (int i = 1; i <= n; ++i)\n            factorial_ret *= i;\n        //4 = 1x2x3x4\n    }\n    return factorial_ret;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n//Precondition: Assume 0â¤ n â¤ 12.\n\n//Postcondition: Return n!.\n\nint factorial(int n) {\n    int factorial_ret = 1;\n    for (int i = 1; i <= n; ++i) {\n        factorial_ret *= i;\n        //4 = 1x2x3x4\n    }\n\n    if (n == 0) factorial_ret = 1;\n    return factorial_ret;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return factorial(n - 1)*n;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0){\n        return 1;\n    }\n    return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n){\r\n    if(n == 0) return 1;\r\n    else if (factorial > 0) return n*factorial*(n-1);\r\n }",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n){\r\n    if(n == 0) return 1;\r\n    else if (n > 0) return n*factorial*(n-1);\r\n }",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n){\r\n    if(n == 0) return 1;\r\n    else  return n*factorial(n-1);\r\n }",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial (n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\nif (n == 0) return 1;\nelse return n*factorial(n-1);}\n\nint main () {}\n",
  "#include  <iostream>\n\nusing namespace std;\nint factorial (int n);\n\nint main () {\n    \n    int n;\n    cin >> n;\n    n++;\n    cout << factorial (n) << endl;\n    \n}\n\nint factorial (int n) {\n\n    \n    if(n <= 1) return 1;\n    n--;\n    return n * factorial (n);\n}",
  "#include  <iostream>\n\nusing namespace std;\nint factorial (int n);\n\nint main () {\n    \n    int n;\n    cin >> n;\n    \n    cout << factorial (n) << endl;\n    \n}\n\nint factorial(int n) {\n  if(n > 1)\n    return n * factorial(n - 1);\n  else\n    return 1;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    n = n* factorial(n-1);\n    return n;\n}\n\nint main()\n{\n    \n}\n",
  "// (c) FIBerHub, https://fiberhub.tk\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    if (n == 1) return n; \r\n    return factorial(n - 1) * n;\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f = 0;\n    if(n <= 1) {\n        f = 1;\n    }\n    else {\n        f = n*factorial(n-1);\n    }\n    return f;\n}\n\nint main() {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "int factorial(int n) {\r\n    if (n > 1) return n * factorial(n - 1);\r\n    else return 1;\r\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n if (n == 0)\n return 1;\n else \n return n*factorial(n-1);\n}\n    int main (){\n    int n;\n    while (cin >> n){\n    cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return factorial(n - 1) * n;\r\n}\r\n",
  "int factorial(int n){\n    if(n==1 or n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\r\n}\r\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//pre: 0 <= n <= 12\r\n//post: n!\r\nint factorial(int n) {\r\n    int fact = 0;\r\n    if (n == 0) fact = 1;\r\n    else fact = n * factorial(n - 1);\r\n    return fact;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n < 2) return 1;\r\n    return n * (factorial(n - 1));\r\n}\r\n\r\nint main() {\r\n    cout << factorial(0) << endl;\r\n    cout << factorial(1) << endl;\r\n    cout << factorial(2) << endl;\r\n    cout << factorial(3) << endl;\r\n    cout << factorial(4) << endl;\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    \n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n    int m;\n    cin >> m;\n    cout << factorial(m) << endl;\n\n    return 0;\n}\n\nint factorial(int n) {\n    if (n == 0)\n        return 1;\n\n    return n * factorial(n-1);\n}\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n < 2) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin  >> n;\r\n    cout << factorial (n) << endl;\r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n\n    return n*factorial(n - 1);\n}\n\n\n// int main() {\n//     int x;\n//     while (cin >> x) {\n//         cout << factorial(x) << endl;\n//     }\n// }\n",
  "#include <iostream>\nusing namespace std;\n\n\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n\n}\n",
  "int factorial(int n) {\n    if (n == 0) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial (int n) {\r\n\tif (n <= 1) return 1;\r\n\treturn n*factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n\treturn 0;\r\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0 or n == 1) return 1;\r\n\treturn n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }  \n    \n}\n//pre: 0 â¤ n â¤ 12.\n//post: return n!\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nint f;\nif (n <= 1) f = 1;\nelse f = n*factorial(n-1);\n\nreturn f;\n}\nint main() {\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nlong int factorial (int n){\n  long int e = 1;\n  for (int i = 1; i <= n; ++i){\n   \n    e = e*i;\n      \n  }\n\n  return e;\n  if (n == 0){\n    e = 1;\n    return e;\n  }\n  \n  }\nint main() {\n  int x;\n  cin >> x;\n\n  cout << factorial(x) << endl;\n  \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial (int n){\n   int e = 1;\n  for (int i = 1; i <= n; ++i){\n   \n    e = e*i;\n      \n  }\n\n  return e;\n  if (n == 0){\n    e = 1;\n    return e;\n  }\n  \n  }\nint main() {\n  int x;\n  cin >> x;\n\n  cout << factorial(x) << endl;\n  \n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (int n == 0) n = 1;\r\n\telse n = n * factorial(n - 1);\r\n\r\n\treturn n;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) n = 1;\r\n\telse n = n * factorial(n - 1);\r\n\r\n\treturn n;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tint res;\n\tif (n==0) res=1;\n\telse res=n*factorial(n-1);\n\treturn res;\n}\n\nint main(){\nint n;\ncin>>n;\nn=factorial(n);\ncout<<n<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint res;\n\tif (n==0) res=1;\n\telse res=n*factorial(n-1);\n\treturn res;\n\t}\n\nint main() {\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n//Pre: n es un numero entre 0 y 12, ambos incluidos\n//Post: devuelve el factorial de n\n    if (n <= 1) return 1; //caso base: n <= 1\n    else return factorial(n-1) * n; //caso recursivo\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n * int factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int f=1, i=0;\n    while(i<n){\n        i++;\n        f*=i;\n    }\n    return f;\n}\nint main() {\n    cout << factorial(4) << endl << factorial(2) << endl << factorial(3) << endl;\n\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int res;\n    if(n==0) res = 1;\n    else res = n*factorial(n-1);\n    return res;\n}\nint main() {\n    cout << factorial(4) << endl << factorial(2) << endl << factorial(3) << endl;\n\n    return 0;\n}",
  "#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n < 1) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\t\r\n\tcin >> n;\r\n\t\r\n\tcout << factorial (n) << endl;\r\n\t\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    int result = 1;\r\n    for (int i = 1; i <= n; ++i){\r\n        result *= i;\r\n    }\r\n    n = result;\r\n    return n;\r\n    \r\n\r\n}\r\nint main (){\r\n    int n;\r\n    while (cin >> n){\r\n        cout << factorial (n) << endl;        \r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n > 0)\r\n        return n*factorial(n - 1);\r\n\r\n    return 1;\r\n}\r\nint main (){\r\n    int n;\r\n    while (cin >> n){\r\n        cout << factorial (n) << endl;        \r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n\t\r\n}\r\nint main() {\r\n}\r\n",
  "from yogi import read\r\n\r\ndef factorial(n):\r\n    fact = 1\r\n    while n > 0:\r\n        fact *= n\r\n        n -= 1\r\n        factorial(n)\r\n    return fact\r\n\r\nwhile(True):\r\n    n = read(int)\r\n    print(factorial(n))",
  "from yogi import read\r\n\r\ndef factorial(n):\r\n    if n == 1 or n == 0:\r\n        resultado = 1\r\n    else: resultado = n*factorial(n-1)\r\n    return resultado\r\n\r\nwhile(True):\r\n    n = read(int)\r\n    print(factorial(n))",
  "from yogi import read\r\n\r\ndef factorial(n):\r\n    if n == 1 or n == 0:\r\n        resultado = 1\r\n    else: resultado = n*factorial(n-1)\r\n    return resultado\r\n\r\nwhile(True):\r\n    n = read(int)\r\n    print(factorial(n))",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int r = 1;\n    for (int i = 1; i <= n; ++i){\n        r = r*i;\n    }\n    n = r;\n    return n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int result = 1;\n    if (n > 0) {\n        result = n * factorial(n - 1);\n    }\n    return result;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}",
  "def factorial(n):\n    if n == 0: return 1\n    return n*factorial(n-1)",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) n = 1;\r\n    else factorial(n*(n-1));\r\n\r\n    return n;\r\n}",
  "#include <iosatream>\n\nusing namespace std;\nint factorial (int n){\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\nint main(){\n    int x;\n    cin >>x;\n    cout << factorial(x) << endl;\n\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n <= 1) return 1;\n  else return (n * factorial(n-1));\n}",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial (n-1) * n;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if (n<2) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }  \r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n <= 0){\r\n        return 1;\r\n    }else{\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\n\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) n = 1;\r\n    else factorial(n*(n-1));\r\n\r\n    return n;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int f = 1;\n  int i = 0;\n\n  while(i < n) {\n    i += n;\n    f *= i;\n  }\n  return f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int f = 1;\n  int i = 0;\n\n  while(i < n) {\n    i += 1;\n    f *= i;\n  }\n  return f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint hola;\r\n\tstd::cin >> hola;\r\n\tstd::cout << factorial(hola) << \"\\n\";\r\n\treturn 0;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n,int l){\n    while(n>1) {\n        \n    l=l*n;\n    n=n-1;\n\n    }\n    \n    return l;\n\n\n}\n\nint main() {\n    int n;\n    cin >>n;\n    int l=1;\n\n    cout <<factorial(n,l)<<endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){   \n\n    int a=1;        //parto desde 1 y irÃ© sumando las multiplicaciones que haga\n    while(n>1) {      \n        a=a*n;    //multiplico los numeros que hay hasta llegar a \"n\"\n        n=n-1;   //parto desde n y voy restandole uno cada vez \n    }\n    \n    return a;   // devuelvo el resultado\n\n}\n\nint main() {\n    int n;\n    cin >>n;\n    int a=1;\n\n    cout <<factorial(n)<<endl;\n\n}\n",
  "\nint factorial(int n){\n\n    if (n>1){\n        return n*factorial(n-1);\n    }\n    else{\n        return 1;\n    }\n}    \n\nint main(){\n} \n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int shiro){\r\n    if (shiro == 0) return 1;\r\n    else return factorial(shiro -1) * shiro;\r\n}\r\n\r\nint main(){\r\n    int shiro; cin >> shiro;\r\n    cout << factorial(shiro) << endl;\r\n}\r\n",
  "# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nÃrea de ProgramaciÃ³ de lâoferta de llocs escolars\r\nDirecciÃ³ General de Centre PÃºblics\r\nDepartament dâEducaciÃ³\r\n\r\n\r\n\r\nAutor: Baltasar SalvÃ \r\nData: 26/01/2023\r\n\r\nActivitat: Jutge\r\nExercici: P12509   recursive factorial\r\nVersiÃ³: 1.\r\n\r\nWrite a function that returns n!.\r\n\r\nSolve this problem recursively.\r\n\r\nfactorial(n)  # returns int\r\n \t\r\n     factorial(n: int) -> int\r\n\r\nEspecificacions d'entrada: Assume 0â¤ n â¤ 12.\r\n\r\nObservation You only need to submit the required procedure; your main program will be ignored.\r\n\r\nJoc de proves: No n'hi ha.\r\n\r\n\"\"\"\r\n\r\n\r\ndef factorial(n: int):\r\n    if n == 1:\r\n        f = 1\r\n    else:\r\n        f = n * factorial(n-1)\r\n    \r\n    return f\r\n\r\n# kaka = int(input(\"nÃºmero?\")) #------------------------\r\n# print(f\"El factorial de {kaka} Ã©s {factorial(kaka)}\") #------------------------",
  "# -*- coding: utf-8 -*-\r\n\r\n\"\"\"\r\nÃrea de ProgramaciÃ³ de lâoferta de llocs escolars\r\nDirecciÃ³ General de Centre PÃºblics\r\nDepartament dâEducaciÃ³\r\n\r\n\r\n\r\nAutor: Baltasar SalvÃ \r\nData: 26/01/2023\r\n\r\nActivitat: Jutge\r\nExercici: P12509   recursive factorial\r\nVersiÃ³: 1.\r\n\r\nWrite a function that returns n!.\r\n\r\nSolve this problem recursively.\r\n\r\nfactorial(n)  # returns int\r\n \t\r\n     factorial(n: int) -> int\r\n\r\nEspecificacions d'entrada: Assume 0â¤ n â¤ 12.\r\n\r\nObservation You only need to submit the required procedure; your main program will be ignored.\r\n\r\nJoc de proves: No n'hi ha.\r\n\r\n\"\"\"\r\n\r\n\r\ndef factorial(n: int):\r\n    if n == 0:\r\n        f = 1\r\n    else:\r\n        f = n * factorial(n-1)\r\n    \r\n    return f\r\n\r\n# kaka = int(input(\"nÃºmero?\")) #------------------------\r\n# print(f\"El factorial de {kaka} Ã©s {factorial(kaka)}\") #------------------------",
  "#include<iostream>\n#include<vector>\nusing namespace std;\n\n// Retornar el factorial del nombre n\nint factorial(int n);\n\nint factorial(int n) {\n    // cas base: es el 0\n    if (n == 0) return 1;\n    // cas general\n    return n * factorial(n-1);\n}\n\n/*\n3!  ?\nfactorial(3) = 3 * factorial(2) = 3 * 2 = 6\nfactorial(2) = 2 * factorial(1) = 2 * 1 = 2\nfactorial(1) = 1 * factorial(0) = 1 * 1 = 1\nfactorial(0) = 1\n\n\n*/\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "int factorial(int n){\r\n    if(n == 0){\r\n        return 1;\r\n    } else {\r\n        return n * factorial(n - 1);\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\nint res;\n  if(n==0)res=1;\n  else res=n*factorial(n-1);\n  \n return res;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int num) {\r\n\tif (num > 1)\r\n\t\treturn factorial(num - 1) * num;\r\n\telse return 1;\r\n}\r\n\r\nint main() {\r\n\tint num;\r\n\tcin >> num;\r\n\r\n\tcout << factorial(num) << endl;\r\n\r\n\treturn 0;\r\n}",
  "def factorial(n):\n    if n <= 1:\n        return 0\n    else:\n        return n * factorial(n - 1)\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else {\n        return factorial(n - 1)*n;\n    }\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n)\r\n{\r\n\tif (n == 0)\r\n\t{\r\n\t\treturn 1;\r\n\t}\r\n\r\n\telse\r\n\t{\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\tcin >> n;\r\n\r\n\tint solution = factorial(n);\r\n\r\n\tcout << solution << endl;\r\n\r\n\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n)\r\n{\r\n\tif (n == 0)\r\n\t{\r\n\t\treturn 1;\r\n\t}\r\n\r\n\telse\r\n\t{\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\tcin >> n;\r\n\r\n\tint solution = factorial(n);\r\n\r\n\tcout << solution << endl;\r\n\r\n\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main() {\r\n\tint n, result;\r\n\r\n\tcout << \"introduce un numero\" << endl;\r\n\tcin >> n;\r\n\r\n\t//result = factorial(n);\r\n\tcout << factorial(n) << endl;\r\n\r\n}\r\n\r\n\r\nint factorial(int n) {\r\n\tif (n > 1) {\r\n\r\n\t\tcout << n << endl;\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\telse { return 1; }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else{\n        return n*factorial(n-1);\n    }\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout << factorial(n) << endl;\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else return (n * factorial(n-1));\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else if (n <= 2 and n != 0) return n; \n    else {\n        n = n*factorial(n-1);\n        return n;\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n\nif (n==0) n=1;\n\nelse n = n * factorial (n-1);\n\n\nreturn n;\n\t\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n\tif (n == 0)\r\n\t{\r\n\t\treturn 1;\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n};\r\n\r\n\r\nint main() {\r\n\tint x;\r\n\twhile (cin >> x) {\r\n\t\tcout << factorial(x) << endl;\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//EXERCICIS JUTGE AJAJAJAJ//\r\nint factorial(int n) {\r\n\tif (n > 1) return n * factorial(n - 1);\r\n\telse {\r\n\t\treturn 1;\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tcout << factorial(0) << endl;\r\n\tcout << factorial(3) << endl;\r\n\tcout << factorial(4) << endl;\r\n}",
  "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\n\nint factorial(int x){\n    vector<int> memo = {1,1};\n\n    for(int i=2; i<=x; ++i) memo.push_back(memo[i-1]*i);\n    return memo[x-1];\n}\n\nint main(){\n\n    int n;\n    while (cin>>n) cout<<factorial(n)<<endl;\n}\n\n",
  "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\n\nint factorial(int x){\n    vector<int> memo = {1,1};\n\n    for(int i=2; i<=x; ++i) memo.push_back(memo[i-1]*i);\n    return memo[x-1];\n}\n\nint main(){\n\n    int n;\n    while (cin>>n) cout<<factorial(n)<<endl;\n}\n\n",
  "/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\nint factorial (int n);\n\nint factorial (int n)\n{\n        if (n==0)\n        {\n          n=1;  \n        }\n        else\n        {\n            n=n*factorial(n-1);\n        }\n        return n;\n    }\nint main()\n{\n   \n    int resultado = int factorial (int 6);\n    \n    cout<<resultado;\n\n  \n}\n",
  "/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\nint factorial (int n);\n\nint factorial (int n)\n{\n        if (n==0)\n        {\n          n=1;  \n        }\n        else\n        {\n            n=n*factorial(n-1);\n        }\n        return n;\n    }\nint main()\n{\n   int resultado = factorial(6);\n    cout << resultado << endl;\n    return 0;\n    \n\n  \n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 0 ) return 1;\n    else return n * factorial (n-1);\n}\n",
  "//recursive factorial\n//reads a number n and prints n!\n//input: 1 integer number n. 0 <= n <= 12\n//output: n!\n\n\n#include <iostream>\nusing namespace std;\n\n\n//pre: n\n//post: n!\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else if (n <= 2 and n != 0) return n; \n    else {\n        n = n*factorial(n-1);\n        return n;\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    int result = 1;\r\n    while(n > 1){\r\n        result *= n;\r\n        --n;\r\n    }\r\n    return result;\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n\n    cout << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) n = 1;\n    for(int x = n-1; x > 0; --x){\n            n = n * x;\n    }\n    return n;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n",
  "\nint factorial (int n){\n    if ( n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\n#include <vector>\r\n#include <map>\r\n#include <algorithm>\r\n#include <string>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n<2) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "//Factorial recursiu\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n   int f = 1;\n   int i = 0;\n\n   while (i < n) {\n       i = i + 1;\n       f = f*i;\n   }\n   return f;\n}\n\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n\n\n",
  "function factorial(n):\r\n\tif n==0:\r\n\t\treturn 1\r\n\telse:\r\n\t\treturn n*factorial(n-1)",
  "def factorial(n):\r\n\tif n==0:\r\n\t\treturn 1\r\n\telse:\r\n\t\treturn n*factorial(n-1)",
  "def factorial(n):\r\n\tif n==0:\r\n\t\treturn 1\r\n\telse:\r\n\t\treturn n*factorial(n-1)",
  "def factorial(n):\r\n\tif n==0:\r\n\t\treturn 1\r\n\telse:\r\n\t\treturn n*factorial(n-1)",
  "def factorial(n):\r\n\tif n==0:\r\n\t\treturn 1\r\n\telse:\r\n\t\treturn n*factorial(n-1)\r\n\r\nn=1\r\nprint factorial(n)",
  "def factorial(n):\r\n\tif n==0:\r\n\t\treturn 1\r\n\telse:\r\n\t\treturn n*factorial(n-1)\r\n\r\nprint factorial(2)",
  "from jutge import read\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\n def factorial(n):\n \t#base case\n \tif n == 1:\n \t\treturn 1\n \telse:\n \t\treturn n*factorial(n-1)",
  "def factorial(n):\n \t#base case\n \tif n == 1:\n \t\treturn 1\n \telse:\n \t\treturn n*factorial(n-1)",
  "from jutge import read\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n\ndef factorial(n):\n \t#base case\n \tif n == 1:\n \t\treturn 1\n \telse:\n \t\treturn n*factorial(n-1)",
  "from jutge import read\n\nn = read(int)\n\ndef factorial(n):\n\tif n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n*factorial(n-1)\nwhile n is not None:\n  print(factorial(n))\n  n = read(int)\n\n",
  "from jutge import read\n\ndef factorial(n):\n    if (n == 0):\n        return 1\n    else:\n        return n*factorial(n-1)\n\nn = read(int)\nwhile n is not None: \n  print(factorial(n))\n  n = read(int)\n",
  "def factorial(n):\n    if (n == 0):\n        return 1\n    else:\n        return n*factorial(n-1)\n",
  "def factorial(n):\r\n    if n == 0 or n == 1:\r\n        return 1\r\n    else:\r\n        return (n * factorial(n-1))\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0) {\r\n        return 1;\r\n    } else {\r\n        return factorial(n - 1) * n;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "// Write a function that returns n!.\r\n//Precondition\r\n// Assume 0â¤ n â¤ 12.\r\n\r\n\r\n#include  <stdio.h>\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 1){\r\n        return 1;\r\n    } else {\r\n        return (n * factorial(n-1));\r\n    }\r\n}\r\n\r\n\r\n\r\nint main (void) {\r\n    int n,r;\r\n    printf(\"Escriba un factorial a calcular: \");\r\n    scanf(\"%i\",&n);\r\n    r = factorial(n);\r\n    printf(\"el factorial es: %i \\n\",r);\r\n}\r\n",
  "// Write a function that returns n!.\r\n//Precondition\r\n// Assume 0â¤ n â¤ 12.\r\n\r\n\r\n#include  <stdio.h>\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 1){\r\n        return 1;\r\n    } else {\r\n        return (n * factorial(n-1));\r\n    }\r\n}\r\n\r\n\r\n/*\r\nint main (void) {\r\n    int n,r;\r\n    printf(\"Escriba un factorial a calcular: \");\r\n    scanf(\"%i\",&n);\r\n    r = factorial(n);\r\n    printf(\"el factorial es: %i \\n\",r);\r\n} */\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) n = 1;\n    else {\n        n *= factorial (n-1);\n    }\n    return n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) return n*factorial(n - 1);\n    return 1;\n\n\n}\n\n\nint main() {\n    int x;\n\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n\n}\n",
  "# include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n>1) return(n*factorial(n-1));\r\n    else return(1);\r\n}\r\nint main(){\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n > 0)\r\n        return n*factorial(n - 1);\r\n\r\n    return 1;\r\n}\r\nint main (){\r\n    int n;\r\n    while (cin >> n){\r\n        cout << factorial (n) << endl;        \r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n > 0) return n*factorial(n - 1);\n    return 1;\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) return n*factorial(n-1);\n    return 1;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\tint factorial(int n) {\r\n\t\tif (n == 0) return 1;\r\n\t\telse return n*factorial (n - 1);\r\n\t}\r\n\tint main () {\r\n\t\tint num;\r\n\t\tcin >> num;\r\n\t\tcout << factorial (num) << endl;\r\n\t}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1; //porque al llamar la funciÃ³n, cuando n = 1, 1*1 = 1 por lo que no se ve afectado. Otra alternativa (n <= 1)\n    else return factorial(n - 1)*n;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n);\r\n\r\nint factorial(int n) {\r\n  if (n == 0) return 1;\r\n\r\n  else return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }",
  "#include <iostream>\nusing namespace std;\n\n\n\nvoid fact_aux(int &n, int &res){\n\tif(n >1){\n\t\tres = res*n;\n\t\t--n;\n\t\tfact_aux(n, res);\n\t}\n}\n\nint factorial(int n){\n\tint res = 1;\n\tfact_aux(n, res);\n\treturn res;\t\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n\r\n}",
  "//FACTORIAL NUMBER (RECURSION): \n\n#include <iostream> \nusing namespace std; \n\n//PRECONDITION: given a natural number n. \n//POST-CONDITON: returns its factorial number. \nint factorial(int n) { \n    //BASIC CASE: \n    // 0! --> 1; \n    // 1! --> 1; \n    if (n == 0 or n == 1) return 1; \n    //RECURSIVE CASE: \n    // n != BASIC CASE. --> n*(n-1)!. \n    else return n*factorial(n-1); \n}\n\nint main ()  { \n    int n; //variable that we're going to pass. \n    while (cin >> n) { \n        cout << factorial(n) << endl; \n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n    if (n == 0) return 1;\r\n    return factorial(n-1)*n;\r\n}\r\n\r\nint main() {\r\n\r\n    int n;\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n/*\nint main (){\n    int n;\n    while (cin>>n) cout<<factorial(n)<<endl;\n}\n*/\n",
  "//Recursive factorial\n//FunciÃ³n recursiva que devuelve n!\n\n#include <iostream>\nusing namespace std;\n\n//Pre: 0 <= n <= 12\n//Post: n!\n\nint factorial(int n) {\n   int fact = 1;\n   int i = 0;\n   while (i < n) {\n       ++i;\n       fact *= i;\n   }\n   return fact;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n == 1 or n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0 or n == 1) return 1;\n    else return n*factorial((n-1));\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }",
  "int factorial(int n) {\n    if (n < 2) return 1;\n    return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else {\n        int z = factorial(n-1);\n        return n*z;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return factorial(n - 1) * n;\n    }\n}\n\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if(n == 0) n = 1;\n    else n = n*factorial(n-1);\n    return n;\n\n\n\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include<iostream>\nusing namespace std;\n\n\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial (int n) {\r\n    if (n == 0 or n == 1) return 1;\r\n    else return n*factorial (n-1);\r\n}\r\n\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\n    int f = 1;\n\n    if (n == 0) {\n\n        f *= 1;\n        return f;\n\n    }\n    else f = n*factorial(n-1);\n\n    return f;\n}\n\n\nint main() {\n\n    int n;\n\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n-1);\n}\n\nint main() {\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1);\n}\n\nint main() {\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n -1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial (n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n - 1);\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n <= 0){\r\n        return 1;\r\n    }else{\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\n\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//P12509\r\n//pre: un natural n, 0<=n<=12.\r\n//post: retornar n!\r\n\r\nint factorial (int n) {\r\n\tif (n <= 1) return 1;\r\n\treturn n*factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint resultado = 1;\n\tfor(int i = 1; i <= n; ++i) resultado = resultado*i;\n\treturn resultado;\n}\t\nint main(){\n\tint n;\n\twhile(cin >> n) cout << factorial(n) << endl;\n}\n",
  "//P12509\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return (factorial(n-1)*n);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n\r\n    return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "int factorial(int n) {\n    if (n == 1) return n;\n    return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1) * (n);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n > 0) return factorial(n-1)*n;\r\n    else return 1;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n        if (n == 0) return 1;\n        return n*factorial(n - 1);\n}\n\nint main () {\n        int n;\n        cin >> n;\n        cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n\r\n    return n*factorial(n - 1);\r\n}",
  "// (c) FIBerHub, https://fiberhub.tk\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint main() {\n    bool start = false;\n\n    // read the words until the end\n    string word;\n    int counter = 0;\n    while(cin >> word and word != \"end\") {\n        if (start) ++counter;\n\n        if (word == \"beginning\") start = true;\n    }\n\n    if (start and word == \"end\") cout << counter << endl;\n    else cout << \"wrong sequence\" << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n//     cas base n=1\n    if (n == 0 or n == 1) return 1;\n//  cas recursiu n>1\n    else return n* factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1 or n == 0) {\r\n\t\treturn 1;\r\n\t}\r\n\treturn n*factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n if (n == 0)\r\n return 1;\r\n else \r\n return n*factorial(n-1);\r\n}\r\n    int main (){\r\n    int n;\r\n    while (cin >> n){\r\n    cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if (n > 0) return n *factorial (n - 1);\n    return 1;\n\n }\n\n int main (){\n     int n;\n     cin >> n;\n\n     cout << factorial(n) << endl;\n }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main(){\r\n\t\r\n\tint a;\r\n\twhile (cin >> a){\r\n\t\t\r\n\t\tcout << factorial(a) << endl;\r\n\t}\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return factorial(n - 1)*n;\n    }\n    int main() {\n    int n;\n    while (cin >> n) {\n    cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int fact = 1;\n    if (n == 0) return 1;\n    fact *= n * factorial(n-1);\n    return fact;\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    int result=1;\r\n    if (n>0){\r\n        result=n*factorial(n-1);\r\n    }\r\n    return result;\r\n}\r\n\r\nint main()\r\n{\r\n    int a;\r\n    cin >> a;\r\n    int fact = factorial(a);\r\n    cout << fact;\r\n\r\n    return 0;\r\n}\r\n",
  "// (c) FIBerHub, https://fiberhub.tk\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1 or n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main(){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int contador;\n    contador = 1;\n    if (n == 0) return 1;\n    for (int i = 1; i <= n; i++){\n    contador = contador * i;\n    }\n    return contador;\n}\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n <= 1) return 1;\n  else return (n * factorial(n-1));\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main()\n{\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n\n    return 0;\n}\n\nint factorial(int n)\n{\n    if(n > 1)\n        return n * factorial(n - 1);\n    else\n        return 1;\n}",
  "using namespace std;\n#include <iostream>\n\nvoid infoSecuencia(int& max, int& lpos){\n    int n,cont=1;\n   //sequencia 1\n    cin>>n;\n    max=n;\n    while (cin>>n and n!=0){\n        ++cont;\n        if(n>=max){\n            max=n;\n            lpos=cont;}}}\n\n\n\nint main() {\n    int max, lpos;\n    infoSecuencia(max,lpos);\n    //secuencia2\n    int x,lpos2,cont2=0;\n    bool esta=false;\n    while(not esta and cin>>x and x!=0){\n        ++cont2;\n        if(x==max){\n            esta=true;\n            lpos2=cont2;}}\n    if(esta) cout<<max<<' '<<lpos<<' '<<lpos2<<endl;\n    else cout<<max<<' '<<lpos<<' '<<'-'<<endl;}\n\n\n",
  "using namespace std;\n#include <iostream>\n\nint factorial(int n){\n    int fact;\n    int copia=n,mult=1;\n    while(copia!=0){\n        mult*=copia;\n        --copia;}\n        fact=mult;\n    return fact;}\n\nint main() {\n    int n;\n    while(cin>>n){\n        cout<<factorial(n)<<endl;}}\n\n",
  "using namespace std;\n#include <iostream>\n\nint factorial(int n){\n    int sum;\n    if(n==0 or n==1) return 1;\n    else{\n         sum=n*factorial(n-1);}\n    return sum;\n}\n\nint main() {\n    int n;\n    while(cin>>n){\n        cout<<factorial(n)<<endl;\n    }}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n == 0)return 1;\r\n    if (n == 1)return 1;\r\n    return (factorial(n-1)*n);\r\n}\r\n\r\nint main(){\r\n    \r\n}",
  "def factorial(n):\n    \"\"\"\n    >>> factorial(0)\n    1\n    >>> factorial(1)\n    1\n    >>> factorial(2)\n    2\n    >>> factorial(3)\n    6\n    >>> factorial(4)\n    24\n    \"\"\"\n    return 1 if n <= 1 else n * factorial(n - 1)\n",
  "def factorial(n):\n    \"\"\"\n    >>> factorial(0)\n    1\n    >>> factorial(1)\n    1\n    >>> factorial(2)\n    2\n    >>> factorial(3)\n    6\n    >>> factorial(4)\n    24\n    \"\"\"\n    return 1 if n <= 1 else n * factorial(n - 1)\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) {\r\n        return 1;\r\n    } else {\r\n        return n * factorial(n - 1);\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << \"Factorial of \" << n << \" is: \" << result << endl;\r\n\r\n    return 0;\r\n}\r\n\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) {\r\n        return 1;\r\n    } else {\r\n        return n * factorial(n - 1);\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    int result = factorial(n);\r\n    cout << \"Factorial of \" << n << \" is: \" << result << endl;\r\n\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) {\r\n        return 1;\r\n    } else {\r\n        return n * factorial(n - 1);\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    int result = factorial(n);\r\n    cout << result << endl;\r\n\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nvoid factorial() {\r\n    int n;\r\n    cin >> n;\r\n    int r = 1;\r\n    \r\n    for(int i = 1; i <= n; i++) {\r\n        r = r *  i;\r\n    }\r\n    cout << \"factorial(\" << n << \")â\" << r << endl;\r\n}\r\n\r\nint main() {\r\n    factorial();\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nvoid factorial(int n) {\r\n    int r = 1;\r\n    \r\n    for(int i = 1; i <= n; i++) {\r\n        r = r *  i;\r\n    }\r\n    cout << \"factorial(\" << n << \")â\" << r << endl;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    factorial(n);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nvoid factorial(int n) {\r\n    int r = 1;\r\n    \r\n    for(int i = 1; i <= n; i++) {\r\n        r = r *  i;\r\n    }\r\n    cout << \"factorial(\" << n << \") :\" << r << endl;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    factorial(n);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int r = 1;\r\n    \r\n    for(int i = 1; i <= n; i++) {\r\n        r = r *  i;\r\n    }\r\n    return r;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << \"factorial(\" << n << \") :\" << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        n=1;\n    }\n    else {\n        n *= factorial(n-1);\n    }\n    return n;\n}\n\nint main() {\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n  //Pre: n >= 0;\n  //Post: returns n!;\n\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "//examens22\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\telse if(n == 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\twhile(cin >> n) cout << factorial(n) << endl;\n}\n",
  "public class factorial {\n    public static void main(String[] args) {\n        int array[] = new int[10]; // Creem un vector per omplir\n\n        for (int i = 1; i < array.length; i++) {\n            array[i - 1] = i; // Assignem un valor per cada posiciÃ³\n        }\n\n        for (int j = 1; j < array.length; j++) {\n            array[j] = array[j - 1] * (j+1); //Operem els factorials\n        }\n\n        for (int z = 0; z < array.length; z++) {\n            System.out.println(\"factorial (\" + (z + 1) + \") --> \" + array[z]);\n        }\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n  int n;\r\n  while(cin>>n)\r\n  {\r\n    int factorial=1;\r\n    for(int i=1; i<=n; ++i)\r\n    {\r\n      factorial=factorial*i;\r\n    }\r\n    cout<<factorial<<endl; \r\n  }\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n  int n;\r\n  while(cin>>n)\r\n  {\r\n    int factorial=1;\r\n    for(int i=1; i<=n; ++i)\r\n    {\r\n      factorial=factorial*i;\r\n    }\r\n    cout<<factorial<<endl; \r\n  }\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n)\r\n{\r\n  int factorial=1;\r\n  if(n==0) return '1';\r\n  else\r\n  {\r\n  for(int i=1; i<=n; ++i)\r\n  {\r\n    factorial=factorial*i;\r\n  }\r\n  return factorial;\r\n  }\r\n}\r\nint main()\r\n{\r\n  int n;\r\n  while(cin>>n)\r\n  {\r\n    cout<<factorial(n)<<endl;\r\n  }\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n)\r\n{\r\n  int factorial=1;\r\n  if(n==0) return 1;\r\n  else\r\n  {\r\n  for(int i=1; i<=n; ++i)\r\n  {\r\n    factorial=factorial*i;\r\n  }\r\n  return factorial;\r\n  }\r\n}\r\nint main()\r\n{\r\n  int n;\r\n  while(cin>>n)\r\n  {\r\n    cout<<factorial(n)<<endl;\r\n  }\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n* factorial(n - 1);\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n* factorial(n - 1);\n}",
  "int factorial(int n)\n{\n    if (n <= 1)\n        return 1;\n    return n * factorial(n - 1);\n}\n",
  "\nint factorial(int n)\n{\n    if (n <= 1)\n        return 1;\n    return n * factorial(n - 1);\n}\n",
  "\ndef factorial(n):\n    if n <= 1:\n        return 1\n    return n * factorial(n - 1)\n",
  "class Solution {\n\n  public static int factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n - 1);\n  }\n  \n}\n",
  "def factorial(n):\r\n    if n==0:\r\n        return 1\r\n    else:    \r\n        return n*factorial(n-1)\r\n          ",
  "from yogi import read \r\n\r\ndef factorial(n:int)-> int:\r\n    \"\"\"\r\n    Calcula el fatrorial de n\r\n    PrecondiciÃ³: 0 <= n <= 12\r\n    \"\"\"\r\n    if n == 0:   # cas base\r\n        return 1\r\n    else: \r\n        return factorial(n -1) * n\r\n\r\n\r\ndef main()-> None:\r\n    n = read(int)\r\n    print(factorial(n))\r\nif __name__ == \"__main__\":\r\n    main()",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n){\n    if (n != 0) return n*factorial(n-1);\n    else return 1;\n}\n\nint main() {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}\n",
  "int factorial(int n) {\r\n   if (n <= 0) return 1;\r\n   return n * factorial(n - 1);\r\n}",
  "int factorial(int n) {\r\n   if (n <= 0) return 1;\r\n   return n * factorial(n - 1)\r\n}",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0)return 1;\n    return factorial(n-1)*n;\n}\n\nint main() {\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1\n    return factorial(n-1n-1) * 2;\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x)\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return factorial(n-1) * 2;\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    return factorial(n-1) * 2;\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial (n-1) * n;\n}\n\n\nint main(){\n    int x;\n    cin >> x;\n    cout <<factorial(x)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin >> x;\n    \n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    return factorial(n-1) * 2;\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif (n==0) return 1;\n\treturn factorial(n-1)*n;\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n==0) {return 1;}\n    return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int resultat = 1;\n    for (int i = 1; i <= n; ++i) resultat *= i;\n    return resultat;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n    if(n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}    \n\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n  int factorial (int n) {\n      if (n==0) return 1;\n  return n*factorial (n-1);\n  }\n\n int main() {\n    int n;\n    while (cin>> n) cout<< factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int f= 1;\n    for(int i = 1; i<=n; ++i) f*=i;\n    return f;\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint mcd(int a, int b) {\n    if (b == 0) return a;\n    return mcd(b, a%b);\n}\n\nint main (){\n    int a,b;\n    while(cin >> a >> b) cout << \"The gcd of \" << a << \" and \" << b << \" is \" << mcd(a, b) << \".\" << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    int f=1;\n    for (int i = 1; i<=n; ++i) f*=i;\n    return f;\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n ==1 or n == 0){return 1;\n    }\n    return n*factorial(n-1);\n}\nint main(){\n    int n;\n    cin >>n;\n    cout <<factorial(n)<<endl;}\n",
  "#include <iostream>\nusing namespace std;\n\n//int factorial(int n) {\n   // int f = 1;\n    //for (int i = 1; i <= n; ++i) f *=i;\n    //return f;\n//}\nint factorial(int n){\n    if ( n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin>>n) cout << factorial(n) << endl;\n}\n\n",
  "// recursive factorial\n#include <stdio.h>\n\nint factorial(int n) {\n  return n==0 ? : n*factorial(n-1);\n}\n\nint main()\n{\n    int n;\n    while (scanf(\"%d\", &n) > 0) {\n        printf(\"%d\\n\", factorial(n));\n    }\n    return 0;\n}\n",
  "int factorial(int n){\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n",
  "#include <bits/stdc++.h>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 1) return 1;\n  return n * factorial(n - 1);\n}\n\nvoid test_case() {\n}\n \nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int tt = 1;\n  //cin >> tt;\n  while (tt--) {\n    test_case();\n  }\n  return 0;\n}\n\n\n\n\n",
  "#include <bits/stdc++.h>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  return n * factorial(n - 1);\n}\n\nvoid test_case() {\n}\n \nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int tt = 1;\n  //cin >> tt;\n  while (tt--) {\n    test_case();\n  }\n  return 0;\n}\n\n\n\n\n",
  "def factorial (n):\n    if  n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nn = 3\n\nprint (factorial(n))\n",
  "def factorial (n):\n    if  n == 0:\n        return 1\n    else:\n        resultado = n * factorial(n-1)\n        print (f\"{resultado}\")\n        return resultado\n\nfactorial(5)\n",
  "def factorial (n):\n    if  n == 0:\n        return 1\n    else:\n        resultado = n * factorial(n-1)\n        print (f\"{resultado}\")\n        return resultado\n\nfactorial(4)\n",
  "int factorial(int n) {\n    if (n == 0 || n == 1) {\n        return 1;\n    }\n\n    return n * factorial(n - 1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint res;\n\tif(n == 1) res = 1;\n\telse res = n * factorial(n-1);\n\treturn res;\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint res;\n\tif(n == 1) res = 1;\n\telse res = n * factorial(n-1);\n\treturn res;\n}\n\nint main(){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint res;\n\tif(n == 1) res = 1;\n\telse res = n * factorial(n-1);\n\treturn res;\n}\n\nint main(){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint fac;\n\tif(n==0){\n\t\tfac=1;\n\t}else{\n\t\tfac=n*factorial(n-1);\n\t}\n\treturn fac;\n\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint res;\n\tif(n == 1) res = 1;\n\telse res = factorial(n-1) * n;\n\treturn res;\n}\n\nint main(){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint res;\n\tif(n == 1) res = 1;\n\telse res = factorial(n-1) * n;\n\treturn res;\n}\n\nint main(){\n\tint x;\n\twhile(cin>>x){\n\t\tcout<<factorial(x)<<endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint res;\n\tif(n == 0) res = 1;\n\telse res = factorial(n-1) * n;\n\treturn res;\n}\n\nint main(){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint res;\nif(n == 0) res = 1;\nelse {\nres = factorial(n-1) * n;\n} \nreturn res;\n}\n\nint main(){\nint a;\ncin>>a;\ncout<<a<<\" -> \"<<factorial(a)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\tint fact = 1;\n\t\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tfact = fact * i;\n\t}\n\t\n\treturn fact;\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tint fact = 1;\n\tfor(int i = 1; i <= n; i++) {\n\t\tfact = fact * i;\n\t\n\t}\n\n\treturn fact;\n\t\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tint res = factorial(n);\n\tcout<<res<<endl;\n\n\treturn 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint main(){\n\n\tint n;\n\tcin>>n;\n\t\n\tint factorial=1;\n\t\n\tfor (int i=1;i<=n;i++){\n\t\tfactorial=factorial*i;\n\t}\n\t\n\tcout<< factorial<<endl;\n\t\n}\n\n\n",
  "int factorial(int n){\n  int result;\n  if (n<2){\n  result=n;\n  else\n    result=n*factorial(n-1);\n\t}\n",
  "int factorial(int n){\n  int result;\n  if (n<2){\n  result=n;\n  else\n    result=n*factorial(n-1);\n\t}\nreturn result;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint main(){\n\t\n\tint n;\n\tcin>>n;\n\t\n\tint factorial=1;\n\tfor (int i=1;i<=n;i++){\n\t\tfactorial=factorial*i;\n\t}\n\t\n\tcout<< factorial<<endl;\n}\n\nint factorial(int n){\n\tint factorial=1;\n\tfor (int i=1;i<=n;i++){\n\t\tfactorial=factorial*i;\n\t}\n\treturn factorial;\n}\n\n\n",
  "int factorial(int n){\nif (n<=1)\nreturn 1;\nelse return n*factorial(n-1);\n}\n",
  "int factorial(int n){\n  int result;\n  if (n<2){\n  result=n;\n  }\n  else{\n    result=n*factorial(n-1);\n\t}\nreturn result;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\tif(n <= 1)\n\t{\n\t\treturn 1;\n\t}\n\telse\n\t{\n\t\treturn n * factorial(n-1);\n\t}\n}\n",
  "int factorial(int n){\n  int result;\n  if (n<=1){\n  result=1;\n  }\n  else{\n    result=n*factorial(n-1);\n\t}\nreturn result;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\t\n\tif (n <= 1) {\n\t\treturn 1;\n\t\t\n\t} else {\n\t\treturn n * factorial (n-1);\n\t}\n\t\n}\n\n",
  "#include <iostream>\nusing namespace std;   \n\nint factorial(int n){\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n   \n   int x;\n   \n   cin >> x;  \n   \n   int result = factorial(x);\n   \n   cout << result << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n<=1){\n\t\treturn 1;\n\t} else {\n\t\treturn n*factorial(n-1);\n\t}\n}\n\nint main(){\n\t\n\tint n;\n\tcin>>n;\n\t\n\tint resultat;\n\tresultat= factorial(n);\n\t\n\tcout<< resultat <<endl;\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n)\n{\n\tif (n <= 1)\n\t{\n\t\treturn 1;\n\t} \n\telse\n\t{\n\t\treturn n*factorial(n-1);\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint f;\n\tif (n==0){\n\t\tf=1;\n\t}\n\telse {\n\t\tf=n*factorial(n-1);\n\t\t}\nreturn f;\n}\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "int factorial(int n){\n\tif (n==0){ n=1; }\n\telse { n=n*factorial(n-1); }\nreturn n;\n}\n",
  "def factorial(n):\r\n    if n == 0:\r\n        return 1\r\n    else:\r\n        return n*factorial(n-1)\r\n    \r\n    ",
  "def factorial(n):\r\n    if n == 0:\r\n        return 1\r\n    else:\r\n        return n*factorial(n-1)\r\n    \r\n    ",
  "int factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}",
  "//Recursive factorial\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 1 or n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main (){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "\nfrom yogi import read\n\ndef factorial(n: int) -> int:\n    if n <= 1:\n        return 1\n    return n * factorial(n - 1)\n\nn = read(int)\nprint(factorial(n)) ",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int f = 1;\r\n    for(int i = 1; i <= n; ++i){\r\n        f = f * i;\r\n        \r\n    }\r\n    return f;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while(cin >> n)\r\n        if (n == 0) cout << '1' << endl;\r\n        else cout << factorial(n) << endl;\r\n}\r\n",
  "int factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n * factorial(n-1);\n}\n",
  "#include <iostream> \r\nusing namespace std ;\r\n\r\nint factorial (int n){\r\n    if (n == 0) return 1 ;\r\n    else return n*factorial (n-1) ;\r\n}\r\nint main (){\r\n    int x ;\r\n    cin >> x ;\r\n    cout << factorial(x) << endl;\r\n}\r\n\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n\tif (n==0) return 1;\n\treturn n*factorial(n-1);\n\t\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    char ca;\r\n    bool hasA = false;\r\n    while(cin >> ca) if(ca == 'a') hasA = true;\r\n    if(hasA) cout << \"yes\" << endl;\r\n    else cout << \"no\" << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n    {\n        return 1;\n    }\n    else\n    {\n        return n * factorial(n - 1);\n    }\n}\n\nint main() {}",
  "import sys\n\ndef factorial(n):\n\tn = int(n)\n\tresult = 1\n\t\n\twhile n != 0:\n\t\tresult = result * n\n\t\tn = n-1\n\t\n\treturn result\n\t\t\n\t\n\t\n\t\n\t\n\t\n\t\ns = sys.stdin.readline().strip()\nt = factorial(s)\n\nif t != None:\n\tprint(t)\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tint result = 1;\n\n\twhile(n != 0){\n\t\tresult = result * n;\n\t\tn = n - 1;\n\t}\n\treturn result;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tint result_final = factorial(n);\n\tcout << result_final << endl;\n\treturn 0;\n}\n",
  "\nimport yogi\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    return n * factorial(n - 1)\n\n# Example usage with scanner:\nn = yogi.scan(int)\nprint(factorial(n)) # prints factorial of input integer n\n\n# Example usage with token iterator:\nfor token in yogi.tokens(int):\n    print(factorial(token)) # prints factorial of each token (assumes integer input)",
  "\nimport yogi\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    return n * factorial(n - 1)\n\n# Example usage with scanner:\nn = yogi.scan(int)\nprint(factorial(n)) # prints factorial of input integer n\n\n# Example usage with token iterator:\nfor token in yogi.tokens(int):\n    print(factorial(token)) # prints factorial of each token (assumes integer input)",
  "#include<iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n    cin >> n;\n    int x = 1;\n    for (int 1 = 1; i <= n; ++i) {\n        x = x * i;\n    }\n    return x;\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n    cin >> n;\n    int x = 1;\n    for (int i = 1; i <= n; ++i) {\n        x = x * i;\n    }\n    return x;\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n    int x = 1;\n    for (int i = 1; i <= n; ++i) {\n        x = x * i;\n    }\n    return x;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    factorial(n);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n",
  "int factorial(int n){\nif (n<=1) return 1;\nelse{\nreturn n*factorial(n-1);\n}\n}\n#include <iostream>\nusing namespace std;\nint main(){\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n <= 1) return 1;\r\n  else return factorial(n - 1) * n;\r\n}\r\n\r\nint main()\r\n{\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return factorial(n-1) * n;\r\n}\r\n\r\nint main()\r\n{\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n    return 0;\r\n}",
  "#include <bits/stdc++.h>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    return n*fct(n-1);\n}\n\nint main(){\n    \n    return 0;\n}",
  "#include <bits/stdc++.h>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    \n    return 0;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0 or n == 1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    cout << factorial(4) << \" \" << factorial(5) << endl;\r\n}\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 1) return 1;\n    else return factorial(n -1)*1;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\n// Pre: 0<=n<=12\n// Post: Returns n!\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  return n * factorial(n-1);\n}\n\nint main() {\n  int x, ma, lp, cnt = 0;\n  infoSequence(ma, lp);\n  while (cin >> x) {\n    cnt++;\n    if (x == 0) break;\n    if (x == ma) {\n      cout << ma << ' ' << lp << ' ' << cnt << endl;\n      return 0;\n    }\n  }\n  cout << ma << ' ' << lp << \" -\" << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  return n * factorial(n-1);\n}\n\nint main() {\n  \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if(n == 0) return 1;\n    else return factorial(n - 1) * n;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return n;\n    else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0 or n == 1) {\n        n = 1;\n        return n;\n    }\n    else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1 or n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    return 0;\n}\n",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint factorial(int n){\n  if(n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main(){\n  cout << factorial(3) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    return n * factorial (n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int x;\n\n    cin >> x;\n\n    cout << factorial(x) << endl;\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){ \r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main()\r\n{\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1) return 1;\n    return factorial(n-1)*n;\n}  \n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int x;\r\n    while (cin >> x) cout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial ( n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "'''\nfunction FACTORIAL(n)\n    if n < 2 then\n        return 1\n    return n * FACTORIAL(n-1)\n'''\nimport sys\n\ndef factorial(n: int) -> int:\n\n    if n < 2:\n        return 1\n\n    return n * factorial(n - 1)\n\n\ndef main()-> none:\n\n    x = int(sys.stdin.readline().strip())\n\n    print(factorial(x))\n\n\nif __name__ == \"__main__\":\n    main()\n",
  "'''\nfunction FACTORIAL(n)\n    if n < 2 then\n        return 1\n    return n * FACTORIAL(n-1)\n'''\nimport sys\n\ndef factorial(n: int) -> int:\n\n    if n < 2:\n        return 1\n\n    return n * factorial(n - 1)\n\n\ndef main()-> None:\n\n    x = int(sys.stdin.readline().strip())\n\n    print(factorial(x))\n\n\nif __name__ == \"__main__\":\n    main()\n",
  "/*\nfunction FACTORIAL(n)\n    if n < 2 then\n        return 1\n    return n * FACTORIAL(n-1)\n*/\n#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\n    if(n < 2){\n        return 1;\n    }\n    return n * factorial(n - 1);\n}\n\nint main(){\n\n    int x;\n    cin >> x;\n\n    cout << factorial(x) << endl;\n\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\t\tint s=1;\n\t\tif(n>0) s*=n*factorial(n-1);\t \n\t\treturn s;\n}\nint main(){\n\t\tint k;\n\t\tcin>>k;\n\t\tcout<<factorial(k)<<endl;\n\n\n\n\n}\n",
  "\n\ndef factorial(n):\n\tif n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n*factorial(n-1)\n",
  "import sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    return n*factorial(n-1)\n\n\n\nn = sys.stdin.readline().strip()\nn = int(n)\nt = factorial(n)\nprint(t)\n",
  "import sys\n\nn = int(sys.stdin.readline().strip())\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    return n * factorial(n - 1)\n\nt = factorial(n)\nprint(t)",
  "import sys\n\ndef factorial(n):\n\tn = int(n)\n\t\n\tif n == 0:\n\t\treturn 1\n\t\n\treturn n * factorial(n-1)\n\n\nn = sys.stdin.readline().strip()\n\n\n\nwhile n != \"\":\n\tL = []\n\tL.append(n)\n\tfor e in L:\n\t\tt = factorial(n)\n\t\tif t != 0:\n\t\t\tprint(t)\n\t\n\tn = sys.stdin.readline()\n",
  "import sys\n\nn = sys.stdin.readline().strip()\nl = []\n\ndef factorial(n):\n    n = int(n)\n    if n == 1:\n        return 1\n    return n * factorial(n - 1)\n\nwhile n != '':\n    l.append(n)\n    for e in l:\n        t = factorial(n)\n        if t != 0:\n            print(t)\n    n = sys.stdin.readline()",
  "import sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    return n*factorial(n-1)\n\n\n\nx = sys.stdin.readline().strip()\nwhile x != None:\n    L = []\n    L.append(x)\n    for n in L:\n        n = int(n)\n        t = factorial(n)\n        print(t)\n    x = sys.stdin.readline()\n",
  "import sys\n\nn = sys.stdin.readline().strip()\n\ndef factorial(n):\n    n = int(n)\n    if n == 1:\n        return 1\n    return n * factorial(n - 1)\n\nwhile n != '':\n    l = []\n    l.append(n)\n    for e in l:\n        t = factorial(n)\n        if t != 0:\n            print(t)\n    n = sys.stdin.readline()",
  "import sys\n\nn = sys.stdin.readline().strip()\n\ndef factorial(n):\n    n = int(n)\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)\n\nwhile n != '':\n    l = []\n    l.append(n)\n    for e in l:\n        t = factorial(n)\n        if t != 0:\n            print(t)\n    n = sys.stdin.readline()",
  "def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n*factorial(n-1)\n",
  "#include <future>\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "import sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n*factorial(n-1)\n\nn = int(sys.stdin.readline().strip())\nprint(factorial(n))\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0){\n        return 1;\n    }\n    \n    else{\n        return n*factorial(n-1);\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n    \n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0){\n\t\treturn 1;}\n\telse{\n\t\treturn n*factorial(n-1);}}\nint main(){\n\tint n;\n\tcin >> n;\n\tint result=factorial(n);\n\tcout<< result << endl;\n\treturn 0;}\n",
  "import sys\ndef factorial(n):\n\tif (n==0):\n\t\treturn 1\n\telse:\n\t\treturn(n*factorial(n-1))\n\ns=sys.stdin.readline().strip()\nn=int(s)\nx=factorial(n)\nprint(x)\n",
  "import sys\n\ndef factorial(n):\n    res = 1\n    if n == 0:\n        return 1\n    else:\n        return res*n * factorial(n-1)\n\n\nn = sys.stdin.readline().strip()\nres = factorial(int(n))\nprint(res)\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    int res = 1;\n    if (n == 0){\n        return 1;\n    } else {\n        return res*n*factorial(n-1);\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    int res = factorial(n);\n    cout << res << endl;\n}\n",
  "import sys\n\n\ndef factorial(n):\n    if n<=1:\n        return 1\n    else:\n        return n* factorial(n-1)\n\nfor s in sys.stdin:\n    s= int(s.strip())\n    t=factorial(s)\n    print (t)\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1)\n        return 1;\n    return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n    \n}\n\nint main(){\n    int n;\n    while (cin>>n){\n        int t=factorial(n);\n        cout<<t<<endl;\n    }\n    \n    return 0;\n}\n        \n    \n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "import sys\n\ndef factorial(n):\n    if n != 0:\n        return n * factorial(n-1)\n    else:\n        return 1\n\n\nlist_lines = sys.stdin.readlines()\nfor line in list_lines:\n    l = int(line.strip())\n    out = factorial(l)\n    print(out)\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    return n * factorial (n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n > 0) return (n*factorial(n-1));\n    return 1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n);\n}\n    \n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while(cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "def factorial(n):\n\tif n<=1:\n\t\treturn n\n\telse:\n\t\treturn n*factorial(n-1)\n",
  "def factorial(n):\n\tif n<=1:\n\t\treturn 1\n\telse:\n\t\treturn n*factorial(n-1)\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif(n<=1){\n\t\treturn 1;\n\t}\n\t\n\telse{\n\t\treturn n*factorial(n-1);\n\t}\n\t\n}\n\nint main(){\n\tint number;\n\tcin>>number;\n\t\n\tint result = factorial(number);\n\t\n\tcout<<result<<endl;\n\t\n\treturn 0;\n\t\n\t\n}\n",
  "import sys\n\ndef factorial(n):\n    if n <= 1:\n        return n\n    else:\n        return n * factorial(n-1)\n\nn = int(sys.stdin.readline().strip())\n\nwhile n != None:\n    print(factorial(n))\n    n = int(sys.stdin.readline().strip())\n\n",
  "import sys\n\ndef factorial(n):\n\tif n == 1:\n\t\treturn n\n\telse:\n\t\treturn n * factorial(n-1)\n\t\nL = []\nx = sys.stdin.readline().strip()\nwhile x != '':\n\tL.append(int(x))\n\tx = sys.stdin.readline().strip()\n\nfor i in L:\n\tprint(factorial(i))\n",
  "// function factorial(n)\n//  n is an integer (0 <= n <= 12)\n//  if n <= 1 then\n//      return 1\n//  else\n//      return n * factorial (n-1)\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<=1){\n        return 1;\n    } else {\n        return n * factorial(n-1);\n    }\n}\n\nint main(){\n    int n;\n    while (cin >> n){\n        int result = factorial(n);\n        cout << result << endl;\n    }\n    return 0;\n}\n",
  "# function factorial(n)\n#  n is an integer (0 <= n <= 12)\n#  if n <= 1 then\n#      return 1\n#  else\n#      return n * factorial (n-1)\n\nimport sys\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n * factorial (n-1)\n\nnumbers = sys.stdin.readlines()\nfor n in numbers:\n    n = int(n)\n    result = factorial(n)\n    print(result)\n",
  "#include <string>\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif (n > 1){\n\t\treturn n * factorial(n-1);\n\t}\n\telse{ return 1;}\n}\n\nint main(){\n\tint num;\n\tcin >> num;\n\tcout << factorial(num) << endl;\n}\n\n\t\n",
  "def factorial(n):\n\tif n > 1:\n\t\treturn n * factorial(n-1)\n\telse: return 1\n",
  "def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\nn = int(input())\n\n    \nresult = factorial(n)\nprint(result)\n",
  "import sys\nx= int(sys.stdin.readline())\n\ndef Factorial(x):\n\tif x==0:\n\t\treturn 1\n\telse:\n\t\t\n\t\treturn x*Factorial(x-1)\n\t\t\n\n\nprint(\"factorial (\", x,\") -> \", Factorial(x), sep='')\n",
  "import sys\nx= int(sys.stdin.readline())\n\ndef factorial(x):\n\tif x==0:\n\t\treturn 1\n\telse:\n\t\t\n\t\treturn x*factorial(x-1)\n\t\t\n\n\nprint(\"factorial (\", x,\") â \", factorial(x), sep='')\n",
  "import sys\nx= int(sys.stdin.readline())\n\ndef factorial(n):\n\tif x==0:\n\t\treturn 1\n\telse:\n\t\t\n\t\treturn n*factorial(n-1)\n\t\t\n\n\nprint(\"factorial (\", n,\") â \", factorial(n), sep='')\n",
  "import sys\nx= int(sys.stdin.readline())\n\ndef factorial(n):\n\tif x==0:\n\t\treturn 1\n\telse:\n\t\t\n\t\treturn n*factorial(n-1)\n\t\t\n\n\n",
  "\n# RECURSIVE FACTORIAL\n\ndef getFactorial(n):\n\t\n\tif n < 0:\n\t\treturn \"error\" # since negative numbers have no factorial\n\telif n < 2:\n\t\treturn 1   # since 0! and 1! is equal to 1\n\telse:\n\t\treturn n * getFactorial(n-1)\n\t\t\n\t\t\n\n",
  "\n# RECURSIVE FACTORIAL\n\ndef getFactorial(n):\n    '''\n    >>> getFactorial(0)\n    1\n    >>> getFactorial(1)\n    1\n    >>> getFactorial(2)\n    2\n    >>> getFactorial(3)\n    6\n    >>> getFactorial(4)\n    24\n    '''\n    if n < 0:\n        return \"error\"  # since negative numbers have no factorial\n    elif n < 2:\n        return 1   # since 0! and 1! are equal to 1\n    else:\n        return n * getFactorial(n-1)\n\nif __name__ == \"__main\":\n    import doctest\n    doctest.testmod(verbose=True)\n",
  "\n# RECURSIVE FACTORIAL\n\ndef getFactorial(n):\n    '''\n    >>> getFactorial(0)\n    1\n    >>> getFactorial(1)\n    1\n    >>> getFactorial(2)\n    2\n    >>> getFactorial(3)\n    6\n    >>> getFactorial(4)\n    24\n    '''\n    if n < 0:\n        return \"error\"  # since negative numbers have no factorial\n    elif n < 2:\n        return 1   # since 0! and 1! are equal to 1\n    else:\n        return n * getFactorial(n-1)\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n\n",
  "\n# RECURSIVE FACTORIAL\n\nimport sys\n\ndef getFactorial(n):\n    if n == 0:\n        return 1  # since negative numbers have no factorial\n    elif n == 1:\n        return 1\n    else:\n        return n * getFactorial(n-1)\n        \n        \nfor line in sys.stdin:\n    n = int(line.strip())\n    x = getFactorial(n)\n    if x != '':\n        print(x)\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0) return 1;\r\n    else if (n <= 12) return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;  \r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{}",
  "import sys\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nn = int(sys.stdin.readline().strip())\n\nwhile n != None:\n    print(factorial(n))\n    n = int(sys.stdin.readline().strip())\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n        else return n*factorial(n-1);\r\n\r\n}\r\n\r\nint main () {\r\n    int x;\r\n    cin >> x;\r\n\r\n    cout << factorial(x) << endl;\r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}",
  "import sys\n\ndef factorial(n):\n\tif n == 1:\n\t\treturn n\n\telse:\n\t\treturn n * factorial(n-1)\n\t\n\nx = int(sys.stdin.readline())\nprint(factorial(x))\n",
  "import sys\n\ndef factorial(n):\n\tif n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n-1)\n\t\nL = []\nx = sys.stdin.readline().strip()\nwhile x != '':\n\tL.append(int(x))\n\tx = sys.stdin.readline().strip()\n\nfor i in L:\n\tprint(factorial(i))\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n){\n\tif(n == 0){\n\t\treturn 1;\n\t\t\n\t}else{\n\t\treturn n * factorial(n-1);\n\t\t\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t\n\t}\n\n\n\nint main(){\n\t\n\tint n;\n\t\n\twhile(cin >> n){\n\t\tcout << factorial(n) << endl;\n\t\t\n\t\t\n\t\t}\n\t\n\t\n\t\n\treturn 0;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n == 0) return 1;\n    else if (n > 1) return n*factorial(n-1);\n    else return n;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n    \n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0){\n\t\treturn 1;\n\t}\n\telse{\n\t\treturn n * factorial(n-1);\n\t}\n\n}\nint main(){\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n\treturn 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n ){\n    if(n==0)return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "import sys\n\nn = sys.stdin.readline()\nn = int(n)\ni = n\n\ndef recursive_factorial(n):\n    if n==1 or n==0:\n        return 1\n    elif n>1:\n        return(n*recursive_factorial(n-1))\n    return []\n\nres= recursive_factorial(n)\nprint(res)\n",
  "import sys\n\n#el format del imput\nlines= sys.stdin.readlines()\nls=[]\nfor line in lines:\n    l= line.strip()\n    ls.append(l)\n\n\ndef recursive_factorial(n):\n    if n==1 or n==0:\n        return 1\n    elif n>1:\n        return(n*recursive_factorial(n-1))\n    return []\n\nfor x in ls:\n    print(recursive_factorial(int(x)))\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return factorial(n - 1)*n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int numero) {\n    if (numero == 1) return numero;\n    else {\n        return factorial(numero - 1) * numero;\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int numero) {\n    if (numero <= 1) return 1;\n    else {\n        return factorial(numero - 1) * numero;\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int t = 1;\n    while ( n > 0){\n        t = t * n;\n        --n;\n    }\n    return t;\n}    \n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int fact = 1;\r\n    for(int i = n; i > 1; --i)\r\n        fact *= i;\r\n    return fact;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    int fact = factorial(n);\r\n    cout << fact << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    int f = 1;\n    int i = 0;\n\n    while (i < n)\n    {\n        ++i;\n        f *= i;\n    }\n    return f;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x)\n    {\n        cout << factorial(x) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n} \n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 0)\n        return 1;\n    return n * factorial(n - 1);\n}\n",
  "import sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\n\nn = sys.stdin.readline().strip()\nwhile n != \"\":\n    n = int(n)\n    print(factorial(n))\n    n = sys.stdin.readline().strip()\n",
  "import sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\n\nn = sys.stdin.readline().strip()\nwhile n != \"\":\n    n = int(n)\n    print(factorial(n))\n    n = sys.stdin.readline().strip()\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0 or n == 1)return 1;\n    else return  factorial(n-1)*n;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n}\n\n\nint main(){\n    int n;\n    while (cin>>n){\n        int t = factorial(n);\n        cout << t << endl;\n    }\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n    int num; \r\n    cin >> num;\r\n    cout << factorial(num) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n    int num; \r\n    cin >> num;\r\n    cout << factorial(num) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int x){\n    if (x == 1) return 1;\n    else if (x == 0) return 1;\n    else return x*factorial(x-1);\n}\n\nint main (){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if(n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int num;\n    while(cin >> num){\n        cout << factorial (num) << endl;\n    }\n}",
  "// In: n\r\n// Out: factorial\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int a) {\r\n    if (a == 0) return 1;\r\n    else return a * factorial (a -1);\r\n}\r\n\r\nint main() {\r\n    int num;\r\n    cin >> num;\r\n    cout << factorial (num) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if(n == 1) return 1;\n    else if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int num;\n    while(cin >> num){\n        cout << factorial (num) << endl;\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n = n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint ent;\r\n\r\n\twhile (cin >> ent) {\r\n\t\tcout << factorial(ent) << endl;\r\n\t}\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 1 or n == 0){\n\t\treturn 1;\n\t}\n\treturn (n * factorial(n-1));\n}\nint main(){\n\tint num;\n\twhile (cin >> num){\n\t\tint f = factorial(num);\n\t\tcout << f;\n\t}\n}\n\n\n",
  "def factorial(n):\n\tif n == 1:\n\t\treturn 1\n\treturn n * factorial(n-1)\n",
  "def factorial(n):\n\tif n == 1:\n\t\treturn 1\n\treturn n * factorial(n-1)\n",
  "def factorial(n):\n\tif n == 1:\n\t\treturn 1\n\treturn n * factorial(n-1)\n",
  "int factorial(int n) {\n\tif (n < 2) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "def factorial(n):\n\tif n == 1:\n\t\treturn 1\n\treturn n * factorial(n-1)\n\nif __name__ == '__main__':\n\tprint(factorial(5))\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}",
  "def factorial(n): \n\tif n == 1: \n\t\treturn 1\n\telse: \n\t\treturn n * factorial(n-1)\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n <= 1)\r\n    {\r\n        return 1;\r\n    }\r\n\r\n    else\r\n    {\r\n       return n *factorial(n - 1);\r\n    }\r\n    \r\n}\r\n\r\nint main()\r\n{\r\n    int x;\r\n    while (cin >> x)\r\n    {\r\n        cout << factorial(x) << endl;\r\n    }\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint main() {\n  int factorial(int n);{\n    int n;\n    if (n==0)return 1;\n    else return n*factorial(n-1);\n  }\n",
  "#include <iostream>\nusing namespace std;\n  int factorial(int n);{\n    int n;\n    if (n==0)return 1;\n    else return n*factorial(n-1);\n  }\n",
  "#include <iostream>\nusing namespace std;\n  int factorial(int n){\n    int n;\n    if (n==0)return 1;\n    else return n*factorial(n-1);\n  }\n",
  "#include <iostream>\nusing namespace std;\n  int factorial(int n){\n\n\n    if (n==0)return 1;\n    else return n*factorial(n-1);\n  }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return n*factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint value = 1;\nint factorial(int n){\n    if(n!=0){\n        value = value*n;\n        return factorial(n-1);\n    } else{\n        return value;\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n!=0){\n        value = value*n;\n        return factorial(n-1);\n    } else{\n        return value;\n    }\n}\n\nint main(){\n    int value = 1;\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n!=0){\n        return n*factorial(n-1);\n    } else{\n        return 1;\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if(n==0 or n==1)\n    {\n        return 1;\n    }\n    return n * factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint factorial(int n){\n    int res = 1;\n    if(n != 0){\n        return res*n*factorial(n-1);\n    }\n    else{\n        return 1;\n    }\n}\n\n\nint main(){\n    int n;\n    while (cin >> n){\n        int out = factorial(n);\n        cout << out << endl;\n    }\n    return 0;\n}\n",
  "def factorial(n): \n\tif n <= 1: \n\t\treturn 1\n\telse: \n\t\treturn n * factorial(n-1)\n",
  "#include <iostream>\n\nint factorial(int n){\n\tif (n <= 1){\n\t\treturn 1;\n\t}else{\n\t\treturn n*factorial(n-1);\n\t\t}\n\t}\n\nint main(){\n\tint n; \n\tstd:: cin >> n;\n\tstd:: cout << factorial(n) << std::endl; \n\treturn 0; \n\t}\n",
  "#include <iostream>\n\nint factorial(int n){\n\tif (n <= 1){\n\t\treturn 1;\n\t}else{\n\t\treturn n*factorial(n-1);\n\t\t}\n\t}\n\nint main(){\n\tint n; \n\tstd:: cin >> n;\n\tstd:: cout << factorial(n) << std::endl; \n\treturn 0; \n\t}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) { \n    if (n == 0) {\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namesapce std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n, s;\n    cin >> n;\n    s = factorial(n);\n    cout << s << endl;\n    return 0;\n}",
  "#include <iostream>\n\nusing namesapce std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}",
  "//Factorial de un numero dado\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n\n\n}\n\nint main(){\n    int number;\n    while ( cin >> number){\n    cout << factorial ( number) << endl;\n    }\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}",
  "int factorial(int n){\n    if(n <= 1) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if(n<=1)return 1;\n    return factorial(n-1)*n;\n     }\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1){return 1;}\n    else{return n*factorial(n-1);}\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl; \n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n// Pre: 0 <= n <= 12 \r\n\r\nint factorial(int n){\r\n\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n-1);\r\n\r\n}\r\n\r\nint main(){\r\n    cout << factorial(4) << endl;\r\n}\r\n\r\n\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n// Pre: 0 <= n <= 12\r\n// Post: n factoiral\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\nint factorial(int n) {\n    if(n <= 1) {\n        return 1;\n    } else {\n        return n*factorial(n-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    for (int i=0; i<13; ++i) {\n        int resultado=factorial(i);\n        cout<<resultado<<endl;\n    }\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\n    if(n == 0) return 1;\n    \n    return n*factorial(n-1);\n\n}\n\n\nint main(){\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;  \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1):\n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial (int n)\n{\n    int a = 1;\n    if (n == 0) return a;\n\n    return n*factorial(n-1);\n}\n\n\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl; \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\nint factorial(int n){\n    int d=1;\nfor (int i=n; i>0; i--){\n    d=d*i;\n}\nreturn d;\n}\nint main(){\n    int n;\n    while (cin >> n){\n        int r=factorial(n);\n        cout << r << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n - 1);\n};\n",
  "int factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n - 1);\n};\n",
  "import sys\n\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\n\n\n\n\n\nfor line in sys.stdin:\n    n = int(line.strip())\n    print (factorial(n))\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) {\n        return 1;\n    }\n    else {\n        return n * factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n    return 0;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    int factorial = 1;\r\n    for (int i = 1; i <= n; ++i) {\r\n        factorial = factorial * i;\r\n    }\r\n    cout << factorial << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "import sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\n\n\nn = int(sys.stdin.readline().strip())\nprint(f'factorial({n}) â {factorial(n)}')\n",
  "import sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\n\n\nn = int(sys.stdin.readline().strip())\nprint(factorial(n))\n",
  "//fes una funciÃ³ recursiva que calculi el factorial\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n   if (n == 0) n = 1;\r\n   else n = n * (factorial (n - 1));\r\n   return n;\r\n}\r\n\r\nint main() {\r\n   int n;\r\n   while (cin >> n) {\r\n      cout << factorial (n) << endl;\r\n   }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return factorial(n - 1) * n;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main(){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n * factorial (n - 1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial (n - 1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// pre: n >= 0\n// post: returns n!\nint factorial(int n) {\n  if (n == 0) {\n    return 1;\n  } else {\n    return n * factorial(n - 1);\n  }\n}\n\nint main() {\n  int x;\n  while (cin >> x) {\n    cout << factorial(x) << endl;\n  }\n  return 0;\n}\n",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n    if ( n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial (n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout factorial(n);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n);\n}",
  "// Recursive factorial P1250\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "// Recursive factorial P1250\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n < 2) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return(n * factorial(n - 1))\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return(n * factorial(n - 1));\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<2) return 1;\n    else{\n        return n*facturial(n-1); //Agafa el n-1 i torna a fer el mateix, si Ã©s mÃ©s gran que 2 va al n-2 i aixi fins a arribar al 1 llavors ja s'ha multiplicat tot.\n    }\n}\n//Cout normal chill i ya.",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<2) return 1;\n    else{\n        return n*factorial(n-1); //Agafa el n-1 i torna a fer el mateix, si Ã©s mÃ©s gran que 2 va al n-2 i aixi fins a arribar al 1 llavors ja s'ha multiplicat tot.\n    }\n}\n//Cout normal chill i ya.",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//PRE : 0â¤ n â¤ 12\n\nint factorial(int n){\n\n    if(n <= 1)return 1;\n    else {\n        int resultado = 1;\n        int i = 1;\n        while(i <= n){\n            resultado *= i;\n            ++i;\n        }\n        return resultado;\n    }\n\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    return n*factorial (n-1);\n    \n    }\n    \nint main() {\n    \n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n    \n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) {\n        return 1;\n    }\n    else {\n        int ans = n * factorial(n-1);\n        return ans;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int number){\n    if (number == 1) return 1;\n    else return number* factorial(number - 1);\n}\n\n\nint main()\n{\n    int x;\n    cin >> x;\n    cout << factorial(x);\n}\n",
  "/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int number){\n    if (number == 1) return 1;\n    else return number* factorial(number - 1);\n}\n\n\nint main()\n{\n    int x;\n    while (cin>>x){\n        cout << factorial(x);\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else n = n * factorial(n-1);\r\n    return n;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\nint main()\n{\n    int n;\n    cin >> n;\n    int x = factorial(n);\n    cout << x << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 1 or n == 0) return 1;\n    n *= factorial(n-1);\n    return n;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    factorial(n);\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 1 or n == 0) return 1;\n    else return (n * factorial(n-1));\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact;\n    if (n == 1) return 1;\n    else fact = factorial(n - 1) * n;\n    return fact;\n}\nint main() {\n    int n;\n    while (cin >> n) cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact;\n    if (n == 1 or n == 0) return 1;\n    else fact = factorial(n - 1) * n;\n    return fact;\n}\nint main() {\n    int n;\n    while (cin >> n) cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact;\n    if (n == 0) return 1;\n    else fact = factorial(n - 1) * n;\n    return fact;\n}\nint main() {\n    int n;\n    while (cin >> n) cout << factorial (n) << endl;\n}\n",
  "//\n//  p104.cpp\n//  test2\n//\n//  Created by Roger AllÃ¨s Pons on 9/11/23.\n//\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n * factorial(n-1);\n}\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n * factorial(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<2) return 1;\n    else return n*factorial(n-1)\n\n}\n\nint main()\n{\n  int n;\n  while (cin >> n)\n  {\n      cout << factorial(n);\n  }\n  \n    \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<2) return 1;\n    else return n*factorial(n-1);\n\n}\n\nint main()\n{\n  int n;\n  while (cin >> n)\n  {\n      cout << factorial(n) << endl;\n  }\n  \n    \n}\n\n",
  "int factorial(int n) {\n    if (n>2) return 1;\n    else return n*factorial(n-1)\n}",
  "int factorial(int n) {\n    if (n>2) return 1;\n    else return n*factorial(n-1);\n}",
  "int factorial(int n) {\n    if (n<2) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0 or n==1) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main()\n{\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "import sys\ndef factorial(n):\n\tif n==0:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n-1)\n\nL=[]\nx= sys.stdin.readline().strip()\nwhile x !='':\n\tL.append(int(x))\n\tx =  sys.stdin.readline().strip()\n\nfor i in  L:\n\tprint(factorial(i))\n\t\t\n",
  "import sys\ndef factorial(n):\n\tif n==0:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n-1)\n\nL=[]\nx= sys.stdin.readline().strip()\nwhile x !='':\n\tL.append(int(x))\n\tx =  sys.stdin.readline().strip()\n\nfor i in  L:\n\tprint(factorial(i))\n\t\t\n",
  "#include <iostream>\n\nusing namespace std;\n\nint recursive(int n) {\n    if ( n == 0) {\n        return 1;\n    }\n    else {\n        int result, multyplication;\n        result = recursive(n-1);\n        multyplication = n * result;\n        return multyplication;\n    }\n}\n\nint main() {\n    int a;\n    int b;\n    cin >> a;\n    b = recursive(a);\n    cout << b << endl;\n    return 0;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 0) {\n        return 1;\n    }\n    else {\n        int result, multyplication;\n        result = recursive(n-1);\n        multyplication = n * result;\n        return multyplication;\n    }\n}\n\nint main() {\n    int a;\n    int b;\n    cin >> a;\n    b = recursive(a);\n    cout << b << endl;\n    return 0;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 0) {\n        return 1;\n    }\n    else {\n        int result, multyplication;\n        result = factorial(n-1);\n        multyplication = n * result;\n        return multyplication;\n    }\n}\n\nint main() {\n    int a;\n    int b;\n    cin >> a;\n    b = factorial(a);\n    cout << b << endl;\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace  std;\nint factorial(int n){\n\tif(n==0){\n\t\treturn 1;\n\t\t\n\t} else {\n\t\treturn n * factorial (n-1);\n\t}\n\t\n\t\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n\t\n\treturn o;\n\t\n}\n\t\t\n\t\n",
  "#include <iostream>\nusing namespace  std;\nint factorial(int n){\n\tif(n==0){\n\t\treturn 1;\n\t\t\n\t} else {\n\t\treturn n * factorial (n-1);\n\t}\n\t\n\t\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n\t\n\treturn 0;\n\t\n}\n\t\t\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0)return 1;\n    else{\n        return n*factorial(n-1);\n    }\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n <= 1) return 1;\r\n  return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  while (cin >> n) {\r\n    int respuesta = factorial(n);\r\n    cout << respuesta << endl;\r\n  }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n <= 1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    cout << factorial(0) << endl;\r\n    cout << factorial(1) << endl;\r\n    cout << factorial(2) << endl;\r\n    cout << factorial(3) << endl;\r\n    cout << factorial(4) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 1) {\n        return 1;\n    }\n    else return factorial(n-1)*n;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 1 or n == 0) {\n        return 1;\n    }\n    else return factorial(n-1)*n;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  return n * factorial(n - 1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int result;\n    if(n==0) result=1;\n    else result=n*factorial(n-1);\n    return result;\n    }\n\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x)\n    {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n)\n        cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return n;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 0) return 1;\n    else return (n*factorial(n-1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1); \n}\n\nint main() {\n    int a;\n    while (cin >> a) cout << factorial(a) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint recursivefactorial (int t){\r\n    int factorial = 1;\r\n    for (int i = 1; i <= t; i++){\r\n        factorial *= i;\r\n    }\r\n    return factorial;\r\n}\r\n\r\nint factorial (int n){\r\n    if (n == 0) n= 1;\r\n    return n*recursivefactorial(n-1);\r\n\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n < 2)\n        return 1;\n    return n*factorial(n-1);\n}\n\nint main()\n{\n    cout << factorial(5) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n  int n;\n  while(cin >> n)\n    cout << factorial(n) << endl;\n\n  return 0;\n}\n\nint factorial(int n){\n  if(n == 0) return 1;\n  return n*factorial(n-1);\n}\n",
  "int factorial(int n){\n    if(n <= 1) return 1;\n    else return factorial(n-1) * n;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1){\n        cout << \"computing 1! --> 1\" << endl;\n        return 1;\n    }\n\n    else\n    {\n        cout << \"computing \" << n << \"! \" << endl;\n        int f = factorial(n-1);\n        cout << \"    \" << n << \"! = \" << n << \"*\" << f << \" --> \" << n*f << endl;\n        return n*f;\n    }\n}\n\n\nint main()\n{\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) \n{\n    if (n <= 1) {\n        return 1;\n    }\n    else return n*factorial (n - 1);\n}\n\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);    \n}\n\n\nint main()\n{\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n)\n{\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n    cout.setf(ios::fixed);\n    cout.precision(3);\n\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n    int resultat;\r\n\r\n    if(n == 1 or n == 0) return resultat = 1;\r\n    else{\r\n        resultat = resultat + n * factorial(n-1);\r\n    }\r\n\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n    if(n == 1 or n == 0) return 1;\r\n    else{\r\n        return n * factorial(n-1);\r\n        \r\n    }\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n\r\n}",
  "#include <cmath>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) {\n    return 1;\n  }\n  return n * factorial(n - 1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\n#include <math.h>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n<=1) return (1);\r\n    else return (n*factorial(n-1));\r\n}\r\n\r\nint main()\r\n{\r\n    int m;\r\n    cin >> m;\r\n    cout << factorial(m) << endl;\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0)return 0;\n  else return n*factorial(n-1)\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0)return 0;\n  else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0)return 1;\n  else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\n// un factorial no Ã©s mÃ©s que: n * (n-1) * (n-2) * ... * (n - (n-1))\n\nint factorial(int n)\n{\n    // cas base: n = 1, n! = 1:\n    if (n == 1) return 1;\n    else\n    {\n        return n * factorial(n-1);\n    }\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// un factorial no Ã©s mÃ©s que: n * (n-1) * (n-2) * ... * (n - (n-1))\n\nint factorial(int n)\n{\n    // cas base: n = 1, n! = 1:\n    if (n == 0) return 1;\n    else\n    {\n        return n * factorial(n-1);\n    }\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n > 0){\n        return n * factorial (n - 1);\n    }\n    else return 1;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n > 1)\n    {\n        return n * factorial (n - 1);\n    }\n\n    else return 1;\n}\n\nint main()\n{   \n    int x;\n    while (cin >> x)\n    cout << factorial(x) << endl;\n}",
  "int factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    if (n > 1) n *= factorial (n - 1);\n    return n;\n}\n\nint main () {\n    int n;\n    while (cin >> n)\n        cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int result = 0;\n    if (n==1) result = 1;\n    else result = n*factorial(n-1);\n    return result;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int result = 0;\n    if (n==1) result = 1;\n    else result = n*factorial(n-1);\n    return result;\n}\n\nint factorial(int n);",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int result = 0;\n    if (n==1) result = 1;\n    else result = n*factorial(n-1);\n    return result;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n, int a) {\n    if (n==1) return a;\n    return factorial(n-1, n*a);\n}\n\nint main() {\n    int x, multi = 1;\n    while (cin >> x) {\n        cout << factorial(x, multi) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "//Calcula el factorial de un numero\n\n#include <iostream>\n\nusing namespace std;\n\n//Calcula el factorial de un entero\n//Pre: Un natural n que esta entre 0 y 12\n//Post: Devuelve el factorial de n\nint factorial(int n) {\n  if (n < 2) return 1;\n  else return n * factorial(n - 1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n<2) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int i = n - 2;\n  int factouz = 1;\n  while (i > 0) {\n    factouz *= i;\n    i--;\n  } return factouz;\n}\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int i = n;\n  int factouz = 1;\n  while (i > 1) {\n    factouz *= i;\n    i--;\n  } return factouz;\n}\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n)\r\n{\r\n    int sum = 1;\r\n    if (n > 1)\r\n    {\r\n        sum = factorial(n - 1);\r\n        sum *= n;\r\n    }\r\n    return sum;\r\n}\r\nint main()\r\n{\r\n    int n;\r\n    while (cin >> n)\r\n    {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1)\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n<2) return 1;\n    else return n*factorial(n-1);\n}\nint main ()  {\n    int n;\n    while (cin >> n) cout << factorial(n) << nendl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n<2) return 1;\n    else return n*factorial(n-1);\n}\nint main ()  {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if ( n == 0 ) return 1;\r\n    else return n * factorial (n-1);\r\n}",
  "#include <iostream>\n\nusing namespace std;\nint recursive_factorial(int n){\n    if (n <= 1){\n        return 1;\n    }\n    else{\n        return n * recursive_factorial(n-1);\n    }\n    return 0;\n}\n\nint main(){\n    int n;\n    while (cin >> n){\n        cout << recursive_factorial(n) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\n\nusing namespace std;\nint recursive_factorial(int n){\n    if (n <= 1){\n        return 1;\n    }\n    else{\n        return n * recursive_factorial(n-1);\n    }\n    return 0;\n}\n\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << recursive_factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\n\nusing namespace std;\nint recursive_factorial(int n){\n    int res = 1;\n    if (n != 0){\n       return res* n * recursive_factorial(n-1);\n    }\n    else{\n        return 1;\n    }\n}\n\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << recursive_factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\n\nusing namespace std;\nint factorial(int n){\n    int res = 1;\n    if (n != 0){\n       return res* n * factorial(n-1);\n    }\n    else{\n        return 1;\n    }\n}\n\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\n\nusing namespace std;\nint factorial(int n){\n    if (n <= 1){\n        return 1;\n    }\n    else{\n        return n * factorial(n-1);\n    }\n    return 0;\n}\n\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int fact = 1;\r\n    if (n>0){\r\n        fact = factorial(n-1)*n;\r\n    }else{\r\n        return 1;\r\n    }\r\n    return fact;\r\n}\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "from easyinput import read\r\nn = read(int)\r\ndef factorial(n):\r\n    fact = 1\r\n    if n == 0:\r\n        return fact\r\n\r\n    return factorial(n-1) * n\r\nprint(factorial(n))",
  "/*Dado un natural n, imprime n!\n*/\n\n#include <iostream>\nusing namespace std;\n\n// Pre: 0 <= n <= 12\n// Post: n!\nint factorial(int n) {\n    if (n == 2) return n;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "/*Dado un natural n, imprime n!\n*/\n\n#include <iostream>\nusing namespace std;\n\n// Pre: 0 <= n <= 12\n// Post: n!\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "from easyinput import read\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n*factorial(n-1)\n\nn = read(int)\nprint(factorial(n))",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else if (n == 1) return 1;\n    else if (n == 2) return 2;\n    else return n * factorial(n - 1);\n}\n\nint main(){\n    int a;\n    while (cin >> a) cout << factorial(a) << endl;\n}",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n == 1 or n == 0){\n        return 1;\n    }\n    else{\n        return n * factorial(n -1);\n\n\n    }\n\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n==1) return n; \r\n    else return n*factorial (n-1);\r\n}\r\n\r\nint main(){\r\n  int n;\r\n  cin>>n;\r\n  cout<<factorial(n)<<endl;\r\n    \r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n==0) return 1; \r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n  int n;\r\n  cin>>n;\r\n  cout<<factorial(n)<<endl;\r\n    \r\n}",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n){\n\tif (n == 1) return 1; \n\telse { \n\t\treturn n * factorial (n - 1);\t\n\t}\n}\n\nint main(){\n\tint n; \n\tcin >> n; \n\tcout << factorial(n) << endl; \n}\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n){\n\tif (n == 1) return 1; \n\telse { \n\t\tint check = factorial(n - 1); \n\t\tif (n == check) return n; \n\t\telse return n * check;\t\n\t}\n}\n\nint main(){\n\tint n; \n\tcin >> n; \n\tcout << factorial(n) << endl; \n}\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n){\n\tif (n <= 1) return 1; \n\telse return n * factorial(n-1); \n}\n\nint main(){\n\tint n; \n\tcin >> n; \n\tcout << factorial(n) << endl; \n}\n",
  "#include <iostream>\nusing namespace std;\n#include <cmath>\n\nint factorial(int n){\n\tif (n == 0 or n == 1) return 1;\n\treturn factorial(n-1)*n;\n}\n\nint main (){\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "// program that calculates factorial\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n// function that returns factorial\r\n// Precondition: 0 â¤ n â¤ 12\r\n// Postcondition: natural > 0\r\nint factorial(int n) {\r\n    if (n > 0) return n * factorial(n - 1); // general case\r\n    else return 1; // base case\r\n}\r\n\r\nint main () {\r\n    int num; // 0 â¤ num â¤ 12\r\n    cin >> num;\r\n    cout << factorial(num) << endl;\r\n}",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\treturn factorial(n-1)*n;\n}\n\t\n\nint main(){\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int ini = 1;\n    for(int i = ini; i <= n; i++) {\n        ini *= i;\n    }\n    return ini;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n    if (n == 0 or n == 1) return 1;\r\n    return factorial(n-1)*n;\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cout << factorial(n);\r\n\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n    if (n == 0 or n == 1) return 1;\r\n    return factorial(n-1)*n;\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n    if(n < 2) return 1;\r\n    else{\r\n\r\n        int aux = factorial(n - 1);\r\n        return aux * n;\r\n    }\r\n}\r\n\r\nint main(){\r\n\r\n    int number;\r\n\r\n    cin >> number;\r\n\r\n    cout << factorial(number) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n//Pre: un numero natural entre 0 y 12\n//Post: te saca el factorial\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "//Dado un numero calcula su factorial\n#include <iostream>\nusing namespace std;\n\n//Funcion que calcula la factorial del numero\n//Precondition: numero entero\n//Postcondition: numero entero\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n    int numero;\n    while (cin >> numero) {\n        cout << factorial(numero) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0){\r\n        n = 1;\r\n    }\r\n    else {\r\n        n = n * factorial(n-1);\r\n    }\r\n    return n;\r\n}\r\nint main(){\r\n\r\n    int n;\r\n\r\n    cin >> n;\r\n\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n     \r\n    if (n <= 1) return 1;\r\n    if (n == 2) return 2;\r\n    return n*factorial(n-1)\r\n\r\n}\r\n\r\nint main() {}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n     \r\n    if (n <= 1) return 1;\r\n    if (n == 2) return 2;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main() {}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n == 1 or n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while(cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 0) n = 1;\r\n    else n = n * factorial(n-1);\r\n    return n;\r\n}\r\nint main(){\r\n    int num;\r\n    while(cin >> num){\r\n    cout << factorial(num) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int resultat = n;\n    if(n > 1) resultat = resultat*factorial(n - 1);\n    else resultat = 1;\n    return resultat;\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 1)\n        return 1;\n    else\n        return n * (factorial(n - 1));\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 1)\n        return 1;\n    else\n        return n * (factorial(n - 1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n < 2)\n        return 1;\n    else\n        return n * (factorial(n - 1));\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "// Dado un numero natural, se imprime n factorial\n#include <iostream>\nusing namespace std;\n\n// Se devuelve el factorial de n\n// Pre: n >= 0\n// Post: Un entero con el factorial de n\nint factorial(int n) {\n    if (n < 2) {\n        return 1;\n    } else {\n        return n * factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1 or n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main (){\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n    \n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0)\r\n        n = 1;\r\n    else\r\n        n = n * factorial(n - 1);\r\n    return n;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    while (cin >> n)\r\n        cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1)\n    {\n        return 1;\n    }\n    else \n    {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return n * factorial(n-1);\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\tif (n <= 1) return 1;\n\treturn n*factorial(n - 1);\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}",
  "#include <iostream>\nusing namespace std;\n\nlong factorial(long n);\n\nint main()\n{\n    long x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n\nlong factorial(long n){\n    if (n == 1)\n    {\n        return 1;\n    }else{\n        cout << n << endl;\n        return factorial(n - 1) * n;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n\nint factorial(int n){\n    if (n == 1)\n    {\n        return 1;\n    }else{\n        return factorial(n - 1) * n;\n    }\n    \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n\nint factorial(int n){\n    if (n <= 1)\n    {\n        return 1;\n    }else{\n        return factorial(n - 1) * n;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return factorial(n-1)*n;\n    }\n}\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n==0)return 1;\r\n  else return factorial(n-1);\r\n}\r\n\r\n\r\n\r\nint main(){\r\n  int n;\r\n  cin >> n;\r\n  cout <<  factorial( n) <<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n==0)return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n\r\n\r\n\r\nint main(){\r\n  int n;\r\n  cin >> n;\r\n  cout <<  factorial( n) <<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1 or n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n   if (n == 1) return n;\n   else return factorial(n-1) * n;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n != 0) return n*factorial(n-1);\n    else return 1;\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) n = 1;\n    else n = n*factorial(n-1);\n\n    return n;\n}\n\nint main()\n{\n    int a;\n\n    cin >> a;\n\n    cout << factorial(a) << endl;\n}",
  "\r\n#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    return n*(factorial(n-1));\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    return n*(factorial(n-1));\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    return n*(factorial(n-1));\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n    if (n == 1) return 1;\n    else return n*(factorial(n-1));\n}\n\nint main(){\n    cout << factorial(4);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n    if (n == 0 or n == 1) return 1;\n    else return n*(factorial(n-1));\n}\n\nint main(){\n    cout << factorial(4);\n}",
  "//Dado un numero n, devuelve la factorial de este numero mediante\n//una funcion recursiva\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        n = 1;\n    }\n    else {\n        n = n * factorial (n-1);\n    }\n    return n;\n}\n\nint main () {\n    int numero;\n    while (cin >> numero) {\n        cout << factorial(numero) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint res;\n\tif (n==0) res=1;\n\telse res=n*factorial(n-1);\n\treturn res;\n}\nint main() {\t\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n\t\n",
  "#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0 or n == 1) return 1;\r\n\telse {\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int a = 1;\n    if(n > 1)a = factorial(n-1);\n    else n = 1;\n    return a*n;\n}\n\nint main(){\n    cout << factorial(0) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\nif(n == 1) return 1;\nreturn factorial(n - 1) * n;\n}\n\nint main(){}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\nif(n <= 1) return 1;\nreturn factorial(n - 1) * n;\n}\n\nint main(){}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return factorial (n-1) * n;\n}\n\nint main (){\n    int n;\n    while (cin >> n){\n    cout << factorial (n) << endl;\n}\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nvoid rombo(int n) {\n    if (n == 1) \n    \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n - 1) * n;\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "//Sub-programa recursiu que calcula el factorial d'un\r\n//enter entre 0 i 12.\r\n\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n//Calcul del factorial\r\nint factorial(int n) {\r\n\tint fact = 1;\r\n\tif (n > 1) {\r\n\t\tfact = n * factorial(n - 1);\r\n\t}\r\n\r\n\treturn fact;\r\n}\r\n\r\n//Lectura i tractament del nombre\r\nint main() {\r\n\tint nombre;\r\n\tcin >> nombre;\r\n\r\n\tcout << factorial(nombre) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n*factorial(n-1);\n    else return n;\n\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n*factorial(n-1);\n    else if (n == 0) return 1;\n    else return n;\n\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "//funcio que fa el factorial de un numero.\n\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int nfactorial = n;\n    if (n < 2) nfactorial = 1;\n    else nfactorial = nfactorial * factorial(n - 1);\n    return nfactorial;\n}\n\nint main() {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n*factorial(n);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n*factorial(n - 1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "/*imprime el factorial del numero que lee.*/\n\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    int fact = n;\n    if (n > 1) fact = fact * factorial(--n);\n    return fact;\n}\n\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n",
  "/*imprime el factorial del numero que lee.*/\n\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    int fact = n;\n    if (n > 1) fact = fact * factorial(--n);\n    else return 1;\n    return fact;\n}\n\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int total = 1;\n    if(n != 0){\n        total = n * factorial(n - 1);\n    }\n    return total;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// Retorna el factorial d'un nombre\n// Pre: 0 <= n <= 12\n// Pos: Retorna n!\nint factorial(int n) {\n    int res;\n    if (n < 2) res = 1;\n    else res = n * factorial(n - 1);\n    return res;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;    \n}\n",
  "#include <iostream>\n\nusing namespace std;\n//\n//Pre:\n//post:\nint factorial(int n){\n\t\n\tif (n == 1 or n == 0){\n\t\tn = 1;\n\t}\n\telse{\n\t\tn = n*factorial(n-1);\n\t}\n\n\treturn n;\n}\n\nint main(){\n\n\tint valor = 0;\n\twhile (cin >> valor){\n\t//Inv:\n\t\tcout << factorial(valor) << endl;\n\t}\n\n\n}\n",
  "#include <iostream>\n\nusing namespace std;\n// Calcula es factorial de un nombre\n//Pre:un nombre natural igual o mes gran que 0\n//post:Retorna el factorial calculat del nombre n\nint factorial(int n){\n\t\n\tif (n == 1 or n == 0){\n\t\tn = 1;\n\t}\n\telse{\n\t\tn = n*factorial(n-1);\n\t}\n\n\treturn n;\n}\n\nint main(){\n\n\tint valor = 0;\n\twhile (cin >> valor){\n\t//Inv:\n\t\tcout << factorial(valor) << endl;\n\t}\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tint fact = 1;\n\t\n\tif (n > 1) {\n\t\tfact *= n;\n\t\tfact *= factorial(n - 1) ;\n\t\t}\n\t\t\n\t\treturn fact;\n\t}\n\t\nint main() {\n\t\n\tcout << factorial (0) << endl;\n\t}\n",
  "#include <iostream>\n using namespace std;\n\n \nint factorial(int n){\n    if(n!=1 && n!=0){\n       return n*factorial(n-1);\n    }else{\n        return 1; \n    }\n    \n}\n \n int main ( ) {\n \n }\n",
  "#include <iostream>\n using namespace std;\n\n \nint factorial(int n){\n    if(n!=1 && n!=0){\n       return n*factorial(n-1);\n    }else{\n        return 1; \n    }\n    \n}\n \n int main ( ) {\n \n }\n",
  "#include <iostream>\nusing namespace std;\n\n\nint gcd(int a, int b) {\n\tif (b == 0) return a;\n    else return gcd(b, a%b);\n\t}\n\t\nint main() {\n\t\n\tcout << gcd(66, 12) << endl;\n\t}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial ( int n )\r\n{\r\n    if ( n = 0)\r\n    {\r\n        return 1;\r\n    }\r\n    return n*factorial(n-1);\r\n\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial ( int n )\r\n{\r\n    if ( n == 0)\r\n    {\r\n        return 1;\r\n    }\r\n    return n*factorial(n-1);\r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n-1);\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) n = 1;\n    else n = n * factorial(n-1);\n\n    return n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int nf = n * (n-1);\n    return factorial (n-2) * nf;\n}\n\nint main (){\n    int n =0;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0 or n==1) return 1;\n    \n    else{\n        int nf = n * (n-1);\n        return factorial (n-2) * nf;\n    }\n}\n\n\n\n\n\nint main (){\n    int n =0;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 0) return 1;\n    else return n*factorial(n -1);\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n// Cas Base = 1     , si n = 0\r\n// Cas General =  n*factorial(n-1)  , si n > 0\r\n\r\nint factorial (int n) {\r\n    //Cas Base\r\n    if ( n == 0){\r\n        n= 1;\r\n    }\r\n    //Cas general\r\n    else {\r\n        n = n*factorial(n-1);\r\n    }\r\n    return n;\r\n}\r\n\r\n\r\nint main (){\r\n    cout << factorial << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n// Cas Base = 1     , si n = 0\r\n// Cas General =  n*factorial(n-1)  , si n > 0\r\n\r\nint factorial (int n) {\r\n    //Cas Base\r\n    if ( n == 0){\r\n        n= 1;\r\n    }\r\n    //Cas general\r\n    else {\r\n        n = n*factorial(n-1);\r\n    }\r\n    return n;\r\n}\r\n\r\n\r\nint main (){\r\n \r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//factorial\r\n\r\nint factorial(int n) {\r\n    if(n == 1) return 1;\r\n    else return v*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n; \r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//factorial\r\n\r\nint factorial(int n) {\r\n    if(n == 1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n; \r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//factorial\r\n\r\nint factorial(int n) {\r\n    if(n == 1 or n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin>>n){\r\n    cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    int r = factorial(n); \n    cout << r << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n    {\n        return 1;\n    }\n    else\n    {\n        return n * factorial(n -1);\n    }\n}\n\nint main()\n{\n    int x;\n    while (cin >> x)\n    {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n    if (n < 2) return 1;\n    return n * factorial (n - 1);\n}\n\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0 or n == 1)\n    {\n        return 1;\n    }\n    else\n    {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int n;\n    while (cin >> n)\n    {\n        cout << factorial(n) << endl;\n    }\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int n; \n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n    {\n    int m = 1;\n    while (n > 0)\n        {\n        m = m*n;\n        n--;\n        }\n    return m;\n    }\n\nint main ()\n{\nint n, m;\ncin >> n;\ncout << factorial(n) << endl; \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n    {\n    int m = 1;\n    while (n > 0)\n        {\n        m = m*n;\n        n--;\n        }\n    return m;\n    }\n\nint main ()\n{\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n    {\n    if (n <=1) {return (1);}\n    else {return n*factorial(n-1);}\n    }\n\nint main ()\n{\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n)\n{\n    if (n == 0)\n    {\n        n = 1;\n    }\n\n    else\n    {\n        n = n * factorial(n - 1);\n    }\n\n    return n;\n}\n\nint main()\n{\n    int n;\n    while (cin >> n)\n    {\n        cout << factorial(n) << endl;\n    }\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main (){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n    \n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n){\n    if(n==0)return 1;\n    return factorial(n-1)*n;\n }",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) {\r\n        return 1;\r\n    } else {\r\n        return n*(n-1);\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) {\r\n        return 1;\r\n    } else {\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n    cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if(n<=1) return 1;\n    else return factorial(n-1) * n;\n}\nint main(){\n    int n;\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n < 2) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0 or n == 1) {\r\n        return 1;\r\n    } else {\r\n        return n * factorial(n - 1);}}\r\n\r\nint main(){\r\n    int n;\r\n    cin >>n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial (n - 1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n    return 0;\r\n}\r\n",
  "//Donat un enter entre zero i dotze ambdos \r\n//inclosos calcular el factorial\r\n#include <iostream>\r\nusing namespace std;\r\n//Donat un enter entre zero i dotze ambdos \r\n//inclosos calcular el factorial\r\n//Precondicio: 0 <= n <= 12\r\n//Podtcondicio: el factorial\r\nint factorial(int n) {\r\n    int fact;\r\n    if (n == 0) {\r\n        fact = 1;\r\n    }\r\n    else {\r\n        fact = n * factorial(n - 1);\r\n    }\r\n    return fact;\r\n\r\n}\r\n\r\nint main() {\r\n    //Input: 0 <= n <= 12\r\n    int numero;\r\n    cin >> numero;\r\n    //Output: el factorial\r\n    cout << factorial(numero) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0 or n==1) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    cout<<factorial(4)<<endl;\r\n}",
  "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int y = 0;\r\n    if (n == 1) {\r\n        return(n);\r\n    }\r\n    else {\r\n        y = n * factorial(n-1);\r\n        return(y);\r\n    }\r\n}\r\nint main () {\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a) << endl;\r\n}",
  "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int y = 0;\r\n    if (n == 0) {\r\n        return 1;\r\n    }\r\n    else {\r\n        y = n * factorial(n-1);\r\n        return y;\r\n    }\r\n}\r\nint main () {\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact = 1;\n    if (n > 1){\n        fact = n * factorial(n - 1);\n    }\n    return fact;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n\tint multiplicacion;\n\tif(n==0) multiplicacion=1;\n\telse multiplicacion=n*factorial(n-1);\n\n\n\treturn multiplicacion;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Calcula el facotrial del nombre donat.\n//Pre: n Ã©s un nobre positiu.\n//Post: retorna el factorial del nombre.\nint factorial(int n){\n\tint f=1, i=0;\n\twhile (i<n){\n\t\t//Inv: f=i!\n\t\ti = i+1;\n\t\tf = f*i;\n\t}\n\treturn f;\n}\n\t\n",
  "#include <iostream>\nusing namespace std;\n//Des:La funcio dona el factorial del nombre llegit.\n//Pre:EL nombre n te un rang de 12 a 0.\n//Post:La funciona res que es el factorial del nombre n.\nint factorial(int n){\n\tint res=0;\n\tif (n==0){res=1;}\n\telse {res=n*factorial(n-1);}\n\treturn res;\n\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tint x;\n\tx=factorial(n);\n\tcout << x <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint x;\n\tif(n==0) x=1;\n\telse x=n*factorial(n-1);\n\treturn x;\n}\n\t\t\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include<iostream>\nusing namespace std;\n//Calcula el factorial del nombre donat.\n//Pre:n es un nombre enter positiu.\n//post: retorna n!\nint factorial(int n){\n\tint res;\n\tif (n==0){\n\tres=1;\n\t}\n\telse{\n\tres=n*factorial(n-1);\n\t}\n\treturn res;\n}\n\nint factorial(int n);\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include<iostream>\nusing namespace std;\n\n//AcciÃ³n: calcula el factorial del nÃºmero de entrada\n//Pre: un nÃºmero entero\n//Post: un nÃºmero entero que es el factorial de la entrada\nint factorial(int n){\n\tint producto = n;\n\t\n\tif(n < 2){ \n\t\tproducto = 1;\n\t}else{\n\t\tproducto = producto*factorial(n-1);\n\t}\n\treturn producto;\n}\n\nint main(){\n\tint n;\n\twhile(cin >> n){\n\t\t//INV: llama eimprime la funciÃ³n factorial\n\t\tfactorial(n);\n\t\tcout << \"factorial(\" << n << \"):\" << factorial(n) << endl;\n\t}\n\t\n}\n",
  "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}",
  "\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n <= 1) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else if (n == 1) return 1;\n    return (factorial(n - 1) * n);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// Function that returns a factorial number of integer\n// Pre: A integer between 0 and 12\n// Post: A interger\nint factorial(int n) {\n\tint res=1;\n\tif(n!=0) res*=n*factorial(n-1);\n\treturn res;\t\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n\treturn 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\n    if((n == 1) or (n == 0)){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n}\nint main() {\n\n    int n;\n\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n* factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n==0)return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial (n)<< endl;\n}\n\n//Exemple amb el nÃºmero 3.\n\n//factorial 3\n// 3 * factorial (n-1)\n\n//factorial 2\n// 2 * factorial (n-1)\n\n//factorial 1\n// 1 * factorial (n-1)\n\n//factorial 0\n// return 1\n\n// return 1*1 = 1\n// return 2*1 = 2\n// return 3*2 = 6\n\n//cout 6.\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) {\n        return 1;\n    }\n    else {\n        return n*(factorial (n - 1));\n    }\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial (n) << endl;\n    }\n} ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1)\n    {\n        n = n * factorial(n-1);\n    }\n    return (n);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1)\n    {\n        n = n * factorial(n-1);\n    }\n    return (n);\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n>0){\n        return(n*factorial(n-1));\n    }\n    else{\n        return(1);\n    }\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}",
  "int factorial(int n) {\n   if (n <= 1) return 1;\n   else return n*factorial(n - 1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n == 0){\r\n\t\treturn 1;\r\n\t}\r\n\t\r\n\telse{\r\n\t\tn = n*factorial(n-1);\r\n\t\treturn n;\r\n\t}\r\n}",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) {\n        return n * factorial(n - 1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n//caso base es el factorial de 0 porque es 1 lo conozco y es siempre asi en cualquier caso\nif(n==0){return 1;} //acaba la ejecucion y empieza el subir pa arriba\n\n//no hace falta poneer else porque en el return acaba una ejecucion\n\nreturn n*factorial(n-1);\n\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int x) {\r\n    if(x > 1) return factorial(x)*factorial(x - 1);\r\n    else return x;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int x) {\r\n    if(x > 1) return x*factorial(x - 1);\r\n    else return x;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int x) {\r\n    if(x <= 1) return x;\r\n    else return x*factorial(x - 1);\r\n}   ",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int x) {\r\n    if(x == 0) x = 1;\r\n    if(x <= 1) return x;\r\n    else return x*factorial(x - 1);\r\n}   ",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0 or n == 1) return 1;\r\n    else {\r\n        return factorial(n-1) * n;\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0){\r\n        return 1;\r\n    } else {\r\n        return n*factorial(n-1);\r\n    }\r\n}",
  "def factorial(n):\n    \"\"\"\n    Calculate the factorial of a number using recursion.\n    \"\"\"\n    # Base case: if n is 0 or 1, return 1\n    if n == 0 or n == 1:\n        return 1\n    # Recursive case: n! = n * (n-1)!\n    else:\n        return n * factorial(n - 1)\n\n# Ejemplo de uso de la funciÃ³n\nnumero = 5\nresultado = factorial(numero)\nprint(f\"El factorial de {numero} es {resultado}\")\n",
  "def factorial(n):\n    \"\"\"\n    Calculate the factorial of a number using recursion.\n    \"\"\"\n    # Base case: if n is 0 or 1, return 1\n    if n == 0 or n == 1:\n        return 1\n    # Recursive case: n! = n * (n-1)!\n    else:\n        return n * factorial(n - 1)\n\n# Para usar la funciÃ³n, simplemente llama a factorial(numero)\n# Por ejemplo:\n# resultado = factorial(5)\n",
  "import sys\n\ndef factorial(n: int) -> int:\n    # Set a higher recursion limit\n    sys.setrecursionlimit(10000)\n\n    # Base case: 0! and 1! are both 1\n    if n == 0 or n == 1:\n        return 1\n    # Recursive case: n! = n * (n-1)!\n    else:\n        return n * factorial(n - 1)\n\n# Example usage:\nresult = factorial(5)\nprint(result)  # Output: 120\n\n",
  "import sys\n\ndef factorial(n: int) -> int:\n    # Base case: 0! and 1! are both 1\n    if n == 0 or n == 1:\n        return 1\n    else:\n        # Recursive case: n! = n * (n-1)!\n        return n * factorial(n - 1)\n\n# Example usage:\nprint(factorial(0))  # Output: 1\nprint(factorial(1))  # Output: 1\nprint(factorial(2))  # Output: 2\nprint(factorial(3))  # Output: 6\nprint(factorial(4))  # Output: 24\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else {\n        return factorial(n-1) * n;\n    }\n}\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\n\r\nint factorial(int n) {\r\n    if (n == 0 || n == 1) {\r\n        return 1;\r\n    } else {\r\n        return n * factorial(n - 1);\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n = 5; // You can change this value to test different inputs\r\n    std::cout << \"Factorial of \" << n << \" is: \" << factorial(n) << std::endl;\r\n    return 0;\r\n}\r\n",
  "int factorial(int n) {\r\n    if (n == 0)\r\n        return 1;\r\n    else\r\n        return n * factorial(n - 1);\r\n}",
  "int factorial(int n) {\r\n  if (n == 0) {\r\n    return 1;\r\n  } else {\r\n    return n * factorial(n - 1);\r\n  }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint x;\n\tif(n >= 1){\n\t\tx = n*factorial(n-1);\n\t} else{\n\t\tx = 1;\n\t}\n\treturn x;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tint x;\n\tx = factorial(n);\n\tcout << x << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\t\tif(n <= 1) return 1;\n\t\telse  return n*factorial(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n -1);\n    \n}\n\nint main(){\n    int x;\n    while (cin >> x){\n        cout << factorial(x) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n   if (n == 1) return n;\n   else return n*factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n   if (n == 0) return 1;\n   else return n*factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "from yogi import scan\r\n\r\ndef factorial(n): # returns int\r\n    if n == 0:\r\n        return 1\r\n    return n*factorial(n-1)\r\n\r\nn = scan(int)\r\nprint(factorial(n))",
  "from yogi import scan\r\n\r\ndef factorial(n): # returns int\r\n    if n == 0:\r\n        return 1\r\n    return n*factorial(n-1)\r\n\r\nn = scan(int)\r\nprint(factorial(n))",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return (n * factorial(n-1));\n}\n\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\t\n\tint res;\n\tif (n > 0) {\n\t\tres = n*factorial(n-1);\n\t} else {\n\t\tres = 1;\n\t}\n\treturn res;\n}\n",
  "import sys\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\nn = sys.stdin.readline().strip()\nn = int(n)\nprint(factorial(n))",
  "from easyinput import read\n\ndef factorial(n):\n    mult = 1\n    if n == 0:\n        return mult\n    return n * factorial(n-1)\n\nn = read(int)\nprint(factorial(n))",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    int mult = 1;\n    if (n == 0){\n        return mult;\n    }\n    return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n==0){\n        return 1;\n    }\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    return 0;\n}",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n==0){\n        return 1;\n    }\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    return 0;\n}",
  "def factorial(n):\n    '''\n    >>> factorial(0)\n    1\n    >>> factorial(1)\n    1\n    >>> factorial(2)\n    2\n    >>> factorial(3)\n    6\n    >>> factorial(4)\n    24 \n    '''\n    product = 1\n    for i in range(1, n+1):\n        product *= i\n    return product\n\nfrom sys import stdin\n\nfor line in stdin:\n    line = line.split()\n    for num in line:\n        num = int(num)\n        print(factorial(num))",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fct = 1;\n    for (int i = 1; i <= n; ++i) {\n        fct *= i;\n    }\n    return fct;\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "\t#include <iostream>\n\tusing namespace std;\n\tint factorial(int n){\n\t\tint multi;\n\t\tif(n==1){\n\t\t\tmulti=1;\n\t\t}\n\t\telse{\n\t\t\tmulti=n*factorial(n-1);\n\t\t\t\n\t\t}\n\t\treturn multi;\n\t}\n\tint main(){\n\t\n\t}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 1 or n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n    int x;\r\n\r\n    while(cin >> x){\r\n        cout << factorial(x) << endl;\r\n    }\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n// Function that returns the result of the factoral operation of a number 'n'.\r\n// Pre: 0 â¤ n â¤ 12.\r\n// Pos: After the funtion it shall return the factorial of the number 'n'.\r\nint factorial(int n) { \r\n    if (n == 0 || n == 1) {  // Checks if n is 0 or 1. If true, returns 1 (base case for the factorial function).\r\n        return 1;\r\n    } else { //\r\n        return n * factorial(n - 1); // If n is greater than 1, recursively calls the factorial function with a smaller value until it reaches the base case.\r\n    }\r\n}",
  "#include <iostream>\r\n#include <iomanip>\r\n#include <string>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <unordered_map>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n\tcin >> n;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n){\n\t\tif(n <= 1) return 1;\n\t\telse return n*factorial(n-1);\t \n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0){\n        return 1;\n    } else{\n        return n*factorial(n-1);\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1; \n    else return n * factorial(n-1); \n}\n\nint main(){\n    int n; \n    cin >> n; \n    cout << factorial(n) << endl; \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n)\n{\n    int prod = 1;\n    if (n == 1) return 1;\n    else\n    {\n        prod *= factorial(n - 1);\n    }\n    return prod;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n)\n{\n    if (n == 1) return 1;\n    else\n    {\n        return factorial(n - 1)*n;\n    }\n    return prod;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n)\n{\n    if (n == 1) return 1;\n    else\n    {\n        return factorial(n - 1)*n;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n)\n{\n    if (n == 1) return 1;\n    else\n    {\n        return factorial(n - 1)*n;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n)\n{\n    if (n == 1 or n == 0) return 1;\n    else\n    {\n        return factorial(n - 1)*n;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1)\n        return 1;\n    else\n        return n*factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1)\n        return 1;\n    else\n        return n*factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    int fact = 0;\r\n\r\n    if(n == 0)\r\n    {\r\n        return 1;\r\n    }\r\n\r\n    else\r\n    {\r\n        fact = factorial(n - 1) * n;\r\n    }\r\n\r\n    return fact;\r\n}\r\n\r\nint main()\r\n{\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 1) {\n    return 1;\n  }\n  return n * factorial(n-1);\n}\n\nint main()\n{\n  int x;\n  while (cin >> x)\n  {\n    cout << factorial(x) << endl;\n  }\n  return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1; \n    else return factorial (n - 1) *n; \n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else{\n        return factorial(n-1) * n;\n\n    }\n}\n\nint main(){\n    \n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return n;\r\n    else {\r\n        return(n * factorial(n-1));\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else {\r\n        return(n * factorial(n-1));\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int);\n\n\nint main(){\n\n    int result, n;\n    cin >> n;\n    result = factorial(n);\n    cout << result << endl;\n}\n\nint factorial(int n){\n    if ( n == 0) n = 1;\n    else n *= factorial (n-1);\n    return n;\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n)\r\n{\r\n\tif (n==1) return n;\r\n\t\r\n\telse \r\n\t{\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\t\r\n}\r\n\r\nint main()\r\n{\r\n\tint x;\r\n\tcin>>x;\r\n\tcout<<factorial(x);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n)\r\n{\r\n\tif (n==1) return n;\t\r\n\r\n\treturn n*factorial(n-1);\r\n\t\r\n}\r\n\r\nint main()\r\n{\r\n\tint x;\r\n\tcin>>x;\r\n\tcout<<factorial(x);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n)\r\n{\r\n\tif (n==1) return n;\t\r\n\r\n\treturn n*factorial(n-1);\r\n\t\r\n}\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n)\r\n{\r\n\tif (n==1) return 1;\t\r\n\r\n\treturn n*factorial(n-1);\r\n\t\r\n}\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n)\r\n{\r\n\tif (n==0) return 1;\t\r\n\r\n\treturn n*factorial(n-1);\r\n\t\r\n}\r\n",
  "// Dado un nÃºmero imrpime su factorial.\n// Input: Natural del 0 al 12 incluido.\n// Output: Imprime el resultado del factorial introducido en el input.\n\n#include <iostream>\n\nusing namespace std;\n\n// Pre: Natural entre 0 al 12.\n// Post: Devuelve el resultado del factorial.\n\nint factorial(int n) {\n if (n <= 1) {\n    return 1;\n } else {\n    return n*factorial(n-1);\n }\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main(){\n    int x;\n    while (cin >> x){\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    int sumfact = 1;\n    if (n <= 1) return sumfact *= 1;\n    else return sumfact*= n * factorial(n-1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0 or n == 1) return 1;\r\n    else return n* factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) <<endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1 or n == 0) return n; \n    else return factorial(n -1)*n; \n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1 or n == 0) return 1; \n    else return factorial(n -1)*n; \n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) {\n        return 1;\n    }\n    else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) {\n        return 1;\n    }\n    else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n// Stack overflow\n/*\nn! = n*(n-1)*(n-2)*...*2*1\nn! = n*(n-1)!\n*/\nint factorial(int n) {\n    // Caso base\n    if (n == 0) return 1;\n    return factorial(n-1)*n;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n - 1) * n;\n}\n\nint main() {}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main(){\n  int x;\n  while(cin >> x){\n    cout << factorial(x) << endl;\n  }\n}",
  "fn factorial(i: u64) -> u64 {\n    if i >= 1 {\n        return i * factorial(i - 1);\n    }\n    1\n}\n",
  "fn main() {\n    // Ignored\n}\n\nfn factorial(i: u64) -> u64 {\n    if i >= 1 {\n        return i * factorial(i - 1);\n    }\n    1\n}\n",
  "use std::io;\n\nfn main() {\n    let mut buffer = String::new();\n    let stdin = io::stdin();\n    stdin.read_line(&mut buffer).unwrap();\n\n    println!(\"{}\", factorial(buffer.trim().parse().unwrap()))\n}\n\nfn factorial(i: u64) -> u64 {\n    if i >= 1 {\n        return i * factorial(i - 1);\n    }\n    1\n}\n",
  "use std::io;\n\nfn main() {\n    loop {\n        let mut buffer = String::new();\n        let stdin = io::stdin();\n        stdin.read_line(&mut buffer).unwrap();\n\n        println!(\"{}\", factorial(buffer.trim().parse().unwrap()))\n    }\n}\n\nfn factorial(i: u64) -> u64 {\n    if i >= 1 {\n        return i * factorial(i - 1);\n    }\n    1\n}\n",
  "use std::{error::Error, io};\n\nfn main() -> Result<(), Box<dyn Error>> {\n    let stdin = io::stdin();\n    let mut buffer = String::new();\n    loop {\n        stdin.read_line(&mut buffer)?;\n        println!(\"{}\", factorial(buffer.trim().parse()?))\n    }\n}\n\nfn factorial(i: u64) -> u64 {\n    if i >= 1 {\n        return i * factorial(i - 1);\n    }\n    1\n}\n",
  "use std::{error::Error, io};\n\nfn main() -> Result<(), Box<dyn Error>> {\n    let stdin = io::stdin();\n    let mut buffer = String::new();\n    loop {\n        stdin.read_line(&mut buffer)?;\n        println!(\"{}\", factorial(buffer.trim().parse()?));\n        buffer.clear();\n    }\n}\n\nfn factorial(i: u64) -> u64 {\n    if i >= 1 {\n        return i * factorial(i - 1);\n    }\n    1\n}\n",
  "#include <iostream>\n\nint main() {\n    while true {\n        int i;\n        cin >> i; // Is there an implicit cast here???\n        cout << factorial(i) << \"\\n\"; // This syntax is absolutely awful\n    }\n    return 0; // Unreachable!\n}\n\nint factorial(int i) {\n    if i >= 1 {\n        return i * factorial(i - 1);\n    }\n    1\n}\n",
  "#include <iostream>\n\nint main() {\n    while (true) {\n        int i;\n        cin >> i; // Is there an implicit cast here???\n        cout << factorial(i) << \"\\n\"; // This syntax is absolutely awful\n    }\n    return 0; // Unreachable!\n}\n\nint factorial(int i) {\n    // Damn these parenthesis are unnecessary\n    if (i >= 1) {\n        return i * factorial(i - 1);\n    }\n    1\n}\n",
  "#include <iostream>\nusing namespace std; // This will take getting used to\n\nint main() {\n    while (true) {\n        int i;\n        cin >> i; // Is there an implicit cast here???\n        cout << factorial(i) << \"\\n\"; // This syntax is absolutely awful\n    }\n    return 0; // Unreachable!\n}\n\nint factorial(int i) {\n    // Damn these parenthesis are unnecessary\n    if (i >= 1) {\n        return i * factorial(i - 1);\n    }\n    1\n}\n",
  "#include <iostream>\nusing namespace std; // This will take getting used to\n\nint main() {\n    while (true) {\n        int i;\n        cin >> i; // Is there an implicit cast here???\n        cout << factorial(i) << \"\\n\"; // This syntax is absolutely awful\n    }\n    return 0; // Unreachable!\n}\n\nint factorial(int i) {\n    // Damn these parenthesis are unnecessary\n    if (i >= 1) {\n        return i * factorial(i - 1);\n    }\n    return 1; // Daamn this is unnecessary\n}\n",
  "#include <iostream>\nusing namespace std; // This will take getting used to\n\n// Wait what? Does it have to be up here or something? That's awful\nint factorial(int i) {\n    // Damn these parenthesis are unnecessary\n    if (i >= 1) {\n        return i * factorial(i - 1);\n    }\n    return 1; // Daamn this is unnecessary\n}\n\nint main() {\n    while (true) {\n        int i;\n        cin >> i; // Is there an implicit cast here???\n        cout << factorial(i) << \"\\n\"; // This syntax is absolutely awful\n    }\n    return 0; // Unreachable!\n}\n",
  "// Recursive facorial\n#include <iostream>\r\nusing namespace std;\n\nint factorial(int n) {\n  int resultat = 1;\n  \n  if (n > 1) {\n    resultat = n * factorial(n - 1);\n  }\n  \n  return resultat;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tlong int resultat = 1;\r\n\t\r\n\tresultat *= n;\r\n\r\n\tif(n > 1) resultat *= factorial(n - 1);\r\n\r\n\treturn resultat;\r\n}\r\n\r\nint main(){}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tlong int resultat = 1;\r\n\t\r\n\tresultat *= n;\r\n\r\n\tif(n > 1) resultat *= factorial(n - 1);\r\n\r\n\telse if(resultat == 0) resultat = 1;\r\n\r\n\treturn resultat;\r\n}\r\n\r\nint main(){}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n// Calcula el factorial d'un nombre n de forma recursiva\r\n// Pre: n es un nombre necessariament enter\r\n// Post: Retorna el producte de tots els nombres naturals compresos entre 1 i el valor de n en la primera crida.\r\nint factorial(int n){\r\n    if (n != 1){\r\n        return n * factorial(n-1);\r\n    }\r\n    else{\r\n        return n;\r\n    }\r\n}\r\n// factorial(1) = 1\r\n// factorial(2) = 2 * factorial(1) = 2 * 1 = 2\r\n// factorial(3) = 3 * factorial(2) = 3 * 2 = 6\r\n// factorial(4) = 4 * factorial(3) = 4 * 6 = 24\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n// Calcula el factorial d'un nombre n de forma recursiva\r\n// Pre: n es un nombre necessariament enter\r\n// Post: Retorna el producte de tots els nombres naturals compresos entre 1 i el valor de n en la primera crida.\r\nint factorial(int n){\r\n    if (n != 1){\r\n        return n * factorial(n-1);\r\n    }\r\n    else{\r\n        return n;\r\n    }\r\n}\r\n// factorial(1) = 1\r\n// factorial(2) = 2 * factorial(1) = 2 * 1 = 2\r\n// factorial(3) = 3 * factorial(2) = 3 * 2 = 6\r\n// factorial(4) = 4 * factorial(3) = 4 * 6 = 24\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n// Calcula el factorial d'un nombre n de forma recursiva\r\n// Pre: n es un nombre necessariament enter 0 <= n <= 12\r\n// Post: Retorna el producte de tots els nombres naturals compresos entre 1 i el valor de n en la primera crida.\r\nint factorial(int n){\r\n    if (n >= 0 and n <= 12){\r\n        if (n != 1){\r\n            return n * factorial(n-1);\r\n        }\r\n        else{\r\n            return n;\r\n        }\r\n    }\r\n}\r\n// factorial(1) = 1\r\n// factorial(2) = 2 * factorial(1) = 2 * 1 = 2\r\n// factorial(3) = 3 * factorial(2) = 3 * 2 = 6\r\n// factorial(4) = 4 * factorial(3) = 4 * 6 = 24\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n// Calcula el factorial d'un nombre n de forma recursiva\r\n// Pre: n es un nombre necessariament enter 0 <= n <= 12\r\n// Post: Retorna el producte de tots els nombres naturals compresos entre 1 i el valor de n en la primera crida.\r\nint factorial(int n){\r\n    if (n == 0){\r\n        return 1;\r\n    }\r\n    else{\r\n        if (n != 1){\r\n            return n * factorial(n-1);\r\n        }\r\n        else{\r\n            return n;\r\n        }\r\n    }\r\n}\r\n// factorial(1) = 1\r\n// factorial(2) = 2 * factorial(1) = 2 * 1 = 2\r\n// factorial(3) = 3 * factorial(2) = 3 * 2 = 6\r\n// factorial(4) = 4 * factorial(3) = 4 * 6 = 24\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\nint main()\n{   \n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n\n\n   \n}",
  "def factorial(n:int) -> int:\r\n    o = 1\r\n    for i in range(n):\r\n        o *= (i+1)\r\n    return o",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if(n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}",
  "def factorial(n):\n\tif n == 1:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n-1)\n\nn=int(input())\nprint(factorial(n))\n",
  "// P12509\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n<2) return 1;\n  else return n * factorial(n-1);\n}\n\nint main() {\n  int n;\n  while (cin >> n) cout << factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int resultat;\n    if (n == 0) resultat = 1;\n    else if (n == 1) resultat = 1;\n    else {\n        resultat = n * factorial(n-1);\n    }\n    return resultat;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0 || n == 1) {\n\t\treturn 1;\n\t}\n\treturn n * factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<2) return 1;\n    else return n * factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "// P12509\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n// Pre: 0 <= n <= 12\r\n// Post: the function returns n!\r\nint factorial(int n) {\r\n    // cas base\r\n    if (n == 0) return 1;\r\n    // cas recursiu\r\n    else {\r\n        return n*factorial(n - 1);\r\n    }\r\n}\r\n/*\r\nint main () {\r\n    int num;\r\n    while (cin >> num) cout << factorial(num) << endl;\r\n}*/",
  "int factorial(int n)\n{\n    if (n <= 1)\n        return 1;\n    return n * factorial(n - 1);\n}\n",
  "\ndef factorial(n):\n    if n <= 1:\n        return 1\n    return n * factorial(n - 1)\n",
  "\nint factorial(int n)\n{\n    if (n <= 1)\n        return 1;\n    return n * factorial(n - 1);\n}\n",
  "class Solution {\n\n  public static int factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n - 1);\n  }\n  \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else {\n        int cont = 1;\n        int i = 1;\n        while (i != n) {\n            cont *= i;\n            ++i;\n        }\n        return cont*n;\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "def factorial(a):\r\n    if a ==1:\r\n        return 1\r\n    else:\r\n        return a*factorial(a-1)",
  "from pytokr import pytokr\r\ndef factorial(a):\r\n    if a ==1:\r\n        return 1\r\n    else:\r\n        return a*factorial(a-1)\r\n    \r\nitem, items = pytokr(iter=True)\r\nfor n in items():\r\n    n = int(n)\r\n    p = factorial(n)\r\n    print(p)",
  "from pytokr import pytokr\r\ndef factorial(a):\r\n    if a ==1 or a ==0:\r\n        return 1\r\n    else:\r\n        return a*factorial(a-1)\r\n    \r\nitem, items = pytokr(iter=True)\r\nfor n in items():\r\n    n = int(n)\r\n    p = factorial(n)\r\n    print(p)",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial (n-1);\n\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "int factorial(int n) {\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n     int i=0;\n     int p=n;\n     while (i<n-1) {\n         ++i;\n         p=p*(n-i);\n     }\n     return p;\n}\n     \nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) { \n    int p = 1;\n    while ( n != 0) {\n        \n        p = p*n;\n        --n;\n        \n        }\n        \n        return p;\n    }\n    \n    \nint main() { \n       int n;\n       cin >> n;\n       \n       cout << factorial (n) << endl;\n       \n}\n",
  "int factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n    }\n",
  "int factorial (int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\t\n\treturn 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\tint factorial (int n){\n\tint f=1;\n\twhile (n>1) {\n\tf*=n;\n\t--n;\n\t}\n\treturn f;\n\t}\n\t}\n\n\n",
  "int factorial(int n){\n  if(n>=1) return 1;\n  return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint fact( int a){\r\n    if (a<1) return 1;\r\n    else return (factorial (a-1))*a;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint fact( int a){\r\n    if (a<1) return 1;\r\n    else return (fact (a-1))*a;\r\n}\r\n",
  "#include <iostream>\r\n#include <cstdlib>\r\n\r\nusing namespace std;\r\n\r\nint fact( int a){\r\n    if (a<1) return 1;\r\n    else return (fact (a-1))*a;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial ( int n){\r\n    if (n<1) return 1;\r\n    else return (factorial (n-1))*n;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n);\r\nint main(int argc, char *argv[])\r\n{\r\n    int n;\r\n    cin>>n;\r\n    int k=factorial (n);\r\n    cout<<k;\r\n\r\n}\r\n\r\n\r\nint factorial(int n)\r\n{\r\n  if(n<2)\r\n    return 1;\r\n  else\r\n    return n * factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\nreturn n * factorial (n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 0;\n    else if (n < 3) return n;\n    else {\n        return n*factorial(n - 1);  \n    }\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 0;\n    else if (n < 3) return n;\n    else {\n        return n*factorial(n - 1);  \n    }\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial (n - 1);\r\n}\r\n\r\nint main() {\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n > 0) return factorial(n - 1)*n;\n\telse return 1;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int total =1;\n  for (int i=1;i<=n;i++){\n    total = total * i;\n  }\n  return total;\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) <<endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse{\r\n\t\tn = n * factorial(n - 1);\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse{\r\n\t\treturn n = n * factorial(n - 1);\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n<2) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) { \nif (n==1) return 1;\nelse return n*factorial(n-1);\n\n\n\n\n\n}\nint main( ) {\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) { \nif (n==1) return 1;\nelse return n*factorial(n-1);\n\n\n\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) { \nif (n==1) return 1;\nelse return n*factorial(n-1);\n\n\n\n\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) { \nif (n==1)  return 1  ;\nelse { return n*factorial(n-1); }\n\n\n\n\n\n}\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial (int n){\n    if(n=1) return 1;\n    return n * factorial(n-1);\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial (int n){\n    if(n == 1) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial (int n){\n    if(n == 1) return 1;\n    return n * factorial(n-1);\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial (int n){\n    if(n == 0) return 1;\n    return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 1 ) return 1;\n    else factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 1 ) return 1;\n    else n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 1 ) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 1 ) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while ( cin >> x ) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 0 ) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while ( cin >> x ) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int a){\n\tint n = a;\n\ta = 1;\n\twhile (n > 0){\n\t\ta = a*n;\n\t\t--n;\n\t}\n\treturn a;\n}\n\nint main(){\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n\t\n}\n\nint main(){\n\t\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << x << \"! = \" << factorial(x) << \".\" << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\tint factorial (int n) {\n\tint fact = 1;\n\t\tfor (int i = n; i >= 1; --i) {\n\t\tfact *= i;\n\t\t}\n\t\treturn fact;\n\t\t\n\t}\n\n\tint main(){\n\t\tint a;\n\t\tcin >> a;\n\t\tcout << factorial(a) << endl;\n\t}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tint producto = 1;\n\tfor (int i = 2; i <= n; ++i) producto = producto*i;\n\treturn producto;\n\n}\n\n\n\n\n\n\n\nint main () {\n\tint n;\n\twhile (cin>>n) {\n\t\tcout << factorial (n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int res = factorial(n);\n    cout << res << endl;\n}\n",
  "int factorial (int n);\n    int n = 0;\n    int f = 1;\n    \n    while (i < n) {\n        i = i + 1;\n        f = f *i;\n    }\n    return f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n  == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\n\n\n\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n)<< endl;\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 0;\n    if (n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\n\n\n\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n)<< endl;\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    if (n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\n\n\n\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n)<< endl;\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int a = 1;\n    if (n == 0) {\n        return 0;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    if (n != 0 and n != 1) {\n        while (n > 1) {\n            a = a*n;\n            --n;\n        }\n        return a;\n    }\n}\n\n\n\nint main() {\n     int x;\n     cin >> x;\n     cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) { // solucio recursiva\r\n// Pre:  n >= 0\r\n// Post: retorna n!\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\nint main () {\r\n    int x;\r\n    cin >> x;\r\n    factorial(x);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n\nif ((n==1)or(n==0)) return 1;\nelse return n=n*factorial(n-1);\n\n\n}\nint main() {\nint a;\ncin >> a;\ncout << factorial(a) << endl;\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else {\n        return n * factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res;\n    if (n == 1) return 1;\n    else {\n        res = n * factorial(n - 1);\n        return res;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\nif (n == 0) return 1;\nelse return n* factorial (n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res;\n    if (n == 1) return 1;\n    else {\n        if (n == 0) return 0;\n        else {\n        res = n * factorial(n - 1);\n        return res;\n        }\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res;\n    if (n < 2) return n;\n    else {\n        res = n * factorial(n - 1);\n        return res;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "int factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int a = 1;\n    if (n == 0) {\n        return 0;\n    }\n    else {\n        while (n > 0) {\n            a = a * n;\n            --n;\n        }\n        return a;\n    }\n}\n\n\nint main() {\n     int x;\n     cin >> x;\n     cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int a = 1;\n    if (n == 0) {\n        return 0;\n    }\n    else {\n        while (n > 0) {\n            a = a * n;\n            --n;\n        }\n        return a;\n    }\n}\n\n\nint main() {\n     int x;\n     cin >> x;\n     cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int a = 1;\n    if (n == 0) {\n        return 0;\n    }\n    else {\n        while (n > 0) {\n            a = a * n;\n            --n;\n        }\n        return a;\n    }\n}\n\n\nint main() {\n     int x;\n     cin >> x;\n     cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 1) return 1;\r\n    return factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n    \r\nint main () { \r\n    int n;\r\n    cin >> n;\r\n    \r\n    cout << factorial(n) << endl;\r\n    \r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    int i = 0;\r\n    int a = n;\r\n    while (n > 1) {\r\n          --n;\r\n          a = a * n;\r\n    }\r\n    return factorial(a);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n <= 1) return 1;\r\n    else return factorial(n - 1)*n;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 2) return n;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 2) return n;\n\telse return n*factorial(n-1);\n}\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial_rec(int n) {\r\n  if (n < 2) return n;\r\n  else return n*(factorial_rec(n-1));\r\n}\r\n\r\nint main () {\r\n\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial_rec(int n) {\r\n  if (n < 2) return n;\r\n  else return n*(factorial_rec(n-1));\r\n}\r\n\r\nint main() {\r\n\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial_rec(int n) {\r\n  if (n < 2) return n;\r\n  else return n*(factorial_rec(n-1));\r\n}\r\n \r\nint main() {\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial_rec(a) << endl;\r\n \r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial_rec(int n) {\r\n  if (n < 2) return n;\r\n  else return n*(factorial_rec(n-1));\r\n}\r\n \r\nint main() {\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial_rec(a) << endl;\r\n \r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 0;\n    else if (n < 3) return n;\n    else {\n        return n*factorial(n - 1);  \n    }\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int s = 1; \r\n    if(n <= 1) s = n; \r\n    else s = n*factorial(n-1);\r\n    return s;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n < 0) return 0; \r\n    else if(n > 1) return n*factorial(n-1);\r\n    return 1;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n\t\n\tif ( n == 0) return 1;\n\telse return n*factorial (n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial_rec(int n) {\n    if (n < 2) return n;\n    else return (n*(factorial_rec(n-1));\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial_rec(int n) {\n    if (n < 2) return n;\n    else return n*(factorial_rec(n-1));\n}\n\nint main() {\n  int a;\n  cin >> a;\n  cout << factorial_rec(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial_rec(int n) {\n    if (n < 2) return n;\n    else return n*(factorial_rec(n-1));\n}\n\nint main() {\n  int a;\n  cin >> a;\n  cout << factorial_rec(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial_rec(int n) {\n    if (n < 2) return (n);\n    else return (n*(factorial_rec(n-1)));\n}\n\nint main() {\n  int a;\n  cin >> a;\n  cout << factorial_rec(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return (n);\n    else return (n*(factorial(n-1)));\n}\n\nint main() {\n  int a;\n  cin >> a;\n  cout << factorial(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return (1);\n    else return (n*(factorial(n-1)));\n}\n\nint main() {\n  int a;\n  cin >> a;\n  cout << factorial(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int p = 1;\n    for (int i = 0; i < n; ++i) p = p * (i + 1);\n    return p;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << n*factorial(n-1) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n<=1) return 1;\n  return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1 or n == 0) return 1;\n    else return n * factorial (n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\r\nint factorial(int n) {\r\n\tif (n < 2) return 1;\r\n\telse return n * factorial(n - 1);\r\n\t\r\n\t\t\r\n}\r\n\r\n\r\n\nint main() {\n\tint x;\r\n\tcin >> x;\r\n\t\r\n\tcout << factorial(x);\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n==1 or n==0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial (int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial (n-1);\r\n}\r\nint main (){\r\n    int c;\r\n    cin >> c;\r\n    cout << factorial (c) << endl;\r\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factial(int n) {\r\n    if(n ==0) return 1;\r\n    else return(n-1) * n;\r\n}\r\nint main(){\r\n}\r\n",
  "\r\nint factial(int n) {\r\n    if(n ==0) return 1;\r\n    else return(n-1) * n;\r\n",
  "\r\nint factorial(int n) {\r\n    if(n ==0) return 1;\r\n    else return(n-1) * n;\r\n",
  "#include <iostream>\r\n\nusing namespace std;\r\n\n\r\n\nint factorial ( int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n*factorial (n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n < 3) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n < 2) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n\n}\n\nint main (){\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n\t\n}",
  "#include <iostream>\nusing namespace std;\n\nint num_digits(int n){;\n\tif (n <= 9) return 1;\n\telse return num_digits(n/10) + 1;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int x) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main (){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return n;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << \".\" << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return n;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return n;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "int factorial(int n) {\n    if (n <= 1) return n;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  return n*factorial(n - 1);\n}\n\nint main () {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0)  return 1;\n    return n*factorial(n - 1);\n}\n\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\t//Pre: 0 <= n <= 12\n\t//Post: factorial de n\n\tif (n <= 1) return n;\n\telse if ((n <= 12) and (n > 1)) {\n\t\tn = n*factorial(n-1);\n\t}\n\treturn n;\n}\n\nint main () {\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\t//Pre: 0 <= n <= 12\n\t//Post: factorial de n\n\tif (n <= 1) return 1;\n\telse if ((n <= 12) and (n > 1)) {\n\t\tn = n*factorial(n-1);\n\t}\n\treturn n;\n}\n\nint main () {\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint fact(int n){\n\tif(n < 2) return 1;\n\treturn fact(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << n*fact(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif(n < 2) return 1;\n\treturn fact(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << n*fact(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif(n < 2) return 1;\n\treturn n*factorial (n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nif (n == 0) return 1;\nelse return n*(factorial(n-1));\n}\n\n  \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 2) return 2;\n    if (n == 1) return 1;\n    return n*factorial(n - 1);\n}\n    \nint main () { \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) return n;\n\treturn (n * factorial (n-1));\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) return n;\n\telse return (n * factorial (n-1));\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) return n;\n\telse return (n * factorial (n-1));\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) return n;\n\telse return (n * factorial (n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\t//Pre: 0 <= n <= 12\n\t//Post: factorial de n\n\tif (n <= 1) return n;\n\telse if ((n <= 12) and (n > 1)) {\n\t\tn = n*factorial(n-1);\n\t}\n\treturn n;\n}\n\nint main () {\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return (n * factorial (n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return n;\n    else return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return n;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: 0<=n<=12\n//Post: retorna factorial de n.s\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else return factorial(n-1)*n;\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif ((n == 0) or (n == 1)) return 1;\n\telse return (n * factorial(n - 1));\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    int a = 1;\n    if (n == 0) return 1;\n    a = n*factorial(n-1);\n    return a;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\nint main() { \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n if ( n <=1) return 1;\r\n else return n*factorial(n-1);   \r\n}\r\n\r\nint main(){\r\n int n;\r\n cin >> n;\r\n cout << factorial(n) << endl;   \r\n    \r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif ((n == 0) or (n == 1)) return 1;\r\n\telse return n * factorial (n - 1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n == 0) return 1;\r\n    else return (n*factorial(n-1));\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\treturn factorial(n - 1) * n;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif(n==0) return 1;\nelse return n*factorial(n-1);\n}\n\nint main(){\nint n;\ncin>>n;\nfactorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==1 or n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "//\n//  Factorial recursiu.cpp\n//  \n//\n//  Created by Ricard Valero on 08/11/12.\n//  Copyright (c) 2012 UPC - Kotoc. All rights reserved.\n//\n\n#include <iostream>\n\nusing namespace std;\n\nint factorial (int n);\n\nint main(){\n    int x = 3;\n    cout << factorial(3) << endl;\n}\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    return (n)+factorial(n-1);\r\n\r\n\r\n\r\n    \r\n}\r\n\r\n\r\nint main()\r\n{\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a) << endl;\r\n   \r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    return (n)+factorial(n-1); \r\n}\r\n\r\n\r\nint main()\r\n{\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    return (n)+factorial(n-1); \r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    return (n)*factorial(n-1);\r\n \r\n}\r\n\r\n\r\nint main()\r\n{\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n > 0) return n*factorial(n-1);\r\n\treturn 1;\r\n}\r\n\r\n\r\nint main()\r\n{\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n < 2) return 1;\n    else return factorial (n - 1)*n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\t\n}\n\nint main() {\n\tint n = 0;\n\tcin >> n;\n\tcout << factorial (n) <<endl;\n}\n",
  "int factorial (int n) {\r\n    if (n < 2) return 1;\r\n    return factorial (n - 1) * n;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else return factorial(n -1)*n;\r\n}\r\nint main() {\r\n\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else if(n > 1) return (factorial(n -1)*n);\r\n}\r\nint main() {\r\n   int a;\r\n   cin >> a;\r\n   cout << factorial(a);\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else return (factorial(n -1)*n);\r\n}\r\nint main() {\r\n   int a;\r\n   cin >> a;\r\n   cout << factorial(a);\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else if(n > 1) return (factorial(n -1)*n);\r\n    else return 1;\r\n}\r\nint main() {\r\n   int a;\r\n   cin >> a;\r\n   cout << factorial(a);\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n// pre: 0 <= n <= 12\n// que retorni el factorial de n.\nint factorial (int n) {\n// cas base\n    if (n != 0) {\n        if (n == 1) return n;\n        else return factorial(n-1) * n;\n    }\n    else return 0;\n}\n\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// pre: 0 <= n <= 12\n// que retorni el factorial de n.\nint factorial (int n) {\n// cas base\n    if (n == 0) return 1;\n    else return factorial(n-1) * n;\n}\n\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n Â  Â if (n == 0) return 1;\n Â  Â return n*factorial(n - 1);\n}\n\nint main() {\n Â  Â return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n*factorial(n - 1);\n}\n\nint main() {\n\treturn 0;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\treturn n*factorial (n-1);\r\n}\r\nint main(){\r\n\treturn 0;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial (n-1);\r\n}\r\nint main(){\r\n\treturn 0;\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\nint factorial (int n){\n  int m;\n  if (n == 1){\n   return 1;\n   }\n  else{\n  return m = n * factorial (n - 1);\n }\n}\n\nint main (){\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int fact = 1;\r\n    if (n == 0) fact = 1;\r\n    else fact = n*factorial(n-1);\r\n    return fact;\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\nint factorial (int n){\n  int m;\n  if (n == 0){\n   return 0;\n   }\n  else{\n     if (n == 1){\n      return 1;\n     }\n     else{\n      return m = n * factorial (n - 1);\n     }\n   }\n}\n\nint main (){\nint n;\nwhile (cin >> n){\ncout << factorial(n) << endl;\n}\n}\n",
  "#include<iostream>\nusing namespace std;\nint factorial (int n){\n  int m;\n     if (n == 0){\n      return 1;\n     }\n     else{\n      return m = n * factorial (n - 1);\n     }\n}\n\nint main (){\nint n;\ncin >> n\ncout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\nint factorial (int n){\n  int m;\n     if (n == 0){\n      return 1;\n     }\n     else{\n      return m = n * factorial (n - 1);\n     }\n}\n\nint main (){\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n <= 1) return 1;\r\n    else return n*(factorial(n-1));\r\n}\r\n\r\nint main () {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x)<<endl;\r\n}\r\n",
  "//Factorial recursiu\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int aux = 1;\r\n    int aux1 = 1;\r\n    while (aux <= n){\r\n          aux1 = aux1 * aux;\r\n          ++aux;\r\n    }\r\n    return aux1;\r\n}\r\n\r\nint main(){\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n          \r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\t\tif(n == 1) return 1;\n\t\treturn n * factorial(n-1);\n}\n\nint main() {\n\t\tint n;\n\t\tcin >> n;\n\t\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\t\tif(n == 1) return 1;\n\t\treturn n * factorial(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    return 0;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n    int mult = 1;\n    if ( n == 0) fact = 1;\n    else  fact = n * factorial(n-1);\n    return fact;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n    int mult = 1;\n    if ( n == 0) fact = 1;\n    else  mult = n * factorial(n-1);\n    return mult;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n    int mult = 1;\n    if ( n == 0) mult = 1;\n    else  mult = n * factorial(n-1);\n    return mult;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\nif (n == 1 or n == 0) return 1;\nelse return n * factorial (n -1);\n}\n\nint main () {\nint n, fact;\ncin >> n;\nfact = factorial (n);\ncout << fact << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n  if (n == 0) return 1; // basic case\n\n  else return n*factorial(n-1);\n\n}\n\nint main() {\n\n  int a;\n\n  cin >> a;\n\n  cout << factorial(a) << endl;\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n<=1) return 1;\r\n    else return (factorial (n-1) * n);\r\n}\r\n\r\nint main () {\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial (a) << endl;\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial (int n){\n    int factor = 1;\n    factor *= n;\n    --n;\n    return factorial (n);\n   \n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial (int n){\n    int factor = 1;\n    if (n == 1) return n;\n    factor = factor * n;\n    return factorial(n);\n    --n;\n}\n\nint main (){\n    int n;\n    cin >> n;\n    factorial(n);\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==1) return n;\n\telse return factorial(n-1)*n;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==1) return 1;\n\telse return factorial(n-1)*n;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif ((n==1) or (n==0)) return 1;\n\telse return factorial(n-1)*n;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total;\n    if (n > 1) return n * factorial(n-1);\n    return 1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n * factorial(n-1);\n    return 1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n  if (n < 2)\n    return 1;\n  else\n    return n * factorial(n-1);\n}\n\nint main(){\n  int n, i, x;\n  cin >> n;\n  cout << factorial (n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1 || n == 0) return 1;\r\n\treturn n*factorial(n-1);\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\nif(n<=1)return 1;\r\n  return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main(){\r\nint a;\r\ncin>>a;\r\ncout<<factorial(a);\r\n\r\nsystem(\"pause\");\r\nreturn 0;    \r\n}\r\n",
  "\r\nint factorial(int n){\r\nif(n<=1)return 1;\r\n  return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n==0 || n==1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main(){\r\n    int n;\r\n    while(cin>>n) cout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n > 0) {\r\n          return (n*factorial(n-1));\r\n    }\r\n    else return 0;\r\n}\r\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n > 0) {\r\n          return (n*factorial(n-1));\r\n    }\r\n    else return 1;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n==1) return n;\r\n    else  return n*factorial(n-1);\r\n}\r\nint main () {\r\n    int n, c;\r\n    cin >> n;\r\n    c= factorial(n);\r\n    cout << c<< endl;\r\n    cin >> n;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n==1) return n;\r\n    else  return factorial(n-1)*n;\r\n}\r\nint main () {\r\n    int n, c;\r\n    while(cin >> n){\r\n    c= factorial(n);\r\n    cout << c<< endl;\r\n}\r\n\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n    \r\n    }\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if ( n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0 or n == 1) return n;\n\telse return factorial(n*(n - 1));\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tint f = factorial(n);\n\tcout << f << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0 or n == 1) return n;\n\telse return n*factorial(n - 1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tint f = factorial(n);\n\tcout << f << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0 or n == 1) return n;\n\telse return n*factorial(n - 1);\n}\n\nint main(){\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main(){\n}\n",
  "int factorial (int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\t\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\t\tif(n <= 1) return 1;\n\t\treturn n * factorial(n-1);\n}\n\nint main() {\n\t\tint n;\n\t\tcin >> n;\n\t\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 1) return n;\r\n\treturn n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n\t\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tint cont = 1,a = 1;\n\tif (cont <= n){\n\t++cont;\n\tcont = cont*a;\n\t}\n\treturn a;\n\t}\n\t\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint cont = 1,a = 1;\n\twhile (cont <= n) {\n\ta = a*cont;\n\t++cont;\n\t}\n\treturn a;\n\t}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n > 1) return n*factorial(n-1);\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 1) return 1;\n  else return n*factorial(n-1);\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int nfact=1;\r\n    if(n>0){factorial(n-1);\r\n            nfact=nfact*n;               \r\n}\r\nreturn nfact;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    factorial(n);\r\n}\r\n    \r\n    \r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n)\n{\n  if(n<=0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main ()\n{\n  int n;\n  cin >> n;\n  cout << factorial (n) <<endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n      int factorial (int n) {\r\n        int i = 0;\r\n        int a = 1; \r\n        while ( i < n) {\r\n              ++i;\r\n              a*= i;\r\n        }\r\n        return a;\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint p=1;\n\twhile(n>0){p=p*n;\n\t\t--n;\n\t\t}\n\treturn p;\n\t\n}\n\t\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n < 0) return 0;\n\telse if (n > 1) return n*factorial(n-1);\n\treturn 1;\n}\n\nint main (){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n-1);\r\n}        \r\n",
  "#include <iostream>\r\nusing namespace std;\r\n// pre: 0 <= n <= 12\r\n//post: retornar el factorial de n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;// cal senyalar que factorial de 0 es 1\r\n    else return n * factorial(n-1);//la funcio es crida a si mateixa.\r\n}        \r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n - 1) * n;\n     \n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;    \n}",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial ( int n){\r\n    if (n==1) return 1;\r\n    else return (factorial (n-1))*n;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial ( int n){\r\n    if (n<1) return 1;\r\n    else return (factorial (n-1))*n;\r\n}\r\n",
  "# include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n==1) {return 1;}\r\n    if (n>1) {return n*factorial (n-1);}\r\n}\r\nint main () {\r\n    int n;\r\n    cin>>n;\r\n    int a=factorial (n);\r\n    cout<<a<<endl;\r\n    system (\"pause\");\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int n);\r\n\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<factorial (n)<<endl;\r\n\r\n    \r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n\r\nint factorial (int n) {\r\n    if(n==1) return 1;\r\n    else return n*factorial (n-1);\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int n);\r\n\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<factorial (n)<<endl;\r\n}\r\n\r\nint factorial (int n) {\r\n    if(n==1) return 1;\r\n    else return n*factorial (n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\n    if(n==1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main () {\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial (n)<<endl;\r\n    system (\"pause\");\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return factorial(n-1) * n;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0 or n == 1) return 1;\n  else return n*factorial (n - 1);\n}\n\nint main() {\n int n;\n cin >> n;\n cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n// FUncio que retorna !n recursivament.\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\treturn n*factorial(n-1);\n}\n\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n = 0) return 1;\n\telse return n*factorial(n-1);\n}\n\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n = 0) return 1;\n\telse return n*(factorial(n-1));\n}\n\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*(factorial(n-1));\n}\n\n\t\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int producte = 0;\n    while(0<= n and n<= 12) {\n        for(int i = 2; i< n; ++i) cout<< producte = producte * i  \n        }\n    return producte;\n}\n         \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\t\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial (n-1);\r\n}\r\n\r\n\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f = n;\n    if (n == 0) return 1;\n    else f *= factorial(n - 1);\n    return f;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 0;\r\n    else if (n == 1) return 1;\r\n    else if ( n > 1) return n *(factorial(n-1));\r\n}\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n    \r\n    \r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 0;\r\n    else if (n == 1) return 1;\r\n    else if ( n > 1 && n <= 12) return n *(factorial(n-1));\r\n}\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n    \r\n    \r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 1 || n == 0) return 1;\r\n    else if ( n > 1 && n <= 12) return n *(factorial(n-1));\r\n}\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n    \r\n    \r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n > 1) {\n\t\treturn n * factorial(n - 1);\n\t}\n\telse if (n == 0) {\n\t\treturn 1;\n\t}\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n > 1) {\n\t\treturn n * factorial(n - 1);\n\t}\n\telse if (n == 0 or n == 1) {\n\t\treturn 1;\n\t}\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n > 1) {\n\t\treturn n * factorial(n - 1);\n\t}\n\treturn 1;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial ( int n) {\n\tif ( n == 0 or n == 1) return 1;\n\telse {\n\t\treturn factorial(n-1)*n;\n\t}\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n-1 == 0) return n;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cout << \"Introduce el numero a factorizar:\" << endl;\n    cin >> n;\n    cout << \"El resultado es: \" << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n <= 2) return n;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cout << \"Introduce el numero a factorizar:\" << endl;\n    cin >> n;\n    cout << \"El resultado es: \" << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n >= 0){\n        if (n <= 2) return n;\n\treturn n*factorial(n-1);\n    } else{\n\tif (n >= -2) return n;\n\treturn n*factorial(n+1);\n    }\n}\n\nint main(){\n    int n;\n    cout << \"Introduce el numero a factorizar:\" << endl;\n    cin >> n;\n    cout << \"El resultado es: \" << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    int f = factorial(n);\n    cout << f << endl;\n}",
  "int Factorial(int n) {\n    if(n < 2) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if(n < 2) return 1;\n    else return n*factorial(n-1);\n}\n \nint main() {\n    int num;\n        while (cin >> num) {\n            cout << factorial(num) << endl;\n        }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 2) return n;\n\treturn factorial(n-1)*n;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\treturn factorial(n-1)*n;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n >= 0){\n        if (n < 2) return 1;\n\treturn n*factorial(n-1);\n    \n}\n\nint main(){\n    int n;\n    cout << \"Introduce el numero a factorizar:\" << endl;\n    cin >> n;\n    cout << \"El resultado es: \" << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n >= 0){\n        if (n < 2) return 1;\n\treturn n*factorial(n-1);\n    }\n}\n\nint main(){\n    int n;\n    cout << \"Introduce el numero a factorizar:\" << endl;\n    cin >> n;\n    cout << \"El resultado es: \" << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n        if (n < 2) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cout << \"Introduce el numero a factorizar:\" << endl;\n    cin >> n;\n    cout << \"El resultado es: \" << factorial (n) << endl;\n}",
  "#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n==0) return 1;\r\n    else return n*factorial(n-1);\r\n    }\r\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return n;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tint p = factorial(n);\n\tcout << p << endl;\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 2) return n;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tint p = factorial(n);\n\tcout << p << endl;\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tint p = factorial(n);\n\tcout << p << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial (n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n}",
  "#include <iostream>\n#include <vector> \nusing namespace std;\n\n//pre: 0 <= n <= 12.\n//post: que retorni el factorial de n (!n).\nint factorial(int n) {\n  if (n == 0 or n == 1) return 1;\n  return n*factorial(n-1) ;\n  \n}",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n==0) return 1;\r\n\telse return n* (factorial(n-1));\r\n}\r\n\r\nint main(){\r\n\tint x;\r\n\tcin>>x;\r\n\tcout<<factorial(x)<<endl;\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint mcd(int a, int b){\r\n\tif(a < b) return mcd(b,a);\r\n\t\telse if (b==0) return a;\r\n\telse return mcd(b,a%b);\r\n}\r\nint main (){\r\n\tint x,y;\r\n\tcin >> x >> y;\r\n\tcout << mcd(x, y) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tint y=1;\n\tfor (int i=1; i<=n; i++) y=y*i;\n\treturn y;\n}\nint main (){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\tint mcd(int a, int b) {\r\n\t\tif (a>b) return mcd(b,a);\r\n\t\telse if (b==0) return a;\r\n\t\telse return mcd(b,a%b);\r\n\t}\r\n\tint main (){\r\n\t\tint x,y;\r\n\t\tcin >> x >> y;\r\n\t\tcout << mcd(x,y) << endl;\r\n\t}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 1) return n;\n    else return factorial(n-1) * n;\n\n}\n\nint main(){\n    int k, n;\n    cin >> k;\n    for (int i = 0; i < k; ++i){\n        cin >> n;\n        cout << factorial(n);\n    }\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n < 2) return 1;\n    else return factorial(n-1) * n;\n\n}\n\nint main(){\n    int k, n;\n    cin >> k;\n    for (int i = 0; i < k; ++i){\n        cin >> n;\n        cout << factorial(n);\n    }\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return factorial(n-1)*n;   \r\n}\r\n\r\nint main() {}\r\n\r\n\r\n",
  "#include<iostream>\r\n#include<stdlib.h>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n == 0)return n;\r\n    else return n * factorial(n - 1);\r\n}\r\nint main(){\r\n    fes_recursio\r\nsystem(\"pause\");\r\n}\r\n",
  "#include<iostream>\r\n#include<stdlib.h>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n == 0)return n;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n    factorial;\r\nsystem(\"pause\");\r\n}\r\n",
  "#include<iostream>\r\n#include<stdlib.h>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n == 1)return n;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\nsystem(\"pause\");\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n == 1)return n;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\n\r\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n == 0)return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\n\r\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n == 1)return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tint y=1;\n\tfor (int i=1; i<=n; i++) y=y*i;\n\treturn y;\n}\nint main (){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n\tif(n<9) return n;\n\treturn factorial(n-1) * n;\n}\n\t\nint main(){\n    int n; \n    cin>>n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n\tif(n<=9) return n;\n\treturn factorial(n-1) * n;\n}\n\t\nint main(){\n    int n; \n    cin>>n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n\tif(n<=1) return n;\n\treturn factorial(n-1) * n;\n}\n\t\nint main(){\n    int n; \n    cin>>n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n\tif(n<=1) return n;\n\treturn n*factorial(n-1);\n}\n\t\nint main(){\n    int n; \n    cin>>n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n\tif(n<=1) return 1;\n\treturn n*factorial(n-1);\n}\n\t\nint main(){\n    int n; \n    cin>>n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n = n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else {\n\treturn factorial(n-1)*n;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n",
  "int factorial (int n) {\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "int factorial(int n){\n    int fact = 1;\n    for (int i = 0; i < n; ++i){\n      fact += n * n-1;\n      --n\n    }\n}",
  "int factorial(int n){\n    int fact = 1;\n    fact += n * facttorial(n-1);\n    return fact;\n}",
  "int factorial(int n){\n    if (n > 0) reeturn n*factorial(n-1);\n    else return 1;\n}",
  "int factorial(int n){\n    if (n > 0) return n*factorial(n-1);\n    else return 1;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n>0){\n\t\treturn n*factorial(n-1);\n\t}else{\n\t\treturn 1;\n\t}\n}\n\nint main(){}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n == 1) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n    cin >> n;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n == 2) return 2;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n    cin >> n;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n    cin >> n;\r\n}\r\n",
  "// FACTORIAL RECURSIU\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    return n * factorial(n-1);\n}   \n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "// FACTORIAL RECURSIU\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}   \n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) return 1;\r\n\telse return n*(n-1);\r\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n     int fact = 1;\n     int aux = 1;\n     while ( aux <= n ){\n          fact= fact*aux;\n          ++aux;\n     }\n     return fact;\n}\nint main(){\n     \n     int n;\n     cin >> n;\n     cout <<  factorial(n) <<  endl;\n     \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int m = n;\n    if (n == 0) m = 1;\n    else {\n        m =  m * factorial (n-1);\n    }\n    return m;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n)  << endl;\n}\n    ",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  else return n * factorial(n - 1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\n\r\nint factorial(int n){\r\n    int x = 1;\r\n    while ( n >= 1){\r\n    x = x * n;\r\n    --n; \r\n    }\r\n    return x;\r\n}\r\n\r\n\r\nint main(){\r\n    int n;\r\n    while (cin >> n){\r\n          cout << factorial(n) << endl;\r\n          }\r\n    }\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n== 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1; \n    return n * factorial (n-1); \n}\n\nint main () {\n    return 0; \n}\n        \n        ",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    int i = 0;\n    int fac = 1;\n    \n    while (i != n) {\n        i = i + 1;\n        fac = fac*i;\n    }\n    return fac;\n    \n    \n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\t\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n  if(n > 1) return factorial(n-1)*n;\n  else return n;\n}\n\nint main () \n{\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n  ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n  if(n > 1) return factorial(n-1)*n;\n  else if (n == 0) return 1;\n  else return n;\n}\n\nint main () \n{\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n  ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return n;\n    else return factorial(n - 1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 || n == 0) return n;\n    else return factorial(n - 1)*n;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 ) return 1; else if(n == 1) return n;\n    else return factorial(n - 1)*n;\n}\n\n",
  "int factorial (int n) {\n\tint f=1;\n\twhile (n>0) {\n\t\tf*=n;\n\t\t--n;\n\t}\n\treturn f;\n}\n\n",
  "#include<iostream>\n#include<cmath>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n\t}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n\tcout << factorial(n) << endl;\n    }\n}",
  "int factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}",
  " int factorial(int n){\n   if (n<2)\n     return (1);\n   else return (n*factorial(n-1))\n }\n ",
  " int factorial(int n){\n   if (n<2)\n     return (1);\n   else \n     return (n*factorial(n-1));\n }\n ",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif(n==0) return 1;\n\treturn (n*factorial(n-1));\n}\n\nint main() {\nint n; cin >> n; cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return (n*factorial(n-1));\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n >= 2) return n*factorial(n - 1);\r\n\telse return 1;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\t\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    return 0;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\t\r\n\tif (n == 0) {\r\n\t\treturn 1;\r\n\t}\r\n\telse if(n == 1){\r\n\t\treturn 1;\r\n\t}\r\n\telse{\r\n\t\treturn factorial(n-1) * n;\r\n\t}\r\n}\r\n\r\nint main() {\r\n\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << \"Factorial: \" << factorial(n) << endl;\r\n\t}\r\n    //return 0;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\t \r\n\t if (n == 0 or n == 1) return 1;\r\n\t else return n* factorial (n-1);\r\n\t \t\r\n}\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\n#include <math.h>\n\nusing namespace std;\n\nint factorial(int n);{\n\tif (n==0) {\n\t\treturn 1;\n\t}\n\t\n\telse {\n\t\treturn n*factorial(n-1)\n\t}\n}\n\t\n\t\n",
  "#include <iostream>\n#include <math.h>\n\nusing namespace std;\n\nint factorial(int n) {\n\t\n\tif (n==0) return 1;\n\t\n\telse {\n\t\treturn n*factorial(n-1);\n\t}\n}\n\t\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\t\tif (n==0) return 1;\n\t\telse {\n\t\t\treturn n*factorial(n-1);\n\t\t}\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tint f;\n\tf = factorial(n);\n\tcout << f << endl;\n\t\t\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\t \t\nint main(){\n\tint n;\n\tcin >> n;\n\tint x = factorial(n);\n\tcout << x<< endl;\n\t}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n )     {\n\t\n\tif (n==1) return 1;\n\telse return n*factorial(n-1);\t\n\t\n}\n\n\nint main() {\n\nint n;\ncin >> n;\ncout << factorial ( n ) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n )     {\n\t\n\tif (n==0) return 1;\n\tif (n==1) return 1;\n\telse return n*factorial(n-1);\t\n\t\n}\n\n\nint main() {\n\nint n;\ncin >> n;\ncout << factorial ( n ) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint a;\n\tfor (int i = 1; i <= n; ++i) {\n\t\ta = a * i;\n\t}\n\treturn a;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint a = 1;\n\tfor (int i = 1; i <= n; ++i) {\n\t\ta = a * i;\n\t}\n\treturn a;\n}\n\nint main() {\n\tcout << factorial(12) << endl;\n}\n",
  "int factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n",
  "int factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n<=1) return 1;\n\telse return n*factorial(n-1);\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n     \r\nint factorial(int n) {\r\n\t//Pre: n >= 0\r\n    //Post: returns n!\r\n     \r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n     \r\nint main () {\r\n\tint n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "// Enunciat P12509\r\n// Escriviu una funciÃ³\r\n//  int factorial(int n);\r\n// que retorni n!.\r\n// Resoleu aquest problema recursivament.\r\n\r\n//   PrecondiciÃ³\r\n//  Es compleix 0â¤ n â¤ 12.\r\n\r\n//  ObservaciÃ³\r\n//  NomÃ©s cal enviar el procediment demanat; el programa principal serÃ  ignorat.\r\n\r\nint factorial(int n){\r\n    if(n > 1){\r\n        n = n * factorial(n - 1);\r\n    }\r\n\r\n    return n;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n// Enunciat P12509\r\n// Escriviu una funciÃ³\r\n//  int factorial(int n);\r\n// que retorni n!.\r\n// Resoleu aquest problema recursivament.\r\n\r\n//   PrecondiciÃ³\r\n//  Es compleix 0â¤ n â¤ 12.\r\n\r\n//  ObservaciÃ³\r\n//  NomÃ©s cal enviar el procediment demanat; el programa principal serÃ  ignorat.\r\n\r\nint factorial(int n){\r\n    if(n > 1){\r\n        n = n * factorial(n - 1);\r\n    }else if(n == 0){\r\n        return 1;\r\n    }\r\n\r\n    return n;\r\n}\r\n\r\nint main(){\r\n    for(int i = 0; i <= 12; i++){\r\n        cout << factorial(i) << endl;\r\n    }\r\n}\r\n",
  "\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  if (n==0) return 1;\n  return n*factorial(n-1);\n  }\n  \nint main(){\n    int n;\n    cin>>n; \n    cout<< factorial(n) <<endl;\n  }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<2) return 1;\n    else return factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<2) return 1;\n    else return n*factorial(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return n;\n    else return n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 2) return n;\n    else return n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "int factorial(int n) {\n\tint a = 0;\n\twhile (n > 1) {\n\t\tn = n - 1;\n\t\ta *= (a + 1);\n\t}\n\treturn a;\n}\n",
  "int factorial(int n) {\n\tint a = 1;\n\twhile (n > 0) {\n\t\tn = n - 1;\n\t\ta *= (a + 1);\n\t}\n\treturn a;\n}\n",
  "int factorial(int n) {\n\tint a = 1;\n\twhile (n > 0) {\n\t\tn = n - 1;\n\t\ta *= (a + 1);\n\t}\n\treturn a;\n}\n",
  "int factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  else return n * factorial (n-1);\n}\n\nint main () {\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0 or n == 1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    return 0;\n}\n",
  "int factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "int factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n - 1)\n}\n",
  "int factorial ( int n) {\n\tif ( n <=1) return 1; \n\telse return n*factorial (n-1); \n\t}\n\t\n",
  "int factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n - 1);\n}\n",
  "int factorial (int n) {\n\tif (n<= 1) return 1 ; \n\telse return n*factorial(n-1) ; \n}\n// el que fa Ã©s resoldre un problema gran amb una cosa que sigui mÃ©s petita\n// primer es fa un cas base, que ha de ser un lloc on s'acabi, i desprÃ©s\n// es recrida la mateixa funciÃ³. Res acaba fins que estÃ  tot resolt. \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "int factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "int factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n - 1);\n} \n",
  "int factorial(int n){\n  if (n <=1) return 1;\n  else retun n*factorial (n-1);\n}",
  "int factorial(int n){\n\tif (n <= 1 ) return = 1;\n\telse return n*factorial( n-1)\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n<=1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "int factorial(int n){\n  if (n <=1) return 1;\n  else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial (n-1);\n}\n",
  "int factorial(int n){\n\tif (n <= 1 ) return 1;\n\telse return n*factorial( n-1);\n}\n",
  " \n int factorial(int n) {\n\t if (n <= 1) return 1;\n\t else return n*factorial(n-1);\n}\n\n",
  "int factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial (n-1);\n}\n",
  "int factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tint f;\n\tif (n <= 1) f = 1;\n\telse {\n\t\tf = n*factorial(n-1);\n\t}\n\treturn f;\n}\n\nint main() {\n\tint a;\n\tcin >> a;\n\t\n\tcout << factorial(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}",
  "int factorial(int n) {\n  if (n <= 1) return 1;\n  else return n*factorial(n - 1);",
  "#include <iostream>\nusing namespace std;Ã§\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  else return n*factorial(n - 1);",
  "%PDF-1.4\n%Çì¢\n5 0 obj\n<</Length 6 0 R/Filter /FlateDecode>>\nstream\nx­WÉr\u001cE\u0010åÜgÎDsë&èRí\u000b>ac@\n\u0003²c\u0002\u000e\u0019e\u0011@\r_Â?pç\u0003yµt·<Æ(°gTSËËWYW½\u0014ªô¯üÝ^t\u0007ÏBzÓÉþ´»ê\u0014/öåÏö¢¸@ìU\u0010Z9Ûo^vy£êCÄÿ\u0004=îùp4NJ\u0018\u001b´\u001d^ÓÐ$Ípg}LÃ)\rc°!\r»qÒB)åõ ÆIdIaø5ï>\f×£JÂ\u0005íë6ç~Ú\u001cÁ\u0012E¶$bSQbø¤Û|ò|Ø\u0019^a\u0003`Ãðýè\u0012\nÏF\u0007¥XEl¡\u001e^`êåDJfx2Nö9^`ÙKú¢<8%YÏ²I'ß¶èÖ\u001c°yúb48W±!\u0016[)ò·¤Ä\u0014ýð²Êð¶kZÀrÃ#èã¹¦å·f4¿PÊÛ4~¸áôÃ\u000e'!\u000b¬á\fe_È©¦¯\r\u0016ÎQ|\u001foº§ÝUoM²Ârq\u0010Ò\u001c\u0012âÜ\u0007íHyxØ\u001d\u001c~Óß^¿Þu\u0007?ôª;ø¾\u001e\u001e?ÂÃ/ú\u000fºÇýÓwâIé^YÂ¾\u000b(\u0019EÔ\u0019Q_ÂÈdbð°1`¼\u001b¶£\u0014>D\u0017\u000b¶\\T\u0011®VÉk2Æk¼¬½[îçCÄUQk=Åó~å\u0002â-\u0005\u0002õKÙY`qÂ,Ka4A\nKñÛÀc^RºA\u00150\u001b?èyèæ¡©\rW\u0011zÎMVRBL\u0012tÄ¼¥É\u0007Nñý5Ý+Å\u000eÅºÌq\u000ew0²%ù®¿û(\r\"ü¿¹æ\u0019>já}¶Ëý¾¶£ÍåDSk\nÓY®i®ÑË\\oYPè-ït(Á8ü=Zk¸X\u000bÁé¥A:'Sê'¢C/uFÔ\u0019\u0014^9·£)»ìj\u0017rK´X\u0000Hç¿À©[ã$òÀ²\u000e<o*V\u0000°üBÅC\u0013[ÙgIJÆ*ö>Ãà!w8î;<04óÁ#T>\u0000¯3_ð¤´&Ð¯CrE¡å ï\nMG¿ Ã]6j²lgvßg¨óB\u0014ßg¨çì4c?\u001e'Ê¸î5ÀäqÓ¹Íµ¤%ÑMµk°b£ÎÇrÿ\u001bÆ0c¯Ü*ÂtùË¬èþg\u0004«©¹à\f\u0003\t±\u000bwA0dÅ\u001c\u000bV\\0M¶~}aìÊG\u001a¢Ò1ÇR,ó¡¡DrK\u001e\u0015êëÅLW\u0013r\u0016\\à\u000bK\u0015Le]§\u0012Ñ R¥r\\üyOti8·J\u0004ìöu¹\":«IXÐIVvd_Þ4Ôq.²yµ¾\u0011V.XM½s[P)FPP\rKÊ\u0006\u001fO¾\u001b\u001f\fã\u0002¹\u000e)T\\|È×\u0007B¯÷\u0016\u0005y$õ\u001e¬­tFjuæR{KçÈ:\u00055>\u0015wÓÐ\u0001¡ºr¾hËwg¥´Q\u0001j¡¿iI*C[WÓ©ÐÕ½©\u0011¯TNëogÉ©ÿ%JÍ·­<.P\\À¦ÊY+|×2ç\u0019ä¹Ú×¹Ô`;÷i¥·#¾\u0006Ê³\u0000÷\u0004ï+*ÒÉr'\u0015\u0000ÿZ\u0016\u0004\"\"öÖO6ñ\u0017ãZ~s!= È4[d2í³è\u001d]\u001d_9±îX¶®[îîtòH¥ÉºH\u000bXÄ\u00196sÁ®\u001c\u00111\u0017\u001f>\u001a-\u0006Ñ/§p´HÃiîEÊ×\u001b,Ñ­,4rÝ&«·eA\u0010rp{aY%\\r-±Í=.g`¾l\rNf\"5»8\u0013-!Þ\u0003÷\u0001fÎ_±Ï\u0002ø\f\u001a¼~\u0002\u0007ñ.»Eµ°eQCç¾\u0016ªÁ¦ï*Ïéæ\u0002íí`4§ä3,Ó\u000epÓÑhêrEOA0Ãä¸¼\n\u0004ÏJvè\\es3=~U\u000bà²miàkÝ\fõ?aîfè©Pí\u0019\b\\ÉldðFæN4¹ó\u0018\u001d±NÕÃvÓ\u000f\f:~_¦2ÜIgÌü«]i\u0005²ÁÁ ½L+EãÏ£Üq«\u0002\u0010\u0013âóV:$í\tíôþÜ{ó\u001bô¡\u0006áSØ\u001ebs>dì|®¯.ÍÉIz)S{`\u0016ÝÌ«öRå/®R8\u000e\u0019P\u001a\u000eF\u0003þ£ð\u001eS*\u001dÇïò\u0015}våJ,æÆTÑ\u0010\u0018»m\u0014Â©,>gðkßê®uáO»\u0000ÿÍp@endstream\nendobj\n6 0 obj\n1503\nendobj\n4 0 obj\n<</Type/Page/MediaBox [0 0 595 842]\n/Rotate 0/Parent 3 0 R\n/Resources<</ProcSet[/PDF /ImageB /Text]\n/ExtGState 18 0 R\n/Font 19 0 R\n>>\n/Contents 5 0 R\n>>\nendobj\n3 0 obj\n<< /Type /Pages /Kids [\n4 0 R\n] /Count 1\n>>\nendobj\n1 0 obj\n<</Type /Catalog /Pages 3 0 R\n/Metadata 27 0 R\n>>\nendobj\n7 0 obj\n<</Type/ExtGState\n/OPM 1>>endobj\n18 0 obj\n<</R7\n7 0 R>>\nendobj\n19 0 obj\n<</R16\n16 0 R/R10\n10 0 R/R8\n8 0 R/R14\n14 0 R/R12\n12 0 R>>\nendobj\n16 0 obj\n<</BaseFont/QUONDE+CMSY10/FontDescriptor 17 0 R/Type/Font\n/FirstChar 20/LastChar 20/Widths[ 777]\n/Encoding 25 0 R/Subtype/Type1>>\nendobj\n25 0 obj\n<</Type/Encoding/BaseEncoding/WinAnsiEncoding/Differences[\n20/lessequal]>>\nendobj\n10 0 obj\n<</BaseFont/BSGZOP+Palatino-Roman/FontDescriptor 11 0 R/Type/Font\n/FirstChar 30/LastChar 180/Widths[ 333 0\n0 278 0 0 0 0 0 0 333 333 0 0 250 333 250 606\n500 500 500 500 0 500 500 0 500 500 250 250 0 0 0 0\n0 778 0 709 0 611 0 763 0 0 333 0 611 0 831 0\n604 0 668 0 613 0 722 0 0 0 0 0 0 0 0 0\n0 500 553 444 611 479 333 556 582 291 234 0 291 883 582 546\n601 560 395 424 326 603 565 834 516 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 500 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 747 0 0 0 0 0 0\n0 0 0 0 333]\n/Encoding 26 0 R/Subtype/Type1>>\nendobj\n26 0 obj\n<</Type/Encoding/BaseEncoding/WinAnsiEncoding/Differences[\n30/grave]>>\nendobj\n8 0 obj\n<</BaseFont/ZCMAHV+Palatino-BoldItalic/FontDescriptor 9 0 R/Type/Font\n/FirstChar 46/LastChar 117/Widths[ 250 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 389 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 444 0 500 0 0 0 0 0 0 0 556\n0 0 389 0 389 556]\n/Encoding/WinAnsiEncoding/Subtype/Type1>>\nendobj\n14 0 obj\n<</BaseFont/ZJLREK+Palatino-Italic/FontDescriptor 15 0 R/Type/Font\n/FirstChar 46/LastChar 117/Widths[ 250 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 333 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 444 0 407 0 389 278 500 0 278 0 0 278 0 556 444\n0 0 389 0 333 556]\n/Encoding/WinAnsiEncoding/Subtype/Type1>>\nendobj\n12 0 obj\n<</BaseFont/ILLROO+Palatino-Bold/FontDescriptor 13 0 R/Type/Font\n/FirstChar 48/LastChar 180/Widths[\n500 500 500 0 0 500 0 0 0 500 0 0 0 0 0 0\n0 0 0 0 0 0 556 0 0 389 0 0 0 0 0 833\n611 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 500 611 444 611 500 389 0 0 333 0 0 333 889 611 556\n611 0 389 444 333 611 556 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 333]\n/Encoding/WinAnsiEncoding/Subtype/Type1>>\nendobj\n17 0 obj\n<</Type/FontDescriptor/FontName/QUONDE+CMSY10/FontBBox[0 -137 694 636]/Flags 4\n/Ascent 636\n/CapHeight 636\n/Descent -137\n/ItalicAngle 0\n/StemV 104\n/MissingWidth 500\n/CharSet(/lessequal)/FontFile3 20 0 R>>\nendobj\n20 0 obj\n<</Filter/FlateDecode\n/Subtype/Type1C/Length 365>>stream\nx%MK\u0002A\u0000gt-«Í,2\nSç\u0012\u0018\u001f]Â\"\u000e\u001dòÔq³©\u0015\\×vG\u0017E\u0010ÒÒ\u001aDÙ\u0012N]êàÙ¿â±¿°³¬\u000e/ÏóÜ^\b8\u001b\u0010NÆ\u0013ÉhäO×\u0017²U\u001bóÙ©å3\u000fM·òvÊsÆpÁ\u0010ç\r<gº\u0001\u0007¡¯ÝÇå\\QI_\u0004\u0005Së(\u001amm ÍH$ö%¬¤SB\u0016%\u0004\"bI ãÈ ¤JcRDÁ\u001dÜv8¬iZHÔ¬\\ì®o -MDtU¬\u0014ð\u0019:³\u0004\u001d\t\u0012FÿïBÿËR.O°\u0012ò\u0019V²\u0019¬ªø2/d\u0000\u0000p\u0011À;`»d\rÙµ|}#ôÆ¾zpÈ\f»¹Å~<úcë>9õj»rsU¿­ûG\u0003ë¹TmÔhu^5kÏ×l`u;µ{ú@z»­·ëÍR+0ê\u0019w\u000eÖ\u001ci×.íõ\n´\u001c\u0018}O\u000bTÓºô5àR?Ì½÷\tË«Oö§û3þiné¼ÂOõ_x~¼Y\u0000~\u0001GZ\nendstream\nendobj\n11 0 obj\n<</Type/FontDescriptor/FontName/BSGZOP+Palatino-Roman/FontBBox[-40 -283 869 728]/Flags 4\n/Ascent 728\n/CapHeight 728\n/Descent -283\n/ItalicAngle 0\n/StemV 130\n/MissingWidth 500\n/CharSet(/A/C/E/G/J/L/N/P/R/T/V/a/acute/b/c/colon/comma/copyright/d/e/eight/endash/exclam/f/five/g/grave/h/hyphen/i/j/l/m/n/nine/o/one/p/parenleft/parenright/period/q/r/s/semicolon/six/slash/t/three/two/u/v/w/x/zero)/FontFile3 21 0 R>>\nendobj\n21 0 obj\n<</Filter/FlateDecode\n/Subtype/Type1C/Length 5569>>stream\nxX\tXSWÚ¾1&÷¶E´Ä+KBÕ±Z[wQZ­\u000b.Ô\u001dÅ\u0005d%ì@\u0010 äd\u0001\u0002a'ì!ì\nÊ.Z¥îHmµV§¢­miÕé:=7søç?é2ÿ8ÏßyN¸O8÷s¿åýÞï=a\u0011S§\u0010,\u0016kú^ï\u0010ïè 0ñ[ûÅ¡Þaæ©EÌ\u001c\u00163w\n3}\u001cµL¦\u0010\u000e°`\u0003©åsgK¬\u0018Ñ«°}:A°Y¬xe½8<!2( 0Úf±Ë~·%K¾ùûÌJ;;;\u001b_ïØló\n\n\b³Y¿ÄúÃCýÂ¢ß±±ÇO\u0004\u001d·\t\bI\b\u000f²ñöõõó5/sõ\u000eñ\u000b¶Ù\u0011\u0014\u0012\u0014\u001e.µYl¿ÄfÕ\u0015+ßÂµxG\u001bly·oØÆÙfÂö#\bbÝ0±½1<b{dÔÎèX§8ïx\u001fçã¾»ýü÷\u0006\u0004î\u000f:q0Ä5ômá;¼ùnÙò\u0015+W­^kûÚz;Oì!ö\u0012\u000bFb\u001f±XD\u001c \u000e\u0012\t\u0017Âp#\u0012­;aO¼El#¶\u0013Ë\u001dÄNb%á@8\u0012«\t'b\u0017±xXGì&æ\u0010IÄ\\\"xxFX\u0012bb:1x°\"xÄLb\u0016aML!\u0004Älb=Î\u00041ÈcñYGXÝSÜ¦ü­*ú\u0003'Kq½¸?±äGTâKÔKÚ©_~þJ¡Å[\u0016]ÓNë³\u0004ÓgNÿdÆæ\u0019\r¯¾ûj¦¥Õ#\u001eÍ[ÃäixÃ3§Ï\\>Óa¦ûÌ3ïÐvtÍ¬U³®Y¯·Vñi~\n#·4UÈõ0°Y®g1oöÒÁ\\ß7]Ñ4´c|IJX\\BL¶À_Î\t%ÇÔ\u0000\"\u0000\u0000$ä\u0003\u0016\u000b¤¿:P-É\u0003¥\u0002PT|¶rÀ0ÌÜ\u001eDyk$@*\u0000©²Èl/9?Ó'\u0016Wüaq:BZ\u0016øWÁø28<x\u000eZ¡s\u001cKæ¾ÜÈ¼zõÅ(²erúZ\tÊ@1^;2¹ÔG\u001d¤çë\u0002èBÂ\u000e^BSýce\t±ÂMÏI©æP¬[²k@ÜNvhd\"\u0014C\u0002g¹,(ûÙ[ªze\u0003h\u0000õ[Ù\u0013\u001d1o\u0007®\t` Ù}³ÿÊpû»BKæl\\3óN3«i\fö±a\u0013\u0013D£E\u0016¢%èµ'K!\rÁ)¿À7à%ÏÐ<QÂ\túë[¯£¹<dÿö\u0012Ç§p>´è»ñÈÒä\u001ewÁ4í\f«ê\u0017¶iÕ(--xïø¸M@ÜÐ,8\u000bºCgÈpóóïûì\u001bIå¦­ø¦­akÑV°\u0006¬uðE\\=ó\u0001C¡\u0010¸\n-)\u000fï·\b-M)\t]Õ\b:Èíbéºàô[Ìþ.6SÃTÐ»õ\u0001¹^Bë×¡éhÚ\u0003[È=ß_ÑÒ,**Ê-ÐUÇæóÅn¾.Zëüéßü`äÖ ­\u001aQ\u001d\u0017½\u0001»ht\fÙ¢µè(òë-ô^p\u001d\u001e^Ð\u001d­ëèèT¸\t.DA[=Z\u0016à«=Z\u0000\u0017À­p\u0007öü5è ²d£\u0016#L?Ç°nÄé­¾\u001aÝ[ó\u00150\u000bévîDRÆÁ?rØï0:jñ\u0000à»É\f\u001fþ-)ûHcB¬\u001bg¬.·´\u0000rïð;êz\u0004×)È^þ9¢ü\u0003Ò\u0012v9OIÞÜßRÏ\u000bvÈ\u0006Å9º¢²öÎ\u0001@}sÙq\u0001ê°~åAòN_lâ¥\t\u0013/1ÓzY­Ã\u001aµy7iíÊÈÞ7\u0001[\n\u001bV\rjAq;û_\rc¤$¸{ªìT¼ï\u0011r¨úXÁ1 \b\u0003éIÒu.ü]>'\u001cÁ\u001a\nYß·3*Ë4Ú\"áOÐ\u0006ÉQ\u0011áIQhY\u0014 Vïþ\fNS.^Úß\u0012Ö-rcè\u0019_=¼v\u00066\t5ZÁißZó2«LoÐ}ò\u001eyN:Ø \u0018w!Á,WVÙ>Þ|ÕÍ\u0006¥aN\u000e0S\nç\rE\u0000TÍáÍo4WÚ\\5\u0018Ê½P0H\u0005r³\u0013³\u0015Y\u0019Ç$!Éø9YìÖÌsÜ@*,Í¤AeTv; ^^.ÕFòsör\\ù\u0018Þ£\u001cW-P}\u000fåfº)¤riVº !],w\u0004Þ H\u0019¤¢ lÌ+SKàbf´&C\t¢)§V\u0012\\ÎéÓuy¨BGA$8\u0001|\u0014Îcp@ñ¸Aàr±²dDr#4=Â\u0010ùiÔ7Rý;>~+Ú\t||¤ªSÖ\u0002½Ù§é\u0000qS\u001fQg«ÁM\u0001ÜL^î\u0018è7V&\u0007\n+¹ùÐ\"5/A\u0000\u0004¡ 816ò#ÿG·â7dX2\u001bâÚuÍVí\u001f\u0006@uÖ\u001dkÞX'\\@\u001dòÐôã'OËz\u0000\u0005­Ç>|Þ(­×\"jO\u0014®.³+\r×\u001ej ÕpEÈ\u001b\u0019>\u0017è%6Ê!eºÑµ< Ï\u0007û4¨m\u0007WzV\u0005õÄêSÎ'ÞJêN«\u0005~»ß6¼j«[ë¨´4iâÎ\u0004fJ`\u0002¾fh¦näs¹½Å\u0017\u0010»éPþ;¸puè]´\bE.jYym·hd\u0007$C\nÜ\u0006#Epî)\nn A£RU i(àgÕrVeËA\b\b\u0003\u0019`Ê%ò¡¬6;_\n¢\u0004H\u0010%Kßìwõ@V\u000f}¡\u000b$àT¸g°+#åh(¾6\u001a\u001bi\tï§\\c=\u001fe?g¬hÔIni\u000e¾W]+ì;/)LNÊ\u0007\u0002ßD}¿\bÀdþ\u00054/s\u0004gÔmÚë):~TR¨$$M\u001dª\u0007¡Ôvrc '´d¾K¹âfdÞÖ[ým\u0014¦â\u0004w3ñ£ÿ × &Y\u001c\u001d-\u0016\u0007'û@ Ö%V$Ê\u001aA\u0017\u0005û^@è8\u0002ÛsCÊ#«BO%]Â±?Ô\r:ëk¯òA\"QîE\rãQòÂaÉ\\á6×ÆØÓ\u0006rOv\"\u0011$\u0004å\u001esìÄdgv©B+\u0005\u0002(\u000bO\tõ~\u0012\"ö[^üby\u0011Ð\u0001]~^©²_Å7Kä\u0000Äãá©ô\\Þ]¡Ä \u001c3ÀÍ-+¨\u0003*±¨E\tàË°_Õ[\\®Ç¸Û\rS³\u0005_ú\u000eÒeÙyÌkí§û\u0005ý\u0006\u0000F1Hp?GÛ£îSóäVy\fp\u0003î Ji?æß\u0019á!¹.9ìxT\\nq´05ciº+Ó3\u000eØÉæ¦µzµ\u000e6Èó\u0015Z \u0015\"m­²Ãlübl|\u001c\u001e\u0000,VO\u0018oÈ6d\u0017ÅÕn\u0014üpz¹ÏáÉB]Mi@\u0006ÎEßrz¸Õ7õ\u001fT]Õä\nnÁ\u0015ÆáÂ²*µ NÅ1vx+s\u0018\u0001°Sÿ3\u000eµâ\u0014\u0015@vJ¦Ä\u001dÙðÓcÒãí\u0010\tÏò[dúôz\\üòKFFpÞªé1ôy`Í÷>£3m970é\u0016\u001cP«è$]_U2K\u000bú\u0005p\u0017\t\u0017yGÔ±ã©Ñ~B×`\u0013Y'+j¬ì-Èë\u0001oÀiõÅ\t|47r¿\u0017æ_^ÑÆÞ#÷ËËÔ9yB8\u0003Î¤Ã|ý|\u0001u<°ýl»¾ÕX!ª-y¿ø\u0013\u001d6¦H®?YÏ,6¤é­x6°\u0013æÑ¸½§Ó\u0001A±Áf ûMâðö&U¥\u0016\u0005µ *\u0013Q]®¨J.H\u0016@\u000b´\u0015«m2©$#\r\bN?æV6\u001aJkó´;ÏA¶Êl\u000e/5?Y¦QØÃ|P#6hÆ'o³T§(S´©%\u0018¡\u0003)æ¾Éº9\nk>gÃ7L>´T{ôäô\r)\u0002ñE²</5T4\u001e@÷\u0014á²í¥\u0019ü¶¶´ó@p\u001aÔåU|÷\u0011¿«©õ!øÔæ¯yy$DD\b\u000f\u001eàì\n\u000bÊKË\r\r§Ë:\u00015z~§\rºg£­Û¦ªÞ;iÖ?N8\fanÒ\u000ea$\bÆ$¦$ò£Éê<P}+\u0005U¸\u001få(ú!KaÃÛÛ4ÙòÎj\nQÁÜ\u0014w\\!S(\u0004\u0019a²¸\fÜrR%kdè9\u0001 Z\u0015\u0013²7n¡\u0007Yu_°\u0005ð:\rzr:óÛ×\u0004ê|'8\u0010¿ÇoûQÿí`5æ|û&=x·¢¤@XÙVâ\u001f\u0017,\rÀ\u0012½õ1äÿ2pùË®¾¸ÈrQÞn,-¡\u0019qázfQ¯\u0015nùg1%1+\u0018Gú@X\u001b\bÂATF¤dõaþþPÿ­À\u0016¼SïØ¼%¬Wr\u0003·jM\u0006²Çø<çÌå\u001cÞªþReá\u001c-æJì§sBoþòG}0Nþ[Öxeã\u000b¦\u0002§ì4I´ØË#\u0004k´ÕÎà+uáú§:$Q­¢ÊäB\tH§,M\u001fÉ¦é\u001f¦ö0º\u001e6gÚN\u001fPJÁA\u0015\u0015JvC/\u0005\u001b'ÄÀÆLéaùQsü\u001b\u0006U\u0019¦=\u0000~$½£êÃêÌ|ð©9N2¡ã£_&\u0002\rP*ò\u0004\n\u001df\\é'Á§9ù=ê.sçã*N\u0002'%?¾&\u001ca¾Âñ;\u000fÝ[àæf\u0016ãø!-)Øå\u0017-Å²Ç\t¸4ûãeì!\n.â³ê\u0011²X\u000f\n)Hn¹\u0005ú1IÐÎëÄ{`\u0001p.q©÷ëp\u001d\u000e¹\u000bÚA»¶³¼^WY¤É¥öÁDÚ-;J\u0011\u0000\u000e\b¥K\u000eèÕT\u0015ÕUv­ï\u0003Í NR\u001e^u\"/Lí`&Ps|n²þ>Êß¼éXmZ\u0002AàÉÈ}ü°\u0013#Àò&wpbÈ\u0011\r\u0007µýI¹Ù\u0006gyçu\u0016ç\u0011\tÉ\"Ã¥úrYl°0\u0017{ÿ=\u0016+\u0003MðÜ©Ii\u0006Ë¾³ÆB3Ä4nÕ6hZ°p Üß\\¹ÛyMlJ\u001b!*\b¨É,ÆÀ\u0010Ày?A§\u001b?@¼Ì4 ü\u0015\u0014a¸qÅ`\u001bÐ\u001a5Nj·¼[®-\n/3ý°ÜÓlê\u0007ªVå \u0018\u0004m\u000f&¹ÐÓT-¸yâ<jkÒ\u000f¿i\u0016«¦O\\Gað¨ò¾5ïïL)cI×vf\u0015¢ùYþÆB\u000f 8\n\u000e%ûD\u001d\b\u000eó\u0000»ÁCwÒ7ìæ§%eJpÎÅå}Ék¼ø<ì\u001f2{Å\u0013g|\u001c[\n_ù\u0016Z~ä9°]ÖpÝ¢\në´ºº*QnJ¥Ñ\u0014(r1Îó\u0015\rÝÍU\u001dà<ÐËÒ+)´ç\u0012}«ç­÷Ý\"Þß\u001d\fÞ»×Þ}]Ô;îBCÎéh§µ\u001bvÍ\u0017ñ5{ÎÝé®ëì(\u0013j\rª\u0011@ý_i\t};Iv%ÿý\u0001\u000eµÿÍ±\u0011ý^­¦\u0015\u0018\\ä¯Y.ÂY¾7å\u0016­Ñå<moÝ(\u0014(%¢\u0014DU(\u0011\u0014'ª³òS 3\u0002üÜt<dÕ!ü^u\u0001\fùØk6\u0004«\u0013s%e(\u000eöó/\u0016×é«\u0007Û\r\u0003`zºý\u0002!äu'rÑ,\\AX/cdØLVbç\u001f\u000bþOa\u0003vÉÍÂë\u0017È¶z\fÙË0ÑÁ½/Ô^1®0\u000e3Ñ¼ïC#\"BÃê\"\u001a\u001aêë\u001a\fá\u0006±È\u0012JPÞä¥Çmu\u0011É&^µú¯ú\u0004Ó¶ÅHNÅ5Q®,ôã\u000fiNU\u001ahí)¿\u000eîS¼ï½LntXx¸8¬>Ü`¬«36DÔáþdÂ\u000e÷Ô[ÁBÜF ÖdM«Ñà\u00185þÎ\nëVV©)¸k\u0000:©2J³ßÈå­\u00007T§s.Ù+N\u00001fó½\nß04\u0007­â¦\u0001\u0017å6%Å[±S³_å\u000b\u0004\\Í},\u0001jº|Ã0³~\u001aeW¿\u0000¬ÿO@ÿØ\u001f,MþR½i\u0005ëñYÏH¢)\u0018\u0002Ñx`\bL@¼2»@Z\u0014*{Ç}\u001a7\u0015\u0006¸\b\u0006¸\u0015W\u000b\u001fÀ­\u001d¿ú®D¯6\u001c\u0011ò\u0004\u0010­\fS\n21'*1»\fÊ«\u0014Ei I\u0000ÒäÉ\u0019Ih×x(\u001f¹3\u001aF¡\u0006\u001a\u0001(,ÌÓ+)Ë\u0013%\u00187¡ØCÍ\u001fkÞ_ËÿÓ©ì©ZÏ\u0006P§¸1\u0019iï­ÄË\u0017Ú\u000fm\u0012¢zÿ¸æ×ê5ÿÚôÉä^¿=èCþmßÕåaÒÄ\u0004á¦Á7}êw\u0000?\u0010K\u0013\u0012wìâ?\"y\u001b~?îAu&¤`\u0002¤Xp:dÓ¡áâÐÐzqC¡¾Ñ(6àó©36çpwÁîà\"!\u0014ÆVÆ\u0015&cA\u0014Þ\u001co«á\u0018Þ\u0010ÿ±á1ø*\u001d.MÈpMmtÚ·´8ßYñ×O]3Ü\u0013ìÏé\u0017mþéÄÞpáÍyZP.¨H.9\u001a\u0013#Ä7/?fÃ\u000bÈ¶\u0012Ñ\u0017ñeìGiGàaÁí\u001bu\u000fë{?~\u0014_Ç_°Ìç ß\b\u0007É6°\tØÔ.ê[ÙêÐäûÙ»æ¶\b÷<fCÁôÈæÆþ+ÏðÉ\u0011Z{Û\u0011Ã~Ï|Þ_ðM|\u0004ÿãµõ^µvz§m`=°MÛ\u0014k\u001f±2ÂÓ~\u0015eví\u0018þ\u001f=ÌG,Ø\niãpf\u000e\u0007rÃ\u001dr2qsCñ\u0010Ë|¥ÆåûHsà1g¼(æÌL©é\u0004½;NýÏcÎe.^\u001d×jâµ²\u001aFa%îè¥Xí å\u001bÐt^ª\\Ôê!jõ¸(¾\u001bìÒOà,\u000fÅN?v\u000b¤^d(Èoõò7|¾r\u0018Ðþð[¼¿\\Ui>&\u000b3ÛAº\u000bé!¥R\t@«FÆ\u0013Hàê\"?0ñKÊ^5\\\u0006nN\u0011¨\u0002-\u0004Ú\u000b\u0015­ Ó,éÜÔ\u0007Õi:0(`¾$s¶®\b\u0016ß¡g¾¾Çß|É.­¦#H¸\u0007C»\r\u000f,t]ÌÍ®Ä\n¿\u0018C¸@UÈÌÃ\nô^\u0016t.üg?\u001aß\u0007w±0Úx\u001bñì=âÜ='Ñ\\N\u0003·¨§t¨­v\u0018\b\u001e¿ïb»Ù{\u000bâ \u000b³7qðf\u000bÌ\u001b¶O>ó\u0018³æ}É¤\u001b¹å\u0017u-×Z\u0006àÆyWçÍ{·¥§*qCJR¦¸æe*«È©\u0007\u0002ÞØÃ>×\u0015Ùí°ì°O!T\u0014U%©¿\u0010Æ¯Ü­\rÈu?ÐÞ\u000e\u001e¯»ß\u001fné,ë\u0002½ /îL@mdy´Ö=\u001f³ñ«Æ\u000ff?Ùò\u0001bï<\u0012ïé)4Ó\r\u001ea1/?bC\u001eó\u0003\ré¬\n1\u0000rr\u00000;^\u000e´Øíb Uã1L6g\u001dQ¸à¨r³Æ<©Ü­<\n\u0005ÀV¾T~TÁïí­/î\u0007ÔÓË;\u0011Ø»\u0010ËÅ½¼.Ytø³¨äêýÁÅG\u0005¤\u000eéY0\fn7¼ßwåBÓ-p·\u001f ®gÄÿ½\t»áË°TÏjú\n\u0016>f3kLkhÿ²¥Á>q\n\u0016®9,\u0001G!»\u00074õìG8\u0017;î¾æ\u001e*ñÚ+L*\u0014©éÐqô9t¸@¡µè\u0016ýÉ9ÇÅ\u000b\u000e9¼k{øc8»US¡+\u0013UµôÖôa±\u0002\u001b1¯01ÄWµ±¡ðE0¯b\u001eÐýÔ®ª(U \u000e\r©¢922,È4TsjÉ\u001aØ¨,Uæ¨ë\u00059ª&PEÕf\u0017ZLtñ¶ç](»u\bk¹'p\u0003f\u0011ø©1±~~qG\u001bµðá&ÈÁe@ü\u0000g<ð?¸BÞ½¯®6¹<ûñ¶¡×Ð+k6Í\u0017òõ~_ìÇ@wúø\u0007p¡Ö9;¾m{ðòØÇ\r=wºñ¯içÆà\u000e0@Ýìë¾ýqçÖý¾NÞ\u0013¡ÔÃü+ðëfþ1,ûý4ì¶¾ê\u000b=Ï\u001e$³)¸ñí\u001f\u0011\u001fÍ\\ú:È»ë~j9­+)\u0017~86 \u0016.]Ç£t\u0012î0½NwæøªãåÁX\u001e¡»¾÷î;.·ú~ðÚgBË8½ÉAÏm}yôV­ÅhÅ4ø_bóÄ¶\nendstream\nendobj\n9 0 obj\n<</Type/FontDescriptor/FontName/ZCMAHV+Palatino-BoldItalic/FontBBox[-50 -271 529 681]/Flags 32\n/Ascent 681\n/CapHeight 681\n/Descent -271\n/ItalicAngle 0\n/StemV 79\n/MissingWidth 500\n/XHeight 469\n/CharSet(/J/e/g/o/period/r/t/u)/FontFile3 22 0 R>>\nendobj\n22 0 obj\n<</Filter/FlateDecode\n/Subtype/Type1C/Length 1264>>stream\nxU{LSW\u001cÇoÁâU\u0019NXg/b{ã6\u001fÁ\u0007l\u0019¯©ÁGs \u0002:ÁJk[(}·Ð\"-´T~¶Pú¢å\u0016Ky?\u0014DD¬²!3ÓùÇÜ²,Ù\\\\²Óè\u001fhv¯©ì2³,;'99ùýÎ9¿ßç{¾\fdQ\u0002Â`0Þ8ÂðÔb©lÓ\u001ePÍË\u0016âk©U\f*#ZX\u001cPÑ\u0017;\bÉB\u0019Lf*\u0019\\AÂrÒô:È`T¹½2¹N)\u0016Ôøú¼Â\r\u001bÿlÍÎÎÆOëþÍàû\u0004*±P¯¥7ZD&¯\u0014HÕ\u001fâ{éÓ\u0012º4.èä\"\u0015Îãó\u0005ükÇx\u0012A\u0005#år\u0016_¿wÃ¶¬¬­èå]úAî^ÂãeøÇøBÿø+ÿg\u0010\u0004AeJµæ@¸\u0019A ùH\u0001r\fÉDr\u0003Èrd\t-\u0003²\b\"\u0019g\u00122\u0012Ì\tów\u0012ÿ l)Ô~Z3É&H-HÎSbÖ1È×\u0017çòÅ§´\fÇë?ÓèÚXÑ©1wh3ÛsóZ×xÏtç}¸>Êÿ\"Ã+eM\u000fånU¬\u0011\u0015sUb¾\u0002ÐbÉøíß¢ÏFbÜÈpop\bÐ\u0014\nÓ\u0013T\u001eÁ Èç,b8\u0012ò\u0006ÚÜµ:-&\u0005\"ÎUá\u0016eÊx\nóíqwÌ¹0ÿïXÇócÓS\u0010\u0004¿5lôºØö\tG_à®ÉÑÐl\u0002\u0019(ÏªrAº3ÕqÝ6ä \u001c\u001d\tG\u0017øÑ°Ùc\u000bu¢\u0012Î«â9\u0004Ì¤ÞaåÆ§Ì¥MV¨Áø\u000bã¡K³\u001fnÖFóË45F\u001e°jKk8ÜrÞÕË½NWÆ Ü4Øèe\u0003X@xº\u0015 üo¶µ¿­·c\u000e3y\u000fªª\u001b\f\u001a\u001bfX\fsÕÆñÅ\u0015ì\u00069sAa:L\u0018Ô´.A³=.¯£\u001d0ËbÒÖ\u0015©·qkò,VYØ¨\u0005=&\u000e©£÷\u001e> ³r*âKêøV\u0005\u00180¥_Go\r_ùãrtø|nS/[£¯ªÑÕ[­>g´}\u000bÍvg³ËÞÒõoÆ=èîühö°OÕ-åös»+·ØqbgA\u0014Ps«5è¸º¹#äêî§NèÃÒð.O¯(©ü#X¼ìÂo\t\u0006õ\"å\u001caÆ3l\u0000\u001aP/Ð¿ÙB³[E×mÑs^3è0°X\u0005ViæËïØu\u0007mµ\rúZ®V\tµ`n6ºPÑâ® Í\u0007?Á#rÙyrå\u0013jÝ:êr\r5Ó8¢¿C-fôÒî;ôg\"õ\u001aÄÚ}âdõi@OÊûo\u0010ö£û óg¸7<:\u0005sèçÂá¼íñe99|Nù§ò5°\u001fÝ3Uúý­\u0018ñõSNÀíhqÒ\u0013×\u0018Ë?×õpüú5ÀúCUå\n?PqS([<2JÒÿ±y2µø×À<¹ñÙv\u0012Yöê ÒYí1«\t°\u0006UB¥]×LSÊ¼¢69À.éqai¹¦\u0004>\u001ei·¦G=P§iK>»±Ê^Ý^\u001d¨Ãr4âJ\r_V%3è®©äº¿¾y<¡\u001e::Æyï±Ýì\u0003\u000f\u0006¡ ïR`Ô\u001fn\u000fyÑ´G3Ã}3·Ó°\u0005ê#h<{5\u0019\u0014¬ãíÏ-\rÞ\u0018÷Í\u0006{¸¡þa@Ó¿ýr\u000fëþÑ«\u0015A\rTbyüÞÏøêjÿÈÝ\u0001N\nÙ¢§Í½\\Å*-\u0017\u0016E\u0015c\u0007.ÆÆTÝ\u0002nJ\u0015A\u0015\u0011¤Hº¼LZvÙ \u0003Ö°U\nendstream\nendobj\n15 0 obj\n<</Type/FontDescriptor/FontName/ZJLREK+Palatino-Italic/FontBBox[-162 -276 514 733]/Flags 32\n/Ascent 733\n/CapHeight 692\n/Descent -276\n/ItalicAngle 0\n/StemV 77\n/MissingWidth 500\n/XHeight 482\n/CharSet(/J/a/c/e/f/g/i/l/n/o/period/r/t/u)/FontFile3 23 0 R>>\nendobj\n23 0 obj\n<</Filter/FlateDecode\n/Subtype/Type1C/Length 1909>>stream\nxu}l\u0013÷\u0019ÇïHì]G\u0016(©U__l·ë\u0018(0A%ÖÂF·B\b-mi \u0010\u0013\b\t\t±\u001d'\u0017Ûñk\u001c;ñù%~ÉÏï>_\u0012Ç\u001d$n\u0002\u0001C\u0018!\u0004ÖÐlå­Z[ÞZJÓ2MÚ6­S®vY5MlÚ?§Óó{y¾ú<ßû\u001e\u0014.AP\u0014]^QOÔë*õÚ×õõòðbíÇÌÓ(óÌ\u0012æÙ\u0002ö§l¡\u001f¶ñ@Q\u0001(*L>-]\u0001Ç\u001e=Ë`Çr¤\u0000EÛ\u0003\u0003[Õ\u001a³V©hÒKVíÝ-]]Zºæ?õ\u001b7n4ÿ½\")é\nd%÷b\u0011jM«L¥ÿd+·àzK\u0014YÓ¤Ô76Ê\u001a\u0017UÕ\u0013²\u0016I¹Pj4j£dÕÖÕ\u0017×­[¿{lànpÚúF¥Zò¦ä;õ\u0016\u0011\u0004)V©µzÃúÃ2¹BIü\u0004AÞF*Jd/R\"[2¤\u001cÙ¼ì@ÞB!Ë8\"H!2Ì!p¢\u000fDü­ ^ðB9Ç»ÏoàÏðo1Þbæ]G¦Ð,#\u0014DM\u0013é\u0013` \np:j·îk`÷6°?\u0014GÉ#ÑLd8\u000fÁ\u0015ékg?ûâÖåiÑ\u0011Õì5:[ÄR¶É!÷è\u0005×ÒÖ¡ãé\u001b\u000fDöÁ¶\u000eU»´\u0003ÜÕMÑa?í\u000f?¹h.4\u0006xì3ÕËöTdMj¥tK\u001en\u0010\u0006\u0003½ÆÒÎ^«±Ñ Ý\"*f*È<³!&oC÷í\u00028Î\u0018\u0005@MGmË¦]µ+\u0001[=7½{áâû#§§E{\u0006òÁ_±¯ªç_\u0016ÉeKGk_*%««\u0012m6\u0002`»Ów ï$\\6{JÜGg\"Y\u00153¸#\u0005¿¡L!\nùðDl\f{ün@\u0000B§Ø§i\u00146VÚ¦Ø0\fGF¡d \u000fôb©E2cÕ«\"µi\u0011ÜØ \u001d¦\u0000\u001e:ºv\u001db\u001b\u000e³Oã®Dx \tã}\u0011X4¸y÷Ì<~ìÌhz\u0018$@ÜMwbÅð#ÂÇ§\u0004ìñ\u001eWÏkÃ»Õ>+°a,''SW>\u0015%z\u0007úìµÊd²\u0000w¸c½#ýwsðGâ¾Ë¼oøôyGé\u0001|à+zvpL\bM6°iÙWuÆ6Òìöu\t¹A)óâ¨W\u001c÷þ,pé<\u001a`Å\u001eÎÒFr\u001dîh<\u0016 \t±?è8ÄßßÃ]Ôö\u000eû>ëfív¢\u0006¯X·¹ì0Àn*Ù\u001fè\u000b\u001f\u0011ÏÃlp Ð\u000fúð!Go§éÉP1\u0007éé±÷xÄo²ç}\u000e\u000etâ%¤>aN]?PôÃÁ6L<ü=\u0004>\\#\bñtüõ^\u000b0C~üW=ãËöÐN`Æ\u001bx{Ükþñ¤ÐúBku\r°\u0001ß\u0019\f¶\tiW¯·\u0017Ì_Ï\u001c»;§&¨Ë_2ï\t#ùh4\u001fÄ\u0016\rµ\baÓ¬1µ\"týÉ\u0012!³!\u0004vªÙÌ+É%\u001a:B§ÕÀäÖt½E4·j÷×½H°E`3VP\u000e\rçåE§ó'§çn«Ø\u0012¡§Ãg\u0006\u0016¬¤É@u%2S#¿û\\äJw»½>\u0007oÑX\u001dV9º©þ0\búb\nÞ\u0014\u0018X´]ªî~iç®\u0016ÙºûF¯ÁÇ&?\u0013g/f\u0006Ï\f\u0018ô±r\u0012KÉ\u000bÌ³³è\u0011Îð÷á Ã] Ft&J\u000ejÁ«Ê}{öË\u0007Ïc¥§÷}6w.5}Qt~Ê²Ú·\u001eu4\u0001¼Ruê\u000eD&¿ÍÓ\u0003ÙØ8À¦·ëÄÛÉ\u0019fÕi4q\u001bÊn\u0016À»°@ ë¨\u001d0)\u0000^£:ñþàh8'þ<\fÆÐø'N\u0005±\u0019åxõ\u000e¶ üFQku+»\u0014¼m>sðúü{c·þ(bup ùaêW¹Áñ^îÊ\rZêj¤Z±ºSAÖÚ9³¹+ÌæPx)\u0011¸,é÷D.®ìÙ\u000fp\u000b?\r\u000b\u0007îåÏ\u0002ü\u001d0jMèâ!ax >\u001eK\u0013BKè\u0001\t,^§GGnÜ©×\u0019\f¶Vr·õçÂ\u0006É©u¸\rÂ»|Ge++³;\rå¸¹¢P\u0000îHÔ<Üé\u0011zô\u0007Ü\u000eÊðÒ`\nÌ¹t}ø£\u001bðë`o,\u001fËs¼½lnyb\u0002\u001e=¶B~uìc¸ç\u001aÎ\u0019ß2«å¤/\u0006(\u0004q&HM\u000b½\u0011µËäÛËi\u001e±SÚ¸1¦\r\u001bA\u0003¨n¯k®¬Wí\u0002eØ+Ó\u0007?ÑÀO\u001ad\u0016+iæ<\u000eìQ²ßö\u000b-a\u0013Ju{#8}t\u0010¢P\u0000y×\u0017\u001b\u001f\u0014½=«\u001cí\u001a\u0002C8 \"ñÄP0ä÷\u0007XÉý\u0007Ù\u0017þð\u0014 z(_\u0002+ù;»öÛm³!\rhÆ¤åõ/oÜ}úR~prbT4\u001e_à¶Ü¿ÉT\n~S½p`Û¶-Swî_¸vCÌÍà_)\u000få)ôØ£A\u001fÙ»\\\u001e½§Sü:ër\u0012n\rhÇuÿâzÒ±âñx<@ÓâOà<4áI\u0007e1ÈU¿\u0014ÁMp^ R5+µ\tKv<Ëg­Iãw}Q\u0018z(\u0017ØhiÂ±Õ{¼sülÜeõ\u0002·×,ö\u001aº÷ìd¯Z«ñNiWuw+0þ¿H<\u001eñG¹H\nP¼b\u0018ts÷ò`¡ YÓ\"S%Í£GÇ&NÒZq±)Å´¤àÁ\u0014?ÿýOæÃEE\bòOc(ÔÜ\nendstream\nendobj\n13 0 obj\n<</Type/FontDescriptor/FontName/ILLROO+Palatino-Bold/FontBBox[0 -258 864 720]/Flags 32\n/Ascent 720\n/CapHeight 695\n/Descent -258\n/ItalicAngle 0\n/StemV 129\n/MissingWidth 500\n/XHeight 471\n/CharSet(/F/I/O/P/a/acute/b/c/d/e/f/five/i/l/m/n/nine/o/one/p/r/s/t/two/u/v/zero)/FontFile3 24 0 R>>\nendobj\n24 0 obj\n<</Filter/FlateDecode\n/Subtype/Type1C/Length 3090>>stream\nxW\u000bTSg¶>\u0011s´:d2äM°¶ÔWg\u0010Ú\u0019­ÕzÁbà\u000b¬EG\u0002\u0004\bo\u0012<\u0013ì$<Âû\u0015\u0011\u0006\n\u0006\b\u0006\u0015\u0015Z­::u´Ö¶s­í°ªW»º´«Ó©N÷¡§ó8\u0007úñÞ¹\u0005+ëðïóï½¿oû;\u0010\b\u0004âèDmb:3ëÉ°,­\u0012Ä\u0004\bÅsG|m¾?­\u0014¯\u000føÎí^,>æ¿ÿ\tÖ?ù\u000b\t\u001f \bZÃ³tú\u001cujZ^à²Ý;b¯\\¹êû'«×®]\u001b¤ÿö?T¹êÔÌÀ îCJ¥ËPeæ­\u000b\fçNkµêäÀT­^\u001b¨Tª|XL¢V¥\tPkÕ:]VAà²ðå!ÁÁ«äþ<Í½1K\\¨Tg\u0005n\räSÿñ# \u00022³t9\u0011¹yù[\n\u0012ª¨hµ6c,xuÈÓk\t\"&¶\u0013;']Än\"XAÄ\u0012aD8±x ÍÄjâ×D$±(!~Bø\u0011\u0012âgÄ\"b1×3b.ÑIÜ\u0012XçsÞðùOÕÜÎ-û°A¤\u0010+ÈVJ@ÕÎ\u000b74ï\u001fóßÏ<¤~hÊ÷\u0005ßw\u0017D0f1f\u000fÞ»Qèò»bÜbÉµ\u001ef±tÜ|Ðâ¨hÍ\"a·©RkI³ÈRH\u0000:\u0000\\pÒzÙ2é»ÔC¦Ùµv\u0013NÓA\u000e¹]êO['gKµwØÚ¡\u0015\u0000ng\u000e¦wp\u001b\t×*F³û³ûÚöB\u0006ä\u001a÷¯ý¬1Ö-Ug\u0019wi1sÊpY|RàÅÅ}ÐËh¤lhh(\u001bÊþüOOáãøÔíñ¸jí\u0014»LQú²ô¡Mì\u0013¬8+vsxÊ»ø\u0018.\u00188}EÁÕÇ6y0á-ºýìÈAß¹*³ÐÏ_2iÜ\u000bÏW\u001bÌ{ªè2«0ü®è¯3\u001fPt\u000bØ\u00016[L¼]k35ðÅü(i7÷À\u0010\fw¾uº®¦®¶¶æÒäÈûp¤üuÃõ¥ÊÌ²¬4ù¶½Â?ì¢¹ÝnwÇ\u0018P×G=±4~KX¢¦cTÇeIs(|\u0014?çA\u0018GõLzr½yk%ýÜ\u001e\bH\u000b8\u0000\u0003fsSÚ\u0013ì¦:8Cã^RòÂàûpogin«¼§±\u0016¥å5ûí%@gAQ©*é7/Ëî\\§Í^æ§ÈåB\\â/\tÆúiB:awÛà2\u001c­²:7ÊFD­ø¨±^åÐÛ@çÊºÎ²Ï\u0003@I®dr(³Ë\u001dT\né1W;\u0010J½\u0010«%®:Å,K&q\u0001ã\u0010\u001câÎá\">K/\u0019çØç°ÔÀÿÐ\u0018Eös\\é\u0006ê5Ñ(´9²ë^yE\u0000f$¸óMÐêxH\u0016\u0019c,ÅûM@ï\u0011¥C\t\u0014Ú)1\u0013=KÃÁ'ÑÇ\u0007ÿ×¥N\u0014+;´u1@³\u0001a»Ø2ø¶Aq£àxY\u0001Òè¸Ôqém\u001eÜtE¨\u0014U±KÎ\u0016W\u0002\u001aý>ºòÅ;)Õ.ÅÚNeCq;\fÒÞ¡ÞÓÞcE\u000eyãv¡\u0018o\u0018¦\u00047Pì×ÎK+»\nËËÍÅ@Ç½Ò>¡À¿Î?°\"£ð\u001c\t§\u001cîÉFYr¶tO#ÖV\u0004\u0005T\u0014¹%AO^¬\u0011²ÍdGus°·¾©AÎñÓpû9ÚÅP<ôw9vñðÇ3?Ö\b%A)®\u0007\u0001Ð\u0001ý\u0016J\u0012_\u000f]pÀJý`\u0018\u0001Y^÷|~:GÈ\u001f\u0013%tíMHÙQ0|W­ß\u001c3ü+6A§wÞ}õ·Î¶69ÏD/ó¹W\u000bq\u000fv2^)Ü²ÙOÔx\u001c2/ÉÍ\u0000jîÇ\n¬¯\u0007\u0003üDµÍ\u0002!\u000f\u0006|\bl\u000bf\u0001OqÄÕXíp\u001fm³Kfé\rQûxcos\u001fþ\u0014Çd\rÝ\r\u001dZÙ(¹Ò¼ÇV\u0001)vZEZZ­\rUPAC©¹ÄøÊ6v¥¬\"¿¢À\u0012Ù²òÞê6 Îº6Û\u000bäh(åRÜ\u000fÅ\u0010Äç§\"{-\u001d\u0016Cg\u0002w«Ùp3ÌÅø¾ïçåºü\b>ä/)Â×/K\u0001L\u001cÏ ¶\u0012\u000bù=ÇÅfhvëùYËpä×\u001a­'è\u0003¤õµ\u001fz ÏvÈ6jk\u0006¨§nE\nJL*ËKÇh\u0011ä@U÷¤£¾¿¾\u000fèËp(Õ±6T/cý²ãðKJÒòÌXÂwwÔ8\u001bå ¯´(;¥(\u0003(MQÏá\u0003®«]ñf!Ï·¶º*]ø·Û¸aÄïÖ·rµ\rS§ã¥uáù\u0015jãv#à)s·µ¦W«\u0015$Ä£1Ý2IÐáCB)çøÒ£\u0001Aès¾Úáí9>ØprÌ}\r®Qè³ñúïD)ö¤¾\u0013%9?\\Wñ³«ÜjðàBN\u0016E8)­»Xën8VÕ\"\\ißWP\u001a ¬ªÜX­,$Fó\u0012<E±¡×Â¥Þ\u0013ò\u0003Ç+\u001aÕ%ù¦L o»&.{\u000bó\u001cú¨Rï<ÃSßÿ\"_ê\u0011ôÃLû]LíÿZ*+&\u000bYMºº\u001c 5Y¡3ÇÉv¨t;ài]ú^0Î;ØÎ÷÷ÞGB\u000e×?ÀU\u0012d?ßek\npB§µßJI\"þ}$M¬ø¼4>.e×¦ø+H|>üÚÕ£#\tn9Ï«¸~\u0012\u001f=#`\u0012ñ¤ôËWXQZvU±N\u001eµE\u0019\u0005«h6ô_áò³F÷Ey÷ÉÒ¶¸ìd caoÎÑâ~ãAË\t\nýEga¼îL+Å¦\u000eH«EFÐÙ^±il2Çg=Þsp\u0016zíË(ñô{3Ì§g\u0004'p\u0005³\u0015Wø0aÓ/JY\u0013»]ÄêÙ\u001côg%¨ÇJ\\\u0001X:Ö\u001f¥l¢b§ô\u0014\u001c1\f«ßØ=¸\u0012X!ÅFoXÎ\u0006íJj\u001fIï>¥½\u000bHÂ_z?\u0018\u001f?<úz×@Í¬\u001dæO\u00058WµJæ°\u0014F\u001dõ-Î¶NçA8\u0000íÆ\u0001}{½ìSÒPSn\u00054W®ÒüW¤ìåä*=<K%ÙúÂ²ôb*¼^+d{IØeªJ±$ñ{\tÅ\u0000tÍì|üÛ©³\u0019êÍM´¥ÁÚ\f=\u0014öâB²é\\µó×æ\u001ck\u0012Ð¼\u0017ñâðqìLñøñ\u0002ø¿äS¼ÈÉzÅ\u0006\u000ek¹ÖÚ\n\u0014Jï~\u000bþ¼uõSH:JE¬À²ÍZ\u0006\u0005ü\u001eZÅ\u000fþÿ½aðA)&Ûê:\u001d}@M\u001d\u000fY\u001c»µÒ\nµÙ\n+¡ÚV^.ãV\u0000·§¿âú#\\áw\u0013W°2°÷1ã][h¢Í`²VY©ÿ´²\u001fä¡8-0/¢Q®ILt«\r\r¥\u000f%)f®fî\b¾à¡ÊVJ\u001f¨\u0004iÿß¾\"Å_-0óÓ\u0017>kýÖÍþúK&þ³ý;\bG­\u0017fß¨³kìÕßØ?÷Ø°÷\\¿j½]Ï\u0005UWj,Z>è\u001e\u0017ÑËÉ&Àæ³ßÇô¸O\u001cBÉÄ¤µ\u001eÆ,Ô\u001d#ÊSO\u0004¦ç\u001b÷\u001bäë\"óÎ&÷Dð\u0002o4Ì:Çï}#Þ\u000eu\tÞg\u001cÒ3\"ôÿÐYëîjlnºOß«/ËÎæIæ½I\u001b}1\u0016}}°kz4\u0014¢5ª\u0017ÔÑ%ë\u0015Slî+1\bßæ,Qí¥3_kÎî\u001c\b\u0003ªà%é«Ð£oW»\u0012ZY)°(öÑô\rQ\u0019¹CÅòÂ£¥8#\u0016àú×\\¶¾î~~ÎÌ|§ý0\u0001eþ\u0003¸¹ µÛìÜntZíUA}\u001dEBfQ±Ê\u0012næúuÁvÁÖÉÙª\u0004ÛÀ\u0001h\u000eàF\u0005Ü`\u001dhãÖ\t^°\"\u001d*{Q\u001b\fÐøG\u0012®ÛßtâÜÒF\u0019+~%%SSÔ=s©Ëàb\u000eÝç¾!ñ÷zzÍRI4nt\b$\u001e4-=ml§¡ÛÖbï«®±oYýxîÒ\u001f<ïÂEúówØÑñ\u001dr=»Öcî|Ë90Þ{\fèKG~³y£ò¹õë\u0015ì:ö\u0019!ßÏsØ÷\u0000¿Äù>¸\u0019áv*>Æ¡ÞÈ1ï#'uMVþ»@3\r.{kmwµSÆ>o\f¶\u0017Ø¶;èªÊÚp[\u0006¨éÇI(°æí*¹û\u0001õáë»µæ¥\r\u0011{\u000e_KSdè»6ÔåÔihOñ q\u0013Pð\u0015}{]Q½CÁçâÂ8úº`\u0010çc\u0014J|î\u001b¤\u001cýµÇ\\øÈù)\\\n¸ÂðwØ@vÑ\u0010ö1Vü»ûnW}Kþæ\u001bÆ¨j]Y\u001a]ôbêÞ}9ÅûJu`2[½B/Ã0æ\u0013é¡èG×èTÑ[UçîL\rMS\u000b]Óë]Û]¢ùøðC\u0013N__|Øå» þ\t\u0014óÄ\nendstream\nendobj\n27 0 obj\n<</Type/Metadata\n/Subtype/XML/Length 1375>>stream\n<?xpacket begin='ï»¿' id='W5M0MpCehiHzreSzNTczkc9d'?>\n<?adobe-xap-filters esc=\"CRLF\"?>\n<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>\n<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>\n<rdf:Description rdf:about='uuid:6d56fd9d-4bee-11ee-0000-97943a868ec2' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 9.05'/>\n<rdf:Description rdf:about='uuid:6d56fd9d-4bee-11ee-0000-97943a868ec2' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2013-09-02T15:16:29+02:00</xmp:ModifyDate>\n<xmp:CreateDate>2013-09-02T15:16:29+02:00</xmp:CreateDate>\n<xmp:CreatorTool>dvips(k) 5.98 Copyright 2009 Radical Eye Software</xmp:CreatorTool></rdf:Description>\n<rdf:Description rdf:about='uuid:6d56fd9d-4bee-11ee-0000-97943a868ec2' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:6d56fd9d-4bee-11ee-0000-97943a868ec2'/>\n<rdf:Description rdf:about='uuid:6d56fd9d-4bee-11ee-0000-97943a868ec2' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>main.dvi</rdf:li></rdf:Alt></dc:title></rdf:Description>\n</rdf:RDF>\n</x:xmpmeta>\n                                                                        \n                                                                        \n<?xpacket end='w'?>\nendstream\nendobj\n2 0 obj\n<</Producer(GPL Ghostscript 9.05)\n/CreationDate(D:20130902151629+02'00')\n/ModDate(D:20130902151629+02'00')\n/Creator(dvips\\(k\\) 5.98 Copyright 2009 Radical Eye Software)\n/Title(main.dvi)>>endobj\nxref\n0 28\n0000000000 65535 f \n0000001835 00000 n \n0000019614 00000 n \n0000001776 00000 n \n0000001608 00000 n \n0000000015 00000 n \n0000001588 00000 n \n0000001900 00000 n \n0000002932 00000 n \n0000010816 00000 n \n0000002282 00000 n \n0000004736 00000 n \n0000003588 00000 n \n0000014685 00000 n \n0000003255 00000 n \n0000012423 00000 n \n0000002045 00000 n \n0000004067 00000 n \n0000001941 00000 n \n0000001971 00000 n \n0000004287 00000 n \n0000005162 00000 n \n0000011074 00000 n \n0000012691 00000 n \n0000014987 00000 n \n0000002191 00000 n \n0000002845 00000 n \n0000018162 00000 n \ntrailer\n<< /Size 28 /Root 1 0 R /Info 2 0 R\n/ID [<8C3C8EE67680D8166ED647296A076FCD><8C3C8EE67680D8166ED647296A076FCD>]\n>>\nstartxref\n19816\n%%EOF\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  else return n*factorial(n - 1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main (){\n    int num;\n    cin >> num;\n    int tot;\n    tot = factorial (num);\n    cout << tot << endl;\n}\n\n    ",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n  if (n==0 or n==1)return 1;\n  return n*factorial (n-1);\n}\nint main (){\n  int n;\n  string s;\n  while (cin>>n>>s){\n    for (int i=0; i<s.size(); i++){\n      if (s[i]>='a' and s[i]<='z')cout<<codificat(s[i], n);\n      else if (s[i]=='_')cout<<' ';\n      else if (s[i]=='.')cout<<endl;\n      else cout<<s[i];\n    }\n  }\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n  if (n==0 or n==1)return 1;\n  return n*factorial (n-1);\n}\nint main (){\n\n}",
  "//Albert Campano\n//Problem P12509_ca: Factorial recursiu\n\n#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n < 2)return 1;\r\n    return factorial(n-1)*n;\r\n}\r\n\r\n",
  "// Factorial recursiu\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif ( n==0) return 1;\n\telse return factorial(n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  \n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main () {\n  \n int n;\n while (cin >> n) {\n   cout << factorial(n) << endl;\n }\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial (int n){\r\n\tif (n<=1) n = 1;\r\n\telse n *= factorial(n-1);\r\n\treturn n;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n) {\t\n    if ( n == 0) return 1;\n    else return n*factorial(n-1)\n}\n\nint main () {\n}\n      \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n) {\t\n    if ( n == 0) return 1;\n    else return n*factorial(n-1)\n}\n\nint main () {\n}\n      \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n) {\t\n    if ( n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n}\n      \n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n   int f=1,c=0;\n   while (c<n){\n       ++c;\n       f=f*c;\n   }\n   return f;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n     ",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\nif (n < 2) return 1;\nelse return n * factorial (n - 1);\n}\n\nint main() {\nint n;\ncin >> n;\ncout << factorial(n) <<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int f=1;\n    int i=0;\n    \n    while (i < n) {\n      i = i+1;\n      f = f*i;\n    }\n    return f;\n}\nint main() {\n  int x;\n  cin >> x;\n\n  cout << factorial(x) << endl; \n\n}",
  "#include <iostream>\nusing namespace std;\n\n//Pre: Introduim un numero n\n//Post: calculem el seu factorial de forma recursiva\n\nint factorial (int n) {\n  if (n==0) return 1;\n  else if (n==1) return 1;\n  else return (n*factorial(n-1));\n}\n\nint main (){\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n<2) return 1;\n  else return n*factorial(n-1);\n}\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n  if ( n == 0 or n == 1) return 1;\n  else return n*factorial(n-1);\n  }\n\n\n\n\n\n\n\n\nint main() {\n  cout << \"cout\" << endl;\n}\n  ",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n==0) return 1;\r\n\tif (n>1) n=n*factorial (n-1);\r\n\treturn n;\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial (n)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n\tif ( n == 0 ) return 1;\n\tn = n * factorial (n - 1);\n\treturn n;\n}\nint main () {\n\tint x;\n\tcin >> x;\n\tx = factorial (x);\n\tcout << x << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: 0 <= n <= 12\n\nint factorial(int n) {\n    //Pre: n >= 0;\n    //Post: return !n;\n    if (n == 0) \n\treturn 1;\n    else\n\treturn n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    \n    cout << factorial(x) <<  endl;\n}",
  "\n\nint factorial (int n){\n    int n;\n    int sum=0;\n    for (int i=1; i<=n; ++i){\n        sum = sum * i;\n    }\n    return sum\n}\n        ",
  "\nint factorial (int n){\n    int n;\n    int sum=0;\n    for (int i=1; i<=n; ++i){\n        \n    return sum*i;\n    }\n}\n        ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0) return 1;\n\twhile (n>0){\n\t\treturn n*factorial(n-1);\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0) return 1;\n\telse{\n\t\treturn n*factorial(n-1);\n\t}\n}\n/*\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\n\n\n}\n*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint f = 1;\n\tint i = 0;\n\twhile (i < n) {\n\t\ti = i + 1;\n\t\tf *= i;\n\t}\n\treturn f;\n\t\n} \n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n\tif ( n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n\treturn f;\n\t\n} \n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n\n\t\n} \n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "int factorial(int n) {\n  if (n <= 1) return 1;\n  else return n*factorial(n-1);\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\t\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    while (cin >> a) {\n        cout << \"factorial\" << \"(\" << a << \")\" <<\n        \" â \" << factorial(a) << endl;\n    }\n}\n        ",
  "int factorial(int n) {\n  int fact = 1;\n  for (int i=1; i<=n; ++i) {\n    fact = fact*i;\n  }\n  return fact;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0)\n        return 1;\n    else\n        return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0)\n    return 1;\n  else\n    return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  while (cin >> n)\n    cout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\nint factorial(int n) {\n  //Pre: 0 <= n <=12\n  //Post: retorna n!\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\n\n\nint factorial(int n) {\n\tint m;\n\tif(n == 0) m = 1;\n\telse m = n * factorial(n-1);\n\treturn m;\n}\n\t\n\t\n\t\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else  return n*factorial(n-1);\n    }\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0)\n\treturn 1;\n    else \n\treturn factorial(n-1)*n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n    ",
  "#include <iostream>\n\nusing namespace std;\nint factorial(int n){\n\tif (n > 1) return n*factorial(n - 1);\n\telse return n;\n}",
  "#include <iostream>\n\nusing namespace std;\nint factorial(int n){\n\tif (n > 1) return n*factorial(n - 1);\n\telse return 1;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  int f = 1;\n  for (int i = 1; i<=n; ++i) {\n    f *= i;\n  }\n  return f;\n}\n\nint main() {\n  int a;\n  cin >> a;\n  \n  cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 1) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int a;\n  cin >> a;\n  \n  cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 0;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int a;\n  cin >> a;\n  \n  cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 1) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int a;\n  cin >> a;\n  \n  cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 1) return 1;\n  else return n*factorial(n-1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) { // iterative solution\r\n// Pre: n >= 0\r\n// Post: returns n!\r\nint f = 1;\r\nint i = 0;\r\n// Invariant: f = i! and i ? n\r\nwhile (i < n) {\r\ni = i + 1;\r\nf = f*i;\r\n}\r\nreturn f;\r\n}\r\n\r\nint main(){\r\n\tint n,fac;\r\n\t\r\n\tcin >>n;\r\n\t\r\n\tfac= factorial(n);\r\n\t\r\ncout << fac<<endl;\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\t\n\tif(n > 1) {\n\t\treturn n * factorial(n - 1);\n\t}\n\telse {\n\t\treturn 1;\n\t}\n}\n\nint main () {\n\tint c;\n\tcin >> c;\n\t\n\tcout << factorial(c) << endl;\n\treturn 0;\n}",
  " int factorial(int n) {\n    if (n > 1) {\n\treturn n * factorial(n-1);\n    }\n    else return 1\n\n}",
  " int factorial(int n) {\n    if (n > 1) {\n\treturn n * factorial(n-1);\n    }\n    else return 1;\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0 or n == 1) return 1;\n  else return n * factorial (n - 1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// Pro:\n\n// Post:\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint num = 4;\n\tcout << factorial(num) << endl;\n}",
  "int factorial(int n) {\r\n\r\n   int f = 1;\r\n   while (n > 0) {\r\n   f *= n;\r\n   --n;\r\n}\r\n\r\n return f;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n<=12 and n>=0){\n        return factorial (n);\n    }\n    else return 0;\n}\nint main(){\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n<=12 and n>=0){\n        return factorial (n);\n    }\n    else return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0) return 1\n        \n    return n*factorial(n-1);\n}\nint main(){\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\nint main(){\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n  if (n > 0){ \n    return n * factorial (n - 1); \n  }\n  else return 1;\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    cout << \"tonto quien lo lea\" << endl;\n    cout << \"Empiezo a pensar que escribir poemas tendria mas estilo...\" << endl;\n    cout << \"Seria mas maduro tambien. Pero habria que escribirlos...\" << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n == 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nvoid factorial(int n){\r\n\tif (n == 1) cout << 1;\r\n\telse {\r\n\t\tfactorial(n) = n * factorial(n-1)\r\n\t}\r\n}\r\n\t\r\n\t\r\nint main(){\r\n\tint n;\r\n\tcin>> n;\r\n\tfactorial(n);\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nvoid factorial(int n){\r\n\tif (n == 1) cout << 1;\r\n\telse {\r\n\tfactorial(n) = n * factorial(n-1);\r\n\t}\r\n}\r\n\t\r\n\t\r\nint main(){\r\n\tint n;\r\n\tcin>> n;\r\n\tfactorial(n);\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nvoid factorial(int n){\r\n\tif (n == 1) cout << 1;\r\n\telse {\r\n\tfactorial(n) = n * factorial(n-1);\r\n\t}\r\n}\r\n\t\r\n\t\r\nint main(){\r\n\tint n;\r\n\tcin>> n;\r\n\tfactorial(n);\r\n\tcout <<endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nvoid factorial(int n){\r\n\tif (n == 1) cout << 1;\r\n\telse {\r\n\tfactorial(n) = n * factorial(n-1);\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nvoid factorial(int n){\r\n\tif (n == 1) cout << 1;\r\n\telse {\r\n\tfactorial(n) = n * factorial(n-1);\r\n\t}\r\n}\r\n\t\r\n\t\r\nint main(){\r\n\tint n;\r\n\tcin>> n;\r\n\tfactorial(n);\r\n\tcout <<endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nvoid factorial (int n){\r\n\tif (n == 1) cout << 1;\r\n\telse {\r\n\tfactorial(n) = n * factorial(n-1);\r\n\t}\r\n}\r\n\t\r\n\t\r\nint main(){\r\n\tint n;\r\n\tcin>> n;\r\n\tfactorial (n);\r\n\tcout <<endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n\tif (n == 1) cout << 1;\r\n\telse {\r\n\t\tfactorial(n) = n * factorial(n-1);\r\n\t}\r\n}\r\n\t\r\n\t\r\nint main(){\r\n\tint n;\r\n\tcin>> n;\r\n\tfactorial (n);\r\n\tcout <<endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n\tif (n == 1) return 1;\r\n\telse {\r\n\t\tfactorial(n) = n * factorial(n-1);\r\n\t}\r\n}\r\n\t\r\n\t\r\nint main(){\r\n\tint n;\r\n\tcin>> n;\r\n\tfactorial (n);\r\n\tcout <<endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n) {\r\n   if(n < 0) return 0;\r\n   else if(n > 1) return n*factorial(n-1); /* Recursividad */\r\n   return 1; /* CondiciÃ³n de terminaciÃ³n, n == 1 */\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n\tif (n == 1) return 1;\r\n\telse {\r\n\t\tfactorial(n) = n * factorial(n-1);\r\n\t}\r\n}\r\n\t\r\n\t\r\nint main(){\r\n\tint n;\r\n\tcin>> n;\r\n\tfactorial (n);\r\n\tcout <<endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n) {\r\n   if(n > 1) return n*factorial(n-1)\r\n   return 1;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n) {\r\n   if(n > 1) return n*factorial(n-1);\r\n   return 1;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nvoid factorial(int n){\r\n\tif (n == 1) cout << 1;\r\n\telse {\r\n\t\tcout << factorial(n) = n * factorial(n-1);\r\n\t}\r\n}\r\n\t\r\n\t\r\nint main(){\r\n\tint n;\r\n\tcin>> n;\r\n\tfactorial (n);\r\n\tcout <<endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nvoid factorial(int n){\r\n\tif (n == 1) cout << 1;\r\n\telse {\r\n\t\tfactorial(n) = n * factorial(n-1)\r\n\t\tcout << factorial(n);\r\n\t}\r\n}\r\n\t\r\n\t\r\nint main(){\r\n\tint n;\r\n\tcin>> n;\r\n\tfactorial (n);\r\n\tcout <<endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nvoid factorial(int n){\r\n\tif (n == 1) cout << 1;\r\n\telse {\r\n\t\tfactorial(n) = n * factorial(n-1);\r\n\t\tcout << factorial(n);\r\n\t}\r\n}\r\n\t\r\n\t\r\nint main(){\r\n\tint n;\r\n\tcin>> n;\r\n\tfactorial (n);\r\n\tcout <<endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n) {\r\n   if(n == 1) return 1;\r\n   return n*factorial(n-1);\r\n}\r\n\t\r\nint main(){\r\n\tint n;\r\n\tcin>> n;\r\n\tfactorial (n);\r\n\tcout <<endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n) {\r\n   if(n == 1) return 1;\r\n   return n*factorial(n-1);\r\n}\r\n\t\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n\t}\r\n\r\nint main() {\r\n\t\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n\t\r\n\t}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n  if (n < 0) return 0;\n  else if (n > 1) return n*factorial(n-1); \n  return 1; \n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) return 1;\n\telse return (n*factorial(n-1));\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n <= 1) return 1;\n\telse return (n*factorial(n-1));\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n    if (n>= 0 and n<=12) {\n\treturn n;\n    else return 0;\n\t\n    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n    if (n>= 0 and n<=12) {\n\treturn n;\n    else return 0;\n\t\n    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int i = 0;\n    int factorial = 1;\n    while (i != n) {\n\ti = i +1;\n\tfactorial = factorial*i;\n    }\n    return factorial;\n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) <<endl;\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int i = 0;\n    int factorial = 1;\n    while (i != n) {\n\ti = i +1;\n\tfactorial = factorial*i;\n    }\n    return factorial;\n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) <<endl;\n\n\n}",
  "int factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "/*#include <iostream>\n#include <string>\n#include <cmath>\n#include <iomanip>*/\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return 1;\n\treturn n * factorial(n-1);\n}\n",
  "/*#include <iostream>\n#include <string>\n#include <cmath>\n#include <iomanip>*/\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0 || n == 1) return 1;\n\treturn n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  return n*factorial(n-1);\n  }\n\n\nint main () {\n  int n;\n  cin >> n;\n  \n  cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  return (n * factorial(n-1));\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0)\n        return factorial(n-1)*n;\n    else return 1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int a = 1;\n  int b = 1;\n  while (a <= n) {\n    b = b*n;\n    n = n - 1;\n  }\n  return n;\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int a = 1;\n  int b = 1;\n  while (a <= n) {\n    b = b*n;\n    n = n - 1;\n  }\n  return b;\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostram>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "int factorial (int n){\nif (n == 0) return 1;\nelse return n*factorial(n-1);\n}",
  "#include <iostram>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n    for (int i = (n-1); i > 0; --i)\n\tn = n * i;\n    return n;\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\nif ( n == 1) return 1;\nelse return n*factorial(n-1);\n} ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n \n if(n > 1) {\n  return n * factorial(n - 1);\n }\n else {\n  return 1;\n }\n}\n\nint main () {\n int c;\n cin >> c;\n \n cout << factorial(c) << endl;\n return 0;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) {\n\treturn 1;\n\t}\n\telse return n*factorial(n-1);\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\n    int factorial = 1;\r\n    for (int i = n; i != 0; --i) {\r\n        factorial = factorial * i;\r\n        }\r\n    return factorial;\r\n}\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    n = factorial (n);\r\n    cout << n << endl;\r\n    system(\"Pause\");\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\n    int factorial = 1;\r\n    for (int i = n; i != 0; --i) {\r\n        factorial = factorial * i;\r\n        }\r\n    return factorial;\r\n}\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    n = factorial (n);\r\n    cout << n << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\n    int factorial = 1;\r\n    for (int i = n; i != 0; --i) {\r\n        factorial = factorial * i;\r\n        }\r\n    return factorial;\r\n}\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    n = factorial (n);\r\n    cout << n << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\n    if (n==0) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    n = factorial (n);\r\n    cout << n << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\t//Prerequisits: 0 <= n <= 12\r\n\t//Ha de retornar n!\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\treturn 0;\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n);\nint main()\n{\n  int n;\n  cin >> n;\n  int Factorial = 1;\n  Factorial = factorial(n);\n  cout << Factorial << endl;\n}\nint factorial(int n)\n{\n  int Factorial = 1;\n  if(n > 12)\n  {  \n    n = 12;\n  }\n  if(n == 0 or n < 0)\n  {\n    n = 1;\n  }\n  else\n  {\n  for(int i = n; i > 0; --i)\n  {\n    Factorial *= i;\n  }\n  }\n  return(Factorial);\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    return 0;\n}\n\n        ",
  "#include <iostream>\n\nusing namespace std;\nint factorial(int n){\n\tcin >> n;\n\t\n\treturn -n;\n}\nint main() {\n\tint n;\n\tfactorial(n);\n\t\n\t\n\t\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\nint factorial(int n){\n\tcin >> n;\n\tfor(int i=1; i<=n; ++i){\n\ti=i*1;\n\tcout <<i;\n\t}\n\t\n\treturn n;\n}\nint main() {\n\tint n;\n\tfactorial(n);\t\t\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial (n-1);\r\n}\r\n\r\nint main (){\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial (x);\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) {\n    int m = n - 1;\n    return n * factorial(m);\n}\n    else return n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int p = factorial(n);\n    cout << p << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) {\n    int m = n - 1;\n    return n * factorial(m);\n}\n    if (n == 1) return n;\n    else return 0;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int p = factorial(n);\n    cout << p << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2 and n > 0) return n;\n    else {\n    int m = n - 1;\n    return n * factorial(m);\n}\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int p = factorial(n);\n    cout << p << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2 and n > 0) return n;\n    else {\n    return n * factorial(n-1);\n}\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int p = factorial(n);\n    cout << p << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return n;\n    else {\n    return n * factorial(n-1);\n}\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int p = factorial(n);\n    cout << p << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return n;\n    else {\n    return n * factorial(n-1);\n}\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int p = factorial(n);\n    cout << p << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int p = factorial(n);\n    cout << p << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  cin >> n;\n  if (n == 0 or n== 0) return 1;\n  return n*factorial(n-1);\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n// PRE: 0 <= n <= 12\n// POST:\nint factorial (int n) {\n     if ( n == 0 ) return 1;\n     else return n*factorial(n-1);\n}\n\nint main () {\n     int n;\n     cin >> n;\n     cout << factorial(n) << endl;\n     \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  cin >> n;\n  if (n == 0 or n== 1) return 1;\n  return n*factorial(n-1);\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\t//Retorna factorial\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main() {\n\tint p;\n\tcin >> p;\n\tcout << factorial(p) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0 or n == 1) return 1;\n  return n*factorial(n-1);\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n = 0) return 1;\r\n\telse return factorial(n*(n-1));\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return factorial(n*(n-1));\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0 or n == 1) return 1;\r\n\telse return factorial(n*(n-1));\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "//funcio que retorna el factorial de n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 0;\n    else if (n == 1) return n;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int a;\n    while (cin >> a) {\n        cout << factorial(a) << endl;\n    }\n}\n",
  "int factorial(int n) {\n    if (n == 0) return 0;\n    else if (n == 1) return n;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream> \nusing namespace std; \n\nint factorial (int n) {\n  int producte = 1;\n  for (int i=1 ; i <= n; ++i) {\n    producte = producte*i;\n  }\n  return producte;\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial (n) << endl;\n}",
  "#include <iostream> \nusing namespace std; \n\nint factorial (int n) {\n  int producte = 1;\n  for (int i=1 ; i <= n; ++i) {\n    producte = producte*i;\n  }\n  return producte;\n}\n\nint main () {\n  int n, producte;\n  cin >> n;\n  cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n== 0) return n = 1;\n    if (n == 1) return n = 1;\n    else {\n        n = n* factorial (n-1);\n        return n;\n    }\n}\n\nint main () {\n    int a;\n    cin >> a;\n    if (0 <= a and a <= 12) cout << factorial(a) << endl;   \n    \n}",
  "#include<iostream>\r\nusing namespace std;\r\n int main () {\r\n int factorial(int n) {\r\n if (n<=1) return 1;\r\n else return n*factorial(n-1);\r\n }\r\n }\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n int main () {\r\n int factorial(int n) {\r\n if (n<=1) return 1;\r\n else return n*factorial(n-1);\r\n }\r\n }\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n \r\n int factorial(int n) {\r\n if (n<=1) return 1;\r\n else return n*factorial(n-1);\r\n }\r\n int main (){\r\n\t int n;\r\n\t cin>>n;\r\n\t cout<<n<<endl;\r\n }\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\treturn n*factorial(n-1);\t\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n == 0) return 0;\r\n\tif (n == 1) return 1;\r\n\tif (n > 1) return n*(factorial(n-1));\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n == 1) return 1;\r\n\tif (n > 1) return n*(factorial(n-1));\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n  \n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n\n}\n\nint main() {\n\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n\n}",
  "#include <iostream>\nusing namespace std;\n#include<stdio.h>\nint factorial(int n){\n  if(n<2)\n    return 1;\n  else\n    return n * factorial(n-1);\n}\nint main (){\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  int n;\r\n  if(n<2) return 1;\r\n  else return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n<2) return 1;\r\n  else return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n!=1) return n*factorial(n-1);\r\n    else return n;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n  if ( n == 1) return 1;\n  else return factorial(n-1) * n;\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n  if ( n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n>2) return n*n-1*factorial(n-2);\r\n    else if (n=2) return n*factorial(n-1);\r\n    else return n;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint main (){\n  \n  cout.setf(ios::fixed);\n  cout.precision(4);\n  \n  int n,N;\n  \n  double M;\n  double m;\n  \n  \n  cin >> N >>  M >> m;\n  \n  while ( cin >> N) {\n    \n    if (n < m) m = n;\n    \n    if (n > M) M = n;\n  }\n  \n  cout << m << \" \" << M << \" \" << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int ans = 1;\r\n    for (int i = 1; i <= n; i++) ans *=i;\r\n    return ans;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint facr(int n){\n    if (n>1) return n*facr(n - 1);\n    else return 1;  \n}\nint main(){\n    cout << facr(5);\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint facr(int n){\n    if (n>1) return n*facr(n - 1);\n    else return 1;  \n}\nint main(){\n    cout << facr(5) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n>1) return n*facr(n - 1);\n    else return 1;  \n}\nint main(){\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n>1) return n*factorial(n - 1);\n    else return 1;  \n}\nint main(){\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\nreturn n*(n-1);\r\n}\r\n\r\nint main(){\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x);\r\n    }\r\n\r\n\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int aux = 1;\r\n    for (int i=2 ; i<=n ; ++i){\r\n        aux = i*aux;\r\n        }\r\n    return aux;\r\n   }\r\n\r\n\r\nint main(){\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x);\r\n\r\n    }\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n);\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main() {\n\t\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main() {\n\t//el programa principal sera ignorat\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// Pre: 0 <= n <= 12\n// Post: Es retorna n!\nint factorial(int n) {\n    if (n < 2) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1 or n == 0) return 1;\n\telse return factorial(n-1)*n;\n\t\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\t\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tint i = 1;\n\tint result = 0;\n\n\twhile (i < n){\n\t\tresult = n * (n-i) + result;\n\t\ti++;\n\t}\n\treturn result;\n}\n\t\nint main (){\n\tint n;\n\tint result = 0;\n\tcin >> n;\n\tresult = factorial(n);\n\tcout << result << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n==0) return 1;\n\treturn n*factorial (n-1);\n}\n\t\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout<< factorial (n);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n==1)return 1;\r\n    return n*int factorial(n-1);\r\n}\r\n\r\nint main(){}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n==1)return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main(){}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==2)return 2;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\nint n;\r\ncin>>n;\r\ncout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0)return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\nint n;\r\ncin>>n;\r\ncout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "/*\n * Author: Jorge Ferrer Rodriguez\n * Date: 26 December 2013\n * Problem: P12509_ca: Factorial recursiu\n */\n \n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  return n * factorial(n-1);\n}\n\nint main(){\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return n;\n    else n * factorial(n-1);\n}",
  "\nint factorial(int n) {\n    if (n == 1) return n;\n    else n * factorial(n-1);\n}",
  "\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n * factorial(n-1);\n}\n",
  "int factorial(int n) {\n    if (n == 1) return n;\n    else return n * factorial(n-1);\n}\n\n",
  "int factorial(int n) {\n    if (n == 2) return n;\n    else return n * factorial(n-1);\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n); {\r\n\tif (n==0) rerturn 1;\r\n\telse return n*factorial(n-1);\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n); {\r\n\tif (n==0) rerturn 1;\r\n\telse return n*factorial(n-1);\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n); {\r\n\tif (n==0) rerturn 1;\r\n\telse return n*factorial(n-1);\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "\n\nint factorial(int n) {\n    if (n == 0) return 0;\n    if (n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\n",
  "\n\nint factorial(int n) {\n    if (n < 3) return n;\n    else return n * factorial(n-1);\n}\n\n",
  "\n\nint factorial(int n) {\n    if (n < 2) return n;\n    else return n * factorial(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return n;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return n;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return n;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n  int t;\n  for (int i = 0; i <= n; ++i) {\n    if (i == 0) t = 1;\n    else t = t * i;\n  }\n  return t;\n}\n\nint main() {\n  int n, m;\n  cin >> n;\n  m = factorial(n);\n  cout << m << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==1)return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main(){}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0)return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main(){}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n <= 1) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return factorial(n-1);\n    \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n    \n}",
  "#include <iostream>\r\n#include <cvector>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\nif(n == 0) return 1;\r\nreturn n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\nif(n == 0) return 1;\r\nreturn n*factorial(n - 1);\r\n}\r\n",
  "// Nom:\t\tFactorial recursiu\n// Versio:\t1\n// Autor:\tPetru Rares Sincraian\n// Data: \t15-1-2014\n\n#include <iostream>\nusing namespace std;\n\nint factorial( int n );\n\nint main() {\n\tint nombre;\t// el nombre a factoritzar\n\tcin >> nombre;\n\n\tcout << factorial( nombre ) << endl;\n}\n\n// Pre: n >= 0\n// Post: retorna el factorial de n: n!\nint factorial( int n ) {\n\tif (n == 1 or n == 0) return 1;\n\telse return n*factorial( n-1 );\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return n;\n    else return factorial(n-1) * n;\n}\n\nint main() {\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1) * n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return n;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return (n*factorial(n-1));\n  \n}\n\nint main (){\n int n;\n cin >> n;\n cout << factorial(n)<<endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\treturn n * factorial(n-1)\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\treturn n * factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n<= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n",
  "\nint factorial(int n){\n\tif(n==0)\n\t\treturn 1;\n\treturn n*factorial(n-1);\n}",
  "#include <iostream>\n\nusing namespace std;\nint factorial (int n) {\n\tif (n>1) {\n\t\tn*=factorial (n-1);\n\t}\n\telse return 1;\n\treturn n;\n}\nint main () {\n\tint a;\n\twhile (cin >>a) {\n\t\tint n=factorial (a);\n\t\tcout <<n<<endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if ( n == 1 ) return n;\n  else return n * factorial(n-1);\n}\n\nint main () {\n  int caca;\n  cin >> caca;\n  cout << factorial(caca) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if ( n == 1 ) return n;\n  else return n * factorial(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if ( n == 0 ) return 1;\n  else return n * factorial(n-1);\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    int res;\r\n    if (n < 2) res = 1;\r\n    else {\r\n         res = res * factorial(n - 1);\r\n         }\r\n         return res;\r\n         \r\n};\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if(n<2) return 1;\r\n    else return  n * factorial(n-1);\r\n};\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return factorial(n-1) * n;     \n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n)  << endl;    \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 1) return n;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include<iostream>\n\n\nusing namespace std;\n\nint factorial (int n )\n{\n\tif(n > 1) return n*factorial(n-1);\n\telse return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0) return 1;\n  else return n*factorial(n-1); \n  \n}\n\n\n\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 1) return n;\n    else return n * factorial(n-1);\n}\n/*\nint main(){\n    int n;\n    while(cin >> n) cout << factorial(n) << endl;\n}\n*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 1 or n == 0) return n;\n    else return n * factorial(n-1);\n}\n/*\nint main(){\n    int n;\n    while(cin >> n) cout << factorial(n) << endl;\n}\n*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1) return n;\n    else return n * factorial(n-1);\n}\n/*\nint main(){\n    int n;\n    while(cin >> n) cout << factorial(n) << endl;\n}\n*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n * factorial(n-1);\n}\n/*\nint main(){\n    int n;\n    while(cin >> n) cout << factorial(n) << endl;\n}\n*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main() {\n\t//el programa principal sera ignorat\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nlong double factorial(int);\r\nint main()\r\n{   int n;\r\n    cout << \"Introduzca numero: \";\r\n    cin >> n;\r\n    cout << \"factorial: \" << factorial(n) << endl;\r\n}\r\nlong double factorial(int n)\r\n{\r\n    long double fact;\r\n    if (n==0)\r\n        return 1;\r\n    else\r\n         return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n double factorial(int);\r\nint main()\r\n{   int n;\r\n    cout << \"Introduzca numero: \";\r\n    cin >> n;\r\n    cout << \"factorial: \" << factorial(n) << endl;\r\n}\r\n double factorial(int n)\r\n{\r\n    double fact;\r\n    if (n==0)\r\n        return 1;\r\n    else\r\n         return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nlong double factorial(int);\r\nint main (){\r\n   int n;\r\n    cout << \"Introduzca numero: \";\r\n    cin >> n;\r\n    cout << \"factorial: \" << factorial(n) << endl;\r\n}\r\nlong double factorial(int n)\r\n{\r\n    long double fact;\r\n    if (0<n<12);\r\n    else\r\n         return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0 or n==1) return 1;\n\telse return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\nint main() {\n\tint n, fact;\n\tcin >> n;\n\tfact = factorial(n);\n\tcout << fact << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n*factorial(n - 1);\n    else return 1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\n#include <iomanip>\n#include <math.h>\n\n\n\n\nusing namespace std;\n\nint factorial(int n){\n\n   int f;\n    f=1;\n    while(n>1){\n        f=factorial(n-1)*n;\n    }\n\n\n        return f;\n\n}\n\n\n\n\n\nint main() {\n\n\n}\n\n\n\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if n==0 return 1;\r\n    else return(n*factorial(n-1));\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    else return(n*factorial(n-1));\r\n}\r\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 2) return n;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 3) return n;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n =< 2) return n;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 2) return n;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return n;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n >= 1) return n*factorial(n-1);\n    else return n;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n >= 1) return n*factorial(n-1);\n    else return n;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n > 1) return n*factorial(n-1);\n    else return n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n > 1) return n*factorial(n-1);\n    else return n;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n > 0) return n*factorial(n-1);\n  return 1;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "int factorial(int n){\n  if ( n == 0 ) return 1;\n  else return n*factorial(n-1);\n}",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n  if (n <= 1) return 1;\n  else return n*factorial(n-1);\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factiorial(int n) {\n    if(n <= 1) return n;\n    else return n*factiorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factiorial(n) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if(n <= 1) return n;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else if(n <= 1) return n;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n < 2) return 1;\n  else (n-1)*factorial(n);\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n < 2) return 1;\n  else return (n-1)*factorial(n);\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n < 2) return n;\n  else return (n-1)*factorial(n);\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n < 2) return n;\n  else return (n)*factorial(n-1);\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  else return n * factorial(n-1);\n}\n\nint main () {\n  int hola;\n  cin >> hola;\n  cout << factorial(hola) << endl;\n}",
  "#include<iostream>\nusing namespace std;\nint fac(int n){\n  int a=n,sum=0;\n  if(a>0){\n    sum+=n*a;\n    --a;\n    return fac(a);\n    }\n    \n    return a;\n}\n\nint main(){\n  int n;\n  while(cin>>n)cout<<fac(n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n>1) {\n\t\treturn n=n*factorial(n-1);\n\t}\n\telse return n;\n}\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint r=1;\n\twhile (n>1) {\n\t\t\tr=n*r;\n\t\t\t--n;\n\t\t}\n\t\treturn r;\n\t\n}\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  else return n * factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  return n * factorial(n-1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 1) return n;\n  else return n*factorial(n-1);\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 1) return 1;\n  else return n*factorial(n-1);\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  else return n*factorial(n-1);\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n; // 0 <= n <= 12\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif(n == 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint c;\r\n\twhile (cin >> c) {\r\n\t\tcout << factorial(c) << endl;\r\n\t}\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif(n == 1) return n;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint c;\r\n\twhile (cin >> c) {\r\n\t\tcout << factorial(c) << endl;\r\n\t}\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint fact=1;\r\n\tif (n==1) return n;\r\n\telse if (n>1) {\r\n\t\twhile (n>0) {\r\n\t\t\tfact = fact*n;\r\n\t\t\t--n;\r\n\t\t}\r\n\t}\r\n}\r\nint main () {\r\n\tint x;\r\n\tcin>>x;\r\n\tcout<<factorial(x)<<endl;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n<=1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\nint main () {\r\n\tint x;\r\n\tcin>>x;\r\n\tcout<<factorial(x)<<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse if (n == 1) return 1;\r\n\telse return factorial(n-1) * n;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int num, resultat;\n  num=n-1;\n  \n  resultat=n*num+factorial(num);\n  return resultat;\n}\n\nint main(){\n  int n;\n  while(cin >> n){\n    cout<<\"factorial(\"<<n<<\") -> \"<<factorial(n)<<endl;\n  }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1 or n == 0) return n;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\ncout << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1 or n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\ncout << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0 or n==1) return 1;\r\n\telse {\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse {\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint main (){\n\tint n, i;\n\tcin >> n;\n\ti = n%10;\n\twhile (n/10>0){\n\t\tn=n/10;\n\t\ti*=10;\n\t\ti+=n%10;\n\t}\n\n\tcout << i << endl;\n}",
  "#include <iostream>\nusing namespace std;\nint main (){\n\tint n, i;\n\tcin >> n;\n\ti = n%10;\n\twhile (n/10>0){\n\t\tn=n/10;\n\t\ti*=10;\n\t\ti+=n%10;\n\t}\n\n\tcout << i << endl;\n}",
  "#include <iostream>\nusing namespace std;\nint main (){\n\tint n, i;\n\tcin >> n;\n\ti = n%10;\n\twhile (n/10>0){\n\t\tn=n/10;\n\t\ti*=10;\n\t\ti+=n%10;\n\t}\n\n\tcout << i << endl;\n}",
  "\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int fact=1;\n    while (n > 0){\n        fact = fact + n;\n        --n;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int fact=1;\n    while (n > 0){\n        fact = fact + n;\n        --n;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int fact=1;\n    while (n > 0){\n        fact = fact + n;\n        --n;\n    }\n    return fact;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int fact=1;\n    while (n > 0){\n        fact = fact * n;\n        --n;\n    }\n    return fact;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return factorial(n-1)*n;\n}\nint main() {\n    int c,d;\n    cin >> c;\n    d = factorial(c);\n    cout << d << endl;\n    \n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return factorial(n-1)*n;\n}\nint main() {\n    int c,d;\n    cin >> c;\n    d = factorial(c);\n    cout << d << endl;\n    \n\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if(n<2)\n        return 1;\n    else\n        return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  int fac = 1;\n  if (n == 0) cout << 0 << endl;\n  if (n == 1) cout << 1 << endl;\n  else {\n    for (int i = n; i>1; --i) {\n      fac = fac*i;\n    }\n    cout << fac << endl;\n  }\n}\n  \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n); << endl;\n}\n  \n  ",
  "int factorial(int n){\n  if (n = 0) return 0;\n  else return n * factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  int fac = 1;\n  if (n == 0) cout << 0 << endl;\n  if (n == 1) cout << 1 << endl;\n  else {\n    for (int i = n; i>1; --i) {\n      fac = fac*i;\n    }\n    cout << fac << endl;\n  }\n}\n  \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n  \n  ",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 0;\n  else return n * factorial(n-1);\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  int fac = 1;\n  if (n == 0) return 1;\n  else if (n == 1) return 1;\n  else {\n    for (int i = n; i>1; --i) {\n      fac = fac*i;\n    }\n    return fac;\n  }\n}\n  \nint main () {\n  int n;\n  cin >> n;\n  int fac = 1;\n  fac = factorial(n);\n  cout << fac << endl;\n}\n  \n  ",
  "int factorial(int n){\n  if (n == 0) return 0;\n  else return n * factorial(n-1);\n}\n",
  "int factorial(int n){\n  int suma = 0;\n  if (n == 0) return suma;\n  else return n * factorial(n-1);\n}\n",
  "int factorial(int n){\n  if (n == 0) return 1;\n  else return (n * factorial(n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    int i, f = 1;\r\n    for (i = 1; i <= n; i = i + 1) f = f * i;\r\n    return f;\r\n}\r\n\r\nint main () {\r\n    int n, a, i;\r\n    cin >> n;\r\n    for (i = 1; i <= n; i = i + 1) {\r\n        cin >> a;\r\n        cout << factorial(a) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if(n==1)return n;\r\n    else return n*factorial(n-1);\r\n    cout<<n<<endl;\r\n}\r\n\r\nint main(){\r\nint num;\r\n\r\nwhile(cin>>num){\r\n    cout<<factorial(num)<<endl;\r\n}\r\nreturn 0;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if(n==1)return n;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\nint num;\r\n\r\nwhile(cin>>num){\r\n    cout<<factorial(num)<<endl;\r\n}\r\nreturn 0;\r\n}\r\n",
  "int factorial (int n){\r\n    if(n==1)return n;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if(n==0)return 1;\r\n    if(n==1)return n;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\nint num;\r\n\r\ncin>>num;\r\ncout<<factorial(num)<<endl;\r\nreturn 0;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse n = n*factorial(n-1);\n\treturn n;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n<=1) return 1;\n\telse {\n\t\treturn n*factorial(n-1);\n\t}\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse {\n\t\treturn n * factorial(n-1);\n\t}\n}\n\nint main () {\n\n\tint n;\n\tcin >> n;\n\tcout << factorial(n);\n\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factor(){\n\tif (x==1){\n\treturn = 1;\n\t}\t\n\telse\n\treturn x*factor(x-1);\n}\n\n\nint main() {\n\tint x;\n\tfactor();\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorian (int n)\n\nint main ()\n{\nif (n==0) return 1;\nelse return n*factorial (n-1);\nreturn o;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n)\n\nint main ()\n{\nif (n==0) return 1;\nelse return n*factorial (n-1);\nreturn o;\n}\n",
  "#include <iostream>\n\nint factorial(int n) { // recursive solution\n// Pre: n >= 0\n// Post: returns n!\nif (n == 0) return 1;\nelse return nïªfactorial(n-1);\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factor(){\n\tint x;\n\tif (x==1){\n\treturn == 1;\n\t}\t\n\telse return x*factor(x-1);\n}\n\n\nint main() {\n\n\tfactor();\n\treturn == o;\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factor(){\n\tint x;\n\tif (x==1){\n\treturn = 1;\n\t}\t\n\telse return x*factor(x-1);\n}\n\n\nint main() {\n\n\tfactor();\n\treturn = 0;\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factor(int x){\n\tif (x==1){\n\treturn 1;\n\t}\t\n\telse return x*factor(x-1);\n}\n\n\nvoid main() {\n\n\tfactor();\n\treturn 0;\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factor(int x){\n\tif (x==1){\n\treturn 1;\n\t}\t\n\telse {return x*factor(x-1);\n\t}\n}\n\n\nint main() {\n\n\tfactor();\n\treturn 0;\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factor(int x){\n\tif (x==1){\n\treturn 1;\n\t}\t\n\telse {return x*factor(x-1);\n\t}\n}\n\n\nint main() {\n\n\tcout << factor() << endl;\n\treturn 0;\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factor(int x){\n\tif (x==1){\n\treturn 1;\n\t}\t\n\telse {return x*factor(x-1);\n\t}\n}\n\n\nint main() {\n\n\tcout << factor(cin >> x) << endl;\n\treturn 0;\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factor(int x){\n\tif (x==1){\n\treturn 1;\n\t}\t\n\telse {return x*factor(x-1);\n\t}\n}\n\n\nint main() {\n\tint x;\n\n\tcout << factor(4) << endl;\n\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factor(int x){\n\tif (x==1){\n\treturn 1;\n\t}\t\n\telse {return x*factor(x-1);\n\t}\n}\n\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factor(x) << endl;\n\n}\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return 1;\n\telse return n*(factorial(n-1));\n}\n\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n  if(n == 1) return 1;\n  return n*factorial(n - 1);\n}",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n  if(n == 0) return 1;\n  return n*factorial(n - 1);\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\nif(n == 0) return 1;\nif (n < 2) return n;\nelse return n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\t}\n",
  "//Problem P12509_ca: Factorial recursiu\r\n\r\nint factorial(int n){\r\n\tif(n == 0 || n == 1) return 1;\r\n\treturn n * factorial(n - 1);\r\n}\r\n\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin >> n) cout << \"factorial(\" << n << \") -> \" << factorial(n) << endl;\r\n}\r\n\r\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n  \n  if(n>1){\n   return n*factorial(n-1);\n\n}}\n\n\n    int main(){\n      int i;\n      cin >>i;\n \n      cout << factorial(i) << endl;\n      \n      \n      \n      \n    }",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n  \n  if(n>1){\n   return n*factorial(n-1);\n\n}}\n\n\n    int main(){\n      int i;\n      cin >>i;\n \n      cout << factorial(i) << endl;\n      \n      \n      \n      \n    }",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n  \n  if(n>1){\n   return n*factorial(n-1);\n\n}}\n\n\n    int main(){\n      int i;\n      cin >>i;\n \n      cout << factorial(i) << endl;\n      \n      \n      \n      \n    }",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0){\n    return 1;}\n    \nelse  if(n>1){\n   return n*factorial(n-1);\n\n}}\n\n\n    int main(){\n      int i;\n      cin >>i;\n \n      cout << factorial(i) << endl;\n      \n      \n      \n      \n    }",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0){\n    return 1;}\n    \nelse  if(n>1){\n   return n*factorial(n-1);\n\n}}\n\n\n    int main(){\n      int i;\n      while(cin >>i){\n \n      cout << factorial(i) << endl;\n      \n      }\n      \n      \n    }",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0){\n    return 1;}\n    \nelse  if(n>1){\n   return n*factorial(n-1);\n\n}}\n\n\n    int main(){\n      int i;\n      while(cin >>i){\n \n      cout << factorial(i) << endl;\n      \n      }\n      \n      \n    }",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n  if (n<=1){\n    return 1;}\n    \nelse{\n   return n*factorial(n-1);\n\n}}\n\n\n    int main(){\n      int i;\n      while(cin >>i){\n \n      cout << factorial(i) << endl;\n      \n      }\n      \n      \n    }",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n <= 1) return 1;\n\treturn (n * factorial (n - 1));\n}\n\nint main() {\n\n\tint x, result;\n\tcin >> x;\n\tresult = factorial(x);\n\tcout << result << endl;\n\n\treturn 0;\n}\n",
  "#include <iostream>\nusing namespace std; \n\n\nint factorial(int n){\n    if (n == 1) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n  if (n==0)\n  {\n    return 1;\n  }\n  else\n  {\n    return n*(factorial(n-1));\n  }\n}",
  "//noves especies\n#include <iostream>\nusing namespace std;\n\nint fact(int n){\n    if(n==1) return 1;\n    return n*fact(n-1);\n}\n\nint main (){\n    int n;\n    while(cin>>n) cout<<fact(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n  if (n == 0) return 1;\n  return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std; \n\n\nint factorial(int n){\n    if (n == 1) return 1;\n    if (n == 0) return 0;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n    cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint digits(int n) //nombre de digits\n{\n  if (n < 10) return 1;\n  return 1 + digits(n/10)\n}\n",
  "#include <iostream>\nusing namespace std; \n\n\nint factorial(int n){\n    if (n == 1) return 1;\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n    cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==1) return 1;\n  return n * factorial(n-1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact( int n ) {\n  if( n == 0 ) return 1;\n  return n * fact( n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n  if(n==0){\n    return 1;\n  }\n  else{\n    return n*fact(n-1);\n  }\n}\n  \n  int main(){\n    int n;\n    cin>>n;\n    cout<<fact(n)<<endl;\n  }\n  \n",
  "#include <iostream>\n using namespace std;\n \n int factorial(int n){\n   \n    if (n==1) return 1;\n    return n*factorial(n-1);\n }\n \n int main() {\n   int n;\n   cin >> n;\n   cout << factorial(n) << endl;\n }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0) return 1;\n  return n * factorial(n-1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "//P42523: factorial\n#include <iostream>\nusing namespace std;\n\nint fact(int n){\n    if(n==0) return 1;\n    return n*fact(n-1);\n}\n\nint main (){\n    int n;\n    while(cin>>n) cout<<fact(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n  if(n == 0) return 1;\n  return n * fact(n-1);\n}\n",
  "#include <iostream>\n using namespace std;\n \n int factorial(int n){\n   \n    if (n==1) return 1;\n    return n*factorial(n-1);\n }\n \n int main() {\n   int n;\n   cin >> n;\n   cout << factorial(n) << endl;\n }",
  "#include <iostream>\n using namespace std;\n \n int factorial(int n){\n   \n    if (n==1) return 1;\n    return n*factorial(n-1);\n }\n \n int main() {\n   int n;\n   cin >> n;\n   cout << factorial(n) << endl;\n }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0){\n    return 1;\n  }\n  else{\n    return n*fact(n-1);\n  }\n}\n  \n  int main(){\n    int n;\n    cin>>n;\n    cout<<fact(n)<<endl;\n  }\n  \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) \n{\n  if (n == 0) return 1;\n  return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0){\n    return 1;\n  }\n  else{\n    return n*factorial(n-1);\n  }\n}\n  \n  int main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n  }\n  \n",
  "//P42523: factorial\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main (){\n    int n;\n    while(cin>>n) cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0) return 1;\n\treturn n*factorial(n-1);\n\n}\n\nint main(){\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n\n}\n",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n <= 1) return 1;\n\treturn (n * factorial (n - 1));\n}\n\nint main() {\n\n\tint x, result;\n\tcin >> x;\n\tresult = factorial(x);\n\tcout << result << endl;\n\n\treturn 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n) {\nif (n == 1) return 1;\nreturn n * fact (n - 1);\n}\n\nint main () {\nint n;\nwhile (cin >> n) {\n    cout << fact (n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  \n  if (n==1) return 1;\n  return n*factorial(n-1);\n  \n}\n\nint main () {\n int n;\n cin>>n;\n  \ncout << factorial(n) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main(){\n  int a;\n  cin >> a;\n  cout << factorial(a)  << endl;\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) {\n    return 1;\n  }\n  else {\n    return n*factorial(n-1);\n  }\n}\n \nint main ()  {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n using namespace std;\n \n int factorial(int n){\n   \n    if (n==0) return 1;\n    return n*factorial(n-1);\n }\n \n int main() {\n   int n;\n   cin >> n;\n   cout << factorial(n) << endl;\n }",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n==0) {\n    return 1;\n  } else {\n    return n*factorial(n-1);\n  }\n}\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  \n  if (n==0) return 1;\n  return n*factorial(n-1);\n  \n}\n\nint main () {\n int n;\n cin>>n;\n  \ncout << factorial(n) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if(n==0) return 1;\n  return n*factorial(n-1);\n}\n\nint main() {\nint n;\ncin >> n;\ncout << factorial(n) << endl;  \n  \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n)\n{\n  if (n <= 0) return 1;\n  else return (n * factorial(n-1));\n\n  \n}\nint main ()\n{ \n  int n = 0;\n    while(cin>>n)\n    {\n      \n      cout<<factorial(n)<<endl;\n    }\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//factorial\n\nint factorial(int n) {\n  if (n==0) {\n    return 1;\n    }\n  else return n*factorial(n-1);\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) <<endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n  int ans=1;\n  for (int i = n; i > 0; --i){\n    ans=ans*i;\n  }\n  return ans ;\n}\nint main() {\n  int num;\n  cin >> num;\n  cout<< factorial (num)<<endl;\n }",
  "#include <iostream>\n\nusing namespace std;\nint fact(int n)\n{\n  if(n==0) return 1;\n  else return n*fact(n-1);\n}\n\nint main()\n{\n  int a;\n  cin >> a;\n  cout << fact(a) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\nint fact(int n)\n{\n  if(n==0) {return 1;}\n  else{ return n*fact(n-1);}\n}\n\nint main()\n{\n  int a;\n  cin >> a;\n  cout << fact(a) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int a)\n{\n  int b=1;\n  for(int i=a; i>0; i--)\n  {\n   b=b*i;\n  } \n  return b;\n}\nint main()\n{\n  int a;\n  cin >> a;\n  cout << factorial(a) << endl;\n}\n    \n    ",
  "#include <iostream>\n\nusing namespace std;\n\nint fact(int n) {\n  if (n==0) return 1;\n    else return n*fact (n-1);\n}\n\nint main() {\n  \n  int n;\n  cin >> n;\n   cout << fact(n) << endl ;\n   \n}\n  ",
  "#include <iostream>\n\n\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0) return 1;\n    else return n*factorial (n-1);\n}\n\nint main() {\n  \n  int n;\n  cin >> n;\n   cout << factorial(n) << endl ;\n   \n}\n  ",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) {\n    return 1;\n  }\n  else {\n    return n*factorial(n - 1);\n  }\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nif (n==0) return 1;\nelse return n*factorial(n - 1);\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n)\r\n {\r\n if (n==0) return 1;\r\n else\r\n  {\r\n  return n*factorial (n-1);\r\n  }\r\n }\r\n \r\n \r\nint main()\r\n {\r\n int n;\r\n while (cin >> n)\r\n  cout << factorial (n) << endl; \r\n }\r\n",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n <= 1) return 1;\n\treturn (n * factorial (n - 1));\n}\n\nint main() {\n\tint x, result;\n\tcin >> x;\n\tresult = factorial(x);\n\tcout << result << endl;\n\t//system( \"pause\" );\n\treturn 0;\n}",
  "#include<iostream>\nusing namespace std;\n\nint fac(int n) {\n\tif (n <= 1) return 1;\n\telse return n * fac(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << \"factorial(\" << n << \") ---> \" << fac(n) << endl;\n\t}\n}\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n >= 0 and n <= 12) {\n        if (n == 1) return 1;\n        else return n * factorial(n-1);\n    }\n    else return n;\n}\n\nint main(){\n    int x;\n    while (cin >> x){\n    cout << factorial(x)<< endl;\n    }\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n >= 0 and n <= 12) {\n        if (n == 0) return 1;\n        else return n * factorial(n-1);\n    }\n    else return n;\n}\n\nint main(){\n    int x;\n    while (cin >> x){\n    cout << factorial(x)<< endl;\n    }\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int prod = 1;\n    if (n == 1) return 1;\n    else {\n        while (n > 0) {\n            prod = prod * factorial(n-1);\n        }\n        return prod;\n    }\n}\n\nint main(){\n\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main()\n{\n\tint a;\n\twhile(cin >> a) {\n\t\tcout << factorial(a) << endl;\t\n\t}\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact_recursiu (int nombre){\n    if (nombre == 0) return 1;\n    else {\n      return nombre * fact_recursiu(nombre-1);  \n    }\n}\n\nint main(){\n    int num;\n    cin >> num;\n    cout << fact_recursiu(num) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact_recursiu (int nombre){\n    if (nombre == 0) return 1;\n    else {\n      return nombre * fact_recursiu(nombre-1);  \n    }\n}\n\nint main(){\n    int num;\n    cin >> num;\n    cout << fact_recursiu(num) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n <= 1) return 1;\r\n    return n*factorial(n-1);    \r\n}\r\n\r\nint main(){\r\n    int n; cin >> n;\r\n    cout << factorial(n) << endl;\r\n    system(\"PAUSE\");\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else {\n      return n * factorial (n-1);  \n    }\n}\n\nint main(){\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int x;\n    while (cin >> x){\n    cout << factorial(x)<< endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    int res = 1;\n    for (int i = 1; i <= n; ++i) res = res*i;\n    return res;\n}\n\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n    \n    \n    \n}\n",
  "#include <iostream>\n#include <cmath> \nusing namespace std;\nint factorial (int n) {\n    int res=1;\n    for (int i=1; i<=n; ++i) res= res*i;\n    return res;\n}\nint main() {\n   int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n   \n  \n       \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n-1) * n;    \n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <stdio.h>\nlong int factorial(long int n){\n\tif(n==1 || n==0) return 1;\n\treturn factorial(n-1)*n;\n}\n\nint main(void){\n\tint num,numA=-1;\n\tlong int fact;\n\tscanf(\"%d\",&num);\n\twhile(num>=0 && numA!=num){\n\t\tnumA=num;\n\t\tfact=factorial(num);\n\t\tprintf(\"->%ld\\n\",fact);\n\t\tif(numA==num){\n\t\t\tscanf(\"%d\",&num);\n\t\t}\n\t}\n\treturn 0;\n}\n\t\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif (n>0){\r\n\t\tn = factorial(n-1)*n;\r\n\t}\r\n\telse n = 1;\r\n\t\r\n\treturn n;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tn = factorial (n);\r\n\treturn n;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\n      int factorial(int n) {\r\n        if(n == 0) return 1;\r\n        else return n*factorial(n-1);\r\n        }\r\n        \r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n    \r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\n\nint fact(int a){\n\tif(a==1) return 1;\n\treturn a*fact(a-1);\n}\n\nint main(){\n\n\tint a;\n\tcin>>a;\n\tint b = fact(a);\n\tcout<<b<<endl;\n\n\t\n}",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int a){\n\tif(a==1) return 1;\n\treturn a*factorial(a-1);\n}\n\nint main(){\n\n\tint a;\n\tcin>>a;\n\tint b = factorial(a);\n\tcout<<b<<endl;\n\n\t\n}",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int a){\n\tif(a==0) return 1;\n\treturn a*factorial(a-1);\n}\n\nint main(){\n\n\tint a;\n\tcin>>a;\n\tint b = factorial(a);\n\tcout<<b<<endl;\n\n\t\n}",
  "public int Factorial(int n)\n{\n\tif ( n == 0 ) return 0;\n\tif ( n == 1 ) return 1;\n\tif ( n > 12 ) return 0;\n\n\treturn n*Factorial(n-1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n > 1) return n*factorial(n-1);\r\n    else return 1;\r\n}\r\n\r\nint main (){\r\n    int n;\r\n    cin >> n;\r\n    factorial(n);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) { //que haga el factorial de un numero, 4! = 1*2*3*4\n\n//El factorial de 4! = 1*2*3*4, es lo mismo que:\n//4! = 3! * 4\n//3! = 2! * 3\n//2! = 1! * 2\n//1! = 0! * 1 = 1\n//Entonces tenemos que 4! = 3! * 4 es, por ejemplo, x = (x-1) * x.\n//                                                  x = factorial(x-1) * x\n    cin>>x;\n    \n    if (x == 1) { //Este es el paso base, donde declaramos el caso mas facil y nos apoyamos en el.\n        return 1;\n    }\n    \n    else return x * factorial(x-1);\n}\nint main() {\n    \n    int n;\n    \n    cin>>n;\n    \n    cout<<factorial(n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  if (n == 1) return n;\n  else return n*factorial(n-1);\n}\n\n\nint main() {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n){\n    if ( n!= 0) return n* factorial(n-1);\n    else  return 1;\n    \n}\nint main(){\n  int a;\n  cin>> a;\n   //~ if ( es_perfecte(a)) cout<<\"si\"<<endl;\n   //~ else cout<<\"no\"<<endl;\n  cout <<factorial(a)<<endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "int factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*facorial(n-1);\n}\n",
  "#include <iostream>\n#include <iomanip>\n#include <math.h>\n\n\n\n\nusing namespace std;\n\nint factorial(int n){\n\n    int f;\n       if(n>1) f=factorial(n-1)*n;\n         else f=1;\n        return f;\n\n}\n\n\n\n\n\nint main() {\n    int n;\n\n    while(cin>>n){\n\n        cout<<factorial(n);\n    }\n\n}\n\n\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) ;\n\nint main () {\n    int n ; \n    while ( cin >> n ) cout << factorial (n) << endl ;    \n}\n\nint factorial(int n) {\n   if(n < 0) return 0;\n   else if(n > 1) return n*factorial(n-1); \n   return 1; \n}\n",
  "int factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n){\n\t if (n == 0 or n == 1) return 1;\n\t if (n > 1) return n*factorial(n-1);\n }\n\nint main(){\n\t\n}\n",
  "#inlcude <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial( int n){\r\n    int f;\r\n    if(n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial( int n){\r\n    int f;\r\n    if(n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n); {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n<=0) return 1;\n    else return n* factorial(n-1);\n\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n);\n}\n",
  "int factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial (n-1);\n}\n",
  " int factorial(int n) {\n     if (n <= 1) return 1;\n     else return n*factorial(n-1);\n }\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial (n-1);\n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*(n - 1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint fact(int n) {\n    if (n == 0) return 1;\n    else return n*fact(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << fact(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint fact(int n) {\n    if (n == 0) return 1;\n    else return n*fact(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << fact(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint fact(int n) {\n    if (n <= 1) return 1;\n    return n*fact(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << fact(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n-1)\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n-1);\n}\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial (n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return n;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "int factorial (int n) {\n\tif (n<=1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return n;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>>\nusing namespace std;\n\nint factorial (int n) {\n    if ( n  <= 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <=1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n \n",
  "int factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*facotrail(n-1);\n}\n",
  "int factorial( int n ) {\n    if ( n <= 1 ) return 1;\n    else return n*factorial( n - 1 );\n}\n",
  "int factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << n*factorial(n-1) << endl;\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n    //factorial recursiu\n    //n!=n*(n-1)!\n    //1!\n    \nint factorial(int n) {\n    if (n<=1) return 1;\n    return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "int factorial(int n) {\n    if (n== 1) factorial n = 1;\n    else {\n        factorial (n) = n* factorial (n-1);\n    }\n    return n;\n}\n        \n        \n    \n",
  "int factorial(int n) {\n    if (n== 1) factorial (n) = 1;\n    else {\n        factorial(n) = n* factorial (n-1);\n    }\n    return n;\n}\n        \n        \n    \n",
  "int factorial(int n) {\n    if (n== 1) factorial(int n) = 1;\n    else {\n        factorial( int n) = n* factorial (int n-1);\n    }\n    return n;\n}\n        \n        \n    \n",
  "int factorial(int n) {\n    int fact;\n    if (n =< 1) fact = 1;\n    fact = n*fact(n-1);\n    return fact;\n}\n",
  "int factorial(int n) {\n    int fact;\n    if (n < 2) fact = 1;\n    else fact = n*factorial(n-1);\n    return fact;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else if (n==1) return 1;\n    else return n*(factorial(n-1));\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n<= 1) return 1;\n    else return n*factorial(n-1); \n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint factorial(int n){\n\tif(n < 2)\n\t\treturn 1;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial (n-1);\n    }\n    \nint main () {\n    int n;\n    cin >> n;\n    factorial (n);\n    cout << factorial (n) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return 1;\n\treturn n*factorial(n - 1);\n}\n\nint main () {\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n < 2) return 1;\n\treturn n*factorial(n - 1);\n}\n\nint main () {\n\tint a;\n\twhile (cin >> a) {\n\tcout << factorial(a) << endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n\n}\n\nint main () {\n    \n    int n;\n    \n    cin >> n;\n    \n    cout << factorial(n) << endl;\n    \n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n\n}\n\nint main () {\n    \n    int n;\n    \n    cin >> n;\n    \n    cout << factorial(n) << endl;\n    \n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 1 ) return 1;\n    else return n*factorial ( n - 1 ) ;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 1 ) return 1;\n    else return n*factorial( n - 1 );\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 1 ) return 1;\n    if ( n == 0 ) return 1;\n    else return n*factorial( n - 1 );\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0 or n==1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\t\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(n) {\r\n\tif (n==0 or n==1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0 or n==1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n == 0 or n ==1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  \n  \n   if (n == 0) return 1; // Cas base\n   else return n = n * factorial(n-1);\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1) return 1;\r\n\treturn n * factorial(n - 1);\r\n}\r\n\t\r\nint main()\r\n{\r\n\t\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1) return 1;\r\n\treturn n * factorial(n - 1);\r\n}\r\n\t\r\nint main()\r\n{\r\n\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\treturn n * factorial(n - 1);\r\n}\r\n\t\r\nint main()\r\n{\r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) return 1;\n\telse return n*factorial (n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) return 1;\n\telse return n*factorial (n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) return 1;\n\telse return n*factorial (n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial (n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 1 or n == 0) return 1;\r\n    else return n* factorial (n-1);}\r\n\r\nint main() {\r\nint n;\r\ncin >> n;\r\ncout << factorial (n);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main () {\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n    int o = 1;\n    for (int aux = 1; aux <= n; ++aux) o = o*aux;\n    return o;\n}\n\n\nint main(){\n    int n;\n    while (cin >> n) cout << n << \"! = \" << factorial(n) << endl;\n}\n        ",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\nif (n == 0) return 1;\nelse return n * factorial (n - 1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n\tint n;\n\tcin >> n;\n\tint s = factorial(n);\n\tcout << s << endl;\n}\n\nint factorial (int n) {\n\tcin >> n;\n\tint r = 1;\n\tfor (int i = n; i >= 1; --i) {\n\t\tr *= i;\n\t\t\n\t}\n\treturn r;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n\tint n;\n\tcin >> n;\n\tint s = factorial(n);\n\tcout << s << endl;\n}\n\nint factorial (int n) {\n\tcin >> n;\n\tint r = 1;\n\tfor (int i = n; i >= 1; --i) {\n\t\tr *= i;\n\t\t\n\t}\n\treturn r;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n\tint n;\n\tcin >> n;\n\tint s = factorial(n);\n\tcout << s << endl;\n}\n\nint factorial (int n) {\n\tint r = 1;\n\tfor (int i = n; i >= 1; --i) {\n\t\tr *= i;\n\t\t\n\t}\n\treturn r;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 0;\n    if (n == 1) return 1;\n    return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    if (n == 1) return 1;\n    return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0)\r\n\t\treturn 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n",
  "int factorial (int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n \nint factorial(int n) {\n\tif (n <= 1) return 1;   // Anomena't cas base\n\telse return n * factorial(n -1);\n}\n\n// cout << factorial(4) << endl;  cout << 24 << endl;\n// return 4 * factorial (3) = 24\n//   return 3 * factorial (2) = 6\n//     return 2 * factorial(1) = 2\n//         return 1\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\n",
  "int factorial(int n){\r\n    if(n>1)return n=n*factorial(n-1);\r\n    else return 1;\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    int mul = 1;\n    if (n == 1) return mul;\n    return mul * factorial(n-1);\n}\nint main () {\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\nint main () {\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << n*factorial(n-1) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n  if (n==0 or n==1) return 1;\n  else return factorial (n*n-1);\n}\nint main(){\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n  if (n==0 or n==1) return 1;\n  else return n*factorial (n-1);\n  }\n\nint main(){\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    return(n * factorial(n-1));\n}\n\nint main(){\n    \n}",
  "#include <iostream>\n\nusing namespace std; \n\nint factorial(int b) {\n\tif (b <= 1) return 1;\n\treturn b*factorial(b-1);\n}\n\nint main () {\n\t\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else {\n    return factorial(n-1)*n;\n  }\n}\n\nint main() {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }  \n}",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n < 2) return 1;\n\telse return factoria(n-1)*n;\n}\n\nint main(){\n}\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n < 2) return 1;\n\treturn factoria(n-1)*n;\n}\n\nint main(){\n}\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tint x;\n\tif (n > 1) x = factorial(n-1);\n\telse x = 1;\n\treturn x;\n}\n\nint main(){\n}\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tint x;\n\tif (n > 1) x = factorial(n-1);\n\telse x = 1;\n\treturn x*n;\n}\n\nint main(){\n}\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tint x;\n\tif (n > 1) x = factorial(n-1)*n;\n\telse x = 1;\n\treturn x;\n}\n\nint main(){\n}\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n  if (n < 1) return 1;\n  else return n * factorial(n - 1);\n}\n\nint main() {\n  int n;\n  while(cin >> n) cout << factorial(n) << endl;\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n  if (n == 1) return n;\r\n  else return factorial(n-1) * n;\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  while (cin >> n) {\r\n      cout << factorial(n) << endl;\r\n  }\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n  if (n == 0) return 1;\r\n  else return factorial(n-1) * n;\r\n}\r\n\r\nint main() {}\r\n\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    return n * factorial (n - 1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n  if (n == 1) return 1;\n  return n*factorial(n-1);\n}\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n  if (n <= 1) return 1;\n  return n*factorial(n-1);\n}\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0 or n == 1) return 1;\r\n    return (n*factorial(n-1));\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n  }\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 0;\r\n    if (n == 1) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1 or n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n\r\n",
  "int factorial (int n) {\r\n    if (n == 0) return 1;\r\n    n = n - 1;\r\n    return (n+1)*factorial(n);\r\n}\r\n    \r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n  if ( n == 0 ) return 1;\n  return factorial(n-1)*n;\n}\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  else return n*factorial(n-1);\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tint m;\r\n\t\r\n\tif(n<=1) return 1;\r\n\t\r\n\tm = n*factorial(n-1);\r\n\treturn m;\r\n\r\n}\r\nint main(){\r\n\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n);\r\n\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n\tcin>>n;\r\n\tint i=0;\r\n\tint suma=1;\r\n\twhile (i<n){\r\n\t\tsuma=suma*n;\r\n\t\tn-=1;\r\n\t}\r\n\treturn suma;\r\n}\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\n#include <vector>\n#include <algorithm>\n \nusing namespace std;\n \nstruct Cosa_que_entra {\n    string n;\n    int cuenta;\n};\n\nbool ordenar(Cosa_que_entra a,Cosa_que_entra b) {\n    return a.cuenta > b.cuenta or (a.cuenta == b.cuenta and a.n < b.n);\n}\n \nint main(){\n    int n, k;\n    while (cin >> n >> k) {\n        vector<string> v(n);\n\n        for (int i = 0; i < n; ++i) cin >> v[i];\n        sort(v.begin(), v.end());\n \n        vector<Cosa_que_entra> w(n);\n        int c = 0;\n        int m = 0;\n        while (c < n) {\n            w[m].n = v[c];\n            while (c < n and v[c] == w[m].n) {\n                ++w[m].cuenta;\n                ++c;\n            }\n            ++m;\n        }\n        sort(w.begin(), w.end(), ordenar);\n        for (int i = 0; i < k; ++i) cout << w[i].n << endl;\n        cout << \"----------\" << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int r;\n    while (n > 0) {\n        r = n*factorial(n-1);\n    }\n    return r;\n}\n\nint main() {\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int r;\n    if (n > 0) {\n        r = n*factorial(n-1);\n    }\n    return r;\n}\n\nint main() {\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n > 0) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;        \n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 1) return 1;\n  else return factorial (n-1);\n}",
  "#include <iostream>\nusing namespace std;\n// Entrada: 0 <= n <= 12\n// Salida: n!\n\nint factorial(int n);\n\nint factorial(int n) {\n\tif (n == 0) return 1; //Caso base: n = 0\n\telse return n*factorial(n - 1); //Si n != 0, devuelve n!*(n-1)!\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 1) return 1;\n  else n * factorial (n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 1) return 1;\n  else return n * factorial (n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 1) return 1;\n  else return n * factorial (n-1);\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  else return n * factorial (n-1);\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n);\n\nint factorial (int n) {\n\tint a;\n\tif (n<2) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn (n * factorial (n-1));\n\t}\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n);\n\nint main () {\n\tint a, s;\n\tcin >> a;\n\ts = factorial (a);\n\tcout << s << endl;\n}\nint factorial (int n) {\n\n\tif (n<2) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn (n * factorial (n-1));\n\t}\n}",
  "\nint factorial(int n){\n    if(n == 1) return 1;\n    else return factorial(n-1)*n;\n}\n",
  "\nint factorial(int n){\n    if(n == 1 or n == 0) return 1;\n    else return factorial((n-1))*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return factorial(n - 1);\n    else return n;\n}\n\nint main () {}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n * factorial(n - 1);\n    else return n;\n}\n\nint main () {}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n * factorial(n - 1);\n    else return 1;\n}\n\nint main () {}",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else return factorial(n-1)*n;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    return factorial(n-1)*n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n    cin >> n;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1 or n==0) return 1;\r\n    return factorial(n-1)*n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n    cin >> n;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if(n == 0) return 1;\n    else n *= factorial(n - 1);\n    return n;\n\n}\n\nint main(){\n\n    while(1){\n        int n;\n        cin >> n;\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return n;\r\n    else return n*factorial(n -1);\r\n}\r\n\r\n    \r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return n;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 0;\r\n    else if (n == 1) return n;\r\n    else return n*factorial(n -1);\r\n}\r\n\r\n    \r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1 or n == 0) return n;\r\n    else return n*factorial(n -1);\r\n}\r\n\r\n    \r\n",
  "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1 or n == 0) return 1;\r\n    else return n*factorial(n -1);\r\n}\r\n\r\n    \r\n",
  "int factorial (int n) {\r\n    if (n == 1 or n == 0) return 1;\r\n    else return factorial (int n - 1) * n;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "int factorial (int n) {\r\n    if (n == 1 or n == 0) return 1;\r\n    else return factorial (n - 1) * n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 1 or n == 0) return 1;\r\n    else return factorial (n - 1) * n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return n;\n\telse return n*(factorial(n-1));\t\n}\n\n\n\n\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\tif (n <= 1) return n;\n\telse return n*(factorial(n-1));\t\n}\n\n\n\n\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int b = 1;\n    if (n == 0) return b;\n    else return n*(factorial(n-1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\nif( n == 0) \r\nreturn 1;\r\n\r\nreturn n * factorial( n - 1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0){\n\t\treturn 1;\n\t}\n\treturn n*factorial(n - 1);\n}\nint main() {\n\tint n = 0;\n\tcin >> n;\n\tfactorial(n);\n}",
  "#include<iostream>\r\n#include<vector>\r\n#include<algorithm>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 1) return 1;\r\n    return n*factorial(n-1);\r\n\r\n} \r\n  \r\nint main(){\r\n   int n;\r\n   cin >> n;\r\n   cout << factorial(n) << endl; \r\n   system(\"PAUSE\");\r\n}\r\n",
  "#include<iostream>\r\n#include<vector>\r\n#include<algorithm>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n\r\n} \r\n  \r\nint main(){\r\n   int n;\r\n   while (cin >> n)\r\n   cout << factorial(n) << endl; \r\n   system(\"PAUSE\");\r\n   }\r\n}\r\n",
  "#include<iostream>\r\n#include<vector>\r\n#include<algorithm>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n\r\n} \r\n  \r\nint main(){\r\n   int n;\r\n   while (cin >> n){\r\n   cout << factorial(n) << endl; \r\n   }\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int m){\n\tif (m > 1) return factorial(m-1) * m;\n\telse return 1;\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n  \n  if (n == 1 or n == 0) {return 1; }\n  else {return n*factorial(n-1); }\n\n}\n\n\n\nint main() {\n  \n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n  \n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==1) return 1;\r\n    return (n*factorial(n-1));\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    int result = factorial(n);\r\n    cout << result << endl;\r\n    system(\"pause\");\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==1 or n==0) return 1;\r\n    return (n*factorial(n-1));\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    int result = factorial(n);\r\n    cout << result << endl;\r\n    system(\"pause\");\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n>1){\r\n        return n*factorial(n-1);\r\n    }\r\n    else{\r\n        if(n==1 or n==0){\r\n            return 1;\r\n        }\r\n    }\r\n}\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n<=1){\r\n        return 1;\r\n    }\r\n    else{\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\n//#include <vector>\nusing namespace std;\n\nint factorial(int n){\n\tif(n < 2) return 1;\n\telse return n*factorial(n-1); \n}\n\nint main() {\n\tint i;\n\tcin >> i;\n\tcout << factorial(i) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  else return n*factorial(n - 1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n == 0) return 1;\r\n    else return n*factor(n -1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n -1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==1) return n ;\n  else {\n   return factorial(n-1)*n;\n  }\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==1) return n ;\n  else {\n   return factorial(n-1)*n;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0) return 1;\n  else if (n==1) return n ;\n  else {\n   return factorial(n-1)*n;\n  }\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint number_of_digits(int n) {\n \tif ( n < 10) return 1;\n \telse return 1 + number_of_digits(n / 10);\n }\n\nint main() {\n \treturn 0;\n }",
  "#include <iostream>\nusing namespace std;\n\n//Pre: n >= 0\n// Post = return n!\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tM=1;\r\n\tif(n==0) return 1;\r\n\telse{\r\n\t\tM=M*n;\r\n\t\treturn M*factorial(--n);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint M=1;\r\n\tif(n==0) return 1;\r\n\telse{\r\n\t\tM=M*n;\r\n\t\treturn M*factorial(--n);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\n\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n < 2) return n;\n  int x;\n  x = n * factorial(n-1);\n  return x;\n}\n\nint main(){\n  int num = 0;\n  int result = 0;\n  while (cin >> num){\n    result = factorial(num);\n    cout << result << endl;\n  }\n    \n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n <= 1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main(){\r\n    int n;\r\n    while (cin >> n){\r\n          cout << factorial (n) << endl;\r\n    }\r\n}\r\n    \r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n < 2) return 1;\n  int x;\n  x = n * factorial(n-1);\n  return x;\n}\n\nint main(){\n  int num = 0;\n  int result = 0;\n  while (cin >> num){\n    result = factorial(num);\n    cout << result << endl;\n  }\n    \n}",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\n\nint factorial(int n){\n     if (n > 1){\n       return n*factorial(n-1);\n     }\n     else return 1;\n}\n\nint main(){\n     int a;\n     cin >> a;\n     a = factorial (a);\n     cout << a << endl;\n     \n  \n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: n ha de estar entre [0,12]\n//Post: la funciÃ³ retornara el factorial de n\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\n//Pre: n ha de estar entre [0,12]\n//Post: la funciÃ³ retornara el factorial de n\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n *= factorial(n-1);\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif ( n == 0 ) return n;\r\n\telse n = n*factorial(n-1);\n}\n",
  "include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial(n - 1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial(n - 1);\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint c;\r\n\tif (n =! 1) {\r\n\t\tc = n*(n-1);\r\n\t\tn = factorial(n-1)\n\t}\r\n\telse return c;\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint c;\r\n\tif (n =! 1) {\r\n\t\tc = n*(n-1);\r\n\t\tn = factorial(n-1);\n\t}\r\n\telse return c;\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return n;\r\n\tn = n*factorial(n-1);\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if ( n == 0 ) return 1;\n else return n*factorial(n-1);  \n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial (n) << endl; \n  \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse if (n == 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) {\n\t\treturn 1;\n\t}\n\tif (n==1) {\n\t\treturn n;\n\t}\n\telse {\n\t\treturn factorial(n-1)*n;\n\t}\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}",
  "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\nusing namespace std;\r\nint factorial(int n){\r\nif (n==0) return 1;\r\nelse return factorial(n-1)*n;\r\n}\r\nint main(){\r\nint n;\r\ncin >> n;\r\ncout << factorial(n) << endl;\r\n}\r\n",
  "include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    int r = 1;\r\n    r = r*n;\r\n    --n;\r\n    if(n != 1) factorial(n);\r\n    else return r;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif(n==0)\r\n\treturn 1;\r\n\telse \r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n*factorial(n - 1);\n    else return 1;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint res = n;\r\n\tif (n > 1){\r\n\t\tres *= factorial(n-1);\r\n\t}\r\n\treturn res;\r\n}\r\n\r\nint main(){\r\n\tcout << factorial(5) << endl;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint res = n;\r\n\tif (n > 1){\r\n\t\tres *= factorial(n-1);\r\n\t} else if (n == 0)\r\n\t\treturn 1;\r\n\treturn res;\r\n}\r\n\r\nint main(){\r\n\tcout << factorial(5) << endl;\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n    while (n > 1) {\n        return n*factorial(n-1);\n    }\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        while (n > 1) {\n            return n*factorial(n-1);\n        }            \n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int i){\n\tif (i==1) return 1;\n\telse return i*factorial(i-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint producte;\n\tif (n>1) {\n\t\tproducte = n*factorial((n-1));\n\t}\n\telse {\n\t\tproducte = 1;\n\t}\n\treturn producte;\n\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int i){\n\tif (i==1) return 1;\n\treturn i*factorial(i-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int i){\n\tif (i==1 or i==0) return 1;\n\treturn i*factorial(i-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "\ndef factorial (n):\n\n\tif n > 1:\n\t\tresult = n * factorial(n - 1)\n\telse:\n\t\treturn 1\n\n\treturn result\n\n\t\n\n\n\t\n",
  "#include <iostream>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint factorial (int n) {\n    int m = 1;\n    for (int i = 1; i <= n; ++i) {\n        m = m * i;\n    }\n    return m;\n}\n",
  "\ndef factorial(n):\n\n\tif n > 1:\n\t\tresult = n * factorial(n - 1)\n\telse:\n\t\treturn 1\n\n\treturn result\n\n\t\n\n\n\t\n",
  "\ndef factorial(n):\n\n\tif n > 1:\n\t\treturn = n * factorial(n - 1)\n\telse:\n\t\treturn 1\n\n\n\t\n\n\n\t\n",
  "\ndef factorial(n):\n\n\tif n > 1:\n\t\treturn n * factorial(n - 1)\n\telse:\n\t\treturn 1\n\n\n\t\n\n\n\t\n",
  "\nimport sys, re\n\n#functions\ndef factorial(n):\n\n\tif n > 1:\n\t\treturn n * factorial(n - 1)\n\telse:\n\t\treturn 1\n\n\n#\nline = 1\nwhile line:\n\t\n\tline = sys.stdin.readline()\n\tnumber = re.findall('\\d+', line)\n\tnumber = int(number[0])\n\tprint(factorial(number))\n\n\n\t\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return n*factorial(n-1);          \n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else return factorial(n-1)*n;\r\n}\r\n\r\nint main(){\r\n    int a = 9;\r\n    cout << factorial(a) << endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return factorial(n-1)*n;\r\n}\r\n\r\nint main(){\r\n    int a = 9;\r\n    cout << factorial(a) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int factorial=0;\r\n    if(n==0) return 1;\r\n    else{\r\n         for(int i=0; i<=n; ++i){\r\n                 factorial*=i;\r\n                 }\r\n                 }\r\n                 return factorial;\r\n                 }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int factorial=1;\r\n    if(n==0) return 1;\r\n    else{\r\n         for(int i=0; i<=n; ++i){\r\n                 factorial*=i;\r\n                 }\r\n                 }\r\n                 return factorial;\r\n                 }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n  int mul=n;\n  if (n==1 or n==0) mul=1;\n  else {\n    mul= mul*factorial(n-1);\n  }\n  return mul;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\r\n    if (n==0) return 1;\r\n    else return factorial (n-1);\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n\r\n}\r\n",
  "//\n//  factorial.cpp\n//  Consolidacio3\n//\n//  Created by Aniket Mavlankar on 23/11/14.\n//  Copyright (c) 2014 Aniket Mavlankar. All rights reserved.\n//\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) {\n        return n;\n    }\n    else {\n        return n * factorial(n - 1);\n    }\n}\n",
  "//\n//  factorial.cpp\n//  Consolidacio3\n//\n//  Created by Aniket Mavlankar on 23/11/14.\n//  Copyright (c) 2014 Aniket Mavlankar. All rights reserved.\n//\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n < 1) {\n        return 1;\n    }\n    else {\n        return n * factorial(n - 1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n > 0) return n*factorial(n-1);\n  else return 1;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int factorial1 = 1;\r\n    if (n != 1) { \r\n        factorial(n-1);\r\n        factorial1 = factorial1 * n;\r\n    }\r\n    return factorial1;\r\n}\r\n\r\nint main() {\r\n    int n,factorial1;\r\n    cin >> n;\r\n    factorial1 = factorial(n);\r\n    cout << factorial << endl;\r\n}\r\n       \r\n        \r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return (factorial n*factorial(n - 1)); \n}  ",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return (factorial(n)*factorial(n - 1)); \n}  ",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1); \n}  ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n==0); return n;\n    else factorial(n-1) + n;\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n==1); return n;\n    return factorial(n-1) * n;\n\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n < 2) return 1;\r\n    return n* factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n==1) return n;\n    return factorial(n-1) * n;\n\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n==2) return n;\n    return factorial(n-1) * n;\n\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n<2) return n;\n    return factorial(n-1) * n;\n\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else if ( n<2) return n;\n    return factorial(n-1) * n;\n\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int& n) {\r\n    if(n > 1){\r\n    int f;\r\n    f = n*(n-1);\r\n    n = n-2;\r\n    f = f * factorial(n);\r\n    return f;\r\n    }\r\n    else return 1;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x){\r\n    cout << factorial(x) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int& n) {\r\n    if(n > 1){\r\n    int f;\r\n    f = n*(n-1);\r\n    n = n-2;\r\n    f = f * factorial(n);\r\n    return f;\r\n    }\r\n    else return 1;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if(n > 1){\r\n    int f;\r\n    f = n*(n-1);\r\n    n = n-2;\r\n    f = f * factorial(n);\r\n    return f;\r\n    }\r\n    else return 1;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x){\r\n    cout << factorial(x) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\n//Pre: natural n.\n//Post: retorna el factorial de n.\nint factorial(int n) {\n    //Cas base:\n    if (n < 2) return 1;\n    //Cas recursiu:\n    else return n*(factorial(n-1));\n}\n\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\nif (n == 0 or n == 1) return 1;\r\nelse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n\r\n",
  "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return n;\n\telse return factorial(n-1)*n;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1 or n == 0) return 1;\n\telse return factorial(n-1)*n;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return (n * factorial(n-1));\n}\n\n\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n    \n}",
  "\ndef factorial (n):\n\n\tif n > 1:\n\t\treturn n * factorial(n - 1)\n\telse:\n\t\treturn 1\n\nprint(factorial(0))\nprint(factorial(1))\nprint(factorial(2))\nprint(factorial(3))\t\nprint(factorial(4))",
  "\ndef factorial (n):\n\n\tif n <= 1:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n - 1)\n\t\n\t",
  "\ndef factorial (n):\n\n\tif n <= 1:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n - 1)\n\t\n\t",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial (int n)\r\n{\r\n\tint f=0;\r\n\tfor(int i=1; i<=n;i++)\r\n\t{\r\n\t\tf=f*i;\r\n\t}\r\n\treturn f;\r\n}\r\nint main()\r\n{\r\n\t\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial (int n)\r\n{\r\n\tint c=1;\r\n\tif (n==0 or n==1)\r\n\t{\r\n\t\treturn c;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tn=factorial(n-1)*n;\r\n\t\treturn n;\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n>0){\r\n         return n*factorial(n-1);\r\n    }\r\n    else{\r\n       return 1;\r\n    }\r\n}\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return n;\n    else return (factorial (n-1) * n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    while (n != 1){\n        return (factorial(n-1) * n)\n        }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    while (n != 1){\n        return (factorial(n-1) * n);\n        }\n        return n;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial (n-1)\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n * factorial (n-1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\t\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n-1);\r\n\t\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  else return factorial(n-1) * n;\n}\n\nint main() {\n  int n;\n  \n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n * factorial(n - 1);\n}\n\nint main() {\n  int m;\n  cin >> m;\n  cout << factorial(m) << endl;\n}",
  "int factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\n    if (n==1) {\r\n        return 1;}\r\n        else {\r\n           return n*factorial(n-1);}\r\n    \r\n    }\r\n    \r\nint main() {\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n    \r\n    \r\n    }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\n    if (n==0) {\r\n        return 1;}\r\n    if (n==1) {\r\n        return 1;}\r\n        else {\r\n           return n*factorial(n-1);}\r\n    \r\n    }\r\n    \r\nint main() {\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n    system(\"PAUSE\");\r\n    \r\n    \r\n    }\r\n",
  "#include<iostream>\n\nusing namespace std;\n int factorial(int n){\n   if (n < 2) return 1;\n   else return n*factorial(n-1);\n }\n\nint main() {\n  \n  int n;\n  cin >> n;\n  cout << \"factorial(\" << n << \" )â \" << factorial << endl;\n}",
  "#include<iostream>\n\nusing namespace std;\n\n int factorial(int n){\n   if (n < 2) return 1;\n   else return n*factorial(n-1);\n }\n\nint main() {\n  \n  int n;\n  cin >> n;\n  cout << \"factorial(\" << n << \" )â \" << factorial(n) << endl;\n}",
  "#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n < 2) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif ((n== 1) or (n == 0))return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "// P12509\n\n#include<iostream>\n#include<cmath>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) {\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main (){\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include \"utils.PRO2\"\n\nint factorial(int n){\n  if(n == 0) return 1;\n  else{\n    return n * (factorial(n-1));\n  }\n}\n\nint main(){\n  int num = readint();\n  cout << \"El factorial de \" << num << \" es = \" << factorial(num) << endl;\n}\n",
  "//#include \"utils.PRO2\"\n\nint factorial(int n){\n  if(n == 0) return 1;\n  else{\n    return n * (factorial(n-1));\n  }\n}\n\n/*\nint main(){\n  int num = readint();\n  cout << \"El factorial de \" << num << \" es = \" << factorial(num) << endl;\n}\n*/\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "//intercanvi\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nvoid swap2(int& a, int& b) {\r\n\tint c;\r\n\tc = a;\r\n\ta = b;\r\n\tb = c;\r\n}\r\n\r\nint main () {\r\n\tint x, y;\r\n\twhile (cin >> x >> y) {\r\n\t\tswap2 (x,y);\r\n\t\tcout << x << ' ' << y << endl;\r\n\t}\r\n}\r\n\t\r\n",
  "//intercanvi\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nvoid swap2(int& a, int& b) {\r\n\tint c;\r\n\tc = a;\r\n\ta = b;\r\n\tb = c;\r\n}\r\n\r\nint main () {\r\n\tint x, y;\r\n\twhile (cin >> x >> y) {\r\n\t\tswap2 (x,y);\r\n\t\tcout << x << ' ' << y << endl;\r\n\t}\r\n}\r\n\t\r\n",
  "//intercanvi\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nvoid swap2(int& a, int& b) {\r\n\tint c;\r\n\tc = a;\r\n\ta = b;\r\n\tb = c;\r\n}\r\n\r\nint main () {\r\n\tint x, y;\r\n\twhile (cin >> x >> y) {\r\n\t\tswap2 (x,y);\r\n\t\tcout << x << ' ' << y << endl;\r\n\t}\r\n}\r\n\t\r\n",
  "//factorial2\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial ( int x ) {\r\n\tint h = 1;\r\n\tint y = 1;\r\n\twhile ( y <= x ) {\r\n\t\th= h*y;\r\n\t\ty++;\r\n\t}\r\n\treturn h;\r\n}\r\n\r\nint main () {\r\n\tint x;\r\n\twhile ( cin >> x ) {\r\n\t\tcout << factorial(x) << endl;\r\n\t}\r\n}\r\n",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial ( int x ) {\r\n\tint h = 1;\r\n\tint y = 1;\r\n\twhile (y <= x) {\r\n\t\th = h * y;\r\n\t\ty++;\r\n\t}\r\n\treturn h;\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\twhile (cin >> x) {\r\n\t\tcout << factorial (x) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int x){\r\n\tint n=1;\r\n\tfor (int i=1; i<=x; ++i) n=n*i;\r\n\treturn n;\r\n}\r\nint main(){\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial (int n) {\n    int f = 1;\n    int i = 1;\n    while ( i <= n) {\n        f = f*i;\n        i = i + 1;\n        }\n        return f;\n    }\n\nint main() {\n   int n;\n   while (cin >> n ) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\n\n\nint main() {  \n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 0) return 1;\n    return n*factorial(n-1);\n}    \n    \nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;    \n}\n",
  "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 0) return 1;\n    return n*factorial(n - 1);\n}\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n \n} \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial (n - 1);\n}\n\n\nint main () {\n int n;\n while (cin >> n ) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n ==  0) return 1;\n    return n*factorial (n - 1);\n    int f = 1;\n    for (int i = 1; i <= n; ++i) f = f*i;\n    return f;\n    \n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n    \n       \n    \n}\n",
  "#include <iostream>\n#include <cmath>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\n\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1)\n}    \n\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}    \n\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint factorial(int n){\n    if (n== 0) return 1;\n    return n*factorial(n-1); \n    }\n\nint main() {\ncout.setf(ios::fixed);\ncout.precision(4);\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}\n\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n > 0) {\n        return n * factorial(n - 1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    \n}\nint main(){\n   \n}\n\n    \n\n\n",
  "// Factorial recursiu\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n > 1)\n\t\treturn factorial(n-1) * n;\n\telse\n\t\treturn 1;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "//#include<iostream>\n//using namespace std;\n\nint factorial(int n)\n{\n  if (n == 0) return 1;\n  else  return n * factorial(n-1);\n}\n\n/*\nint main()\n{\n  int n; \n  while (cin >> n) cout << factorial(n) << endl;\n}\n*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 1 or n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << \"TREUREM EL FACTORIAL: \" << endl;\n  n = factorial(n);\n  cout << n << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\n\tif(n == 1) return 1;\n\treturn n*(factorial(n-1));\n }\n\nint main(){\n\tint n;\n\tcin >> n;\n\tn = factorial(n);\n\tcout << \"Resultat: \" << n << endl;\n\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\n\tif(n == 1) return 1;\n\treturn n*(factorial(n-1));\n }\n\n ",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\n\tif(n > 1) return n*(factorial(n-1));\n\treturn 1;\n\n }\n\nint main(){\n\tint n;\n\tcin >> n;\n\tn = factorial(n);\n\tcout << \"Resultat: \" << n << endl;\n\n}",
  "int factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial (n - 1);\r\n}\r\nint main () {\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tif(n==0)return 1;\r\n\treturn (factorial(n-1)*n);\r\n}",
  "#include<iostream>\nusing namespace std;\nint factorial (int n) {\n\tif (n<2) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n==0) return 1;\r\n    if(n>0) return n*factorial(n-1);\r\n}\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    return factorial (n-1) * n;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n/*Es compleix 0â¤ n â¤ 12.\nRetorna a! */\nint factorial(int a) {\n\tint f = 1;\n\twhile (a >= 1) {\n\t\tf = f*a;\n\t\ta = a-1;\n\t}\n\treturn f;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\t}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int x) {\r\n    if (x==1) return 1;\r\n    return x*factorial(x-1);\r\n}\r\n\r\n\r\nint main () {\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a) << endl;\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0){\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn n*factorial(n-1);\n\t}\n}\n\n//int main () {\n\t//int n;\n\t//cin >> n;\n//\tcout << factorial(n) << endl;\n//}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int x) {\r\n    if (x==1) return 1;\r\n    return x*factorial(x-1);\r\n}\r\n\r\n\r\nint main () {\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a) << endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int x) {\r\n    if (x==1) return 1;\r\n    return x*factorial(x-1);\r\n}\r\n\r\n\r\nint main () {\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a) << endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n==1 or n==0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main () {\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a) << endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n==1 or n==0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main () {\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int j = 1;\r\n    if (n == 0) return 1;\r\n    else{\r\n        for(int i = 1; i <= n; ++i) j = j * i;\r\n    return j;\r\n    }\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while (cin >> n){\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "//\n//  ex501.cpp\n//\n//  factorial recursiu\n//\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n<2) return 1;\n    int resultat = n * factorial (n-1);\n    return resultat;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int res=1;\n   for(int i=1; i<=n;++i){\n       res*=i;\n    }\n    return res;\n}\n\nint main(){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n<2) return n; \n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n<2) return 1; \n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint fact(int n){\r\n\tif (n<=1) return 1;\r\n\telse return n*fact(n-1);\r\n\t\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << fact(n);\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint fact(int n){\r\n\tif (n<=1) return 1;\r\n\telse return n*fact(n-1);\r\n\t\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << fact(n);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\treturn n*factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n\t\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n<=1) return 1;\r\n\telse return n*factorial(n-2);\r\n\t\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n);\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n<=1) return 1;\r\n\telse return n*factorial(n-1);\r\n\t\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n==0) return 1; \r\n\twhile (n!=0){\r\n\treturn n*(factorial(n-1));\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n   if (n==1 or n==0) return 1;\r\n   else return n* (n-1);\r\n}\r\n\r\nint main(){\r\n    int x;\r\n    cin>>x;\r\n    cout<<factorial(x)<<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n   if (n==1 or n==0) return 1;\r\n   else return n* factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int x;\r\n    cin>>x;\r\n    cout<<factorial(x)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==1) return 1;\r\n\telse return n* factorial (n-1);\r\n}\r\n\r\nint main(){\r\n\tint a;\r\n\tcin>>a;\r\n\tcout<< factorial (a)<<endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0) return 1;\r\n\telse return n* factorial (n-1);\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n <= 1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "// funcio factorial recursiu\r\n\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n!=0) return n*(factorial(n-1));\r\n    return 1;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0 or n == 1) return 1;\n\telse return n* factorial (n-1);\n}\n\t\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n -1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1) * n;\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1); \n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<=1) return 1;\n    return n*(factorial(n-1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {  // n esta entre 0 i 12\n    if (n <= 1) return 1;   // es el cas base, para la recursio\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint fact;\n\tif ( n <= 1) return fact = 1;\n\telse return fact = factorial(n-1) * n;\n\n\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n\t\n\t}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\n\n\n",
  "// factorial recursiu\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1 or n==0) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 0 ) return 1;\n    else return (n*(n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n < 2 ) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n == 1 or n == 0 ) return n;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n == 1 or n == 0 ) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return factorial (n-1) * n;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n<=1) return 1;\n\telse return n*factorial(n-1);\n}\n\nvoid escriure_factorial(int n){\n\tint fac = factorial(n);\n\tcout << fac << endl;\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tescriure_factorial(n);\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif(n==1 or n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n; \n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial( int n){\n//Pre: Entrar un numero n;\n//Post: Retornar el factorial en mode recursiu.\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n>1) {\n  return n*factorial(n-1);\n  }\n  else return n*1;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  if (n!=0) {\n  cout << factorial(n) << endl;\n  }\n  else cout << 1 << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n>1) {\n  return n*factorial(n-1);\n  }\n  else return n*1;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  if (n!=0) {\n  cout << factorial(n) << endl;\n  }\n  else cout << 1 << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n>1) {\n  return n*factorial(n-1);\n  }\n  else return n*1;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  if (n==0) {\n  cout << 1 << endl;\n  }\n  else cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 0) return 1;\n    if(n > 1) {\n\treturn n*factorial(n - 1);\n    }\n\t\n    \n    \n}\n\nint main(){\n    \n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\nint f;\nif (n==0) \n\tf=1;\nelse \n\tf=n*factorial(n-1);\n\nreturn f;\n\n}\n\nint main()  {\nint x;\ncin>>x;\ncout<<factorial(x)<<endl;\n\n}\n",
  "import System.Directory\n\nmyfile = \"myfile.txt\"\n\ninfile = \"sample-1.inp\"\n\noutfile = \"sample-1.out\"\n\nopsfile = \"sample-1.ops\"\n\ninfo infile = do\n  putStrLn \"----\"\n  doesFileExist infile >>= print\n  getPermissions infile >>= print\n  readFile infile >>= putStr\n\nmain = do\n  writeFile myfile \"bon dia!\"\n  getDirectoryContents \".\" >>= print\n  putStrLn \"-----\"\n  info infile\n  info outfile\n  info opsfile\n",
  "import System.Directory\nimport System.FilePath\n\nmyfile = \"myfile.txt\"\n\ninfile = \"sample-1.inp\"\n\noutfile = \"sample-1.out\"\n\n\nopsfile :: IO FilePath\nopsfile = head . filter ((==\".ops\") . takeExtension) <$> getDirectoryContents \".\"\n\ninfo infile = do\n  putStrLn \"----\"\n  doesFileExist infile >>= print\n  getPermissions infile >>= print\n  readFile infile >>= putStr\n\nmain = do\n  writeFile myfile \"bon dia!\"\n  getDirectoryContents \".\" >>= print\n  putStrLn \"-----\"\n  opsfile >>= readFile >>= putStrLn\n",
  "import System.Directory\nimport System.FilePath\nimport Control.Applicative\nimport Data.Functor\n\nmyfile = \"myfile.txt\"\n\ninfile = \"sample-1.inp\"\n\noutfile = \"sample-1.out\"\n\n\nopsfile :: IO FilePath\nopsfile = head . filter ((==\".ops\") . takeExtension) <$> getDirectoryContents \".\"\n\ninfo infile = do\n  putStrLn \"----\"\n  doesFileExist infile >>= print\n  getPermissions infile >>= print\n  readFile infile >>= putStr\n\nmain = do\n  writeFile myfile \"bon dia!\"\n  getDirectoryContents \".\" >>= print\n  putStrLn \"-----\"\n  opsfile >>= readFile >>= putStrLn\n",
  "import System.Directory\nimport System.FilePath\nimport Control.Applicative\nimport Data.Functor\nimport Control.Monad\n\nmyfile = \"myfile.txt\"\n\ninfile = \"sample-1.inp\"\n\noutfile = \"sample-1.out\"\n\n\nopsfile :: IO FilePath\nopsfile = head . filter ((==\".ops\") . takeExtension) <$> getDirectoryContents \".\"\n\ninsfiles :: IO [FilePath]\ninsfiles = filter ((==\".inp\") . takeExtension) <$> getDirectoryContents \".\"\n\ninfo infile = do\n  putStrLn \"----\"\n  doesFileExist infile >>= print\n  getPermissions infile >>= print\n  readFile infile >>= putStr\n\nmain = do\n  --writeFile myfile \"bon dia!\"\n  --getDirectoryContents \".\" >>= print\n  --putStrLn \"-----\"\n  insfiles >>= mapM (flip writeFile \"0\")\n  putStrLn \"1\"\n",
  "import System.Directory\nimport System.FilePath\nimport Control.Applicative\nimport Data.Functor\nimport Control.Monad\n\nmyfile = \"myfile.txt\"\n\ninfile = \"sample-1.inp\"\n\noutfile = \"sample-1.out\"\n\n\nopsfile :: IO FilePath\nopsfile = head . filter ((==\".ops\") . takeExtension) <$> getDirectoryContents \".\"\n\ninsfiles :: IO [FilePath]\ninsfiles = do\n  x <- filter ((==\".inp\") . takeExtension) <$> getDirectoryContents \".\"\n  print x\n  return x\n\ninfo infile = do\n  putStrLn \"----\"\n  doesFileExist infile >>= print\n  getPermissions infile >>= print\n  readFile infile >>= putStr\n\nmain = do\n  --writeFile myfile \"bon dia!\"\n  --getDirectoryContents \".\" >>= print\n  --putStrLn \"-----\"\n  insfiles >>= mapM_ (`writeFile` \"0\")\n  putStrLn \"1\"\n",
  "import System.Directory\nimport System.FilePath\nimport Control.Applicative\nimport Data.Functor\nimport Control.Monad\n\nmyfile = \"myfile.txt\"\n\ninfile = \"sample-1.inp\"\n\noutfile = \"sample-1.out\"\n\n\nopsfile :: IO FilePath\nopsfile = head . filter ((==\".ops\") . takeExtension) <$> getDirectoryContents \".\"\n\ninpfiles :: IO [FilePath]\ninpfiles = do\n  x <- filter ((==\".inp\") . takeExtension) <$> getDirectoryContents \".\"\n  print x\n  return x\n\ninfo infile = do\n  putStrLn \"----\"\n  doesFileExist infile >>= print\n  getPermissions infile >>= print\n  readFile infile >>= putStr\n\nmain = do\n  --writeFile myfile \"bon dia!\"\n  --getDirectoryContents \".\" >>= print\n  --putStrLn \"-----\"\n  inpfiles >>= mapM_ (`writeFile` \"0\")\n  inpfiles >>= mapM_ (readFile >=> putStrLn)\n  putStrLn \"1\"\n",
  "import System.Directory\nimport System.FilePath\nimport Control.Applicative\nimport Data.Functor\nimport Control.Monad\n\nmyfile = \"myfile.txt\"\n\ninfile = \"sample-1.inp\"\n\noutfile = \"sample-1.out\"\n\n\nopsfile :: IO FilePath\nopsfile = head . filter ((==\".ops\") . takeExtension) <$> getDirectoryContents \".\"\n\ninpfiles :: IO [FilePath]\ninpfiles = filter ((==\".inp\") . takeExtension) <$> getDirectoryContents \".\"\n\ninfo infile = do\n  putStrLn \"----\"\n  doesFileExist infile >>= print\n  getPermissions infile >>= print\n  readFile infile >>= putStr\n\nmain = do\n  --writeFile myfile \"bon dia!\"\n  getDirectoryContents \".\" >>= print\n  --putStrLn \"-----\"\n  inpfiles >>= mapM_ (`writeFile` \"0\")\n  inpfiles >>= mapM_ (readFile >=> putStrLn)\n  putStrLn \"1\"\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n > 1) {\n\treturn n*factorial(n - 1);\n    }\n    else return 1;\n  \n}\n\nint main(){\n    \n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\t//pre: n > 0\r\n\t//post: retorna n!\r\n\tint res;\r\n\tif(n==0) res=1;\r\n\telse res=factorial(n-1)*n;\r\n\treturn  res;\r\n}\r\n\r\nint main(){\r\n\tint n,x;\r\n\tcin>>x;\r\n\tn=factorial(x);\r\n\tcout<<n;\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\nint res;\n\nif (n==0) res=1;\n\nelse res=factorial(n-1)*n;\n\nreturn res;\n\n}\n\nint main(){\n\nint x;\ncin>>x;\ncout<<factorial(x)<<endl;\n\n}",
  "int factorial(int n){\r\n int t=1;\r\n for(int i=1; i<n; i++){\r\n  t=t*i;   \r\n }\r\n return t;\r\n}\r\n",
  "int factorial(int n){\r\n int t=1;\r\n if (n==0) return 0;\r\n for(int i=1; i<n; i++){\r\n  t=t*i;   \r\n }\r\n return t;\r\n}\r\n",
  "int factorial(int n){\r\n int t=1;\r\n if (n==0) return 0;\r\n for(int i=0; i<n; i++){\r\n  t=t*i;   \r\n }\r\n return t;\r\n}\r\n",
  "int factorial(int n){\r\n int t=1;\r\n if (n==0) return 0;\r\n for(int i=1; i<=n; i++){\r\n  t=t*i;   \r\n }\r\n return t;\r\n}\r\n",
  "int factorial(int n){\r\n int t=1;\r\n for(int i=1; i<=n; i++){\r\n  t=t*i;   \r\n }\r\n return t;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\nint res;\nif(n==0) res=1;\nelse res=n*factorial(n-1);\nreturn res;\n}\nint main(){}\n",
  "int factorial (int n){\r\n\tint res;\r\n\tif (n==0) res=1;\r\n\telse res=factorial(n-1)*n;\r\n\treturn res;\r\n}\r\n\t\r\n",
  "#include <iostreeam>\nusing namespace std;\n\n\nint factorial (int n) {\n//Pre: >=0\n//Post: Retorna n!\nint res;\nif (n==0) res=1;\nelse res=factorial(n-1)*n;\nreturn res;\n} \n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n//Pre: >=0\n//Post: Retorna n!\nint res;\nif (n==0) res=1;\nelse res=factorial(n-1)*n;\nreturn res;\n} \n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n  // Pre: n>=0\n  // Post: retorna n!\n  int res;\n  if (n== 0) res = 1;\n  else res = n*factorial (n-1);\n  return res;\n}",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n//Pre: n>=o\n//Post: Retorna n!\nint res;\nif (n==0) res=1;\nelse res= factorial(n-1)*n;\nreturn res;\n}\nint main(){\nint x;\ncin>>x;\nfactorial(x);\ncout<<factorial(x)<< endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n//Pre:\tEscriviu una funciÃ³ \"int factorial(int n);\" que retorni n!. Resoleu aquest problema recursivament. Es compleix 0â¤ n â¤ 12. ObservaciÃ³ NomÃ©s cal enviar el procediment demanat; el programa principal serÃ  ignorat. \n//Post:\tretorna n!\n\nint res;\nif (n==0) res=1;\nelse res=factorial(n-1)*n;\nreturn res;\n}\n\n\nint main(){\nint x;\ncin >> x;\ncout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\t//Pre: n>0\n\t//Post: retorna n!\n\tint res;\n\tif (n==0) res=1; //base\n\telse res=factorial(n-1)*n; //recursiu\n\treturn res;\n}\n\nint main () {\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int num) {\n    if(num == 0 or num == 1) {\n        return 1;\n    }\n    return num * factorial(num-1);\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\r\n//Pre: n>=0\r\n//Post: Retorna n!\r\nint res;\r\nif (n==0) res=1;\r\nelse res=factorial(n-1)*n;\r\nreturn res;\r\n}\r\n\r\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n  \n   //Pre. n<=0\n   //Post. Retorna n!\n  \n   int res;\n   \n   if (n==0) res=1;\n   else res=factorial(n-1)*n;\n   \n   return res;\n}\n\nint main () {\n   \n   int n;\n   cin>>n;\n   \n   cout<<factorial(n)<<endl;\n   \n   \n }",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\n//Pre: n>0\n//Post: Retorna n!\n\nif (n==0 or n==1) {\n  return 1;\n} else { \n  return factorial (n-1)*n;\n}\n}\n\n\nint main() {\n  int n = 4;\n  cout<<factorial(n)<<endl;\n  \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n  //Pre: 0<=n<=12\n  //Post: Retorna un enter amb el factorial doble de n\n\n  int f=1, i=0;\n    while (i<n){\n      ++i;\n      f=f*i;\n    }\n    return f;\n}\n\nint main(){\n\n  int x;\n  cin>>x;\n  if(x>=0 and x<=12){\n  cout<<factorial(x)<<endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial_doble(int n)\n//Pre: 0<=n<=19\n//Post: el resultat es el factorial doble de n\n\n{\n\tint f;\n\tif (n<2) f = 1;\n\telse f = factorial_doble(n-2)*n;\n\treturn f;\n\t\n}\n\nint main() {\n\n\tint n;\n\tcin >> n;\n\tif (n>=0 and n<=19)\n\t\tcout<<factorial_doble(n)<<endl;\n\telse\n\t\tcout<<\" \";\n\t\n\treturn;\n\t\t\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n//Pre: 0<=n<=12\n//Post retorna f com el resultat del factorial\n\tint f;\n\tif (n<2) f=1;\n\telse f=factorial(n-1)*n;\n\treturn f;\n}\nint main (){\n\tint n;\n\tint result;\n\tcin>>n;\n\tresult=factorial(n);\n\t\n\tcout<<result<<endl;\n\t}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*faltorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n) {\n    if (n <= 1) return 1;\n    if (n == 2) return 2;\n    return n*factorial(n-1);\n }\n\nint main () {\n\tint n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tint resultat;\r\n\tif (n==0 or n==1) resultat = 1;\r\n\telse resultat = n * factorial(n-1);\r\n\treturn resultat;\r\n}\r\n\r\nint main () {\r\n\r\nfactorial(4);\r\n\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main()\r\n{\r\n    int resultado;\r\n    int num;\r\n\r\n    cin>>num;\r\n    resultado=factorial(num);\r\n\r\n    cout<<resultado<<endl;\r\n\r\n    return 0;\r\n}\r\n\r\nint factorial(int n)\r\n{\r\n    if (n==0)\r\n    {\r\n        return 1;\r\n    } else {\r\n        return n*factorial(n-1);\r\n    }\r\n\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main()\r\n{\r\n    int resultado;\r\n    int num;\r\n\r\n    cin>>num;\r\n    resultado=factorial(num);\r\n\r\n    cout<<resultado;\r\n\r\n    return 0;\r\n}\r\n\r\nint factorial(int n)\r\n{\r\n    if (n==0)\r\n    {\r\n        return 1;\r\n    } else {\r\n        return n*factorial(n-1);\r\n    }\r\n\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main()\r\n{\r\n    int resultado;\r\n    int num;\r\n\r\n    cin>>num;\r\n    resultado=factorial(num);\r\n\r\n    cout<<resultado<<endl;\r\n\r\n    return 0;\r\n}\r\n\r\nint factorial(int n)\r\n{\r\n    if (n==1)\r\n    {\r\n        return 1;\r\n    } else {\r\n        return n*factorial(n-1);\r\n    }\r\n\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main()\r\n{\r\n    int resultado;\r\n    int num;\r\n\r\n    cin>>num;\r\n    resultado=factorial(num);\r\n\r\n    cout<<resultado<<endl;\r\n\r\n    return 0;\r\n}\r\n\r\nint factorial(int n)\r\n{\r\n    if (n==0)\r\n    {\r\n        return 1;\r\n    } else {\r\n        return n*factorial(n-1);\r\n    }\r\n\r\n}\r\n",
  "def factorial(n):\r\n    if n == 0:\r\n        return 1\r\n    return n * factorial(n - 1)\r\n",
  "def factorial(n):\r\n    if n == 0:\r\n        return 1\r\n    return n * factorial(n - 1)\r\n",
  "def factorial(n):\r\n    print(fact(n))\r\n    \r\ndef fact(n):\r\n    if n == 0:\r\n        return 1\r\n    return n * factorial(n - 1)\r\n",
  "def factorial(n):\r\n    if n == 0:\r\n        return 1\r\n    return n * factorial(n - 1)\r\n",
  "def factorial(n):\r\n    print(fact(n))\r\n    \r\ndef fact(n):\r\n    if n == 0:\r\n        return 1\r\n    return n * factorial(n - 1)\r\n",
  "#include <iostream> \r\nusing namespace std; \r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial (n-1);\r\n}\r\n\r\nint main () {\r\n    int n; \r\n    while (cin >> n) {\r\n        cout << factorial (n) << endl;\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\t\r\n\tint n;\r\n\tcin >> n;\r\n\t\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if (n == 0 or n == 1) return 1;\r\n    return n* factorial(n-1);\r\n\r\n}\r\n\r\n\r\n\r\n\r\nint main(){\r\n\r\n    int n;\r\n    while(cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) {\r\n        return 1;\r\n    }\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "\r\ndef factorial(n):\r\n    if n==1:\r\n        return 1\r\n    else:\r\n        return n*factorial(n-1)\r\nn = int(input())\r\nprint (factorial(n))\r\n",
  "\r\ndef factorial(n):\r\n    if n==1:\r\n        return 1\r\n    else:\r\n        return n*factorial(n-1)\r\n\r\n",
  "\r\ndef factorial(n):\r\n    if n==1:\r\n        return 1\r\n    else:\r\n        return n*factorial(n-1)\r\na = int(input())\r\nprint (factorial(a))\r\n",
  "\r\ndef factorial(n):\r\n    if n==1:\r\n        return 1\r\n    else:\r\n        return n*factorial(n-1)\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return factorial(n-1)*n;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\r\n\tcout << factorial(n) << endl;\r\n}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0 or n==1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif ( n==0 ) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else return n*fact(n - 1);\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  cout << fact(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else return n*fact(n - 1);\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else return n*factorial(n - 1);\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n    if (n==0) return 1;\n    return n*fact(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << fact(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n    if (n==0) return 1;\n    return n*fact(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << fact(n) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) \n{\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() \n{\n  int n;\n  cin >> n;\n  \n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n    if (n==0) return 1;\n    return n*fact(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << fact(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==1 or n==0) return 1;\n  else return n*factorial(n-1);\n}\nint main() {\n  int n;\n  cin>>n;\n  cout<<es_perfecte(n)<<endl;\n}\n  ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n}\nint main() {\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}\n  ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0){\n    return 1;\n  }\n  else{\n    return (n * factorial (n - 1));\n  }\n}\n\nint main(){\n  int x;\n  while (cin >> x){\n    cout << \"factorial(\" << x << \") â \" << factorial(x) << endl;\n  }\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif(n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0) return 1;\n  return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    \r\n    else return n*factorial(n - 1);\r\n}\r\nint main(){\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n    \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else {\n        int f = factorial(n-1);\n        return n*f;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint f;\n\tif (n == 0 or n == 1) return 1;\n\telse {\n\t\treturn f = n * factorial (n-1);\n\t}\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0 or n == 1) return 1;\n  else return n* factorial(n -1);\n}\n\nint main() {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n);\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return factorial(n - 1)*n;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n < 2) return n;\n    return n*factorial(n-1);\n}\n\n\n\n\nint main(){\n    int n; \n    cin >> n; \n    cout << factorial(n) << endl;\n}\n            ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else{\n    if(n < 2) return n;\n    return n*factorial(n-1);\n    }\n}\n\n\n\n\nint main(){\n    int n; \n    cin >> n; \n    cout << factorial(n) << endl;\n}\n            ",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif( n < 2) return 1;\r\n\telse return factorial(n-1)*n;\r\n\t\r\n}\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "\r\n\r\nint factorial(int n) {\r\n\tif (n <= 12 and n >= 0) {\r\n\t\tif (n == 0) return 1,\r\n\t\telse return n * factorial(n - 1);\r\n\t}\t\r\n}\r\n",
  "\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1,\r\n\telse return n * factorial(n - 1);\t\r\n}\r\n",
  "\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n - 1);\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0) return 1;\n  return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else {\n        int f = factorial(n-1);\n        return n*f;\n    }\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint z=1;\r\n\tif (n==0) z=1;\r\n\telse for (int i=1;i<=n;i++){\r\n\t\tz*=i;\r\n\t}\r\n\treturn z;\r\n}\r\n\r\n\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial( n)<<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\t\r\n\tint n;\r\n\tcin >> n;\r\n\t\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n   int fact = 1;\n   if( n == 0) return fact;\n   else return factorial(n-1)*n;\n}\n\n\nint main() {\n   int n;\n   cin>>n;\n   cout<<factorial(n)<<endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return factorial(n-1)*n;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\r\n\tcout << factorial(n) << endl;\r\n}\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0 or n == 1) return 1;\n  else return n* factorial(n -1);\n}\n\nint main() {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n);\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int factorial = 1;\n    while (n > 0) {\n        factorial *= n;\n        --n;\n    }\n    return factorial;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    while (n > 0) {\n        return n * factorial (n-1);\n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    while (n > 0) {\n        return n * factorial (n-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    while (n > 0) {\n        return n * factorial (n-1);\n        --n;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n == 0) return 1;\r\n\telse return factorial(n-1)*n;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\n\tif ( n > 0) return n * factorial(n-1);\r\n\telse return 1;\n}\r\n\tint main() {\r\n\t\tint n;\r\n\t\twhile (cin >> n) {\r\n\t\t\tcout << factorial(n) << endl;\n\t\t}\r\n\t\t\n\t}\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\t\r\n\tif (n == 0) return 1;\r\n\t\r\n\telse if (n == 1) return n;\r\n\t\r\n\telse return n * factorial(n-1);\r\n\t\r\n}\r\n\r\nint main() {\r\n\t\r\n\tint n;\r\n\t\r\n\tcin >> n;\r\n\t\r\n\tcout << factorial(n) << endl;\r\n\t\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial( int n ) {\r\n\tif ( n == 0 ) return 1;\r\n\telse return n * factorial( n - 1 );\r\n}\r\n\r\nint main() {\r\n\t\r\n\tint n;\r\n\t\r\n\tcin >> n;\r\n\t\r\n\tcout << factorial( n ) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n <= 1) return n;\r\n    else {\r\n            return n * factorial (n - 1);\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n            cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else {\r\n            return n * factorial (n - 1);\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n            cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n < 2) return 1;\n\telse return n * factorial (n-1);\n}\n\n\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\n// Prec: n >= 0.\nint factorial (int n) {\nif (n <= 1) return 1;\nelse return n*factorial(n - 1);\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  int f;\n  f=factorial(n);\n  cout << f << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nbool es_creixent(int n) {\r\n    if (n>0) {\r\n        return (n%10 > (n%100)/10)*es_creixent(n/10);\r\n    }\r\n    else return 1;\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << es_creixent(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0 or n == 1) return 1;\n    else return factorial(n-1) * n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return (n*factorial(n-1));\n}\n\nint main () {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n==0) return 1;\nelse return factorial(n-1)*n;\n}\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else if (n == 1) return 1;\n  else return n* factorial(n - 1);\n}\n\nint main(){\n  int x;\n  cin >> x;\n  cout << factorial(x) << endl;\n}\n  \n\n\n\n    \n    \n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if ( n == 1 ) return n;\n  else return factorial(n-1) * n;\n}\n\nint main () {\n  int n ;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if ( n <= 1 ) return 1;\n  else return factorial(n-1) * n;\n}\n\nint main () {\n  int n ;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include<iostream>\n using namespace std;\n \n \n \n int factorial(int n){\n   if(n <= 1){\n     \n     return 1;\n     \n   }else return n*factorial(n-1);\n }\n   \n   \n int main(){\n   int n;\n   \n   while(cin >> n){\n    \n     cout << factorial(n) <<endl;\n     \n   }\n }\n   ",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n  //Cas base: fi de la recursivitat\n  if (n == 0) return 1;\n  //Cas recursiu\n  else {\n    return n*factorial(n-1);\n  }\n}\n\nint main() {\n  int n;\n  cin >> n;\n  \n  cout << factorial(n) << endl;\n}\n    \n  ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1 or n == 0) return 1;\n\telse return factorial(n-1)*n;\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0) return 1;\n  else return n*(n-1);\n  \n}\n\nint main () {\n  int n;\n  while ( cin >> n ) cout << factorial(n) << endl;\n}",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif ( n==0 ) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else return n*factorial(n - 1);\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n}\nint main() {\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}\n  \n\n    \n    \n    \n    \n    \n    \n    \n  \n\n      \n      \n    \n      \n  \n  \n\n  ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0) return 1;\n  else return n*(n-1);\n  \n}\n\nint main () {\n  int n;\n  while ( cin >> n ) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  return factorial(n-1)*n;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0 or n==1) return 1;\n  else return (n* factorial(n-1));\n}\n\nint main(){\n  int n ;\n  cin>> n;\n  cout << factorial(n)<< endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\telse return n * factorial(n-1);\n\t}\n\t\n\t \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n  \n}\n\nint main () {\n  int n;\n  while ( cin >> n ) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  return n * factorial(n-1);\n}\n\nint main () {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else return n*factorial (n-1);\n}\n\nint main (){\n  int n; \n  cin >> n;\n  cout << factorial (n) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if(n == 0) return 1;\n  else return factorial(n-1) + n;\n}\n\nint main(){}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if(n == 0) return 1;\n  else return factorial(n-1) * n;\n}\n\nint main(){}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n == 0) return 1; \n  return n*factorial(n-1);\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\t\n\tif (n == 0) return 1;\n\telse return n * factorial (n-1);\n\t\n}\n\n\nint main(){\n\t\n\tint x, y;\n\tcin >> x;\n\ty = factorial(x);\n\tcout << y << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\t\n\tif (n == 0) return 1;\n\telse return n * factorial (n-1);\n\t\n}\n\n\nint main(){\n\t\n\tint x, y;\n\tcin >> x;\n\ty = factorial(x);\n\tcout << y << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\t\n\tif (n == 0) return 1;\n\telse return n * factorial (n-1);\n\t\n}\n\n\nint main(){\n\t\n\tint x, y;\n\tcin >> x;\n\ty = factorial(x);\n\tcout << y << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\t\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n\t\n}\n\n\nint main(){\n\t\n    int x, y;\n    cin >> x;\n    y = factorial(x);\n    cout << y << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\nint n;\ncin >> n;\ncout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespce std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial (n - 1);\n}\n\n",
  "#include <iostream>\nusing namespce std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n    if (n==0) return 1;\n    else return n * fact(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << fact(n) << endl;\n    \n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n\tif(n == 0) return 1;\r\n\telse return n * factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n    if (n==0) return 1;\n    else return n * fact(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << fact(n) << endl;\n    \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if(n==0) return 1;\n  else return factorial(n-1)*n;\n  \n  \n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n  \n  \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0){\n    return 1;\n  }\n  else{\n    return (n * factorial (n - 1));\n  }\n}\n\nint main(){\n  int x;\n  while (cin >> x){\n    cout << \"factorial(\" << x << \") â \" << factorial(x) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int resultat;\n    if (n == 1) resultat = 1;\n    else resultat = factorial(n-1)*n;\n    \n    return resultat;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  if(n == 0)\n    return 1;\n  else{\n    return factorial(n-1)*n;\n  }\n  \n  \n}\n\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n  \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n    ",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n  if(n==0) return 1; \n  else {\n    return n*factorial(n-1);\n  }\n }\n int main(){\n   int n;\n   cin >> n;\n   cout << factorial(n) << endl;\n }",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else if (n <= 2) return n*1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "//factorial recursiu\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0) return 1;\n  else return factorial(n-1)*n;\n    \n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n  \n  \n  \n  \n}",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n  return (n*(n-1));\n}\n\nint main(){\n  int n;\n  cin>>n;\n  cout<<fact(n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0 or n==1) return 1;\n  else return n*factorial(n-1);\n}\n\nint main (){\n  \n  int x;\n  cin >> x;\n  cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n!= 1) return factorial(n-1)*n;\n    else return 1;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) {\n    return 1;\n  }\n  else return (n * factorial(n-1));\n}\n\nint main () {\n  int m;\n  cin >> m;\n  cout << factorial(m) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n  if (n<=1){\n    return 1;\n  }\n  else {\n    return (n*fact(n-1));\n  }\n}\n\nint main(){\n  int n;\n  cin>>n;\n  cout<<fact(n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n  if (n<=1){\n    return 1;\n  }\n  else {\n    return (n*fact(n-1));\n  }\n}\n\nint main(){\n  int n;\n  cin>>n;\n  int f;\n  f=fact(n);\n  cout<<f<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n-1)*n;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n  if (n==0){\n    return 1;\n  }\n  else {\n    return (n*fact(n-1));\n  }\n}\n\nint main(){\n  int n;\n  cin>>n;\n  int f;\n  f=fact(n);\n  cout<<f<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return factorial(n-1)*n;\n}\n    \nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0){\n    return 1;\n  }\n  else {\n    return (n*factorial(n-1));\n  }\n}\n\nint main(){\n  int n;\n  cin>>n;\n  int f;\n  f=factorial(n);\n  cout<<f<<endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0 or n==1) return 1;\n  else return n*factorial(n-1);\n}\n  \nint main() {\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int fact = 1;\n  if (n == 0 or n == 1) return 1;\n  int count = 1;\n  while (count <= n) {\n    fact = fact*count;\n    ++count;\n  }\n  return fact;\n}\nint main() {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n  if (n==1 or n==0) return 1;\n  else return factorial(n-1)*n;\n}\nint main(){\n  int n;\n  cin>>n;\n  cout<<factorial(n)<< endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n   if (n==0) return 1;\n   else return n*factorial(n-1)\n}\n  ",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n   if (n==0) return 1;\n   else return n*factorial(n-1);\n}\n  ",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n   ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n if (n==0) return 1;\n else return n*factorial(n-1);\n}\n\nint main(){\n int n;\n cin >> n;\n cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    return factorial(n-1) * n;\r\n}\r\n\r\nint main(){\r\n    \r\n}",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    return factorial(n-1) * n;\r\n}\r\n\r\nint main(){\r\n    \r\n}",
  "#include <iostream>\nusing namespace std; \n\n\n\nint factorial(int n)\n{   \n    if (n != 1) return n * factorial(n-1); \n    else return n; \n\n\n}\n\n\nint main()\n{\n    int n; \n    while (cin >> n)\n    {\n        n = factorial(n); \n\n        cout << n << endl;\n    }  \n\n}",
  "#include <iostream>\nusing namespace std; \n\n\n\nint factorial(int n)\n{   \n    if (n != 1) return n * factorial(n-1); \n    else return n; \n\n\n}\n\n",
  "#include <iostream>\nusing namespace std; \n\n\n\nint factorial(int n)\n{   \n    if (n == 1) return n;\n    else return n * factorial(n-1); \n\n\n}\n\n",
  "#include <iostream>\nusing namespace std; \n\n\n\nint factorial(int n)\n{   \n    if (n == 0) return 1;\n    else return n * factorial(n-1); \n\n\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tif (n>1){\r\n\t\tn = n*factorial(n-1);\r\n\t\treturn n;\r\n\t}\r\n\treturn n;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tif (n>1){\r\n\t\tn = n*factorial(n-1);\r\n\t\treturn n;\r\n\t}\r\n\treturn 1;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    return (n * factorial(n-1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n)\n{\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\n\nint factorial(int n) {\n\n\tif (n == 1) return 1;\n\telse return factorial(n-1);\n\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n == 1) return 1;\n\telse return factorial(n-1);\n\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n == 1) return 1;\n\telse return n*factorial(n-1);\n\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n == 1) return 1;\n\telse return n*factorial(n-1);\n\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n == 1) return 1;\n\telse return n * factorial(n-1);\n\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n != 1) return n*factorial(n-1);\n\telse return n;\n\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    \r\n    else return n*factorial(n - 1);\r\n}\r\nint main(){\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n    \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \nvoid canvi_base (int a, int b, bool prim){\n    if (a == 0 and prim) cout << 0;\n    else if (a == 0) return;\n    else {\n        canvi_base(a/b, b, false);\n        int r = a%b;\n        if (r < 10) cout << r;\n        else cout << char('A' + r - 10);\n    }\n}\n \nint main(){\n    int a;\n    while (cin >> a){\n        cout << a << \" = \";\n        canvi_base(a, 2, true);\n        cout << \", \";\n        canvi_base(a, 8,true);\n        cout << \", \" ;\n        canvi_base(a, 16,true);\n        cout << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else{\n    for (int i=(n-1); i>0; --i){\n      n = n*i;\n    }\n    return n;\n  }\n}\n\nint main(){\n  int n;\n  while (cin >> n){\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n == 1) return n;\n  else return factorial(n-1)*n;\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 0;\n  else if (n == 1) return n;\n  else return factorial(n-1)*n;\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else if (n == 1) return n;\n  else return factorial(n-1)*n;\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\n#include <cmath>\n#include <string>\nusing namespace std;\n\nint factorial(int n){\n\nif (n<2) return 1;\nelse return ( n*factorial(n-1));\n}\n\nint main() {\nint n;\ncin >> n;\n\ncout << factorial(n) << endl;\n\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n==0) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if (n == 0 or n == 1) return 1;\r\n    return n* factorial(n-1);\r\n\r\n}\r\n\r\n\r\n\r\n\r\nint main(){\r\n\r\n    int n;\r\n    while(cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n == 0) return 1;\r\n    else return factorial(n-1) * n;\r\n}\r\n\r\nint main() {\r\n    int x, y;\r\n    while (cin >> x){\r\n          y = factorial (x);\r\n          cout << y << endl;\r\n          }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint total = 0;\n\twhile (n != 0){\n\t\ttotal = factorial(n-1)*n;\n\t}\n\treturn total;\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n){\n\t\tcout << \"factorial(\" << n << ')' << \" -> \" << factorial(n) << endl;\n\t}\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1 ;\n\telse if (n == 1) return n;\n\telse return factorial(n-1)*n;\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n){\n\t\tcout << \"factorial(\" << n << ')' << \" -> \" << factorial(n) << endl;\n\t}\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int x;\n  while (cin >> x) {\n    cout << factorial(x) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int n;\n    cin >> n;\n    return factorial(n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1) return 1;\n    return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\n \r\nint nombre_digits(int n) {\r\n        if (n < 10) return 1;\r\n        else return 1 + nombre_digits(n/10);\r\n       \r\n}\r\n \r\n//Pre: Llegeix un enter\r\n//Post: Obtenim el nombre de dÃ­gits\r\nint main() {\r\n        int n;\r\n        cin >> n;\r\n        cout << nombre_digits(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==1 or n==0) return 1;\n  else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 1) return 1;\n  else return (n * factorial(n-1));\n}\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial (n) <<endl;\n}\n  ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else return (n * factorial(n-1));\n}\nint main(){\n}\n  ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else return (n * factorial(n-1));\n}\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial (n) <<endl;\n}\n  ",
  "#include <iostream> \nusing namespace std; \n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n}\n\nint main () {\n    int n; \n    while (cin >> n) {\n        cout << factorial (n) << endl;\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\n int r=1;\r\nint factorial(int n){\r\n\t\tr=n*r;\r\n\t\tif(n==0)\r\n\t\t\treturn 1;\r\n\t\telse if(n>1)\r\n\t\t\treturn factorial(n-1);\r\n\t\telse\r\n\t\t\treturn r;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\n int r=1;\r\nint factorial(int n){\r\n\t\tr=n*r;\r\n\t\r\n\t\tif(n>1)\r\n\t\t\treturn factorial(n-1);\r\n\t\telse\r\n\t\t\treturn r;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint main (int n) {\n  if (n <== 1 ) return 1;\n  return factorial (n-1)*1;\n}\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n <== 1 ) return 1;\n  return factorial (n-1)*1;\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1 ) return 1;\n  return factorial(n-1)*n;\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\n \r\ndouble factorial(double n){\r\ndouble temp;\r\n\r\nif (n<=1) return 1;\r\ntemp = n*factorial(n-1);\r\n\r\n}\r\n\r\nint main(){\r\n\r\nint a;\r\ncout << \"Porfavor introduzca un numero positivo: \";\r\ncin >> a;\r\nif (a <= 0){\r\n\tcout << \"Ese no es un numero positivo.\\n\"; }\r\nelse {\r\n\r\ncout << factorial(a) << endl;\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\n \r\ndouble factorial(double n){\r\ndouble temp;\r\n\r\nif (n<=1) return 1;\r\ntemp = n*factorial(n-1);\r\n\r\n}\r\n\r\nint main(){\r\n\r\nint a;\r\ncin >> a;\r\n\r\ncout << factorial(a) << endl;\r\n\t}\r\n}",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n != 0) return factorial(n)*(n-1);\n    else return 1;\n}",
  "#include<iostream>\nusing namespace std;\nint r=1;\nint factorial(int n){\n  if(n!=0){\n    r*=n;\n    return factorial(n-1);\n  }\n  else\n    return r;\n}\n\n\nint main (){\n  int n;\n  cin>>n;\n  cout<< factorial(n)<<endl;\n}",
  "#include<iostream>\nusing namespace std;\nint r=1;\nint factorial(int n){\n  if(n!=0){\n    r*=n;\n    return factorial(n-1);\n  }\n  else\n    return r;\n}\n\n\nint main (){\n  int n;\n  cin>>n;\n  cout<< factorial(n)<<endl;\n}",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  if(n<2){\n    return 1;\n  }\n  else{\n    return n*factorial (n-1);\n  }\n}\n\n\nint main (){\n  int n;\n  while(cin>>n)\n  cout<< factorial(n)<<endl;\n}",
  "#include <iostream>\r\n#include <stdio.h>\r\n\r\nlong factorial( long numero ); /* prototipo de la funciÃÂ³n */\r\n\r\n/* la funciÃÂ³n main comienza la ejecuciÃÂ³n del programa */\r\nint main()\r\n{\r\n   int i; /* contador */\r\n\r\n   /* repite 11 veces; durante cada iteraciÃÂ³n, calcula\r\n      el factorial( i ) y despliega el resultado */\r\n   for ( i = 0; i <= 10; i++ ) {\r\n      printf( \"%2d! = %ldn\", i, factorial( i ) );\r\n   } /* fin de for */\r\n\r\n   return 0; /* indica terminaciÃÂ³n exitosa */\r\n\r\n} /* fin de main */\r\n\r\n/* definiciÃÂ³n recursiva de la funciÃÂ³n factorial */\r\nlong factorial( long numero )\r\n{\r\n   /* caso base */\r\n   if ( numero <= 1 ) {\r\n      return 1;\r\n   } /* fin de if */\r\n   else { /* paso recursivo */\r\n      return ( numero * factorial( numero - 1 ) );\r\n   } /* fin de else */\r\n\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    return 0;\n}\n",
  "#include <iostream>\n \nusing namespace std;\n \n//Pre: n es un natural \n//Post: el resultat retornat es n!\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n, res;\n\tcin >> n;\n\tres = factorial(n);\n\tcout << \"El factorial de \" << n << \" Ã©s el: \" << res << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tint fact=0;\n\tif (n==0) return 1;\n\telse return factorial(n-1)*n;\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  return factorial(n-1)*n;\n}\n\nint main() {\n  int n;\n while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int factorial = 1;\n    for (int i=0; i<=n; ++i) {\n        factorial *= i;\n    }\n    return factorial;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n)\r\n\t\tcout << factorial(n) << endl;\r\n}",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "//calcula el factorial recursivament.\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    else return (n*factorial(n-1));\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <string>\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\telse {\r\n\t\treturn n*factorial(n-1);\r\n\t\t}\r\n\t}\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\tcin >> n;\r\n\tn=factorial(n);\r\n\tcout << n << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n    if (n == 1) return 1;\n    else {\n        return n * factorial(n-1);\n    }\n    /* int resultat = 1;\n    while (n != 0) {\n        resultat *= n;\n        --n;\n    }\n    return resultat; */\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n      if(n == 0) return 1;\n      else return n*factorial(n-1);\n}\n\nint main() {\n      int n;\n      cin >> n;\n      cout << factorial(n) <<endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint main() {\n  int n;\n  cin >> n;\n  int suma = 0;\n  for (int i = 1; i <= n; ++i) {\n    suma = suma + i*i;\n  }\n  cout << suma << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n * factorial (n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    int res;\n    \n    if (n == 0) res = 1;\n    else res = n*factorial(n-1);\n    return res;\n        \n}\n\nint main() {\n    int n;\n    \n    cin >> n ;\n    \n    n = factorial(n);\n    cout << n << endl;\n}\n      \n    ",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n < 2) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n   \tint n;\n    while (cin >> n) {\n       cout << factorial(n) << endl;\n    }\n}\n\n",
  "\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n - 1);\n}\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if ( n <= 1 ) retrun 1;\n  return n*factorial(n-1);\n}\nint main() {\n  int n;\n  while ( cin >> n ) {\n    cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if ( n <= 1 ) return 1;\n  return n*factorial(n-1);\n}\nint main() {\n  int n;\n  while ( cin >> n ) {\n    cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tint i=n;\n\tint j=1;\n\twhile(i!=0){\n\tj+=(n*i);\n\n\t--i;\n}\nreturn j;\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif(n==0)return 1;\n\treturn n*factorial(n-1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return factorial(n*(n-1));\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tint m = factorial(n);\r\n\t\tcout << m << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return factorial(n-1) * n;\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tint m = factorial(n);\r\n\t\tcout << m << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\treturn (n*factorial(n-1));\r\n}\r\n\r\nint main () {\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n, int m=1){\n\tif(n==1) return m;\n\treturn factorial(n-1, m*n);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\t\n\tif(n==0) cout << 1 << endl;\n\telse cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <math.h>\n\nusing namespace std;\n\nint factor(int a,int i, int resultat) {\n    \n    if (i<=a) {\n\t\tresultat = resultat*i;\n\t\ti++;\n\t\tfactor(a,i,resultat);\n\t} else return resultat;\n\t\n}\n\nint main () {\n\t\n\tint a;\n\t\n\tcin >> a;\n\t\n\tcout << factor(a,1,1) << endl;\n\t\n\t\n\t\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int a) {\n\tif (a==0) return 1;\n\telse return a*factorial(a-1);\n}\n\nint main() {\n\tint a;\n\twhile (cin >> a) {\n\tcout << factorial(a) << endl;\n}\n\t\n}\n",
  "#include <iostream>\n\n\nusing namespace std;\n\nint factor(int a,int i, int resultat) {\n    \n    if (i<=a) {\n\t\tresultat = resultat*i;\n\t\ti++;\n\t\tfactor(a,i,resultat);\n\t} else return resultat;\n\t\n}\n\nint main () {\n\t\n\tint a;\n\t\n\tcin >> a;\n\t\n\tcout << factor(a,1,1) << endl;\n\t\n\t\n\t\n}\n\n",
  "#include <iostream>\n\n\nusing namespace std;\n\nint factor(int a,int i, int resultat) {\n    \n    if (i <= a) {\n\t\tresultat = resultat*i;\n\t\ti++;\n\t\tfactor(a,i,resultat);\t\n\t} else {\n\t\treturn resultat;\n\t}\n}\n\nint main () {\n\t\n\tint a;\n\t\n\tcin >> a;\n\t\n\tcout << factor(a,1,1) << endl;\n\t\n\t\n\t\n}\n\n",
  "#include <iostream>\n\n\nusing namespace std;\n\nint factor(int a) {\n   if (a == 1) return 1;\n   else return a*factor(a-1);\n}\n\nint main () {\n\t\n\tint a;\n\t\n\tcin >> a;\n\t\n\tcout << factor(a) << endl;\n}\n\n",
  "#include <iostream>\n\n\nusing namespace std;\n\nint factor(int a) {\n   if (a == 1) return 1;\n   else return a*factor(a-1);\n}\n\nint main () {\n\t\n\tint a;\n\t\n\tcin >> a;\n\t\n\tcout << factor(a) << endl;\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint fact (int n) {\n\tif ((n==1)or (n==0)) return 1;\n\telse return n*fact(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin>>n) \n\tcout << fact(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factor(int a) {\n   if (a == 1) return 1;\n   else return a*factor(a-1);\n}\n\nint main () {\n\tint a;\n    cin >> a;\n\tif (a==0) cout << 0 << endl;\n\telse cout << factor(a) << endl;\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factor (int a) {\n\tif (a == 1) return 1;\n\telse return a*factor (a-1);\n}\n\nint main () {\n\tint a;\n\tcin >> a;\n\tif (a==0) cout << 0 << endl;\n\telse cout << factor(a) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factor (int a) {\n\tif (a == 1) return 1;\n\telse return a*factor (a-1);\n}\n\nint main () {\n\tint a;\n\tcin >> a;\n\tif (a==0) cout << 1 << endl;\n\telse cout << factor(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factor(int a) {\n\tif (a == 1) return 1;\n\telse return a*factor(a-1);\n}\n\nint main () {\n\tint a;\n\tcin >> a;\n\tif (a==0) cout << 1 << endl;\n\telse cout << factor(a) << endl;\n}\n",
  "# include <iostream>\n# include <math.h>\n\nusing namespace std;\n\n\nint fact (int n) {\n\tif (n==1) return n;\n\telse if (n==0) return 1;\n\telse return n*fact(n-1);\n}\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\t\n\tcout << fact(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n\tif ((n==1) or (n==0)) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin>>n) \n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1 or n == 0) return 1;\n\telse return n * factorial (n - 1);\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial (n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return 1;\n\telse return n*factor\t(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tif (n==0) cout << 1 << endl;\n\telse cout << factor(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tif (n==0) cout << 1 << endl;\n\telse cout << factorial(n) << endl;\n}\n",
  "# include <iostream>\n# include <math.h>\n\nusing namespace std;\n\n\nint factorial (int n) {\n\tif (n==1) return n;\n\telse if (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint fact(int n) {\n\tif (n==1) return 1;\n\telse if (n==0) return 1;\n\telse return n*fact(n-1);\n}\n\nint main() {\n\tint n;\n\twhile(cin >> n) {\n\t\tcout << fact(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\tif (n == 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif(n==0) return 1;\n\telse return n*factorial(n-1);\n}\nint main() {\n\tint n;\n\twhile(cin>>n){\n\t\tcout<<factorial(n)<<endl;\n\t\n\t}\n\t\n\t\n\t\n}\n\n",
  "\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n - 1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif(n<=1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\twhile(cin>>n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n\n",
  "#include <iostream>\n\nint factorial(int n) {\n\tif (n<=1) return 1;\n\treturn factorial(n-1)*n;\n}\n\nusing namespace std;\nint main()\n{\n\tint n;\n\twhile (cin>>n) cout<<factorial(n)<<endl;\n\t\n}\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==1) return 1;\n\treturn n*factorial(n-1);\n\t}\n\t\n\t\n\t\n\n\nint main(){\n\tcout<<\"Hola\"<<endl;\n\tcout<<factorial(4);\n}\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==1) return 1;\n\treturn n*factorial(n-1);\n\t}\n\t\n\t\n\t\n\n\nint main(){\n\tcout<<\"Hola\"<<endl;\n\tcout<<factorial(5);\n}\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0) return 1;\n\treturn n*factorial(n-1);\n\t}\n\t\n\t\n\t\n\n\nint main(){\n\tcout<<factorial(0)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif (n<=0) return 1;\n\telse{\n\t\tn=n*factorial(n-1);\n\t\treturn n;\n\t}\n}\n\nint main() {\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\n using namespace std;\n\n\nint factorial(int n){\n\tint c = 0;\n\tif(n == 0 or n == 1) return 1;\n\treturn n*factorial(n-1);\n\t\n}\n\n\n\nint main(){\n\t\n}\n",
  "#include <iostream>\r\nint fakt(int n);\r\nusing namespace std;\r\n\r\nint main ()\r\n{\r\n\r\nint m; \r\nint factorial;\r\n\r\n\r\ncout<<\"Enter number: \";\r\ncin>>m;\r\n\r\nfactorial=fakt(m);\r\n\r\ncout<<\"The fac. is: \"<<factorial<<endl;\r\ncin.get(); cin.get();\r\n\r\nreturn 0;\r\n}\r\n\r\nint fakt(int n) {\r\n\r\nint fact=1;\r\nint i;\r\n\r\nfor (i=1; i<=n; i++)\r\nfact*=i;\r\n\r\nreturn fact;\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint n;\n\t\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\treturn (n * factorial(n-1));\t\n}\n\nint main(){\n\tint n; \n\twhile (cin >> n) cout << factorial(n) << endl;\t\n}",
  "int factorial(int n) {\n  if (n <= 1) return 1;\n  return n * factorial(n - 1);\n}\n",
  "\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n - 1);\n}\n",
  "\ndef factorial(n):\n  if n <= 1: return 1\n  return n * factorial(n - 1)\n\n",
  "class Solution {\n\n  public static int factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n - 1);\n  }\n  \n}\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n);\n\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n)\n{\n    if(n==1 or n==0) return 1;\n    return n*(factorial(n-1));\n}\n\nint main() \n{\n    int n;\n    while(cin >> n)\n    {\n        cout << factorial(n) << endl;\n    } \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n>1) return n*factorial(n-1);\n\telse return 1;\n}\nint main() {\n\treturn 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint factorial(int n) {\n    if(n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n) {\n    int i = n;\n    while (i > 1) {\n        n = n*factorial(n-1);\n        --i;\n    }\n    return n;\n}\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n) {\n    int i = n;\n    int p = 1;\n    while (i > 1) {\n        p = n*factorial(n-1);\n        i = i - 1;\n    }\n    return p;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n) {\n    int i = n;\n    int p = 1;\n    while (i > 1) {\n        p = n*factorial(n-1);\n        i = i - 1;\n    }\n    return p;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n \n}\n\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n    if (x == 0) return 1;\n    return x*factorial(x-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main () {\n    int m;\n    cin >> m;\n    cout << factorial(m) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n\n}    \n    \n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int z;\n    while (cin >> z) cout << factorial(z) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <=1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    while (cin >> a) cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\nif (n <= 1) return 1;\nelse return n*factorial (n-1);\n}\nint main(){\n    int factorial;\n    int n;\n    cin >> n;\n    cout << factorial << endl;\n    }\n",
  "int factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n    int resultat = 1;\n    for(int i = n; i > 1; --i) {\n        resultat *= i;\n    }\n    return resultat;\n}\n\nint main(){\n    int n;\n    while(cin >> n) {\n        cout << fact(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint factorial (int n){\n    \n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    \n    int n;\n    \n    while (cin >> n){\n    \n        cout << factorial(n) << endl;\n    }\n}\n",
  "int factorial(int n){\r\n\tif(n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\n\r\n\r\n  \r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0 or n==1) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0 or n==1) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n > 1){\r\n\t\treturn n* factorial(int n-1)\r\n\t}\r\n\telse return 1;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n > 1){\r\n\t\treturn n * factorial(n-1);\r\n\t}\r\n\telse return 1;\r\n}\r\n\r\nint main(){\r\n\tcout << factorial(4) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    n = factorial(n);\n    cout << n << endl;\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tint j=1;\r\n\tfor (int k=n; k>1; k--){\r\n\t\r\n\tj=j*k;\r\n}\r\nreturn j;\r\n}\r\n\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n} \r\n",
  "#include <iostream>\r\n#include <string>\r\n\r\nusing namespace std;\r\n\r\nint factorial( int n ) {\r\n  if ( n == 0) { return 0; }\r\n  else { return factorial( n - 1 ); }\r\n}\r\n",
  "#include <iostream>\r\n#include <string>\r\n\r\nusing namespace std;\r\n\r\nint factorial( int n ) {\r\n  if ( n == 0) { return 1; }\r\n  else { return factorial( n - 1 ); }\r\n}\r\n",
  "#include <iostream>\r\n#include <string>\r\n\r\nusing namespace std;\r\n\r\nint factorial( int n ) {\r\n  if ( n == 0) { return 1; }\r\n  else { return n*factorial( n - 1 ); }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\t\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n\t\n}\n\n\nint main(){\n\t\n    int x, y;\n    cin >> x;\n    y = factorial(x);\n    cout << y << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0)\n    return 1;\n  else\n  return n*factorial(n-1);\n  }\n\nint main(){\n  int n;\n  while (cin >> n){\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) return n*factorial(n-1);\n    else return 1;\n}\n        \nint main () {\n  int n;\n  while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\treturn n * factorial(n-1);\n}\n\n\nint main(){\n\tint a; \n\tcin >> a;\n\tcout << factorial(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0) return 1;\n\telse{\n\tint f = factorial(n-1);\n\treturn n * f;\n\t}\n\n\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout<< factorial(n)<<endl;\n}\n",
  "#include <iostream>\r\n#include <c.math>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else {\r\n        int f = factorial(n - 1);\r\n        //Hip: f es (n - 1)!\r\n        return n*f;\r\n    }\r\n}\r\n",
  "\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else {\r\n        int f = factorial(n - 1);\r\n        //Hip: f es (n - 1)!\r\n        return n*f;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int x;\n  if (n == 0)\n    return 1;\n  else {\n    x = factorial(n-1);\n    return n*x;\n  }\n}\n\nint main () {\n  int x;\n  cin >> x;\n  cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  \n  else {\n    int f = factoiral(n - 1);\n    return n*f;\n  }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial(n - 1);        \n        return n*f;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    return n > 1 ? factorial(n-1) * n : 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0 or n==1) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n > 1) {\n        return n*factorial(n - 1);\n    }\n    else return 1;\n}\n\nint main () {\n    int n;\n    while (cin >> n)\n    cout << factorial(n) << endl;\n}",
  "\n\n#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n<1) return 1;\n    else return (n*factorial(n-1));\n}\nint main() {\n    int n;\n    while (cin >>n){\n    cout<<factorial(n)<<endl;\n}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint fac(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n * fac(n-1);\r\n\t}\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << fac(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0 or n==1)return 1;\n    else return(n*factorial(n-1));\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre:  \n//Post: \n\nint factorial(int n) {\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int a;\n  while (cin>>a) {\n    factorial(a);\n    cout << factorial(a) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0 or n==1)return 1;\n    else return(n*factorial(n-1));\n}\n\n\n",
  " \n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==1) return 1;\n  else return n*factorial(n-1);\n}\nint main () {\n  int n,factoria;\n while  (cin >> n) {\n  factoria=factorial(n);\n  cout << factoria << endl;\n}\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\t}\n",
  " \n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==1) return 1;\n  else return n*factorial(n-1);\n}\nint main () {\n  int n,factoria;\n while  (cin >> n) {\n  factoria=factorial(n);\n  cout << factoria << endl;\n}\n}",
  " \n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==1 or n==0) return 1;\n  else return n*factorial(n-1);\n}\nint main () {\n  int n,factoria;\n while  (cin >> n) {\n  factoria=factorial(n);\n  cout << factoria << endl;\n}\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n\tint res = 1;\n\t\t\n\t\twhile (n>0){\n\t\t\t\n\t\t\tres *= n;\n\t\t\t--n;\n\t\t\tfactorial(n);\n\t\t\n\t\t}\n\t\treturn res;\n\t\n\n}\n\n\n\nint main() {\n\n\tint n;\n\t\n\twhile (cin >> n) cout << factorial(n) << endl;\n\t\n\n\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif (n > 0) return n * factorial(n-1);\r\n\telse return 1;\r\n\t\r\n}\r\n\r\nint main(){\r\n\t\r\n\tint n;\r\n\t\r\n\twhile (cin >> n and n >= 0 and n <= 12){\r\n\t\t\r\n\t\tcout << factorial(n) << endl;\r\n\t\t\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\nint factorial (int n) {\n\tif (n<=1) return 1;\n\telse return n * factorial(n-1);\n}\nint main () {\n\tint x, resfinal;\n\tcin >> x;\n\tresfinal = factorial(x);\n\tcout << resfinal << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    if(n>1) n=n*(factorial(n-1));\n    return n;\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n    cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n<=1) return 1;\n  return n*factorial(n-1);\n\n}\nint main() {\n  \n int n;\n\n while (cin >> n) {\n   \n   cout << factorial (n) << endl;\n}\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n == 0) return 1;\r\n\treturn  n*factorial(n-1); \r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) { //recursive solution\r\nif(n == 0) return 1;\r\nelse return n*factorial(n -1);\r\n}\r\n\r\nint main(){\r\n\r\n    int n;\r\n    while(cin >> n){\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\tif (n <= 2) return n;\n\treturn n * factorial(n-1);\n}\t\n\nint main() {\n\treturn 0;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n)  {\n\tn=n*(n-1);\n\treturn n*factorial(n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n)  {\n\tif (n<=1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return n = 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n int factorial(int n){\n   int aux=n;\n   n=1;\n   for (int i=1;i<=aux;i++) {\n     n = n*i;\n     \n   }\n   return n;\n }\nint main(){\n  int n;\n  while(cin >> n){\n   \n   cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n  int i \n  if (i == n) return n;\n  else if (i > 0){\n    n = n * factorial (n)\n    --i\n  }\n  \n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n  int i \n  if (i == n) return n;\n  else{\n    while (i > 0) {\n      n = n * factorial (n);\n      --i;\n    }\n    return n;\n  }\n  \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n  int i \n  if (i == n) return n;\n  else{\n    while (i > 0) {\n      n = n * factorial (n);\n      --i;\n    }\n    return n;\n  }\n  \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial_rec (int n){\n\tif (n<=1) return 1;\n\telse return n*factorial_rec(n-1);\n}\n\nint main (){\n\t\n\tint n;\n\twhile(cin>>n){\n\t\tcout<<factorial_rec(n)<<endl;\n\t}\n\t\n}\n\t\n",
  "#include<iostream>\n#include<cmath>\nusing namespace std;\n\nint factorial(int x){\nint n=1;\nwhile (x>0){\n        n=n*x;\n        --x;\n}\nreturn n;\n}\nint main(){\nint x;\ncin >> x;\ncout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n}\nint main() {\n  int n;\n  while (cin>>n){\n    cout <<factorial(n) <<endl;\n  }\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    while (n > 0) {\n      n = n * factorial (n);\n      --n;\n    }\n    return n;\n  }\n  ",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1\n  while (n > 0) {\n    n = n * factorial (n);\n    --n;\n   }\n  return n;\n  }\n  ",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  while (n > 0) {\n    n = n * factorial (n);\n    --n;\n   }\n  return n;\n  }\n  ",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n<0) return 0;\n\telse if (n>1) return n=n*factorial(n-1);\n\telse return 1;\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) <<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n<0) return 0;\n\telse if (n>1) return n=n*factorial(n-1);\n\telse return 1;\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n) {\n  if (n == 0) return 1;\n  return fact (n - 1) * n;\n}\n\nint main () {\n  \n  int n;\n  \n  while (cin >> n) {\n    cout << fact(n) << endl;\n  }\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  else {\n    return n * factorial (n - 1);\n  }\n}\n ",
  "#include <iostream>\nusing namespace std;\n\nint suma (int n) {\n  if (n == 1) return 1;\n  return suma(n-1) + n*n;\n}\n\nint main () {\n  \n  int n;\n  \n  cin >> n;\n  cout << suma(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n<=1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main (){\n\t\n\tint n;\n\twhile(cin>>n){\n\t\tcout<<factorial(n)<<endl;\n\t}\n\t\n}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint suma (int n) {\n  if (n == 1) return 1;\n  return suma(n-1) + n*n;\n}\n\nint main () {\n  \n  int n;\n  \n  cin >> n;\n  cout << suma(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  else return n * factorial(n-1);\n}\n\nint main () {\n  \n  int n;\n  \n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  \n  if (n==1) return 1;\n  else return n*factorial(n-1);\n  \n}\n\nint main () {\n  \n  int n;\n  cin>>n;\n  \n  if (n==0) cout<<'1'<<endl;\n  \n  else cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  \n  if (n==1) return 1;\n  else return n*factorial(n-1);\n  \n}\n\nint main () {\n  \n  int n;\n  while (cin>>n) {\n  \n  if (n==0) cout<<'1'<<endl;\n  \n  else cout<<factorial(n)<<endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n!=1) n=n*factorial(n-1);\n\telse return n;\n}\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\telse {\n\t\tif (n>1) n=n*factorial(n-1);\n\t\telse return n;\n\t}\n}\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n    int res;\n    if (n == 0) return 1;\n    else n = n * fact(n-1);\n    return n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    n = fact(n);\n    cout << n << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res;\n    if (n == 0) return 1;\n    else n = n * factorial(n-1);\n    return n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    n = factorial(n);\n    cout << n << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main () {\nint n;\ncin >> n;\ncout << factorial (n) <<endl;\n}\n\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    \r\n    if (n==1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n    \r\n    \r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    \r\n    if (n == 0) return 1;\r\n    if (n == 1) return n;\r\n    else {\r\n         return factorial(n-1);\r\n    }\r\n}\r\n\r\nint main() {\r\n    \r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    \r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n    \r\n    \r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\t\n\tint aux;\n\n\tint fact;\n\n\tif (n==0){\n\t\n\t\tint zero=1;\n\t\t\n\t\treturn zero;\t\n\n\t}\n\t\n\telse if (n>0){\n\n\t\tfact=factorial(n-1);\n\t\t\n\t\taux=fact*n;\n\t}\n\n\telse aux=0;\n\n\treturn aux;\n\t\n}\n\t\nint main(){\n\t\n\tint n;\n\t\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n\t\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0)return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n==0){\r\n             return 0;\r\n    }else if(n==1){\r\n            return 1;\r\n    }else{\r\n          n=n*factorial(n-1);\r\n    }\r\n    return n;\r\n\r\n    \r\n    \r\n    \r\n}\r\nint main(){\r\n    \r\n    int num, resul;\r\n    \r\n    cin>>num;\r\n    \r\n    resul=factorial(num);\r\n    \r\n    cout << \"FACTORIAL: \" << resul;\r\n}\r\n\n\n",
  "\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact2 ( int x ){\n    if ( x == 0 ) return 1;\n    return x * fact2(x-1);\n}\nint main(){\n    int x;\n    cin>> x;\n    int j =  fact2(x);\n    cout<< j<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact2 ( int x ){\n    if ( x == 0 ) return 1;\n    return x * fact2(x-1);\n}\nint main(){\n    int x;\n    cin>> x;\n    cout<< fact2(x)<<endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n ) {\n    if ( n == 0 ) return 1;\n    else return ( n*factorial(n-1));\n}\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\nif (n==0) return 1;\nreturn n*factorial (n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n if(n==2)\n  return 2;\n else\n  return n*factorial(n-1);\n}\n\nint main () {\n int n;\n   cin>>n;\n cout << factorial(n) << endl;\n}\n  \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    cin >> n;\n    int fact = 1;\n    for (int i = 1; i <= n; ++i) {\n        fact *= i;\n    }\n    return fact;\n\n}\n\nint main() {\n    \n    int n;\n    cout << factorial(n) << endl;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n\n    int m = n;\n    m *= factorial(n-1);\n    return m;\n\n}\n\nint main() {\n    \n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n==0){\r\n             return 1;\r\n    }else if(n==1){\r\n            return 1;\r\n    }else{\r\n          n=n*factorial(n-1);\r\n    }\r\n    return n;\r\n\r\n    \r\n    \r\n    \r\n}\r\nint main(){\r\n    \r\n    int num, resul;\r\n    \r\n    cin>>num;\r\n    \r\n    resul=factorial(num);\r\n    \r\n    cout << \"FACTORIAL: \" << resul;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n <= 1) return 1;\r\n    return n * factorial (n-1);\r\n}\r\nint main() {\r\n    int n ;\r\n    cin>> n;\r\n    int x = factorial(n);\r\n    cout<<x;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n == 0 ) return 1;\n    return n * factorial(n-1);\n}\nint main(){\n    int n;\n    cin>> n;\n    cout<< factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\tint res;\n\t\tif (n<=1){\n\t\t\tres=1;\n\t\t}\n\t\n\t\telse{\n\t\t\tres= factorial(n-1);\n\t\t}\n\treturn res;\n}\n\nint main(){\n\tint n;\n\t\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n > 1) n *= (factorial(n-1));\r\n    else if (n = 1) return 1;\r\n    return n; \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n    cin >>n;\r\n}\r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n > 1) n *= (factorial(n-1));\r\n    else if (n == 1) return 1;\r\n    return n; \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n    cin >>n;\r\n}\r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n > 1) n *= (factorial(n-1));\r\n    else if (n == 0)return 1;\r\n    return n; \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n)\r\n    cout << factorial(n);\r\n    cin >>n;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n * factorial (n - 1);\n    }\n    \nint main(){\n    int n;\n    cin >> n;\n    if (n >= 0 and n <= 12) cout << factorial (n) << endl;\n    }\n\n\n",
  "int factorial (int n){\r\n    if (n==0)\r\n       return 1;\r\n    else \r\n    return n*factorial(n-1);\r\n    }\r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int aux;\n    aux = n - 2;\n    if (n == 0) return 1;\n    else {\n        while (aux > 0) {\n            n = (n - 1)*aux;\n            --aux;\n        }\n    }\n    return n!;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    int factorial(int n);\n    cout << n << endl;\n}\n\n\n",
  "int fact (int n){\r\n    if (n<=1) return 1;\r\n    else return n*fact(n-1);\r\n    }\r\n\r\n\n\n",
  "int fact (int n){\r\n    return fact_aux(n,1);\r\n}\r\nint fact_aux(int n,int m){\r\n    if (n<=1) return m;\r\n    else fact_aux(n-1,n*m)\r\n    }\r\n\n\n",
  "int fact (int n){\r\n    if (n==0)return 1;\r\n    else return n*factorial(n-1);\r\n    }\r\n\n\n",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n \nint factorial(int n){\n    int f = 1;\n   if(n == 0){\n       f = 1;\n    }else{\n        f = n* factorial(n-1);\n    }\n}\n    \n\n\n",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n \nint factorial(int n){\n    int f = 1;\n    if(n == 0){\n     f = 1;\n    }else{\n        f = n* factorial(n-1);\n    }\n    return f;\n}\n    \nint main(){\n   int n;\n   cin >> n;\n   \n   int f = factorial(n);\n   cout << f << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0)return 1;\n    return n * factorial(n-1);\n} \n\nint main() {\n    int n;\n    \n    while (cin >> n){\n        if (0 <= n <= 12){\n        cout << \"El factorial es: \" << factorial(n) << endl;\n        }\n        else{\n            cout << \"fora de rang\" << endl;\n        }\n    }\n}\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    int f=n;\r\n    while(f>2){\r\n               f-=1;\r\n               n*=f;\r\n               }\r\n    return n;\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    int f=n;\r\n    while(f>2){\r\n               f-=1;\r\n               n*=f;\r\n               }\r\n               if(n=0) return 1;\r\n               else return n;\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    int f=n;\r\n    while(f>2){\r\n               f-=1;\r\n               n*=f;\r\n               }\r\n               if(n==0) return 1;\r\n               else return n;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) {\n        return 1;\n        }\n    else {\n        int a = n;\n        while (((n > 0) and ((n-1) != 0))) {\n            a = a*(n-1);\n            --n;\n            }\n        return a;\n        }\n}\n\nint main() {\n    int n;\n    cin >>n;\n    cout << factorial(n)<<endl;\n    }\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==1 or n==0)return 1;\n    else return (n*factorial(n-1));\n}\n\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    int s;\n    if (n<=0 and n>=12) {\n        s=1;\n        s=s*n*factorial(n-1);\n        --n;\n        }\n    return (s);\n}\nint main () { \n    int n, fact;\n    cin>>n;\n    fact=factorial(n);\n    cout<<fact<<endl;\n}\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) return 1;\r\n\t\treturn n*factorial(n-1);\r\n\t\r\n}\r\nint main () { \r\n    int n, fact;\r\n    cin>>n;\r\n    fact=factorial(n);\r\n    cout<<fact<<endl;\r\n}\r\n\r\n\r\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    int s;\n    if (n < -1 and n > 13) {\n        s = 1;\n        s = s * n * factorial(n - 1);\n        -- n;\n        }\n    return (s);\n}\nint main () { \n    int n, fact;\n    cin >> n;\n    fact = factorial(n);\n    cout << fact << endl;\n}\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    int s;\n    if (n <= 0 and n >= 12) {\n        s = 1;\n        s = s * n * factorial(n - 1);\n        -- n;\n        }\n    return (s);\n}\nint main () { \n    int n, fact;\n    cin >> n;\n    fact = factorial(n);\n    cout << fact << endl;\n}\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n==0) return 1;\r\n    else return n*factorial (n-1);\r\n}\r\n\r\nint main(){\r\n    int a;\r\n    cin>>a;\r\n    cout<<factorial(a)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nif (n==0) return 1;\nreturn n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    int fact = factorial(n);\n    cout << fact << endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    int fact = factorial(n);\n    cout << fact << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int aux;\n    aux = n - 1;\n    if (n == 0) return 1;\n    else if(n > 1) return n*factorial(n-1);\n    return 1;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    int factorial(int n);\n    cout << n << endl;\n}\n\n\n",
  "int factorial (int n){\r\n    if(n==0)return 1;\r\n    return n*factorial (n-1);    \r\n}\r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n > 1) n *= (factorial(n-1));\r\n    return n; \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n    cin >>n;\r\n}\r\n\n\n",
  "int factorial(int n) {\n    if (n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\n\n",
  "int factorial(int n){\n  if(n==0) return 1;\n  return n*factorial(n-1);\n}\n\n\n",
  "int factorial(int n){\n  if(n<=0) return 1;\n  return n*factorial(n-1);\n}\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\n\tint a;\n\tcin>>a;\n\tcout<<factorial(a)<<endl;\n}\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n<2) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n<2) return 1;\r\n    else return n*factorial(n-1);\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int r;\n \n    if (n>=0 and n<=12) {\n        if (n==0) r=1;\n        else {\n            r=n * factorial(n-1);\n        }\n    }\n    return r;\n}\n\nint main() {\n    int n;\n    cin>>n;\n \n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream> \r\nusing namespace std; \r\n\r\nint factorial (int x){\r\n \r\n  if (x < 2 and x >= 0) return 1; // Caso base: Cuando X < 2 devolvemos 1 puesto que 1! = 1\r\n  return x*factorial(x - 1); // Si X >= 2 devolvemos el producto de 'X' por el factorial de 'X'-1\r\n}\r\n\n\n",
  "#include <iostream>\r\n\r\nusing  namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n <= 1) return 1;\r\n    else return factorial(n - 1)*n;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x)<< endl;\r\n}\r\n\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n int factorial(int n) {\r\n        if (n == 0) return 1;\r\n        else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\nint i=n;\nwhile (i>1){\ni--;\nn=i*n;\n}\nreturn n;\n}\nint main () {\nint a, f;\ncin >> a;\nf=factorial(a);\ncout << f;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main(){}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n     if (n<=1)return 1;\n     else  return (n* factorial(n-1));\n     }\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << \"fact(\" << n << \")=\" << factorial (n) << endl;\n}\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    int r;\n    if (n == 0) return 1;\n    else {\n      r=n*factorial(n-1);\n      return r;\n     }\n   }\n   \nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int x = n * factorial(n - 1);\r\n    return x;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    int x = factorial(n);\r\n    cout << x << endl;\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else{\r\n        if (n >= 1){\r\n            int x = n * factorial(n - 1);\r\n            return x;\r\n        }\r\n    }\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    int x = factorial(n);\r\n    cout << x << endl;\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0 or n == 1) return 1;\r\n    else{\r\n        if (n > 1){\r\n            int x = n * factorial(n - 1);\r\n            return x;\r\n        }\r\n    }\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    int x = factorial(n);\r\n    cout << x << endl;\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int x;\r\n    if (n == 0 or n == 1) return 1;\r\n    else{\r\n        if (n > 1){\r\n            x = n * factorial(n - 1);\r\n            return x;\r\n        }\r\n    }\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    int x = factorial(n);\r\n    cout << x << endl;\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int x;\r\n    if (n == 0) x = 1;\r\n    else{\r\n        if (n >= 1){\r\n            x = n * factorial(n - 1);\r\n        }\r\n    }\r\n    return x;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    int x = factorial(n);\r\n    cout << x << endl;\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1;\n    else if (n >= 2) return n*factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if(n==0)return  1;\n    return(n*factorial(n-1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nin factorial (int n) {\n    if(n==0)return  1;\n    return(n*factorial(n-1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if(n<=1) return 1;\n    return n*factorial(n-1);\n}\n\nint main()\n{\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n     if( n>0 and n<12 ) {\n         if(n==1) {\n         return 1;\n         }\n         else return n*factorial(n-1);\n      }\n      return 0;\n}\nint main() {\n    cout<<factorial(4)<<endl;\n}\n \n\n\n\n",
  "int factorial(int n) {\n     while(n>0 n<12) {\n         if(n==1) {\n         return 1;\n         }\n         else return n*factorial(n-1);\n      }\n}\n \n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n     while(n>0 n<12) {\n         if(n==1) {\n         return 1;\n         }\n         else return n*factorial(n-1);\n      }\n}\nint main() {\n\n}\n \n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n     if( n>=0 and n<=12 ) {\n         if(n==1 or n==0) {\n         return 1;\n         }\n         else return n*factorial(n-1);\n      }\n      return 0;\n}\nint main() {\n\n    cout<<factorial(4)<<endl;\n}\n \n\n\n",
  "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint factorial(int n) {\n    if( n == 0) return 1;\n    else return n*factorial(n-1);\n        \n}\nint main() {\n    cout << \"El factorial es \" << factorial(6) << endl;\n}\n\n\n",
  "int factorial(int n){\r\n    if (n > 1) return n*factorial(n-1);\r\n    else return 1;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0){\n        return 1;\n    }else{\n        return n*factorial(n-1);\n    }\n}\n    \nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\n\nint factorial(int n){\n\n\tif(n>1){\n\t\treturn (n*factorial(n-1));\n\t}\n\telse\n\t\treturn 1;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n    int n, l;\n    cin >> n;\n     l = factorial( n );\n    cout << \"lol : \"<<l << endl;\n}\nint factorial(int n){\n    if ( n == 0){\n        return 0;\n        }\n    if ( n == 1){\n        return n;\n        }\n    else {\n        n = n * factorial(n-1);\n        }\n        return n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n    int n, l;\n    cin >> n;\n     l = factorial( n );\n    cout << \"lol : \"<<l << endl;\n}\n\nint factorial(int n){\n\n    if ( n == 0){\n        return 1;\n        }\n    else {\n        n = n * factorial(n-1);\n        }\n        return n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f;\n    if (n==0){ \n        f=1;\n        return f;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0){ \n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "ELF\u0001\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0003\u0000\u0001\u0000\u0000\u0000\u0000\u0004\b4\u0000\u0000\u0000Ð\u0012\u0000\u0000\u0000\u0000\u0000\u00004\u0000 \u0000\t\u0000(\u0000$\u0000!\u0000\u0006\u0000\u0000\u00004\u0000\u0000\u00004\u0004\b4\u0004\b \u0001\u0000\u0000 \u0001\u0000\u0000\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0003\u0000\u0000\u0000T\u0001\u0000\u0000T\u0004\bT\u0004\b\u0013\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0004\bp\t\u0000\u0000p\t\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0001\u0000\u0000\u0000p\t\u0000\u0000p\u0004\bp\u0004\b<\u0001\u0000\u0000h\u0002\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u0004\b\u0004\bà\u0000\u0000\u0000à\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000h\u0001\u0000\u0000h\u0004\bh\u0004\b \u0000\u0000\u0000 \u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0004\b\u0004\b\u0018\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Påtdô\b\u0000\u0000ô\u0004\bô\u0004\b\u001c\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Qåtd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000/lib/ld-linux.so.2\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000GNU\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000SuSESuSE\u0000\u0000\u0000\u0000\u0001\u0000\n\u0000\u0003\u0000\u0000\u0000\u000f\u0000\u0000\u0000\u000e\u0000\u0000\u0000\f\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0007\u0000\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\n\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u000b\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0012\u0000\u0000\u0000¸\u0000\u0000\u0000°\u0004\b\u0000\u0000\u0000\u0011\u0000\u0019\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0002\u0000\u0000\u0012\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0012\u0000\u0000\u0000\\\u0000\u0000\u0000@\u0004\b\u0000\u0000\u0000\u0011\u0000\u0019\u0000#\u0001\u0000\u0000\u0000\u0000\u0000\u0000î\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0000\u0000\u0000k\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0014\u0001\u0000\u0000ð\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u000f\u0000}\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0000\u0000\u0000\u0012\u0000\u0000\u0000Â\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000/\u0000\u0000\u0000¸\u0004\b\u0010\u0004\u0000\u0000\u0012\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000§\u0002\u0000\u0000\u0012\u0000\u0000\u0000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000Ö\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000libstdc++.so.6\u0000_ZNSolsEl\u0000_ZNSirsERi\u0000_ZNSolsEm\u0000__gxx_personality_v0\u0000_ZNSt8ios_base4InitC1Ev\u0000_ZSt3cin\u0000_ZNSt8ios_base4InitD1Ev\u0000_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_\u0000_ZSt4cout\u0000_Jv_RegisterClasses\u0000__gmon_start__\u0000libm.so.6\u0000libgcc_s.so.1\u0000libc.so.6\u0000__cxa_atexit\u0000_IO_stdin_used\u0000__libc_start_main\u0000GLIBC_2.0\u0000GLIBC_2.1.3\u0000CXXABI_1.3\u0000GLIBCXX_3.4\u0000\u0000\u0000\u0002\u0000\u0002\u0000\u0002\u0000\u0003\u0000\u0002\u0000\u0004\u0000\u0002\u0000\u0001\u0000\u0002\u0000\u0000\u0000\u0005\u0000\u0002\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0002\u0000ý\u0000\u0000\u0000\u0010\u0000\u0000\u00000\u0000\u0000\u0000\u0010ii\r\u0000\u0000\u0004\u00005\u0001\u0000\u0000\u0010\u0000\u0000\u0000s\u001fi\t\u0000\u0000\u0003\u0000?\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ó¯k\u0005\u0000\u0000\u0005\u0000K\u0001\u0000\u0000\u0010\u0000\u0000\u0000t)\b\u0000\u0000\u0002\u0000V\u0001\u0000\u0000\u0000\u0000\u0000\u0000h\u0004\b\u0006\u000e\u0000\u0000°\u0004\b\u0005\u0002\u0000\u0000@\u0004\b\u0005\u0005\u0000\u0000x\u0004\b\u0007\u0001\u0000\u0000|\u0004\b\u0007\u0003\u0000\u0000\u0004\b\u0007\u0004\u0000\u0000\u0004\b\u0007\u0006\u0000\u0000\u0004\b\u0007\u0007\u0000\u0000\u0004\b\u0007\t\u0000\u0000\u0004\b\u0007\u000b\u0000\u0000\u0004\b\u0007\f\u0000\u0000\u0004\b\u0007\r\u0000\u0000\u0004\b\u0007\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Uåì\bèõ\u0000\u0000\u0000èP\u0001\u0000\u0000è[\u0003\u0000\u0000ÉÃ\u0000ÿ5p\u0004\bÿ%t\u0004\b\u0000\u0000\u0000\u0000ÿ%x\u0004\bh\u0000\u0000\u0000\u0000éàÿÿÿÿ%|\u0004\bh\b\u0000\u0000\u0000éÐÿÿÿÿ%\u0004\bh\u0010\u0000\u0000\u0000éÀÿÿÿÿ%\u0004\bh\u0018\u0000\u0000\u0000é°ÿÿÿÿ%\u0004\bh \u0000\u0000\u0000é ÿÿÿÿ%\u0004\bh(\u0000\u0000\u0000éÿÿÿÿ%\u0004\bh0\u0000\u0000\u0000éÿÿÿÿ%\u0004\bh8\u0000\u0000\u0000épÿÿÿÿ%\u0004\bh@\u0000\u0000\u0000é`ÿÿÿÿ%\u0004\bhH\u0000\u0000\u0000éPÿÿÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00001í^áäðPTRh@\u0004\bhÐ\u0004\bQVhP\u0004\bègÿÿÿôUåSè\u001c\u0000\u0000\u0000Ã3\u0014\u0000\u0000ì\u0004üÿÿÿÒt\u0005èÿÿÿX[]Ã\u001c$ÃUåPP=Ð\u0004\b\u0000t\fë\u001cÀ\u0004£¨\u0004\bÿÒ¡¨\u0004\b\u0010ÒuëÆ\u0005Ð\u0004\b\u0001ÉÃöUåQQ\u0015\u0004\bÒt\u0016¸\u0000\u0000\u0000\u0000Àt\rì\fh\u0004\bÿÐÄ\u0010ÉÃUåS»\u0001\u0000\u0000\u0000M\bÉt\u000e1ÒÈ)ÐB\u000f¯Ø9ÑuôØ[]Ã¶\u0000\u0000\u0000\u0000¿\u0000\u0000\u0000\u0000UåÇE\bÔ\u0004\b]éØþÿÿUúÿÿ\u0000\u0000\u000fÂHå\u000fÀQÐQu\u0002ÉÃì\fhÔ\u0004\bè3þÿÿÄ\fh¤\u0004\bj\u0000hð\u0004\bè?þÿÿÄ\u0010ÉÃöUºÿÿ\u0000\u0000¸\u0001\u0000\u0000\u0000å]ë°Uåì\u0018äðì\u0018EüPh@\u0004\bè.þÿÿEüPèMÿÿÿÂ¡°\u0004\bÄ\u0014@ô¼\u0004\b¨@u\u0004¨\bt\"PPRh°\u0004\bèÍýÿÿÄ\u0010ì\fPè\u0001þÿÿ1ÀÉÃt&\u0000PPRh°\u0004\bè\u000bþÿÿÄ\u0010ì\fPèßýÿÿ1ÀÉÃUåì\u0018]ôèwþÿÿÃ\u0012\u0000\u0000uø}üèAýÿÿ@\u0000\u0000\u0000@\u0000\u0000\u0000)ÐÁø\u0002Eðu\r]ôuø}üì]Ã1ÿÖv\u0000¼'\u0000\u0000\u0000\u0000Gÿ\u0016Æ\u0004;}ðrõ]ôuø}üì]Ã´&\u0000\u0000\u0000\u0000Uåì\u0018]ôè\u0007þÿÿÃ\u001e\u0012\u0000\u0000uø}ü@\u0000\u0000\u0000@\u0000\u0000\u0000)ÐÁø\u0002EðHøÿt\u001741ÿ´&\u0000\u0000\u0000\u0000Gÿ\u0016î\u00049}ðuõè@\u0000\u0000\u0000]ôuø}üì]ÃUåSR¡t\u0004\bøÿt\u0012»t\u0004\bÿÐCüë\u0004øÿuóX[]Ã\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000UåSì\u0004èyýÿÿÃ\u0011\u0000\u0000èyýÿÿY[]Ã\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0001\u001b\u0003;\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000\fþÿÿ8\u0000\u0000\u0000\\þÿÿT\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001zP\u0000\u0001|\b\u0005\u0000¸\u0004\b\f\u0004\u0004\u0001\u0000\u0000\u0018\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0004\b>\u0000\u0000\u0000\u0000A\u000e\b\u0002L\r\u0005S.\u0010 \u0000\u0000\u0000<\u0000\u0000\u0000P\u0004\b}\u0000\u0000\u0000\u0000A\u000e\b\u0002B\r\u0005R.\u0010I.\u0004h.\u0010\u0000\u0000\u0000\u0000\u0000\u0000ÿÿÿÿ@\u0004\b\u0000\u0000\u0000\u0000ÿÿÿÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000å\u0000\u0000\u0000\u0001\u0000\u0000\u0000ï\u0000\u0000\u0000\u0001\u0000\u0000\u0000ý\u0000\u0000\u0000\f\u0000\u0000\u00000\u0004\b\r\u0000\u0000\u0000Ð\u0004\b\u0004\u0000\u0000\u0000 \u0004\b\u0005\u0000\u0000\u0000à\u0004\b\u0006\u0000\u0000\u0000ð\u0004\b\n\u0000\u0000\u0000b\u0001\u0000\u0000\u000b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000l\u0004\b\u0002\u0000\u0000\u0000P\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ø\u0004\b\u0011\u0000\u0000\u0000À\u0004\b\u0012\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0013\u0000\u0000\u0000\b\u0000\u0000\u0000þÿÿo`\u0004\bÿÿÿo\u0002\u0000\u0000\u0000ðÿÿoB\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000^\u0004\bn\u0004\b~\u0004\b\u0004\b\u0004\b®\u0004\b¾\u0004\bÎ\u0004\bÞ\u0004\bî\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000\u001c\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00004\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000U\u0004\b\u0004\u0000\u0000\u0000Ð\u0004\b\u0012\u0000\u0000\u00000\u0004\b\u000b\u0000\u0000\u00000\u0004\b%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000,\u0000\u0000\u0000\u0002\u0000{\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000U\u0004\b\u0004\u0000\u0000\u0000ç\u0004\b\u0004\u0000\u0000\u0000E\u0004\b\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000!\u0000\u0000\u0000\u0002\u0000o\u0000\u0000\u0000\u0000\u0000\u0000y\u0000\u0000\u0000_IO_stdin_used\u0000\u0000\u0000\u0000\u0000k\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0000\u0000\u0000\u0004\b\"\u0004\b../sysdeps/i386/elf/start.S\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000GNU AS 2.16.91.0.2\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0014\u0000\u0000\u0000\u0004\u0001X\u0000\u0000\u0000$\u0004\b$\u0004\b\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000N\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\u0007\u0002t\u0000\u0000\u0000\u0001\b\u0002\u0000\u0000\u0000\u0002\u0007\u0002\u0000\u0000\u0000\u0004\u0007\u0002v\u0000\u0000\u0000\u0001\u0006\u0002\u0007\u0000\u0000\u0000\u0002\u0005\u0003int\u0000\u0004\u0005\u0002@\u0000\u0000\u0000\b\u0005\u0002\u0000\u0000\u0000\b\u0007\u0002E\u0000\u0000\u0000\u0004\u0005\u0002\u0000\u0000\u0000\u0004\u0007\u0002}\u0000\u0000\u0000\u0001\u0006\u0004¬\u0000\u0000\u0000\u0001\u0019\u0000\u0000\u0000\u0001\u0005\u0003ð\u0004\b\u0005O\u0000\u0000\u0000\u0000w\u0000\u0000\u0000\u0002\u0000V\u0000\u0000\u0000\u0004\u0001|\u0000\u0000\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crti.S\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000GNU AS 2.16.91.0.2\u0000\u0001w\u0000\u0000\u0000\u0002\u0000f\u0000\u0000\u0000\u0004\u0001\u001c\u0001\u0000\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crtn.S\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000GNU AS 2.16.91.0.2\u0000\u0001\u0001\u0011\u0000\u0010\u0006\u0011\u0001\u0012\u0001\u0003\b\u001b\b%\b\u0013\u0005\u0000\u0000\u0000\u0001\u0011\u0001\u0010\u0006\u0012\u0001\u0011\u0001%\u000e\u0013\u000b\u0003\u000e\u001b\u000e\u0000\u0000\u0002$\u0000\u0003\u000e\u000b\u000b>\u000b\u0000\u0000\u0003$\u0000\u0003\b\u000b\u000b>\u000b\u0000\u0000\u00044\u0000\u0003\u000e:\u000b;\u000bI\u0013?\f\u0002\n\u0000\u0000\u0005&\u0000I\u0013\u0000\u0000\u0000\u0001\u0011\u0000\u0010\u0006\u0003\b\u001b\b%\b\u0013\u0005\u0000\u0000\u0000\u0001\u0011\u0000\u0010\u0006\u0003\b\u001b\b%\b\u0013\u0005\u0000\u0000\u0000T\u0000\u0000\u0000\u0002\u0000/\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001../sysdeps/i386/elf\u0000\u0000start.S\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002\u0000\u0004\b\u0003À\u0000\u00010\u001e1:\"\u001f\u0003\u0018\u001dVW\u001e\u001fYX\u0002\u0001\u0000\u0001\u0001 \u0000\u0000\u0000\u0002\u0000\u001a\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0000init.c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000C\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001/usr/src/packages/BUILD/glibc-2.3/cc/csu\u0000\u0000crti.S\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002U\u0004\b\u0003Ä\u0000\u0001:\u0002\u0001\u0000\u0001\u0001\u0000\u0005\u0002Ð\u0004\b\u00031\u0001\u001e,\u001e:V\u0002\u0006\u0000\u0001\u0001\u0000\u0005\u00020\u0004\b\u0003!\u0001\u001e,:\u0002\u0005\u0000\u0001\u0001\u0000\u0005\u00020\u0004\b\u0003\u000b\u0001\u001e,\u001eVd:d,,W\u001e\u001e\u001e\u0002\u0001\u0000\u0001\u0001{\u0000\u0000\u0000\u0002\u0000C\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001/usr/src/packages/BUILD/glibc-2.3/cc/csu\u0000\u0000crtn.S\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002U\u0004\b\u0003\"\u0001:\u0002\u0001\u0000\u0001\u0001\u0000\u0005\u0002ç\u0004\b\u0003\u0012\u0001\u001e\u001e\u001e\u0002\u0001\u0000\u0001\u0001\u0000\u0005\u0002E\u0004\b\u0003\t\u0001\u001e\u0002\u0001\u0000\u0001\u0001init.c\u0000short int\u0000GNU C 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000long long int\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000unsigned char\u0000long long unsigned int\u0000short unsigned int\u0000_IO_stdin_used\u0000\u0000.symtab\u0000.strtab\u0000.shstrtab\u0000.interp\u0000.note.ABI-tag\u0000.note.SuSE\u0000.hash\u0000.dynsym\u0000.dynstr\u0000.gnu.version\u0000.gnu.version_r\u0000.rel.dyn\u0000.rel.plt\u0000.init\u0000.text\u0000.fini\u0000.rodata\u0000.eh_frame_hdr\u0000.eh_frame\u0000.ctors\u0000.dtors\u0000.jcr\u0000.dynamic\u0000.got\u0000.got.plt\u0000.data\u0000.bss\u0000.comment\u0000.debug_aranges\u0000.debug_pubnames\u0000.debug_info\u0000.debug_abbrev\u0000.debug_line\u0000.debug_str\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000T\u0004\bT\u0001\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000h\u0004\bh\u0001\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\b\u0001\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0002\u0000\u0000\u0000 \u0004\b \u0001\u0000\u0000P\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000B\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0002\u0000\u0000\u0000ð\u0004\bð\u0001\u0000\u0000ð\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000J\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000à\u0004\bà\u0002\u0000\u0000b\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000R\u0000\u0000\u0000ÿÿÿo\u0002\u0000\u0000\u0000B\u0004\bB\u0004\u0000\u0000\u001e\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000_\u0000\u0000\u0000þÿÿo\u0002\u0000\u0000\u0000`\u0004\b`\u0004\u0000\u0000`\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000n\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000À\u0004\bÀ\u0004\u0000\u0000\u0018\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000w\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ø\u0004\bØ\u0004\u0000\u0000P\u0000\u0000\u0000\u0005\u0000\u0000\u0000\f\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u00000\u0004\b0\u0005\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000{\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000H\u0004\bH\u0005\u0000\u0000°\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0004\b\u0000\u0006\u0000\u0000È\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000Ð\u0004\bÐ\b\u0000\u0000\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000ì\u0004\bì\b\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000ô\u0004\bô\b\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000¨\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0010\u0004\b\u0010\t\u0000\u0000`\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000²\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000p\u0004\bp\t\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000¹\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000|\u0004\b|\t\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0004\b\t\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000Å\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0004\b\t\u0000\u0000à\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000Î\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000h\u0004\bh\n\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000l\u0004\bl\n\u0000\u00004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000 \u0004\b \n\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000â\u0000\u0000\u0000\b\u0000\u0000\u0000\u0003\u0000\u0000\u0000°\u0004\b¬\n\u0000\u0000(\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ç\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¬\n\u0000\u0000s\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ÿ\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¨\f\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Í\f\u0000\u0000ö\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ã\u000e\u0000\u0000v\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00009\u000f\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ô\u0010\u0000\u0000»\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000@\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000p\u0018\u0000\u0000ð\u0005\u0000\u0000#\u0000\u0000\u0000@\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\t\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`\u001e\u0000\u00001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000\u0000\u0000\u0000\u0000h\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0003\u0000\u0000\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0004\u0000\u0000\u0000\u0000\u0000ð\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0005\u0000\u0000\u0000\u0000\u0000à\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0006\u0000\u0000\u0000\u0000\u0000B\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000`\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\b\u0000\u0000\u0000\u0000\u0000À\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\t\u0000\u0000\u0000\u0000\u0000Ø\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\n\u0000\u0000\u0000\u0000\u00000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000b\u0000\u0000\u0000\u0000\u0000H\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\r\u0000\u0000\u0000\u0000\u0000Ð\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000e\u0000\u0000\u0000\u0000\u0000ì\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000f\u0000\u0000\u0000\u0000\u0000ô\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0010\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0011\u0000\u0000\u0000\u0000\u0000p\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0012\u0000\u0000\u0000\u0000\u0000|\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0015\u0000\u0000\u0000\u0000\u0000h\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0016\u0000\u0000\u0000\u0000\u0000l\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0017\u0000\u0000\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0018\u0000\u0000\u0000\u0000\u0000°\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001d\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000!\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000#\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ<\u0000\u0000\u00000\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿW\u0000\u0000\u0000p\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0012\u0000e\u0000\u0000\u0000|\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0013\u0000s\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0014\u0000\u0000\u0000\u0000Ð\u0004\b\u0001\u0000\u0000\u0000\u0001\u0000\u0019\u0000\u0000\u0000\u0000¨\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0018\u0000\u0000\u0000\u0000`\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000¬\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ¸\u0000\u0000\u0000x\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0012\u0000Å\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0013\u0000Ò\u0000\u0000\u0000l\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0011\u0000à\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0014\u0000ì\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\u0002\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ2\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ;\u0001\u0000\u0000@\u0004\b\u0010\u0000\u0000\u0000\u0002\u0000\r\u0000T\u0001\u0000\u0000Ô\u0004\b\u0001\u0000\u0000\u0000\u0001\u0000\u0019\u0000b\u0001\u0000\u0000ð\u0004\b\u0010\u0000\u0000\u0000\u0002\u0000\r\u0000j\u0001\u0000\u0000\u0000\u0004\b>\u0000\u0000\u0000\u0002\u0000\r\u0000\u0001\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿ«\u0001\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿ¾\u0001\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿÏ\u0001\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿâ\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0012\u0000\u0000\u0000\u0007\u0002\u0000\u0000°\u0004\b\u0000\u0000\u0000\u0011\u0000\u0019\u0000\u001e\u0002\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0011\u0000\u0015\u0000'\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0002\u0000\u0000\u0012\u0000\u0000\u0000>\u0002\u0000\u0000ì\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u000f\u0000E\u0002\u0000\u0000¤\u0004\b\u0000\u0000\u0000\u0000\u0011\u0002\u0018\u0000R\u0002\u0000\u0000@\u0004\b]\u0000\u0000\u0000\u0012\u0000\r\u0000b\u0002\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0012\u0000\u0000\u0000|\u0002\u0000\u00000\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u000b\u0000\u0002\u0000\u0000À\u0004\b#\u0000\u0000\u0000\u0012\u0000\r\u0000\u0002\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\r\u0000\u0002\u0000\u0000@\u0004\b\u0000\u0000\u0000\u0011\u0000\u0019\u0000­\u0002\u0000\u0000Ð\u0004\bh\u0000\u0000\u0000\u0012\u0000\r\u0000½\u0002\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿÉ\u0002\u0000\u0000P\u0004\b}\u0000\u0000\u0000\u0012\u0000\r\u0000Î\u0002\u0000\u0000\u0000\u0000\u0000\u0000î\u0000\u0000\u0000\u0012\u0000\u0000\u0000ë\u0002\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000 \u0000\u0018\u0000ö\u0002\u0000\u0000Ð\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u000e\u0000ü\u0002\u0000\u0000\u0000\u0000\u0000\u0000k\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0014\u0003\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿ\u001b\u0003\u0000\u0000U\u0004\b\u0000\u0000\u0000\u0000\u0012\u0002\r\u00002\u0003\u0000\u0000l\u0004\b\u0000\u0000\u0000\u0000\u0011\u0002\u0017\u0000H\u0003\u0000\u0000Ø\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿM\u0003\u0000\u0000ð\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u000f\u0000\\\u0003\u0000\u0000\u0000\u0000\u0000\u0000T\u0000\u0000\u0000\u0012\u0000\u0000\u0000¤\u0003\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0010\u0000\u0018\u0000±\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000Å\u0003\u0000\u0000¸\u0004\b\u0010\u0004\u0000\u0000\u0012\u0000\u0000\u0000æ\u0003\u0000\u0000\u0000\u0000\u0000\u0000§\u0002\u0000\u0000\u0012\u0000\u0000\u0000ý\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\"\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000initfini.c\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crti.S\u0000call_gmon_start\u0000crtstuff.c\u0000__CTOR_LIST__\u0000__DTOR_LIST__\u0000__JCR_LIST__\u0000completed.4497\u0000p.4496\u0000__do_global_dtors_aux\u0000frame_dummy\u0000__CTOR_END__\u0000__DTOR_END__\u0000__FRAME_END__\u0000__JCR_END__\u0000__do_global_ctors_aux\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crtn.S\u0000fact2.cc\u0000_GLOBAL__I__Z9factoriali\u0000_ZSt8__ioinit\u0000__tcf_0\u0000_Z41__static_initialization_and_destruction_0ii\u0000__fini_array_end\u0000__fini_array_start\u0000__init_array_end\u0000__init_array_start\u0000_ZNSt8ios_base4InitC1Ev@@GLIBCXX_3.4\u0000_ZSt4cout@@GLIBCXX_3.4\u0000_DYNAMIC\u0000_ZNSolsEm@@GLIBCXX_3.4\u0000_fp_hw\u0000__dso_handle\u0000__libc_csu_fini\u0000__cxa_atexit@@GLIBC_2.1.3\u0000_init\u0000_Z9factoriali\u0000_start\u0000_ZSt3cin@@GLIBCXX_3.4\u0000__libc_csu_init\u0000__bss_start\u0000main\u0000__libc_start_main@@GLIBC_2.0\u0000data_start\u0000_fini\u0000_ZNSirsERi@@GLIBCXX_3.4\u0000_edata\u0000__i686.get_pc_thunk.bx\u0000_GLOBAL_OFFSET_TABLE_\u0000_end\u0000_IO_stdin_used\u0000_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@@GLIBCXX_3.4\u0000__data_start\u0000_Jv_RegisterClasses\u0000__gxx_personality_v0@@CXXABI_1.3\u0000_ZNSolsEl@@GLIBCXX_3.4\u0000_ZNSt8ios_base4InitD1Ev@@GLIBCXX_3.4\u0000__gmon_start__\u0000\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif (n < 0) return 0;\n\telse if (n > 1) return n*factorial(n-1);\n\treturn 1;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 0) return 0;\n    else if (n > 1) return n*factorial(n-1);\n    return 1;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int a)\r\n{\r\n  if (a > 1)\r\n   return (a * factorial (a-1));\r\n  else\r\n   return (1);\r\n}\r\n\r\nint main ()\r\n{\r\n  int number;\r\n  cin >> number;\r\n  cout << number << \"! = \" << factorial (number);\r\n  return 0;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nlong factorial (long a)\r\n{\r\n  if (a > 1)\r\n   return (a * factorial (a-1));\r\n  else\r\n   return (1);\r\n}\r\n\r\nint main ()\r\n{\r\n  long number;\r\n  cin >> number;\r\n  cout << number << \"! = \" << factorial (number);\r\n  return 0;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint resultat = 1;\r\n\twhile(n != 0) {\r\n\t\tresultat *= n;\r\n\t\t--n;\r\n\t}\r\n\treturn resultat;\r\n}\r\n\r\nint main() {\r\n\tint a;\r\n\tcin >> a;\r\n\tcout << factorial(a) << endl;\r\n}\n\n",
  "int factorial (int n) {\n   if (n == 0) return 1;\n   return n*factorial (n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n\nint factorial(int n){\n    if (n>1) n *= factorial(n-1);\n    return n;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n\nint factorial(int n){\n    if (n>0) n *= factorial(n-1);\n    else return 1;\n    \n    return n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1)\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int f = 1;\n    while (n>0){\n    f = f*n;\n    --n;\n    }\n    return f;\n}\n\nint main(){\n}\n\n\n",
  "\n      int factorial(int n){\n      \n       return n * factorial (n-1);\n       }\n   \n\n\n\n\n\n\n\n",
  "\n      int factorial(int n){\n      \n       return n * factorial (n-1)\n       }\n   \n\n\n\n",
  " \n \n \n       int factorial(int n){\n      \n       return n * factorial(n-1);\n       }\n   \n   \n   \n\n\n",
  " \n \n \n       int factorial(int n){\n      \n       return n * factoria(n-1);\n       }\n   \n   \n   \n\n\n",
  " \n \n \n       int factorial(int n){\n        if (n==1) return 1;\n        else return n * factorial(n-1);\n       }\n   \n   \n   \n\n\n",
  " \n \n \n       int factorial(int n){\n        if (n==0) return 1;\n        else return n * factorial(n-1);\n       }\n   \n   \n   \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 0 ) return 1;\n    else return n*factorial (n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\nif (n==0) return 1;\nreturn n*factorial(n-1);\n\n}\n\n\n\nint main () {\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n\n}\n\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n   int r;\n   if (n == 0) r = 1;\n   else r = n * factorial(n - 1);\n   return r;\n   }\n   \nint main(){\n   int x;\n   cin>>x;\n   cout<<factorial(x)<<endl;\n   }\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint fact (int n){\n   int r;\n   if (n == 0) r = 1;\n   else r = n * fact(n - 1);\n   return r;\n   }\n   \nint main(){\n   int n;\n   cin>>n;\n   int r = fact(n);\n   cout<<r<<endl;\n   }\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint fact (int n){\n   int r;\n   if (n == 0) r = 1;\n   else r = n * fact(n - 1);\n   return r;\n   }\n   \nint main(){\n   int n;\n   cin>>n;\n   cout<<fact(n)<<endl;\n   }\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n   int r;\n   if (n == 0) r = 1;\n   else r = n * fact(n - 1);\n   return r;\n   }\n   \nint main(){\n   int x;\n   cin>>x;\n   cout<<factorial(x)<<endl;\n   }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n * factorial(n - 1);\n    else return 1;   \n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    int i;\n    int x = 1;\n        for (i = 2; i <= n; i++){\n            x = x * i;\n        }   \n    return x;\n     \n}\n\nint main(){\n    int n;\n    cin >> n;\n        if(n >= 0 and n <= 12){\n            cout << factorial(n) << endl;\n        }\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif(n == 1) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\tint a;\r\n\tcin >> a;\r\n\tcout << factorial(a) << endl;\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif(n == 1) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif(n > 0) return n*factorial(n-1);\r\n}\r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif(n > 1) return n*factorial(n-1);\r\n\treturn 1;\r\n\t}\r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n==1) return n;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) \n{\n\tif(n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main()\n{\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n) {\n\tint s = 1;\n\tif (n > 1) {\n\t\ts *= n;\n\t\tfactorial(--n);\n\t}\n\telse return s;\n}\n\n\n",
  "int factorial(int n) {\n\tint s = 1;\n\tif (n > 1) {\n\t\ts *= n;\n\t\tfactorial(n-1);\n\t}\n\telse return s;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint p = 1;\n\tif (n <= 1) return 1;\n\telse p = n*factorial(n-1);\n}\n\t\n\n\n",
  "int factorial(int n) {\n\tint a;\n\tif (n == 0) a = 1;\n\telse a = n*factorial(n-1);\n\treturn a;\n}\n\n\n",
  "//============================================================================\n// Name        : ClasseP1.cpp\n// Author      : \n// Version     :\n// Copyright   : Your copyright notice\n// Description : Hello World in C++, Ansi-style\n//============================================================================\n\n#include <iostream>\nusing namespace std;\n\nint main() {\n    return 0;\n}\n\nint factorial(int n) {\n    return n > 1 ? n * factorial(n - 1) : 1;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\nif (n==0) return 1;\r\nreturn n * factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while (cin >> n) cout << factorial (n) << endl;\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 1) return n;\r\n    else return n * factorial (n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while(cin >> n){\r\n        cout << factorial(n) << endl;\r\n    }\r\n}    \n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 1) return n;\r\n    else return n * factorial (n-1);\r\n}\r\n\r\nint main(){\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    return n * factorial (n-1);\r\n}\r\n\r\nint main(){\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return (n*factorial(n-1));\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n    \n\n\n",
  "int factorial(int n) {\n\tint resultat& = 1;\n\tif (n > 1) {\n\t\tfactorial(n - 1);\n\t\tresultat *= n;\n\t}\n\telse return resultat;\n}\n\n\n",
  "int factorial(int n) {\n\tint resultat& = 1;\n\tif (n > 2) {\n\t\tfactorial(n - 1);\n\t\tresultat *= n;\n\t}\n\telse return resultat;\n}\n\n\n",
  "int factorial(int n) {\n\tint resultat& = 1;\n\tif (n != 1) {\n\t\tresultat *= n;\n\t\tfactorial(n - 1);\n\t\t\n\t}\n\telse return resultat;\n}\n\n\n",
  "int factorial(int n) {\n\tint a;\n\tif (n == 0) a = 1;\n\telse a = n*factorial(n-1),\n\treturn a;\n}\n\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n<2) return 1;\r\n    else return n * factorial(n - 1);\r\n} \r\n    \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n    int fact (int n) {\n        int r;\n        if (n==0) r = 1;\n        else r = n*fact(n-1);\n        return r;\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n    int fact (int n) {\n        int r;\n        if (n==0) {\n            r = 1;\n        }\n        else {\n            r = n*fact(n-1);\n        }\n        return r;\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif(n==0) return 1;\nif(n==1) return1;\nreturn n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int a) {\r\n    \r\n    if (a==1) return 1;\r\n    return a*(factorial(a-1));\r\n}\r\n    \r\nint main() \n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int a) {\r\n    if (a==1) return 1;\r\n    else return a*(factorial(a-1);\r\n}\r\nint main() {}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    if (n >= 0 and n <= 12) {\n        \n        int r;\n        if (n = 0) r = 1;\n        else {\n        \n            r = n * factorial(n - 1)\n            return r;\n            \n        }\n        \n    }\n    \n}\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n-1) << endl;\n    \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n >= 0 and n <= 12) {\n        \n        int r;\n        if (n == 0) r = 1;\n        else r = n * factorial(n - 1);\n\n    }\n    return r;\n    \n}\n\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return (n*factorial(n-1));\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n    int factorial (int n) {\r\n        int r;\r\n        if (n==0) {\r\n            r = 1;\r\n        }\r\n        else {\r\n            r = n*factorial(n-1);\r\n        }\r\n        return r;\r\n    }\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact=1;\n    if (n==0) fact=0;\n    else {\n        for (int i=1; i<=n; ++i) {\n            fact*=i;\n        }\n    }\n    return fact;\n}\nint main() {\n    int x;\n    cin >> x;\n    int resultat;\n    resultat = factorial(x);\n    cout << resultat << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (a ==0) return 1;\n    else return (n*factorial (n-1);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return (n*factorial (n-1);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) (return 1);\n    else return (n*factorial (n-1);\n}\n\n\n",
  "int factorial (int n){\r\n    if (n==0)return 1;\r\n    else return n*factorial(n-1)\r\n}\r\n\n\n",
  "int factorial (int n){\r\n    if (n==0)return 1;\r\n    else return n*(n-1)\r\n}\r\n\n\n",
  "int factorial (int n){\r\nif (n==1) {\r\nreturn 1;\r\nelse return n*factorial(n-1);\r\n}\n\n",
  "int factorial (int n){\r\nif (n==0) {\r\nreturn 1;\r\nelse return n*factorial(n-1);\r\n}\n\n",
  "int factorial (int n) {\n    if (n==0) {\n        return 1\n    } else {\n        return n*factorial (n-1);\n        }\n    }\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n   \n    else if (n==1) return n; //cas base\n           \n    return n*factorial(n-1);\n\n}\n\n\nint main() {\n    \n    int num;\n    cin >> num;\n    \n    cout << factorial (num) << endl;\n\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(numero n) {\r\n\treturn (n<=1)?1:n*factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n/*\r\n\tint test;\r\n\tcin >> test;\r\n\tcout << factorial( (int)test ) << endl;\r\n*/\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\nint a;\na=1;\nwhile (n>0){\na=a*n;\n--n;\n}\nreturn a;\n}\nint main(){\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n}\n\n\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\nint f=1;\n\nwhile (n>1){\n\nf=n;\n\n--n;\n\n}\n\nreturn f;\n\n}\n\nint main(){\n\nint f,n;\n\ncin>>f>>n;\n\ncout<<n<<endl;\n\n}\n\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\nif (n<=1){\n\nreturn 1;\n\n}else{\n\nreturn n*factorial(n-1);\n\n}\n\n}\nint main(){\n\nint n;\n\ncin>>n;\n\ncout<<factorial(n)<<endl;\n\n}\n\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\nif(n==0)return 1;\nreturn n*factorial (n-1);\n}\nint main(){\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==0)return 1;\n    else return n*factorial(n-1);\n}\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n   if(n < 0) return 0;\n   else if(n > 1) return n*factorial(n-1);\n   return 1;\n}\n\n\nint main () {\n\tint n;\n\tcin >>n;\n\t\n\tcout <<factorial (n) <<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0) return n=1;\n    else {\n    return n=(n*factorial(n-1));\n    }\n    \n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n)<< endl;\n}\n\n\n",
  "int factorial(int n){\n    if (n==0){\n        return 1;\n    } else {\n        return n*factorial(n-1);\n    }\n}\n    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n   if (n < 0) return 0;\r\n   else if(n > 1) return n*factorial(n-1); \r\n   return 1; \r\n}\r\n\r\nint main (){\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial (x) << endl;\r\n}\r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1 or n == 0) return 1;\n    else return (n*factorial(n-1));\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << \"factorial de \" << n << \" es \" << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial (int n){\r\nif (n==0) {\r\nreturn 1;\r\n}\r\nelse return n*factorial(n-1);\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if(n == 0) return 1;\n    else total = n*factorial(n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\nint resultat;\nif (n==0){\n    resultat=1;\n}\nelse{\n    int aux=n-1;\n    resultat=n;\n    while (aux!=1){\n        resultat=resultat*aux;\n        --aux;\n    }\n}\nreturn resultat;\n}\n\n\nint main(){}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n/*\nint factorial (int n){\nint resultat;\nif (n==0){\n    resultat=1;\n}\nelse{\n    int aux=n-1;\n    resultat=n;\n    while (aux!=1){\n        resultat=resultat*aux;\n        --aux;\n    }\n}\nreturn resultat;\n}\n*/\n\n\nint factorial (int n){\nif (n==0){\n    return 1;\n}\nelse{\n    return factorial (n-1)*n;\n}\n}\n\n\n\nint main(){}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\n\n\t\nint factorial(int n){\n\n\tif ( n== 0) return 1;\n\telse \treturn n*factorial(n-1);\n}\n\n\n",
  "int factorial(int n){\r\n\tif(n>1) return n*factorial(n);\r\n\treturn 1;\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if(n==0) return 0;\n    else {\n        if(factorial(n-1)!=0)return n=n*factorial(n-1);\n        else return n;\n        }\n    \n}\n\n\n\n    int main(){\n    \n        int n;\n        cin >> n;\n        cout << factorial(n)<<endl;\n        }\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n\tint fact=1;\n\tif(n != 0) fact= n*factorial(n-1);\n\treturn fact;\n}\n\n\n\tint main () {\n\n\n\t\tint n;\n\n\t\tcin >> n;\n\n\t\tcout << factorial(n)<<endl;\n\n\t}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n==0) return n=1; //caso sencillo \n    else return (n*factorial(n-1));\n        \n}\n\nint main () {\n\n    int x;\n    cin >> x;\n    \n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nlong factorial(int n) {\n\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "# include <iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n* factorial(n-1);\n}\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial (x) << endl;\n}\n\n\n",
  "int factorial(int n) {\r\n     if(n == 1) return 1;\r\n     else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl; \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n   \n    int total = 1;\n    if (n == 0) return 1;\n    else total = n*factorial(n-1);\n    cout << total << \" \" << n << endl;\n    return total;\n}\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint Factorial(int n){\r\n   \r\n    while (n>12 || n<0){\r\n          cin >> n; \r\n    }  \r\n    if(n<=1){\r\n          return 1;\r\n    }\r\n    else{\r\n       return n*Factorial(n-1);     \r\n    }  \r\n}\r\n    \r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint Factorial(int n){\r\n   \r\n    if (n>12 || n<0){\r\n          return -1; \r\n    }  \r\n    if(n<=1){\r\n          return 1;\r\n    }\r\n    else{\r\n       return n*Factorial(n-1);     \r\n    }  \r\n}\r\n    \r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint Factorial(int n){\r\n   \r\n    if (n>=0 and n<=12){\r\n    \r\n          \r\n          if(n==1 || n==0){\r\n                  return 1;\r\n          }\r\n          else{\r\n                  return n*Factorial(n-1);     \r\n          }\r\n    }\r\n    cout<<\"No pots entrar nombres negatius\"<<endl; \r\n\r\n\r\n}\r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\nint Factorial(int n){\r\n   \r\n    if (n>=0 or n<=12){\r\n    \r\n          if(n==1 || n==0){\r\n                  return 1;\r\n          }\r\n          else{\r\n                  return n*Factorial(n-1);     \r\n          }\r\n    }\r\n    cout<<\"No pots entrar nombres negatius\"<<endl; \r\n    \r\n}\r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main(){\r\n    \r\n    int n,resultat;\r\n    n=resultat=0;\r\n    cin >> n ;\r\n    resultat=factorial(n);\r\n    cout << resultat;\r\n    #ifndef _JUTGE_\r\n        system(\"pause\");\r\n    #endif    \r\n    \r\n}\r\n\r\n\r\n/***********/\r\n\r\nint factorial(int n){\r\n   \r\n  \r\n    if (n>=0 and n<=12){\r\n    \r\n          if(n==1 or n==0){\r\n                  return 1;\r\n          }\r\n          else{\r\n                  \r\n   \r\n                  return n*factorial(n-1);\r\n          }\r\n    }\r\n  \r\n    \r\n}\r\n\r\n  \r\n  \r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main(){\r\n    \r\n    int n,resultat;\r\n    n=resultat=0;\r\n    cin >> n ;\r\n    resultat=factorial(n);\r\n    cout << resultat;\r\n    #ifndef _JUTGE_\r\n        system(\"pause\");\r\n    #endif    \r\n    \r\n}\r\n\r\n\r\n/***********/\r\n\r\nint factorial(int n){\r\n   int res=0;\r\n  \r\n    if (n>=0 and n<=12){\r\n    \r\n          if(n==1 or n==0){\r\n                  return 1;\r\n          }\r\n          else{\r\n                  \r\n   \r\n                  return n*factorial(n-1);\r\n          }\r\n    } \r\n    return res;\r\n  \r\n    \r\n}\r\n\r\n  \r\n  \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n   \n    int total = 1;\n    if (n == 0) return 0;\n    else total = n*factorial(n-1);\n    cout << total << \" \" << n << endl;\n    return total;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n   \n    if (n<=1) return 1;\n    else return (n*factorial(n-1));\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n = 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main(){\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n = 0) return 1;\r\n    else n*factorial(n-1);\r\n}\r\nint main(){\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n = 0) return 1;\r\n    else n*factorial(n-1);\r\n}\r\nint main(){\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else n*factorial(n-1);\r\n}\r\nint main(){\r\n}\r\n\n\n",
  "# include <iostream>\nusing namespace std;\nint fact (int n) {\n    if (n == 0) return 1;\n    return n* fact(n-1);\n}\nint main () {\n    cout << fact (3) << endl;\n}\n\n\n",
  "# include <iostream>\nusing namespace std;\nint fact (int n) {\n    if (n == 0) return 1;\n    return n* fact(n-1);\n}\nint main () {\n    int x;\n    cin >> x;\n    cout << fact (x) << endl;\n}\n\n\n",
  "# include <iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n* fact(n-1);\n}\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial (x) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main(){\r\n}\r\n\n\n",
  "int factorial(int n) {\r\n     if(n == 1) return 1;\r\n     else return n*fact(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n>1)\n\t\tn*=factorial(n-1);\n\telse\n\t\tn=1;\n\treturn n;\n}\n\nint main(){\n\tint n;\n\twhile (cin>>n)\n\t\tcout<<factorial(n)<<endl;\n}\n\n\n",
  "int factorial(int n){\r\n\tif(n>1) return n*factorial(n);\r\n\treturn 1;\r\n}\n\n",
  "int factorial(int n){\r\n\tif(n>1) return n*factorial(n-1);\r\n\treturn 1;\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {        \r\n        if (n <= 0) {\r\n            return 1;\r\n        } else {\r\n            return n*factorial(n-1);\r\n        }\r\n}\r\nint main() {\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 0) return 1;\n    \n    else {\n    return n * factorial (n - 1);\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);   \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;   \r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if(n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main () {\n\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0){\r\n         return 1;\r\n         }else{\r\n         return n*factorial(n-1);\r\n         }\r\n         }\r\n\r\nint main(){\r\n\r\nint n;\r\ncin>>n;\r\n\r\ncout<<factorial(n)<<endl;\r\n\r\n\r\n\r\n\r\n#ifndef _JUTGE_\r\n        system(\"pause\");\r\n    #endif\r\n\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0){\r\n         return 1;\r\n         }else{\r\n         return n*factorial(n-1);\r\n         }\r\n         }\r\n\r\nint main(){\r\n\r\nint n;\r\ncin>>n;\r\n\r\ncout<<factorial(n)<<endl;\r\n\r\n\r\n\r\n\r\n#ifndef _JUTGE_\r\n        system(\"pause\");\r\n    #endif\r\n\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n>1) return n * factorial(n-1);\n    return 1;\n}\n\n\nint main () {\n\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n=0) return 1;\n    return n*factorial(n-1);\n}\n\nint main (){\n\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main (){\n\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n int factorial(int n){\n    if (n==1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n int factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "int factorial(int n) {\r\n    if (n == 0 or n == 1) return 1;\r\n    else return factorial(n - 1)*n;\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}    \nint main() {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<< endl;\n}    \n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factr(int n){\n    if (n==1) return 1;\n    else return n*factr(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factr(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if (n != 1) total = n*factorial(n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if (n==0) return 1;\n    if (n != 1) total = n*factorial(n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int x){\n    if (x == 0) return 1;\n    return x * factorial (x-1);\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial (x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f;\n    if(n < 2){\n        f = 1;\n    }\n    else f = n * factorial(n - 1);\n    return f;\n}\n        \n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0){\n    return 1;\n    }else{\n        return n*factorial(n-1);\n    }\n    }\n    \nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n)<< endl;\n    }\n    \n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return n+1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << \"El factorial es: \" << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int p = 1;\n    if (n == 0) return 1;\n    else p = n * factorial(n - 1);\n    return p;\n}\n\nint main() {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n  \nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n \nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1)return 1;\n    else return (factorial(n-1)*n);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n    if (n == 0) {\n        return 1;\n    }\n    else {\n        return n*factorial(n - 1);\n    }\n}\n\nint main() {\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==1) return 1;\n\tn=n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tn=factorial(n);\n\tcout << n << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==1 or n==0) return 1;\n\tn=n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tn=factorial(n);\n\tcout << n << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==1 or n==0) return 1;\n\treturn (n*factorial(n-1));\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tn=factorial(n);\n\tcout << n << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int k=n;\n    if (n == 1 or n == 0) return 1;\n    while (k > 1) {\n    n*=k-1;\n    --k; \n    } \n    return n;   \n}\n    \n\nint main () { \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==1 or n==0) return 1;\n    else return (n*factorial(n-1));\n\n}\n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial (int n) {\n    for (int i = 2; i < n; ++i) n *= i;\n    return n;\n}\n\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(--n)*n;\n}\n\n\n",
  "int factorial(int n) {\n    if (n < 2) return 1;\n    else if (n == 2) return 2;\n    else return factorial(n - 1)*n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n - 1);;\n}\n\nint main() {\n    int i;\n    cin >> i;\n    cout << factorial(i) << endl;\n}\n\n\n",
  "int fact(int n)\n{  if (n == 0) return 1;\n   else return n * fact(n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int fact = 1;\n    if (n == 1 or n == 0) {\n        fact = 1;\n    }           \n    else {\n       fact = fact * n;\n       n = n-1;\n       factorial (n);\n    }\n    return fact;\n}       \n \n int main(){\n    int nat;\n    cin >> nat;\n    cout << factorial (nat) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    long fac=1;\n    if (0<=n<=12) {\n        while(n>1){\n        fac = n * fac;\n        --n;\n        factorial (n);\n        }\n    }\n    else if(n==0) return fac;\n    return fac;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    long fac=1;\n    if (0<=n<=12) {\n        while(n>1){\n        fac = n * fac;\n        --n;\n        factorial (n);\n        }\n    }\n    else if(n==0) return fac;\n    return fac;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n    long fac=1;\n    if (0<=n<=12) {\n        while(n>1){\n        fac = n * fac;\n        --n;\n        factorial (n);\n        }\n    }\n    else if(n==0) return fac;\n    return fac;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n <= 1) return 1;   \n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n, int aux){\n    if (n == 1 or n == 0) {\n    \n    }           \n    else {\n       aux = aux * n;\n       n = n-1;\n       factorial (n);\n    }\n    return aux;\n}       \n \n int main(){\n    int nat, aux;\n    aux=1;\n    cin >> nat;\n    cout << factorial (nat) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    long fac=1;\n    if (0<=n<=12) {\n        while(n>1){\n        fac = n * fac;\n        --n;\n        factorial (n)\n        }\n    }\n    if else (n==0) return fac;\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\nif (n==0) return 1;\r\nelse return n*factorial(n-1);\r\n}\t\r\nint main()\r\n{\r\nint a,n;\r\ncin>>n;\r\na=factorial(n);\r\ncout<<a<<endl;\r\n\r\n}\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if( n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main(){\n}\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if(n == 0) return 1;\n    else total = n*factorial(n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n)\n    if( n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main(){\n}\n    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n <= 1) return 1;\r\n    else return n * factorial (n-1);\r\n}\r\n\r\nint main() {\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint main()\n{\n    char i;\n    bool existe = false;\n    while ( i != '.' )\n    {\n        cin >> i;\n        if ( i == 'h' or i == 'H' )\n        {\n            cin >> i;\n            if ( i == 'o' or i == 'O' )\n            {\n                cin >> i;\n                if ( i == 'l' or i == 'L' )\n                {\n                    cin >> i;\n                    if ( i == 'a' or i == 'A')\n                    {\n                        existe = true;\n                    }\n                }\n            } \n        }   \n    } \n    if ( existe == true )\n    {\n        cout << \"hola\" << endl;\n    }   \n    else\n    {\n        cout << \"adeu\" << endl; \n    }\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 1) return 1;\n    else{\n        return n * factorial(n-1);\n    }\n}\n\nint main(){\n    int x;\n    cin>>x;\n    int y = factorial(x);\n    cout<<y<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n=1) return n;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n=1) return n;\r\n    return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n<2) return n;\r\n    else return n*factorial(n-1);\r\n}\r\nint main(){\r\n    int a;\r\n    cin>>a;\r\n    cout<<factorial(a)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n<2) return n;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0) return n+1;\r\n    else if (n<2) return n;\r\n    else return n*factorial(n-1);\r\n}\r\nint main(){\r\n    int a;\r\n    cin>>a;\r\n    cout<<factorial(a)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0 or n==1) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\tif (n == 0 or n == 1) return 1;\n\tfactorial (n - 1);\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\tif (n == 0 or n == 1) return 1;\n\treturn n * factorial (n - 1);\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n=1) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main() {\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n=1) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main() {\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n==1) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main() {\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n==1) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main() {\n\n    int a, b;\n    cin >> a;\n    b=factorial(a);\n    cout << b << endl;\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main() {\n\n    int a, b;\n    cin >> a;\n    b=factorial(a);\n    cout << b << endl;\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main() {\n\n    int a, b;\n    cin >> a;\n    b=factorial(a);\n    cout << b << endl;\n\n}\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n==0 or n==1) return 1;\n    else {\n        \n        return n * factorial(n-1);\n    }\n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n)<<endl;\n}\n \n    \n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n== 0){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n}\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n) {\r\n    if (n == 0) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\n\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\n\n",
  "int factorial (int n){\r\n    if (n>12){\r\n        return 1;\r\n    }\r\n    else{\r\n        return n+factorial(n-1);\r\n    }\r\n}\r\n\n\n",
  "int factorial (int n){\r\n    if (n>12 and n<=0){\r\n        return 1;\r\n    }\r\n    else{\r\n        return n+factorial(n-1);\r\n    }\r\n}\r\n\n\n",
  "int factorial (int n){\r\n    if (n==0){\r\n        return 1;\r\n    }\r\n    else{\r\n        return n+factorial(n-1);\r\n    }\r\n}\r\n\n\n",
  "int factorial (int n){\r\n    if (n==0){\r\n        return 1;\r\n    }\r\n    else{\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\n\n\n",
  "int factorial(int n){\r\nint total=n;\r\n    while (n>1){\r\n        if (n==0){\r\n                return 1;\r\n        }\r\n        else{\r\n                total=total*(n-1);\r\n        }\r\n        n=n-1;\r\n    }\r\nreturn total;\r\n}\r\n\n\n",
  "int factorial(int n){\r\nint total=n;\r\n    if (n==0){\r\n        return 1;\r\n    }\r\n    while (n>1){\r\n        total=total*(n-1);\r\n        n=n-1;\r\n    }\r\nreturn total;\r\n}\r\n\n\n",
  "int factorial(int n){\r\nint total=n;\r\n    if (n==0){\r\n        return 1;\r\n    while (n>1){\r\n        total=total*(n-1);\r\n        n=n-1;\r\n    }\r\nreturn total;\r\n}\r\n\n\n",
  "int factorial (int n){\r\n    if (n==0){\r\n        return 1;\r\n    }\r\n    else{\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact=1;\n    while(n>1){\n        fact=n*fact;\n        --n;\n    }\n    return fact;\n}\n\nint main(){\n    \n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n    \n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    //int fact=1;\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n    \n/*    while(n>1){\n        fact=n*fact;\n        --n;\n    }\n    return fact;*/\n}\n\nint main(){\n    \n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n    \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1 or n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1));\n}\n\n\n",
  "int factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return n*factorial(n - 1);\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\nn = n*(factorial (n));\r\n\r\n}\r\n\n\n",
  "\r\nint fact(int n){\r\n    if (n==0)return 1;\r\n    if (n==1)return 1;\r\n    return n*fact(n-1);\r\n}\r\n\r\n    \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint fact(int n){\r\n    if (n==0)return 1;\r\n    if (n==1)return 1;\r\n    return n*fact(n-1);\r\n}\r\nint main (){\r\n    int n;\r\n    cin >> n;\r\n    cout << fact(n) << endl;\r\n}\r\n\r\n    \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    \r\n    if(n < 0) return 0;\r\n    else if(n > 1) return n*factorial(n-1);\r\n    return 1;\r\n}\r\n\n\n",
  "# include <iostream>\n# include <string>\nusing namespace std;\n\nint factorial(int n){\n\tif (n < 2) return 1;\n\tn = n*factorial(n-1);\n\treturn n;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\nint factorial(int n)\n{\n    int x = 0;\n    while (n>0)\n    {\n        n = ( n - 1 ) * n;\n        x = n;\n    }\n    return x+1;\n}\nint main()\n{\n    int n, x;\n    cin>>n;\n    if (n>=0){\n        cout<<factorial(n)<<endl;\n    }\n    else\n    {\n        x = 1;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n>1) return n*factorial(n-1);\n    else return 1;\n}\n\nint main(){\n    int x;\n    cin >> x;\n    int s = factorial(x);\n    cout << s << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\nint n;\ncin >> n;\ncout << factorial(n) <<endl;\n}\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) <<endl;\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int res;\n    for (int z = 1; z < n; ++z){\n        res *= z;\n    }\n    return res;\n}\n\nint main(){}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    return n*factorial (n-1);\n}\n\nint main () {\n int n;\n cin >> n;\n cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n * factorial (n-1);\n    }\nint main ()  {\n    int n;\n    cin >>n;\n    cout<< factorial (n) <<endl;\n }\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n>0){\n        n=n*factorial(n-1);\n        return(n);\n    }else{\n    return(1);\n    }\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n==1) return n;\r\n    return n*factorial (n-1);\r\n}\r\nint main (){\r\n    int g;\r\n    cin >>g;\r\n    cout <<factorial(g)<<endl;\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n);\n    int res;\n    for (int z = 1; z < n; ++z){\n        res *= z;\n    }\n    return res;\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n>=0 and n<12)\r\n    if (n==1) return n;\r\n    return n*factorial (n-1);\r\n}\r\nint main (){\r\n    int g;\r\n    cin >>g;\r\n    cout <<factorial(g)<<endl;\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if n (n <= 0 return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n<0 or n>=12) return n;\r\n    if (n==1) return n;\r\n    return n*factorial (n-1);\r\n}\r\nint main (){\r\n    int g;\r\n    cin >>g;\r\n    cout <<factorial(g)<<endl;\r\n}\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n<0 or n>12) return n;\r\n    if (n==1) return n;\r\n    return n*factorial (n-1);\r\n}\r\nint main (){\r\n    int g;\r\n    cin >>g;\r\n    cout <<factorial(g)<<endl;\r\n}\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n>=0 and n<12){\r\n       if (n==1) return n;\r\n       return n*factorial (n-1);\r\n    }\r\n}\r\nint main (){\r\n    int g;\r\n    cin >>g;\r\n    cout <<factorial(g)<<endl;\r\n}\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n>=0 and n<12){\r\n       if (n==1) return n;\r\n       return n*factorial (n-1);\r\n    }\r\n    return n;\r\n}\r\nint main (){\r\n    int g;\r\n    cin >>g;\r\n    cout <<factorial(g)<<endl;\r\n}\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n){\r\n    while (n>=0 and n<12){\r\n       if (n==1) return n;\r\n       return n*factorial (n-1);\r\n    }\r\n    return n;\r\n}\r\nint main (){\r\n    int g;\r\n    cin >>g;\r\n    cout <<factorial(g)<<endl;\r\n}\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n==1) return n;\r\n    else return n*factorial(n-1);\r\n}\r\nint main (){\r\n    int g;\r\n    cin >> g;\r\n    cout <<factorial(g)<<endl;\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n    if (n == 0 or n == 1)return 1;\n    return n = n*fact(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << fact(n) << endl;\n}\n    \n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    else if (n==1) return n;\r\n    else return n*factorial(n-1);\r\n}\r\nint main (){\r\n    int g;\r\n    cin >> g;\r\n    cout <<factorial(g)<<endl;\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  else return factorial (n - 1) * n;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    \n    if (n==0){\n    return 1;\n    }\n    else {\n        int aux=n-1;\n        return (n*factorial(aux));\n        }\n       \n}\nint main (){\n    int h;\n    cin>>h;\n    factorial (h);\n}\n       \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0){\n        return 1;\n    }else{\n        return n*factorial(n-1);\n    }\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n <= 1) return 1\n    return n*factorial n-1\n}\n\nint main () {\n int n;\n cin >> n;\n cout << factorial n << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n== 0) return 1;\r\n    return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    \r\n    cout << factorial(x) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint fact (int m) {\n    if (m==0) return 1;\n    return m * fact (m-1);\n    }\nint main ()  {\n    int m;\n    cin >>m;\n    cout<< fact (m) <<endl;\n }\n    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    return n * factorial(n-1);\r\n}\r\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    int suma = 1;\n    while (n > 1) {\n        suma *= n;\n        --n;\n    }\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    int suma = 1;\n    while (n > 1) {\n        suma *= n;\n        --n;\n    }\n    return suma;\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int x) {\r\n    if ( x == 0 ) {\r\n        return 1;\r\n    }\r\n    else if ( x > 12 ) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return factorial (x-1) * x;\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "//#include <iostream>\n//using namespace std;\n\n int factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\n/*int main (){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}*/\n\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int facto=1;\n    if (n==0) return 1;\n    else {\n        facto=n*factorial(n-1);\n    }\n    return facto;\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint fact (int n){\n    long factorial=1;\n    if (0<=n<=12){\n        while (n>=1){\n        factorial=factorial*n*fact(n-1);\n            }\n        }\n\n   else if (n==0){\n        factorial=factorial;\n        }\n   n=factorial;\n   return n; \n}\nint main (){\n    int n;\n    cin>>n;\n    fact (n);\n}\n       \n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n <= 1 ) return 1 ;\n    int f = factorial ( n - 1 ) ;\n    return n * f ;\n    }\n \nint main(){\n\nint n ;\ncin >> n ;\ncout << factorial(n) << endl ;\n\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1 ) n = n * factorial(n-1);\n    return n;\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n != 1 ) n *= factorial(n-1);\n    return n;\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) n *= factorial(n-1);\n    return n;\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) n *= factorial(n-1);\n    return n;\n}\n\nint main () {\n    int a = 0;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n > 1) n *= factorial(n-1);\n    return n;\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n    \n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) n *= factorial(n-1);\n    return n;\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n    \n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (1 < n and n <= 12) n *= factorial(n-1);\n    return n;\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n   \n   int aux = 1;\n   for ( int cont = n; cont != 0; --cont ) {\n        \n        aux = aux * cont;\n    }\n    return aux;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n != 0) {\n        return n * (factorial (n-1));\n    }\n    else return 1;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    return factorial(n-1)*n;\n    \n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n    \n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\nif(n!=1){\n         if(n*factorial(n-1)!=1){\n         return n*factorial(n-1);\n         }\n         }\n         \nelse{\n     return 1;\n     }\n     }\n int main(){\n int h;\n cin>>h;\n cout<<factorial(h)<<endl;\n }\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\nif(n!=1){\n         return n*factorial(n-1);\n         }\n         \nelse{\n     return 1;\n     }\n     }\n int main(){\n int h;\n cin>>h;\n cout<<factorial(h)<<endl;\n }\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\nif(n!=0){\n         return n*factorial(n-1);\n         }\n         \nelse{\n     return 1;\n     }\n     }\n int main(){\n int h;\n cin>>h;\n cout<<factorial(h)<<endl;\n }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n==0){\n return 1;\n }else{\n return n* factorial(n-1);\n }\n }\n\n\n\n\n\n\n\n\nint main(){\n\nint a;\ncin >> a;\n\ncout <<factorial(a) <<endl;\n\n\n\n\n\n\n\n\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n        int x = n;\n        int a = n - 1;\n        if ( n == 0 or n == 1)\n        x = 1;\n        else { \n            while (a != 1) {\n                x = x * a;\n                --a;\n            }\n        }   \n    return x;\n}\n\nint main () {\n}   \n\n    \n                \n                \n    \n    \n\n\n       \n    \n        \n          \n    \n \n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    int i;\n    cin >> n;\n    for( i = 1; i < n; i++){\n        n = n*i;\n        }\n    return n;\n}\n    \n    \n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n   if (n == 0) return 1;\n   else return (n * factorial (n-1));\n   }\n\n\n",
  "ELF\u0001\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0003\u0000\u0001\u0000\u0000\u0000\u0000\u0004\b4\u0000\u0000\u0000Ð\u0012\u0000\u0000\u0000\u0000\u0000\u00004\u0000 \u0000\t\u0000(\u0000$\u0000!\u0000\u0006\u0000\u0000\u00004\u0000\u0000\u00004\u0004\b4\u0004\b \u0001\u0000\u0000 \u0001\u0000\u0000\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0003\u0000\u0000\u0000T\u0001\u0000\u0000T\u0004\bT\u0004\b\u0013\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0004\bp\t\u0000\u0000p\t\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0001\u0000\u0000\u0000p\t\u0000\u0000p\u0004\bp\u0004\b<\u0001\u0000\u0000h\u0002\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u0004\b\u0004\bà\u0000\u0000\u0000à\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000h\u0001\u0000\u0000h\u0004\bh\u0004\b \u0000\u0000\u0000 \u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0004\b\u0004\b\u0018\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Påtdô\b\u0000\u0000ô\u0004\bô\u0004\b\u001c\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Qåtd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000/lib/ld-linux.so.2\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000GNU\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000SuSESuSE\u0000\u0000\u0000\u0000\u0001\u0000\n\u0000\u0003\u0000\u0000\u0000\u000f\u0000\u0000\u0000\u000e\u0000\u0000\u0000\f\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0007\u0000\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\n\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u000b\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0012\u0000\u0000\u0000¸\u0000\u0000\u0000°\u0004\b\u0000\u0000\u0000\u0011\u0000\u0019\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0002\u0000\u0000\u0012\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0012\u0000\u0000\u0000\\\u0000\u0000\u0000@\u0004\b\u0000\u0000\u0000\u0011\u0000\u0019\u0000#\u0001\u0000\u0000\u0000\u0000\u0000\u0000î\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0000\u0000\u0000k\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0014\u0001\u0000\u0000ð\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u000f\u0000}\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0000\u0000\u0000\u0012\u0000\u0000\u0000Â\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000/\u0000\u0000\u0000¸\u0004\b\u0010\u0004\u0000\u0000\u0012\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000§\u0002\u0000\u0000\u0012\u0000\u0000\u0000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000Ö\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000libstdc++.so.6\u0000_ZNSolsEl\u0000_ZNSirsERi\u0000_ZNSolsEm\u0000__gxx_personality_v0\u0000_ZNSt8ios_base4InitC1Ev\u0000_ZSt3cin\u0000_ZNSt8ios_base4InitD1Ev\u0000_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_\u0000_ZSt4cout\u0000_Jv_RegisterClasses\u0000__gmon_start__\u0000libm.so.6\u0000libgcc_s.so.1\u0000libc.so.6\u0000__cxa_atexit\u0000_IO_stdin_used\u0000__libc_start_main\u0000GLIBC_2.0\u0000GLIBC_2.1.3\u0000CXXABI_1.3\u0000GLIBCXX_3.4\u0000\u0000\u0000\u0002\u0000\u0002\u0000\u0002\u0000\u0003\u0000\u0002\u0000\u0004\u0000\u0002\u0000\u0001\u0000\u0002\u0000\u0000\u0000\u0005\u0000\u0002\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0002\u0000ý\u0000\u0000\u0000\u0010\u0000\u0000\u00000\u0000\u0000\u0000\u0010ii\r\u0000\u0000\u0004\u00005\u0001\u0000\u0000\u0010\u0000\u0000\u0000s\u001fi\t\u0000\u0000\u0003\u0000?\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ó¯k\u0005\u0000\u0000\u0005\u0000K\u0001\u0000\u0000\u0010\u0000\u0000\u0000t)\b\u0000\u0000\u0002\u0000V\u0001\u0000\u0000\u0000\u0000\u0000\u0000h\u0004\b\u0006\u000e\u0000\u0000°\u0004\b\u0005\u0002\u0000\u0000@\u0004\b\u0005\u0005\u0000\u0000x\u0004\b\u0007\u0001\u0000\u0000|\u0004\b\u0007\u0003\u0000\u0000\u0004\b\u0007\u0004\u0000\u0000\u0004\b\u0007\u0006\u0000\u0000\u0004\b\u0007\u0007\u0000\u0000\u0004\b\u0007\t\u0000\u0000\u0004\b\u0007\u000b\u0000\u0000\u0004\b\u0007\f\u0000\u0000\u0004\b\u0007\r\u0000\u0000\u0004\b\u0007\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Uåì\bèõ\u0000\u0000\u0000èP\u0001\u0000\u0000è[\u0003\u0000\u0000ÉÃ\u0000ÿ5p\u0004\bÿ%t\u0004\b\u0000\u0000\u0000\u0000ÿ%x\u0004\bh\u0000\u0000\u0000\u0000éàÿÿÿÿ%|\u0004\bh\b\u0000\u0000\u0000éÐÿÿÿÿ%\u0004\bh\u0010\u0000\u0000\u0000éÀÿÿÿÿ%\u0004\bh\u0018\u0000\u0000\u0000é°ÿÿÿÿ%\u0004\bh \u0000\u0000\u0000é ÿÿÿÿ%\u0004\bh(\u0000\u0000\u0000éÿÿÿÿ%\u0004\bh0\u0000\u0000\u0000éÿÿÿÿ%\u0004\bh8\u0000\u0000\u0000épÿÿÿÿ%\u0004\bh@\u0000\u0000\u0000é`ÿÿÿÿ%\u0004\bhH\u0000\u0000\u0000éPÿÿÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00001í^áäðPTRh@\u0004\bhÐ\u0004\bQVhP\u0004\bègÿÿÿôUåSè\u001c\u0000\u0000\u0000Ã3\u0014\u0000\u0000ì\u0004üÿÿÿÒt\u0005èÿÿÿX[]Ã\u001c$ÃUåPP=Ð\u0004\b\u0000t\fë\u001cÀ\u0004£¨\u0004\bÿÒ¡¨\u0004\b\u0010ÒuëÆ\u0005Ð\u0004\b\u0001ÉÃöUåQQ\u0015\u0004\bÒt\u0016¸\u0000\u0000\u0000\u0000Àt\rì\fh\u0004\bÿÐÄ\u0010ÉÃUåS»\u0001\u0000\u0000\u0000M\bÉt\u000e1ÒÈ)ÐB\u000f¯Ø9ÑuôØ[]Ã¶\u0000\u0000\u0000\u0000¿\u0000\u0000\u0000\u0000UåÇE\bÔ\u0004\b]éØþÿÿUúÿÿ\u0000\u0000\u000fÂHå\u000fÀQÐQu\u0002ÉÃì\fhÔ\u0004\bè3þÿÿÄ\fh¤\u0004\bj\u0000hð\u0004\bè?þÿÿÄ\u0010ÉÃöUºÿÿ\u0000\u0000¸\u0001\u0000\u0000\u0000å]ë°Uåì\u0018äðì\u0018EüPh@\u0004\bè.þÿÿEüPèMÿÿÿÂ¡°\u0004\bÄ\u0014@ô¼\u0004\b¨@u\u0004¨\bt\"PPRh°\u0004\bèÍýÿÿÄ\u0010ì\fPè\u0001þÿÿ1ÀÉÃt&\u0000PPRh°\u0004\bè\u000bþÿÿÄ\u0010ì\fPèßýÿÿ1ÀÉÃUåì\u0018]ôèwþÿÿÃ\u0012\u0000\u0000uø}üèAýÿÿ@\u0000\u0000\u0000@\u0000\u0000\u0000)ÐÁø\u0002Eðu\r]ôuø}üì]Ã1ÿÖv\u0000¼'\u0000\u0000\u0000\u0000Gÿ\u0016Æ\u0004;}ðrõ]ôuø}üì]Ã´&\u0000\u0000\u0000\u0000Uåì\u0018]ôè\u0007þÿÿÃ\u001e\u0012\u0000\u0000uø}ü@\u0000\u0000\u0000@\u0000\u0000\u0000)ÐÁø\u0002EðHøÿt\u001741ÿ´&\u0000\u0000\u0000\u0000Gÿ\u0016î\u00049}ðuõè@\u0000\u0000\u0000]ôuø}üì]ÃUåSR¡t\u0004\bøÿt\u0012»t\u0004\bÿÐCüë\u0004øÿuóX[]Ã\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000UåSì\u0004èyýÿÿÃ\u0011\u0000\u0000èyýÿÿY[]Ã\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0001\u001b\u0003;\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000\fþÿÿ8\u0000\u0000\u0000\\þÿÿT\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001zP\u0000\u0001|\b\u0005\u0000¸\u0004\b\f\u0004\u0004\u0001\u0000\u0000\u0018\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0004\b>\u0000\u0000\u0000\u0000A\u000e\b\u0002L\r\u0005S.\u0010 \u0000\u0000\u0000<\u0000\u0000\u0000P\u0004\b}\u0000\u0000\u0000\u0000A\u000e\b\u0002B\r\u0005R.\u0010I.\u0004h.\u0010\u0000\u0000\u0000\u0000\u0000\u0000ÿÿÿÿ@\u0004\b\u0000\u0000\u0000\u0000ÿÿÿÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000å\u0000\u0000\u0000\u0001\u0000\u0000\u0000ï\u0000\u0000\u0000\u0001\u0000\u0000\u0000ý\u0000\u0000\u0000\f\u0000\u0000\u00000\u0004\b\r\u0000\u0000\u0000Ð\u0004\b\u0004\u0000\u0000\u0000 \u0004\b\u0005\u0000\u0000\u0000à\u0004\b\u0006\u0000\u0000\u0000ð\u0004\b\n\u0000\u0000\u0000b\u0001\u0000\u0000\u000b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000l\u0004\b\u0002\u0000\u0000\u0000P\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ø\u0004\b\u0011\u0000\u0000\u0000À\u0004\b\u0012\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0013\u0000\u0000\u0000\b\u0000\u0000\u0000þÿÿo`\u0004\bÿÿÿo\u0002\u0000\u0000\u0000ðÿÿoB\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000^\u0004\bn\u0004\b~\u0004\b\u0004\b\u0004\b®\u0004\b¾\u0004\bÎ\u0004\bÞ\u0004\bî\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000\u001c\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00004\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000U\u0004\b\u0004\u0000\u0000\u0000Ð\u0004\b\u0012\u0000\u0000\u00000\u0004\b\u000b\u0000\u0000\u00000\u0004\b%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000,\u0000\u0000\u0000\u0002\u0000{\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000U\u0004\b\u0004\u0000\u0000\u0000ç\u0004\b\u0004\u0000\u0000\u0000E\u0004\b\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000!\u0000\u0000\u0000\u0002\u0000o\u0000\u0000\u0000\u0000\u0000\u0000y\u0000\u0000\u0000_IO_stdin_used\u0000\u0000\u0000\u0000\u0000k\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0000\u0000\u0000\u0004\b\"\u0004\b../sysdeps/i386/elf/start.S\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000GNU AS 2.16.91.0.2\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0014\u0000\u0000\u0000\u0004\u0001X\u0000\u0000\u0000$\u0004\b$\u0004\b\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000N\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\u0007\u0002t\u0000\u0000\u0000\u0001\b\u0002\u0000\u0000\u0000\u0002\u0007\u0002\u0000\u0000\u0000\u0004\u0007\u0002v\u0000\u0000\u0000\u0001\u0006\u0002\u0007\u0000\u0000\u0000\u0002\u0005\u0003int\u0000\u0004\u0005\u0002@\u0000\u0000\u0000\b\u0005\u0002\u0000\u0000\u0000\b\u0007\u0002E\u0000\u0000\u0000\u0004\u0005\u0002\u0000\u0000\u0000\u0004\u0007\u0002}\u0000\u0000\u0000\u0001\u0006\u0004¬\u0000\u0000\u0000\u0001\u0019\u0000\u0000\u0000\u0001\u0005\u0003ð\u0004\b\u0005O\u0000\u0000\u0000\u0000w\u0000\u0000\u0000\u0002\u0000V\u0000\u0000\u0000\u0004\u0001|\u0000\u0000\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crti.S\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000GNU AS 2.16.91.0.2\u0000\u0001w\u0000\u0000\u0000\u0002\u0000f\u0000\u0000\u0000\u0004\u0001\u001c\u0001\u0000\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crtn.S\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000GNU AS 2.16.91.0.2\u0000\u0001\u0001\u0011\u0000\u0010\u0006\u0011\u0001\u0012\u0001\u0003\b\u001b\b%\b\u0013\u0005\u0000\u0000\u0000\u0001\u0011\u0001\u0010\u0006\u0012\u0001\u0011\u0001%\u000e\u0013\u000b\u0003\u000e\u001b\u000e\u0000\u0000\u0002$\u0000\u0003\u000e\u000b\u000b>\u000b\u0000\u0000\u0003$\u0000\u0003\b\u000b\u000b>\u000b\u0000\u0000\u00044\u0000\u0003\u000e:\u000b;\u000bI\u0013?\f\u0002\n\u0000\u0000\u0005&\u0000I\u0013\u0000\u0000\u0000\u0001\u0011\u0000\u0010\u0006\u0003\b\u001b\b%\b\u0013\u0005\u0000\u0000\u0000\u0001\u0011\u0000\u0010\u0006\u0003\b\u001b\b%\b\u0013\u0005\u0000\u0000\u0000T\u0000\u0000\u0000\u0002\u0000/\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001../sysdeps/i386/elf\u0000\u0000start.S\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002\u0000\u0004\b\u0003À\u0000\u00010\u001e1:\"\u001f\u0003\u0018\u001dVW\u001e\u001fYX\u0002\u0001\u0000\u0001\u0001 \u0000\u0000\u0000\u0002\u0000\u001a\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0000init.c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000C\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001/usr/src/packages/BUILD/glibc-2.3/cc/csu\u0000\u0000crti.S\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002U\u0004\b\u0003Ä\u0000\u0001:\u0002\u0001\u0000\u0001\u0001\u0000\u0005\u0002Ð\u0004\b\u00031\u0001\u001e,\u001e:V\u0002\u0006\u0000\u0001\u0001\u0000\u0005\u00020\u0004\b\u0003!\u0001\u001e,:\u0002\u0005\u0000\u0001\u0001\u0000\u0005\u00020\u0004\b\u0003\u000b\u0001\u001e,\u001eVd:d,,W\u001e\u001e\u001e\u0002\u0001\u0000\u0001\u0001{\u0000\u0000\u0000\u0002\u0000C\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001/usr/src/packages/BUILD/glibc-2.3/cc/csu\u0000\u0000crtn.S\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002U\u0004\b\u0003\"\u0001:\u0002\u0001\u0000\u0001\u0001\u0000\u0005\u0002ç\u0004\b\u0003\u0012\u0001\u001e\u001e\u001e\u0002\u0001\u0000\u0001\u0001\u0000\u0005\u0002E\u0004\b\u0003\t\u0001\u001e\u0002\u0001\u0000\u0001\u0001init.c\u0000short int\u0000GNU C 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000long long int\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000unsigned char\u0000long long unsigned int\u0000short unsigned int\u0000_IO_stdin_used\u0000\u0000.symtab\u0000.strtab\u0000.shstrtab\u0000.interp\u0000.note.ABI-tag\u0000.note.SuSE\u0000.hash\u0000.dynsym\u0000.dynstr\u0000.gnu.version\u0000.gnu.version_r\u0000.rel.dyn\u0000.rel.plt\u0000.init\u0000.text\u0000.fini\u0000.rodata\u0000.eh_frame_hdr\u0000.eh_frame\u0000.ctors\u0000.dtors\u0000.jcr\u0000.dynamic\u0000.got\u0000.got.plt\u0000.data\u0000.bss\u0000.comment\u0000.debug_aranges\u0000.debug_pubnames\u0000.debug_info\u0000.debug_abbrev\u0000.debug_line\u0000.debug_str\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000T\u0004\bT\u0001\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000h\u0004\bh\u0001\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\b\u0001\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0002\u0000\u0000\u0000 \u0004\b \u0001\u0000\u0000P\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000B\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0002\u0000\u0000\u0000ð\u0004\bð\u0001\u0000\u0000ð\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000J\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000à\u0004\bà\u0002\u0000\u0000b\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000R\u0000\u0000\u0000ÿÿÿo\u0002\u0000\u0000\u0000B\u0004\bB\u0004\u0000\u0000\u001e\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000_\u0000\u0000\u0000þÿÿo\u0002\u0000\u0000\u0000`\u0004\b`\u0004\u0000\u0000`\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000n\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000À\u0004\bÀ\u0004\u0000\u0000\u0018\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000w\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ø\u0004\bØ\u0004\u0000\u0000P\u0000\u0000\u0000\u0005\u0000\u0000\u0000\f\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u00000\u0004\b0\u0005\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000{\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000H\u0004\bH\u0005\u0000\u0000°\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0004\b\u0000\u0006\u0000\u0000È\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000Ð\u0004\bÐ\b\u0000\u0000\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000ì\u0004\bì\b\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000ô\u0004\bô\b\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000¨\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0010\u0004\b\u0010\t\u0000\u0000`\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000²\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000p\u0004\bp\t\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000¹\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000|\u0004\b|\t\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0004\b\t\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000Å\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0004\b\t\u0000\u0000à\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000Î\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000h\u0004\bh\n\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000l\u0004\bl\n\u0000\u00004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000 \u0004\b \n\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000â\u0000\u0000\u0000\b\u0000\u0000\u0000\u0003\u0000\u0000\u0000°\u0004\b¬\n\u0000\u0000(\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ç\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¬\n\u0000\u0000s\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ÿ\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¨\f\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Í\f\u0000\u0000ö\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ã\u000e\u0000\u0000v\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00009\u000f\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ô\u0010\u0000\u0000»\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000@\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000p\u0018\u0000\u0000ð\u0005\u0000\u0000#\u0000\u0000\u0000@\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\t\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`\u001e\u0000\u00000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000\u0000\u0000\u0000\u0000h\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0003\u0000\u0000\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0004\u0000\u0000\u0000\u0000\u0000ð\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0005\u0000\u0000\u0000\u0000\u0000à\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0006\u0000\u0000\u0000\u0000\u0000B\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000`\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\b\u0000\u0000\u0000\u0000\u0000À\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\t\u0000\u0000\u0000\u0000\u0000Ø\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\n\u0000\u0000\u0000\u0000\u00000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000b\u0000\u0000\u0000\u0000\u0000H\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\r\u0000\u0000\u0000\u0000\u0000Ð\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000e\u0000\u0000\u0000\u0000\u0000ì\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000f\u0000\u0000\u0000\u0000\u0000ô\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0010\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0011\u0000\u0000\u0000\u0000\u0000p\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0012\u0000\u0000\u0000\u0000\u0000|\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0015\u0000\u0000\u0000\u0000\u0000h\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0016\u0000\u0000\u0000\u0000\u0000l\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0017\u0000\u0000\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0018\u0000\u0000\u0000\u0000\u0000°\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001d\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000!\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000#\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ<\u0000\u0000\u00000\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿW\u0000\u0000\u0000p\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0012\u0000e\u0000\u0000\u0000|\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0013\u0000s\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0014\u0000\u0000\u0000\u0000Ð\u0004\b\u0001\u0000\u0000\u0000\u0001\u0000\u0019\u0000\u0000\u0000\u0000¨\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0018\u0000\u0000\u0000\u0000`\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000¬\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ¸\u0000\u0000\u0000x\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0012\u0000Å\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0013\u0000Ò\u0000\u0000\u0000l\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0011\u0000à\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0014\u0000ì\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\u0002\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ2\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ:\u0001\u0000\u0000@\u0004\b\u0010\u0000\u0000\u0000\u0002\u0000\r\u0000S\u0001\u0000\u0000Ô\u0004\b\u0001\u0000\u0000\u0000\u0001\u0000\u0019\u0000a\u0001\u0000\u0000ð\u0004\b\u0010\u0000\u0000\u0000\u0002\u0000\r\u0000i\u0001\u0000\u0000\u0000\u0004\b>\u0000\u0000\u0000\u0002\u0000\r\u0000\u0001\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿª\u0001\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿ½\u0001\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿÎ\u0001\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿá\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0012\u0000\u0000\u0000\u0006\u0002\u0000\u0000°\u0004\b\u0000\u0000\u0000\u0011\u0000\u0019\u0000\u001d\u0002\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0011\u0000\u0015\u0000&\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0002\u0000\u0000\u0012\u0000\u0000\u0000=\u0002\u0000\u0000ì\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u000f\u0000D\u0002\u0000\u0000¤\u0004\b\u0000\u0000\u0000\u0000\u0011\u0002\u0018\u0000Q\u0002\u0000\u0000@\u0004\b]\u0000\u0000\u0000\u0012\u0000\r\u0000a\u0002\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0012\u0000\u0000\u0000{\u0002\u0000\u00000\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u000b\u0000\u0002\u0000\u0000À\u0004\b#\u0000\u0000\u0000\u0012\u0000\r\u0000\u0002\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\r\u0000\u0002\u0000\u0000@\u0004\b\u0000\u0000\u0000\u0011\u0000\u0019\u0000¬\u0002\u0000\u0000Ð\u0004\bh\u0000\u0000\u0000\u0012\u0000\r\u0000¼\u0002\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿÈ\u0002\u0000\u0000P\u0004\b}\u0000\u0000\u0000\u0012\u0000\r\u0000Í\u0002\u0000\u0000\u0000\u0000\u0000\u0000î\u0000\u0000\u0000\u0012\u0000\u0000\u0000ê\u0002\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000 \u0000\u0018\u0000õ\u0002\u0000\u0000Ð\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u000e\u0000û\u0002\u0000\u0000\u0000\u0000\u0000\u0000k\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0013\u0003\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿ\u001a\u0003\u0000\u0000U\u0004\b\u0000\u0000\u0000\u0000\u0012\u0002\r\u00001\u0003\u0000\u0000l\u0004\b\u0000\u0000\u0000\u0000\u0011\u0002\u0017\u0000G\u0003\u0000\u0000Ø\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿL\u0003\u0000\u0000ð\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u000f\u0000[\u0003\u0000\u0000\u0000\u0000\u0000\u0000T\u0000\u0000\u0000\u0012\u0000\u0000\u0000£\u0003\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0010\u0000\u0018\u0000°\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000Ä\u0003\u0000\u0000¸\u0004\b\u0010\u0004\u0000\u0000\u0012\u0000\u0000\u0000å\u0003\u0000\u0000\u0000\u0000\u0000\u0000§\u0002\u0000\u0000\u0012\u0000\u0000\u0000ü\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000!\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000initfini.c\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crti.S\u0000call_gmon_start\u0000crtstuff.c\u0000__CTOR_LIST__\u0000__DTOR_LIST__\u0000__JCR_LIST__\u0000completed.4497\u0000p.4496\u0000__do_global_dtors_aux\u0000frame_dummy\u0000__CTOR_END__\u0000__DTOR_END__\u0000__FRAME_END__\u0000__JCR_END__\u0000__do_global_ctors_aux\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crtn.S\u00004ex1.cc\u0000_GLOBAL__I__Z9factoriali\u0000_ZSt8__ioinit\u0000__tcf_0\u0000_Z41__static_initialization_and_destruction_0ii\u0000__fini_array_end\u0000__fini_array_start\u0000__init_array_end\u0000__init_array_start\u0000_ZNSt8ios_base4InitC1Ev@@GLIBCXX_3.4\u0000_ZSt4cout@@GLIBCXX_3.4\u0000_DYNAMIC\u0000_ZNSolsEm@@GLIBCXX_3.4\u0000_fp_hw\u0000__dso_handle\u0000__libc_csu_fini\u0000__cxa_atexit@@GLIBC_2.1.3\u0000_init\u0000_Z9factoriali\u0000_start\u0000_ZSt3cin@@GLIBCXX_3.4\u0000__libc_csu_init\u0000__bss_start\u0000main\u0000__libc_start_main@@GLIBC_2.0\u0000data_start\u0000_fini\u0000_ZNSirsERi@@GLIBCXX_3.4\u0000_edata\u0000__i686.get_pc_thunk.bx\u0000_GLOBAL_OFFSET_TABLE_\u0000_end\u0000_IO_stdin_used\u0000_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@@GLIBCXX_3.4\u0000__data_start\u0000_Jv_RegisterClasses\u0000__gxx_personality_v0@@CXXABI_1.3\u0000_ZNSolsEl@@GLIBCXX_3.4\u0000_ZNSt8ios_base4InitD1Ev@@GLIBCXX_3.4\u0000__gmon_start__\u0000\n\n",
  "ELF\u0001\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0003\u0000\u0001\u0000\u0000\u0000\u0000\u0004\b4\u0000\u0000\u0000Ð\u0012\u0000\u0000\u0000\u0000\u0000\u00004\u0000 \u0000\t\u0000(\u0000$\u0000!\u0000\u0006\u0000\u0000\u00004\u0000\u0000\u00004\u0004\b4\u0004\b \u0001\u0000\u0000 \u0001\u0000\u0000\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0003\u0000\u0000\u0000T\u0001\u0000\u0000T\u0004\bT\u0004\b\u0013\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0004\bp\t\u0000\u0000p\t\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0001\u0000\u0000\u0000p\t\u0000\u0000p\u0004\bp\u0004\b<\u0001\u0000\u0000h\u0002\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u0004\b\u0004\bà\u0000\u0000\u0000à\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000h\u0001\u0000\u0000h\u0004\bh\u0004\b \u0000\u0000\u0000 \u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0004\b\u0004\b\u0018\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Påtdô\b\u0000\u0000ô\u0004\bô\u0004\b\u001c\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Qåtd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000/lib/ld-linux.so.2\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000GNU\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000SuSESuSE\u0000\u0000\u0000\u0000\u0001\u0000\n\u0000\u0003\u0000\u0000\u0000\u000f\u0000\u0000\u0000\u000e\u0000\u0000\u0000\f\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0007\u0000\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\n\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u000b\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0012\u0000\u0000\u0000¸\u0000\u0000\u0000°\u0004\b\u0000\u0000\u0000\u0011\u0000\u0019\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0002\u0000\u0000\u0012\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0012\u0000\u0000\u0000\\\u0000\u0000\u0000@\u0004\b\u0000\u0000\u0000\u0011\u0000\u0019\u0000#\u0001\u0000\u0000\u0000\u0000\u0000\u0000î\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0000\u0000\u0000k\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0014\u0001\u0000\u0000ð\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u000f\u0000}\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0000\u0000\u0000\u0012\u0000\u0000\u0000Â\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000/\u0000\u0000\u0000¸\u0004\b\u0010\u0004\u0000\u0000\u0012\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000§\u0002\u0000\u0000\u0012\u0000\u0000\u0000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000Ö\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000libstdc++.so.6\u0000_ZNSolsEl\u0000_ZNSirsERi\u0000_ZNSolsEm\u0000__gxx_personality_v0\u0000_ZNSt8ios_base4InitC1Ev\u0000_ZSt3cin\u0000_ZNSt8ios_base4InitD1Ev\u0000_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_\u0000_ZSt4cout\u0000_Jv_RegisterClasses\u0000__gmon_start__\u0000libm.so.6\u0000libgcc_s.so.1\u0000libc.so.6\u0000__cxa_atexit\u0000_IO_stdin_used\u0000__libc_start_main\u0000GLIBC_2.0\u0000GLIBC_2.1.3\u0000CXXABI_1.3\u0000GLIBCXX_3.4\u0000\u0000\u0000\u0002\u0000\u0002\u0000\u0002\u0000\u0003\u0000\u0002\u0000\u0004\u0000\u0002\u0000\u0001\u0000\u0002\u0000\u0000\u0000\u0005\u0000\u0002\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0002\u0000ý\u0000\u0000\u0000\u0010\u0000\u0000\u00000\u0000\u0000\u0000\u0010ii\r\u0000\u0000\u0004\u00005\u0001\u0000\u0000\u0010\u0000\u0000\u0000s\u001fi\t\u0000\u0000\u0003\u0000?\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ó¯k\u0005\u0000\u0000\u0005\u0000K\u0001\u0000\u0000\u0010\u0000\u0000\u0000t)\b\u0000\u0000\u0002\u0000V\u0001\u0000\u0000\u0000\u0000\u0000\u0000h\u0004\b\u0006\u000e\u0000\u0000°\u0004\b\u0005\u0002\u0000\u0000@\u0004\b\u0005\u0005\u0000\u0000x\u0004\b\u0007\u0001\u0000\u0000|\u0004\b\u0007\u0003\u0000\u0000\u0004\b\u0007\u0004\u0000\u0000\u0004\b\u0007\u0006\u0000\u0000\u0004\b\u0007\u0007\u0000\u0000\u0004\b\u0007\t\u0000\u0000\u0004\b\u0007\u000b\u0000\u0000\u0004\b\u0007\f\u0000\u0000\u0004\b\u0007\r\u0000\u0000\u0004\b\u0007\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Uåì\bèõ\u0000\u0000\u0000èP\u0001\u0000\u0000è[\u0003\u0000\u0000ÉÃ\u0000ÿ5p\u0004\bÿ%t\u0004\b\u0000\u0000\u0000\u0000ÿ%x\u0004\bh\u0000\u0000\u0000\u0000éàÿÿÿÿ%|\u0004\bh\b\u0000\u0000\u0000éÐÿÿÿÿ%\u0004\bh\u0010\u0000\u0000\u0000éÀÿÿÿÿ%\u0004\bh\u0018\u0000\u0000\u0000é°ÿÿÿÿ%\u0004\bh \u0000\u0000\u0000é ÿÿÿÿ%\u0004\bh(\u0000\u0000\u0000éÿÿÿÿ%\u0004\bh0\u0000\u0000\u0000éÿÿÿÿ%\u0004\bh8\u0000\u0000\u0000épÿÿÿÿ%\u0004\bh@\u0000\u0000\u0000é`ÿÿÿÿ%\u0004\bhH\u0000\u0000\u0000éPÿÿÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00001í^áäðPTRh@\u0004\bhÐ\u0004\bQVhP\u0004\bègÿÿÿôUåSè\u001c\u0000\u0000\u0000Ã3\u0014\u0000\u0000ì\u0004üÿÿÿÒt\u0005èÿÿÿX[]Ã\u001c$ÃUåPP=Ð\u0004\b\u0000t\fë\u001cÀ\u0004£¨\u0004\bÿÒ¡¨\u0004\b\u0010ÒuëÆ\u0005Ð\u0004\b\u0001ÉÃöUåQQ\u0015\u0004\bÒt\u0016¸\u0000\u0000\u0000\u0000Àt\rì\fh\u0004\bÿÐÄ\u0010ÉÃUåS»\u0001\u0000\u0000\u0000M\bÉt\u000e1ÒÈ)ÐB\u000f¯Ø9ÑuôØ[]Ã¶\u0000\u0000\u0000\u0000¿\u0000\u0000\u0000\u0000UåÇE\bÔ\u0004\b]éØþÿÿUúÿÿ\u0000\u0000\u000fÂHå\u000fÀQÐQu\u0002ÉÃì\fhÔ\u0004\bè3þÿÿÄ\fh¤\u0004\bj\u0000hð\u0004\bè?þÿÿÄ\u0010ÉÃöUºÿÿ\u0000\u0000¸\u0001\u0000\u0000\u0000å]ë°Uåì\u0018äðì\u0018EüPh@\u0004\bè.þÿÿEüPèMÿÿÿÂ¡°\u0004\bÄ\u0014@ô¼\u0004\b¨@u\u0004¨\bt\"PPRh°\u0004\bèÍýÿÿÄ\u0010ì\fPè\u0001þÿÿ1ÀÉÃt&\u0000PPRh°\u0004\bè\u000bþÿÿÄ\u0010ì\fPèßýÿÿ1ÀÉÃUåì\u0018]ôèwþÿÿÃ\u0012\u0000\u0000uø}üèAýÿÿ@\u0000\u0000\u0000@\u0000\u0000\u0000)ÐÁø\u0002Eðu\r]ôuø}üì]Ã1ÿÖv\u0000¼'\u0000\u0000\u0000\u0000Gÿ\u0016Æ\u0004;}ðrõ]ôuø}üì]Ã´&\u0000\u0000\u0000\u0000Uåì\u0018]ôè\u0007þÿÿÃ\u001e\u0012\u0000\u0000uø}ü@\u0000\u0000\u0000@\u0000\u0000\u0000)ÐÁø\u0002EðHøÿt\u001741ÿ´&\u0000\u0000\u0000\u0000Gÿ\u0016î\u00049}ðuõè@\u0000\u0000\u0000]ôuø}üì]ÃUåSR¡t\u0004\bøÿt\u0012»t\u0004\bÿÐCüë\u0004øÿuóX[]Ã\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000UåSì\u0004èyýÿÿÃ\u0011\u0000\u0000èyýÿÿY[]Ã\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0001\u001b\u0003;\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000\fþÿÿ8\u0000\u0000\u0000\\þÿÿT\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001zP\u0000\u0001|\b\u0005\u0000¸\u0004\b\f\u0004\u0004\u0001\u0000\u0000\u0018\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0004\b>\u0000\u0000\u0000\u0000A\u000e\b\u0002L\r\u0005S.\u0010 \u0000\u0000\u0000<\u0000\u0000\u0000P\u0004\b}\u0000\u0000\u0000\u0000A\u000e\b\u0002B\r\u0005R.\u0010I.\u0004h.\u0010\u0000\u0000\u0000\u0000\u0000\u0000ÿÿÿÿ@\u0004\b\u0000\u0000\u0000\u0000ÿÿÿÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000å\u0000\u0000\u0000\u0001\u0000\u0000\u0000ï\u0000\u0000\u0000\u0001\u0000\u0000\u0000ý\u0000\u0000\u0000\f\u0000\u0000\u00000\u0004\b\r\u0000\u0000\u0000Ð\u0004\b\u0004\u0000\u0000\u0000 \u0004\b\u0005\u0000\u0000\u0000à\u0004\b\u0006\u0000\u0000\u0000ð\u0004\b\n\u0000\u0000\u0000b\u0001\u0000\u0000\u000b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000l\u0004\b\u0002\u0000\u0000\u0000P\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ø\u0004\b\u0011\u0000\u0000\u0000À\u0004\b\u0012\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0013\u0000\u0000\u0000\b\u0000\u0000\u0000þÿÿo`\u0004\bÿÿÿo\u0002\u0000\u0000\u0000ðÿÿoB\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000^\u0004\bn\u0004\b~\u0004\b\u0004\b\u0004\b®\u0004\b¾\u0004\bÎ\u0004\bÞ\u0004\bî\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000\u001c\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00004\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000U\u0004\b\u0004\u0000\u0000\u0000Ð\u0004\b\u0012\u0000\u0000\u00000\u0004\b\u000b\u0000\u0000\u00000\u0004\b%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000,\u0000\u0000\u0000\u0002\u0000{\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000U\u0004\b\u0004\u0000\u0000\u0000ç\u0004\b\u0004\u0000\u0000\u0000E\u0004\b\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000!\u0000\u0000\u0000\u0002\u0000o\u0000\u0000\u0000\u0000\u0000\u0000y\u0000\u0000\u0000_IO_stdin_used\u0000\u0000\u0000\u0000\u0000k\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0000\u0000\u0000\u0004\b\"\u0004\b../sysdeps/i386/elf/start.S\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000GNU AS 2.16.91.0.2\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0014\u0000\u0000\u0000\u0004\u0001X\u0000\u0000\u0000$\u0004\b$\u0004\b\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000N\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\u0007\u0002t\u0000\u0000\u0000\u0001\b\u0002\u0000\u0000\u0000\u0002\u0007\u0002\u0000\u0000\u0000\u0004\u0007\u0002v\u0000\u0000\u0000\u0001\u0006\u0002\u0007\u0000\u0000\u0000\u0002\u0005\u0003int\u0000\u0004\u0005\u0002@\u0000\u0000\u0000\b\u0005\u0002\u0000\u0000\u0000\b\u0007\u0002E\u0000\u0000\u0000\u0004\u0005\u0002\u0000\u0000\u0000\u0004\u0007\u0002}\u0000\u0000\u0000\u0001\u0006\u0004¬\u0000\u0000\u0000\u0001\u0019\u0000\u0000\u0000\u0001\u0005\u0003ð\u0004\b\u0005O\u0000\u0000\u0000\u0000w\u0000\u0000\u0000\u0002\u0000V\u0000\u0000\u0000\u0004\u0001|\u0000\u0000\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crti.S\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000GNU AS 2.16.91.0.2\u0000\u0001w\u0000\u0000\u0000\u0002\u0000f\u0000\u0000\u0000\u0004\u0001\u001c\u0001\u0000\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crtn.S\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000GNU AS 2.16.91.0.2\u0000\u0001\u0001\u0011\u0000\u0010\u0006\u0011\u0001\u0012\u0001\u0003\b\u001b\b%\b\u0013\u0005\u0000\u0000\u0000\u0001\u0011\u0001\u0010\u0006\u0012\u0001\u0011\u0001%\u000e\u0013\u000b\u0003\u000e\u001b\u000e\u0000\u0000\u0002$\u0000\u0003\u000e\u000b\u000b>\u000b\u0000\u0000\u0003$\u0000\u0003\b\u000b\u000b>\u000b\u0000\u0000\u00044\u0000\u0003\u000e:\u000b;\u000bI\u0013?\f\u0002\n\u0000\u0000\u0005&\u0000I\u0013\u0000\u0000\u0000\u0001\u0011\u0000\u0010\u0006\u0003\b\u001b\b%\b\u0013\u0005\u0000\u0000\u0000\u0001\u0011\u0000\u0010\u0006\u0003\b\u001b\b%\b\u0013\u0005\u0000\u0000\u0000T\u0000\u0000\u0000\u0002\u0000/\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001../sysdeps/i386/elf\u0000\u0000start.S\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002\u0000\u0004\b\u0003À\u0000\u00010\u001e1:\"\u001f\u0003\u0018\u001dVW\u001e\u001fYX\u0002\u0001\u0000\u0001\u0001 \u0000\u0000\u0000\u0002\u0000\u001a\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0000init.c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000C\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001/usr/src/packages/BUILD/glibc-2.3/cc/csu\u0000\u0000crti.S\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002U\u0004\b\u0003Ä\u0000\u0001:\u0002\u0001\u0000\u0001\u0001\u0000\u0005\u0002Ð\u0004\b\u00031\u0001\u001e,\u001e:V\u0002\u0006\u0000\u0001\u0001\u0000\u0005\u00020\u0004\b\u0003!\u0001\u001e,:\u0002\u0005\u0000\u0001\u0001\u0000\u0005\u00020\u0004\b\u0003\u000b\u0001\u001e,\u001eVd:d,,W\u001e\u001e\u001e\u0002\u0001\u0000\u0001\u0001{\u0000\u0000\u0000\u0002\u0000C\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001/usr/src/packages/BUILD/glibc-2.3/cc/csu\u0000\u0000crtn.S\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002U\u0004\b\u0003\"\u0001:\u0002\u0001\u0000\u0001\u0001\u0000\u0005\u0002ç\u0004\b\u0003\u0012\u0001\u001e\u001e\u001e\u0002\u0001\u0000\u0001\u0001\u0000\u0005\u0002E\u0004\b\u0003\t\u0001\u001e\u0002\u0001\u0000\u0001\u0001init.c\u0000short int\u0000GNU C 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000long long int\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000unsigned char\u0000long long unsigned int\u0000short unsigned int\u0000_IO_stdin_used\u0000\u0000.symtab\u0000.strtab\u0000.shstrtab\u0000.interp\u0000.note.ABI-tag\u0000.note.SuSE\u0000.hash\u0000.dynsym\u0000.dynstr\u0000.gnu.version\u0000.gnu.version_r\u0000.rel.dyn\u0000.rel.plt\u0000.init\u0000.text\u0000.fini\u0000.rodata\u0000.eh_frame_hdr\u0000.eh_frame\u0000.ctors\u0000.dtors\u0000.jcr\u0000.dynamic\u0000.got\u0000.got.plt\u0000.data\u0000.bss\u0000.comment\u0000.debug_aranges\u0000.debug_pubnames\u0000.debug_info\u0000.debug_abbrev\u0000.debug_line\u0000.debug_str\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000T\u0004\bT\u0001\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000h\u0004\bh\u0001\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\b\u0001\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0002\u0000\u0000\u0000 \u0004\b \u0001\u0000\u0000P\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000B\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0002\u0000\u0000\u0000ð\u0004\bð\u0001\u0000\u0000ð\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000J\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000à\u0004\bà\u0002\u0000\u0000b\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000R\u0000\u0000\u0000ÿÿÿo\u0002\u0000\u0000\u0000B\u0004\bB\u0004\u0000\u0000\u001e\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000_\u0000\u0000\u0000þÿÿo\u0002\u0000\u0000\u0000`\u0004\b`\u0004\u0000\u0000`\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000n\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000À\u0004\bÀ\u0004\u0000\u0000\u0018\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000w\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ø\u0004\bØ\u0004\u0000\u0000P\u0000\u0000\u0000\u0005\u0000\u0000\u0000\f\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u00000\u0004\b0\u0005\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000{\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000H\u0004\bH\u0005\u0000\u0000°\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0004\b\u0000\u0006\u0000\u0000È\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000Ð\u0004\bÐ\b\u0000\u0000\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000ì\u0004\bì\b\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000ô\u0004\bô\b\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000¨\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0010\u0004\b\u0010\t\u0000\u0000`\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000²\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000p\u0004\bp\t\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000¹\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000|\u0004\b|\t\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0004\b\t\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000Å\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0004\b\t\u0000\u0000à\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000Î\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000h\u0004\bh\n\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000l\u0004\bl\n\u0000\u00004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000 \u0004\b \n\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000â\u0000\u0000\u0000\b\u0000\u0000\u0000\u0003\u0000\u0000\u0000°\u0004\b¬\n\u0000\u0000(\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ç\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¬\n\u0000\u0000s\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ÿ\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¨\f\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Í\f\u0000\u0000ö\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ã\u000e\u0000\u0000v\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00009\u000f\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ô\u0010\u0000\u0000»\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000@\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000p\u0018\u0000\u0000ð\u0005\u0000\u0000#\u0000\u0000\u0000@\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\t\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`\u001e\u0000\u00000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000\u0000\u0000\u0000\u0000h\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0003\u0000\u0000\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0004\u0000\u0000\u0000\u0000\u0000ð\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0005\u0000\u0000\u0000\u0000\u0000à\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0006\u0000\u0000\u0000\u0000\u0000B\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000`\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\b\u0000\u0000\u0000\u0000\u0000À\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\t\u0000\u0000\u0000\u0000\u0000Ø\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\n\u0000\u0000\u0000\u0000\u00000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000b\u0000\u0000\u0000\u0000\u0000H\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\r\u0000\u0000\u0000\u0000\u0000Ð\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000e\u0000\u0000\u0000\u0000\u0000ì\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000f\u0000\u0000\u0000\u0000\u0000ô\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0010\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0011\u0000\u0000\u0000\u0000\u0000p\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0012\u0000\u0000\u0000\u0000\u0000|\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0015\u0000\u0000\u0000\u0000\u0000h\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0016\u0000\u0000\u0000\u0000\u0000l\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0017\u0000\u0000\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0018\u0000\u0000\u0000\u0000\u0000°\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001d\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000!\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000#\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ<\u0000\u0000\u00000\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿW\u0000\u0000\u0000p\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0012\u0000e\u0000\u0000\u0000|\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0013\u0000s\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0014\u0000\u0000\u0000\u0000Ð\u0004\b\u0001\u0000\u0000\u0000\u0001\u0000\u0019\u0000\u0000\u0000\u0000¨\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0018\u0000\u0000\u0000\u0000`\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000¬\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ¸\u0000\u0000\u0000x\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0012\u0000Å\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0013\u0000Ò\u0000\u0000\u0000l\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0011\u0000à\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0014\u0000ì\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\u0002\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ2\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ:\u0001\u0000\u0000@\u0004\b\u0010\u0000\u0000\u0000\u0002\u0000\r\u0000S\u0001\u0000\u0000Ô\u0004\b\u0001\u0000\u0000\u0000\u0001\u0000\u0019\u0000a\u0001\u0000\u0000ð\u0004\b\u0010\u0000\u0000\u0000\u0002\u0000\r\u0000i\u0001\u0000\u0000\u0000\u0004\b>\u0000\u0000\u0000\u0002\u0000\r\u0000\u0001\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿª\u0001\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿ½\u0001\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿÎ\u0001\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿá\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0012\u0000\u0000\u0000\u0006\u0002\u0000\u0000°\u0004\b\u0000\u0000\u0000\u0011\u0000\u0019\u0000\u001d\u0002\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0011\u0000\u0015\u0000&\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0002\u0000\u0000\u0012\u0000\u0000\u0000=\u0002\u0000\u0000ì\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u000f\u0000D\u0002\u0000\u0000¤\u0004\b\u0000\u0000\u0000\u0000\u0011\u0002\u0018\u0000Q\u0002\u0000\u0000@\u0004\b]\u0000\u0000\u0000\u0012\u0000\r\u0000a\u0002\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0012\u0000\u0000\u0000{\u0002\u0000\u00000\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u000b\u0000\u0002\u0000\u0000À\u0004\b#\u0000\u0000\u0000\u0012\u0000\r\u0000\u0002\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\r\u0000\u0002\u0000\u0000@\u0004\b\u0000\u0000\u0000\u0011\u0000\u0019\u0000¬\u0002\u0000\u0000Ð\u0004\bh\u0000\u0000\u0000\u0012\u0000\r\u0000¼\u0002\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿÈ\u0002\u0000\u0000P\u0004\b}\u0000\u0000\u0000\u0012\u0000\r\u0000Í\u0002\u0000\u0000\u0000\u0000\u0000\u0000î\u0000\u0000\u0000\u0012\u0000\u0000\u0000ê\u0002\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000 \u0000\u0018\u0000õ\u0002\u0000\u0000Ð\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u000e\u0000û\u0002\u0000\u0000\u0000\u0000\u0000\u0000k\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0013\u0003\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿ\u001a\u0003\u0000\u0000U\u0004\b\u0000\u0000\u0000\u0000\u0012\u0002\r\u00001\u0003\u0000\u0000l\u0004\b\u0000\u0000\u0000\u0000\u0011\u0002\u0017\u0000G\u0003\u0000\u0000Ø\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿL\u0003\u0000\u0000ð\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u000f\u0000[\u0003\u0000\u0000\u0000\u0000\u0000\u0000T\u0000\u0000\u0000\u0012\u0000\u0000\u0000£\u0003\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0010\u0000\u0018\u0000°\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000Ä\u0003\u0000\u0000¸\u0004\b\u0010\u0004\u0000\u0000\u0012\u0000\u0000\u0000å\u0003\u0000\u0000\u0000\u0000\u0000\u0000§\u0002\u0000\u0000\u0012\u0000\u0000\u0000ü\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000!\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000initfini.c\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crti.S\u0000call_gmon_start\u0000crtstuff.c\u0000__CTOR_LIST__\u0000__DTOR_LIST__\u0000__JCR_LIST__\u0000completed.4497\u0000p.4496\u0000__do_global_dtors_aux\u0000frame_dummy\u0000__CTOR_END__\u0000__DTOR_END__\u0000__FRAME_END__\u0000__JCR_END__\u0000__do_global_ctors_aux\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crtn.S\u00004ex1.cc\u0000_GLOBAL__I__Z9factoriali\u0000_ZSt8__ioinit\u0000__tcf_0\u0000_Z41__static_initialization_and_destruction_0ii\u0000__fini_array_end\u0000__fini_array_start\u0000__init_array_end\u0000__init_array_start\u0000_ZNSt8ios_base4InitC1Ev@@GLIBCXX_3.4\u0000_ZSt4cout@@GLIBCXX_3.4\u0000_DYNAMIC\u0000_ZNSolsEm@@GLIBCXX_3.4\u0000_fp_hw\u0000__dso_handle\u0000__libc_csu_fini\u0000__cxa_atexit@@GLIBC_2.1.3\u0000_init\u0000_Z9factoriali\u0000_start\u0000_ZSt3cin@@GLIBCXX_3.4\u0000__libc_csu_init\u0000__bss_start\u0000main\u0000__libc_start_main@@GLIBC_2.0\u0000data_start\u0000_fini\u0000_ZNSirsERi@@GLIBCXX_3.4\u0000_edata\u0000__i686.get_pc_thunk.bx\u0000_GLOBAL_OFFSET_TABLE_\u0000_end\u0000_IO_stdin_used\u0000_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@@GLIBCXX_3.4\u0000__data_start\u0000_Jv_RegisterClasses\u0000__gxx_personality_v0@@CXXABI_1.3\u0000_ZNSolsEl@@GLIBCXX_3.4\u0000_ZNSt8ios_base4InitD1Ev@@GLIBCXX_3.4\u0000__gmon_start__\u0000\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    cin >> n;\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else n*factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\n\n\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    while (cin>>n) cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\nif(n!=1){\n         if(n*factorial(n-1)!=1){\n         return n*factorial(n-1);\n         }\n         \nelse{\n     return 1;\n     }\n     }\n int main(){\n int h;\n cin>>h;\n cout<<factorial(h)<<endl;\n }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    int suma = n*factorial(n-1);\n    return suma;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n    if (x == 0) return 1;\n    else return factorial(x - 1)*x;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n    int factorial(int n){        \r\n        if (n==0) return 1;\r\n        else return n * factorial(n-1);\r\n    }\r\n    \r\n    int main (){\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n     if (n == 0) {\n          return 1;\n     }\n     else {\n          n = n*factorial (n - 1);\n     }\n}\n\nint main () {\n     int n;\n     cin >> n;\n     cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n     if (n == 0) {\n          return 1;\n     }\n     else {\n          n = n*factorial(n - 1);\n     }\n}\n\nint main () {\n     int n;\n     cin >> n;\n     cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n    int factorial (int n) {\n        fact = n * (factorial - 1);\n        return fact;\n    }\n\n\n",
  "/*\n *  fact2.cc\n *  \n *\n *  Created by Antar Moratona Franco on 23/02/08.\n *  Copyright 2008 __MyCompanyName__. All rights reserved.\n *\n */\n\n#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\tint fact;\n\tif (n!=1) fact= n*factorial(n-1);\n\telse return 1;\n\treturn fact;\n}\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int total=1;\r\n        for ( int i=1; i <=n; ++i){\r\n            total*=i;\r\n        }\r\n        return total;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int total = 1;\r\n    if (n != 1) total *= factorial(n-1);\r\n    return total;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {    \r\n    int total=1;\r\n    total*=n;\r\n    --n;\r\n    if (n > 1) total *= factorial(n);\r\n    return total;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\n\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<2) return 1;\n    else return n*factorial(n-1);\n} \nint main() {\nint x;\ncin>>x;\ncout<<factorial(x)<<endl;\n}    \n\n\n",
  "int factorial(int n) {\n    if(n == 1 or n == 0) {\n        return 1;\n    }\n    else {\n        return n * factorial(n-1);\n    }\n    \n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n){\r\n \r\n    if(n==0 or n==1) return 1;\r\n    else return factorial(n-1)*n;\r\n \r\n}\r\n \r\nint main(){\r\n \r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n \r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n>1) \n        return n*factorial(n-1);    \n    else \n        return 1;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==1 or n==0) return n;\n    else n=n*factorial(n-1);\n    return n;\n}\nint main(){\n    int a;\n    cin>>a;\n    cout<<factorial(a)<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\t\r\n\t\r\nint main (){\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial (int n){\r\n    if (n==0) return 1;\r\n    else return n*factorial (n-1);\r\n}\r\nint main (){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "int factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) {\n        return 1;\n    }\n    else {\n        n = n * factorial(n-1);\n        return n;\n    }\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        x = factorial(x);\n        cout << x << endl;\n    }\n}\n\n\n",
  "int factorial(int n) {\n\n    int i= 0;\n    int f=1;\n    \n    while (i < n) {\n    \n        ++i;\n        f=f*i;\n        \n    }\n    \nreturn f;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\t\n\tif (n != 1) n = n * (factorial (n-1));\n\t\n\treturn n;\n}\n \n\nint main() {\n\t\n\tint n;\n\tcin >> n;\n\tint j = factorial(n);\n\tcout << j << endl;\n}\n\n",
  "\nint factorial (int n) {\n\t\n\tif (n != 1) n = n * (factorial (n-1));\n\t\n\treturn n;\n}\n \n\n\n\n",
  "int factorial (int n) {\n\t\n\tif (n > 0) n = n * (factorial (n-1));\n\t\n\treturn n;\n}\n \n\n",
  "int factorial (int n) {\n\t\n\tif (n > 1) n = n * (factorial (n-1));\n\treturn n;\n\t\n}\n \n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\t\n\tif (n > 1) n = n * (factorial (n-1));\n\treturn n;\n\t\n}\n\nint main() {\n\t\n\tint n;\n\tcin >> n;\n\tint j =factorial(n);\n\tcout << j << endl;\n}\n \n\n",
  "int factorial (int n) {\n\t\n\tif (n > 1) return n * (factorial (n-1));\n\treturn 1;\n\t\n}\n\n\n\n",
  "int factorial(int n){\n    int x=1;\n    if (n==0) x=1; \n    else if(n>1){\n        n=n*factorial(n-1);}\n    return n;\n}\n    \n\n\n",
  "\nint factorial(int n){\n    if (n==0) n=1; \n    else if(n>1){\n        n=n*factorial(n-1);}\n    return n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n == 0) n = 1;\n    else if (n > 1) n = n * factorial(n - 1);\n    return n;\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint  factorial(int  n){\r\n    if(n==0)return 1;\r\n    return(n*factorial(n-1));\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial   << endl;\r\n}\r\n\n\n",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint  factorial(int  n){\r\n    if(n==0)return 1;\r\n    return(n*factorial(n-1));\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n)<< endl;\r\n\r\n}\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int m,i;\n    i=0;\n    if (n == 0) m = 1;\n    else m=n;\n    while (n>1) {\n        n--;\n        m = m * n;\n    }\n    return m;\n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return (n*factorial(n-1) );\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial (int n){\n\nif (n == 0) return 1;\n\nn = n * (factorial (n-1));\n\n\nreturn n;\n\n }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if(n > 1) n *= factorial(n-1);\n    return n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if(n == 0) return 1;\n    else if(n > 1) n *= factorial(n-1);\n    return n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n  int n;\n  cin >> n;\n  if (n>=0 and n<=12){\n  cout << factorial(n) << endl;\n  }else{\n  cout << \"El Senyor Enigmatic\" << endl;\n  }\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n int factorial(int n){\r\n if(n==0) return 1;\r\n return n*factorial(--n);\r\n \r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n int factorial(int n){\r\n if(n==0) return 1;\r\n return n*factorial(n-1);\r\n \r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n       if(n==0){\n          return 1;\n\t  }\n       else{\n          int f=factorial(n-1);\n\t  f=f*n;\n\t  return f;\n\t  }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial_rec(int n){\n   if(n==0) return 1;\n   return n*factorial_rec(n-1);\n   }\n\nint main(){\n   int x;\n   cin>>x;\n   cout<<factorial_rec(x)<<endl;\n   }\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial_rec(int n){\n   if(n==0) return 1;\n   return n*factorial_rec(n-1);\n   }\n\nint main(){\n   int x;\n   cin>>x;\n   cout<<factorial_rec(x)<<endl;\n   }\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n   if(n==0) return 1;\n   return n*factorial_rec(n-1);\n   }\n\nint main(){\n   int x;\n   cin>>x;\n   cout<<factorial(x)<<endl;\n   }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) {\n        n = 1;\n        return n;\n    }\n    else {\n        n = factorial(n - 1)*n;\n        return n;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int resultado = factorial(n);\n    cout << resultado << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int aux;\n    if (n == 0) aux = 1;\n    else aux = n*factorial(n - 1);\n    return aux;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){ \n    \n    int f=1;\n    if (n<2) f=1;\n    else f=n*factorial(n-1);\n    return f;  \n\n   \n}\n\nint main () {\n\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n * factorial(n-1);\n}\n    \nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n * factorial(n-1);\n}\n    \nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n){\n    if (n<2) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<2) return 1;\n    return n*factorial (n-1);    \n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n > 1) return (n * factorial(n - 1));\n\telse return 1;\n}\n \nint main (){\n\tint n;\n\tcin >> n;\n\tcout << factorial (n);\n}\n\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n < = 1) return 1;\n\telse return (n * factorial(n - 1));\n}\n \nint main (){\n\tint n;\n\tcin >> n;\n\tcout << factorial (n);\n}\n\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n < = 1) return 1;\n\telse return (n * factorial(n - 1));\n}\n \nint main (){\n\tint n;\n\tcin >> n;\n\tcout << factorial (n);\n}\n\n\n\n",
  "int factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n==0) return 1;\r\n    int r;\r\n    r=n*factorial(n-1);\r\n    return r;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n==1) return 1;\n    else return n*factorial(n-1);\n}\n    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint fact (int n) {\r\n    if (n==1) return 1;\r\n    else return n*fact(n-1);\r\n}\r\n    \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint fact (int n) {\r\n    if (n==1) return 1;\r\n    else return n*fact(n-1);\r\n}\r\n    \r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    while (cin >> n) {\r\n        int fact (int n);\r\n        }\r\n}\r\n        \r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n==1 or n==0) return 1;\n    else return n*factorial(n-1);\n}\n    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int x=1;\r\n    if (n == 0 or n == 1) return 1;\r\n    else {\r\n        while (n > 1){\r\n            x=x*n;\r\n            --n;\r\n        }\r\n        return x;\r\n    }\r\n}\r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 1) return n;\r\n    else return n * factorial(n - 1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 1 or n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\n\n",
  "int factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n) {\n    if (n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n if(f==0){ \n  return f\n }\n else {\n  return n*factorial(n-1)\n } \nint main(){}\n\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n    int factorial(int n){\n        if(n == 0) return 1;\n        else return n * factorial(n - 1);\n    }\n\nint main(){\n  \n   int x;\n   cin >> x;\n   cout << factorial(x) << endl;\n   }\n   \n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==0) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n    }\nint main(){\n    }s\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\nint fact=1;\n\tif (n>1){\n\t\tfact*=n;\n\t\tfact*=factorial(n-1);\n\t}\nreturn fact;\n}\n\nint main(){\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n}\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n    \r\nint main (){\r\n    int n;\r\n    cin >> n;\r\n    n = factorial(n);\r\n    cout<<n<<endl;\r\n    int a;\r\n    cin>>a;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0 or n == 1) return 1;\n    else if(n > 1){\n        n = factorial(n-1)*n;\n    }\n    return n;\n}\n\nint main() {\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int r = 1;\n    if(n == 0) return 1;\n    else r = n * factorial(n - 1);\n    return r;\n}\n\nint main() {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n);\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "int factorial(int n) {\n    if (n == 1) return 1;\n    else return n * (factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n   if(n==0) return 1;\n   return n*factorial(n-1);\n   }\n\nint main(){\n   int x;\n   cin>>x;\n   cout<<factorial(x)<<endl;\n   }\n\n\n",
  "int factorial(int n) {\n    if (n >= 0 and n <= 12) {\n        if (n <= 1) return n;\n        else return n * factorial(n-1);\n    }\n}\n\n\n",
  "/*\n *  FACT2.cpp\n *  \n *\n *  Created by Carlos on 01/11/09.\n *  Copyright 2009 Sant Ignasi-SarriÃ . All rights reserved.\n *\n */\n\n#include \"FACT2.h\"\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint fact(int a){\n    if (a==0) {\n        return 1;\n    }\n    else {\n        return a*fact(a-1);\n    }\n}\n\n\nint main() {\n    int a;\n    cin >> a;\n    cout << fact(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint main() {\n  int factorial(int n) {\n  int f=1;\n  while (n>1){\n  f*=n;\n  --n;\n  }\n  return f;\n  }\n  }\n  int main() {\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n  }\n\n\n",
  "// PROGRAMA SWAP: escribir un procedimiento: void intercanvi (int a, int b); que intercambie el valor de sus parametros.\n#include <iostream>\nusing namespace std;\nvoid intercanvi(int&a,int&b){\n    int x = a;\n        a = b;\n        b = x;\n}\nint main(){\n    int x,y;\n    while(cin >> x >> y){\n        intercanvi(x,y);\n        cout << x << \" \" << y << endl;\n    }\n}\n\n\n",
  "int factorial(int n) {\r\n    if (n == 0) return a;\r\n    return factorial(n-1);\r\n}\n\n",
  "int factorial(int n) {\n    if (n <= 1) return n;\n    else return n * factorial(n-1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if ( n <= 1) return 1;\r\n    else {\r\n        return n*factorial(n - 1);\r\n    }\r\n}\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n\n\n",
  "#include <iostream> \nusing namespace std;\nint factorial ( int n ) {\n    if ( n == 0 ) return 1 ;\n    if ( n == 1 ) return 1 ;\n    return n * factorial( n - 1 ) ;\n}\nint main ( ) {\n    int n ;\n    cin >> n ;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace srd;\n\n\nint factorial (int n){\n    return n*factorial (n - 1)\n    if (n == 0) return 1\n\n",
  "int factorial(int n) {\n    if (n < 2) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n    int factorial(int n){\r\n        if(n==0){\r\n        return 1;\r\n    }else{\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\n\nusing namespace std;\n\nfactorial(int n){\n\n\tif(n==1)return 1;\n\telse return n*factorial(n-1);\n\n}\n\nint main(){\n\n\n\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n if (n==0){\n  return 1;\n }else{\n  return n*factorial(n-1);\n }\n}\nint main(){\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n == 0) return 1;\r\n    return n* factorial(n-1);\r\n}\r\n\r\n\r\nint main(){\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) {\n    return 1;\n  } else {\n    int resultat = n * factorial(n-1);\n  return resultat;\n  }\n}\n\nint main () {\n  cout << \"Introdueix el numero: \";\n  int n;\n  cin >> n;\n  cout << \"El factorial de \" << n << \" es: \" << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n  }\n  \nint main (){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}    \n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int x){\n    if (x==0) {\n    return 1;\n    }\n    else {\n    return x*(x-1);\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int x){\n    while (x>=0)  {\n    if (x==0) {\n    return 1;\n              }\n    else {\n    return x*(x-1);\n         }   \n                  }\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint fact ( int n ) {\r\n    if ( n <= 1 ) return 1;\r\n    else return  n*fact ( n - 1 );\r\n} \r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << fact (x) << endl;\r\n}\r\n    \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint fact ( int n ) {\r\n    if ( n <= 1 ) {\r\n         return 1;\r\n    }\r\n    else {\r\n         return  n*fact ( n - 1 );\r\n    }\r\n} \r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << fact (x) << endl;\r\n}\r\n    \r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint fact(int n) {\n    if ( n <= 1 ) {\n        return 1;\n    }\n    else {\n        return n*fact(n-1);\n    }\n}\nint main() {\n    int x;\n    cin >> x;\n    cout << fact(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint facta(int n) {\n    if ( n <= 1 ) {\n        return 1;\n    }\n    else {\n        return n*facta(n-1);\n    }\n}\nint main() {\n    int x;\n    cin >> x;\n    cout << facta(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int x){\n    if (x==0) {\n    return 1;\n              }\n    else {\n    return x*factorial(x-1);\n         }   \n}\n\n\n",
  "# include <iostream>\r\nusing namespace std;\r\nint factorial(int x) {\r\n    if (x == 0) return 1;\r\n    else return (x * factorial(x-1));\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 1 ) return 1;\n    return n * factorial(n-1);\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 0 ) return 1;\n    return n * factorial(n-1);\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n     if (n == 0) return 1;\r\n     else return n*factorial (n-1);\r\n}\r\n\r\n\r\nint main() {\r\n     int x;\r\n     cin >> x;\r\n     cout << factorial(x) << endl;\r\n}\r\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n) {\n    if(n==0) return 1;\n    return n*factorial(n-1);\n}    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n == 0) return 1;\r\n    return n* factorial(n-1)\r\n}\r\n\r\n\r\nint main(){\r\n}\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n) {\n    if(n==0)return 1;\n    return n*n-1;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n) {\n    if(n==0)return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1)\n        return 1;\n    else\n        return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int x>=0){\n    if (n==0) {\n    return 1;\n    }\n    else {\n    return n*factorial(n-1);\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    return  n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int x){\n    n>=0;\n    if (x==0) {\n    return 1;\n    }\n    else {\n    return x*(x-1);\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int x){\n    while (n>=0)  {\n    if (x==0) {\n    return 1;\n              }\n    else {\n    return x*(x-1);\n         }   \n                  }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return (n * factorial (n - 1));\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n    cout << factorial (n) << endl;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int x){\n    if (x==0) {\n    return 1;\n              }\n    else {\n    return x*factorial(x-1);\n         }   \n                  }\n}\n\n\n",
  "# include <iostream>\r\nusing namespace std;\r\nint f(int x) {\r\nint r;\r\nif (x == '0') r = 1;\r\nelse r = x * f(x-1);\r\nreturn r;\r\n}\r\nint main () {\r\n    int a;\r\n    cin>>a;\r\n    int y = f(a);\r\n    cout<<y<<endl;\r\n}\n\n",
  "# include <iostream>\r\nusing namespace std;\r\nint factorial(int x) {\r\n    if (n == 0) return 1;\r\n    else return (n * factorial(x-1));\r\n}\n\n",
  "#include<iostrem>\nusing namespace std;\nint factorial(int n) {\n    if(n==0) return 1;\n    return n*factorial(n-1);\n}    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint f (int n){\r\n      int r;\r\n      if(n==0) r=1;\r\n      else r=n*f(n-1);\r\n      return r;       \r\n      }\r\n\r\nint main (){\r\n    int x;\r\n    cin>>x;\r\n    int y=f(x);\r\n    cout<<y<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n == 0 or n == 1) return 1;\r\n    else return n * factorial (n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\nif(n == 1) return 1;\nelse return (n * factorial(n-1));\n}\n\nint main() {\nint x;\ncin >> x;\ncout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n > 1) n = n*factorial(n-1);\n    return n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int m = 1;\n    if (n > 1) m = n*factorial(n-1);\n    return m;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\nint main() {\n       \n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "# include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if ( n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int x=n;\n    if(n>1) x=n*factorial(n-1);\n    if(n==0) return 1;\n    else return x;\n}\nint main(){int x;cin>>x;cout<<factorial(x);}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n > 1) return n*factorial(n - 1); //yo no se por que razon, pero no funcionaba correctamente con \"factorial(--n)\"\n\telse return 1;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    n = n * factorial(n - 1);\n    return n;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\tint factorial (int n){\n\tint f=1;\n\tif (n>=0 and n<=12){\n\twhile (n>1) {\n\tf*=n;\n\t--n;\n\t}\n\treturn f;\n\t}\n\t}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\tint factorial (int n){\n\tint f=1;\n\twhile (n>1) {\n\tf*=n;\n\t--n;\n\t}\n\treturn f;\n\t}\nint main() {\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 1) return 0;\n    else if (n == 1) return 1;\n    else return n * factorial (n - 1);\n    }\n    \nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 2) return 1;\n    else return n * factorial (n - 1);\n    }\n    \nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    return factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    factorial(n);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int fact=1;\n    while (n>0){\n        int nf=n*(n-1);\n        fact*=nf;\n        --n;\n    }\n    return fact;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n   int i = 1;\n   int fact = 1;\n   while (i <= n){\n      fact = fact * i;\n      i = i + 1;\n   }\n   return fact;\n}\n\nint main (){\n   int n;\n   \n   cin >> n;\n   \n   int i= factorial (n);\n   \n   cout << i << endl;\n}\n\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    if (n == 1) return 1;\n    return n * factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n -1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n -1);\n}\n\nint main() {\n int n;\n while(cin >> n) cout << factorial(n);\n}\n\n\n",
  "# include<iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0) return 1;\n    else return (n*factorial(n-1));\n}\nint main(){\n    int a;\n    cin>>a;\n    cout<<factorial(a)<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else return n*factorial(n-1);    \r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 2) return 2;\r\n    else return n*factorial(n-1);    \r\n}\r\n\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;    \r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);    \r\n}\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (0 <= n <= 12) {\r\n       int j = 1;\r\n       for (int i = n; i != 0; --i) {\r\n           j *= i;\r\n       }\r\n       return j;\r\n    } return factorial(n);\r\n} \r\nint main() {\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return '1';\n    return n *= factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int total = 1;\r\n    if (n == 0) return 1;\r\n    return total = n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n         cout << factorial(n) << endl;\r\n    }\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n>0) return n*factorial(n-1);\r\n    else return 1;\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n  }\nint main (){\n  int n;\n  cin>>n;\n  cout<<\"El factorial de \"<<n;\n  cout<<\" es\"<<factorial(n)<<endl;\n  }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if(n == 0) return 1;\n    else total = n*factorial(n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n > 1) n *= factorial(n - 1);\r\n\t return n;\r\n\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n\r\n\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n > 1) {\r\n\t\tint e = factorial(n - 1);\t\r\n\t\tn *= e;\r\n\t}\r\n\t\r\n\treturn n;\r\n\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n\r\n\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse if (n > 1) {\r\n\t\tint e = factorial(n - 1);\t\r\n\t\tn *= e;\r\n\t}\r\n\t\r\n\treturn n;\r\n\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n\r\n\r\n}\n\n",
  "int factorial(int n){\n    while(n>0){\n        return n*factorial(n-1);\n    --n;\n    }\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 1 ) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n      int r;\r\n      if(n==0) r=1;\r\n      else r=n*factorial(n-1);\r\n      return r;       \r\n      }\r\n\r\nint main(){\r\n    int x;\r\n    cin>>x;\r\n    int y=factorial(x);\r\n    cout<<y<<endl;\r\n}\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\nif(n == 1 or n == 0) return 1;\nelse return (n * factorial(n-1));\n}\n\nint main() {\nint x;\ncin >> x;\ncout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n  if(n<0) return 0;\n  else if(n > 1) return n*factorial(n-1);\n  return 1;\n} \n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n) {\r\n   if(n < 0) return 0;\r\n   else if(n > 1) return n*factorial(n-1);\r\n   return 1;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n==0){\n        return 1;\n        }\n    else{\n        return n*factorial(n-1);\n        }\n}\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n < 2) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return  1;\n    else return n * factorial(n-1);\n}\n\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial (a) << endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int a;\r\n    a=n;\r\n    while (n > 1) {\r\n        --n;\r\n        a*=n;\r\n    }\r\n    cout << a << endl;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    factorial(x);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n<2) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    factorial(n);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n < 0) return 0;\r\n    else if(n > 1) return n*factorial(n-1);\r\n    return 1;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial (x) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0){\n    return 1;\n    }\n    \n    else\n    return n*factorial(n-1);\n    \n}\nint main (){\n\n    \n}\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int x = 0;\r\n    if (n == 0) return 1;\r\n    else  x = n * factorial( n - 1 );\r\n    return x;\r\n}\r\nint main(){\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;    \r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int b){\n    if (b>=0 and b<2 ) return 1;\n    else return b*factorial(b-1);   \n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f = 1;\n        for (int i = 0; i < n; ++i) {\n            f = f*n;\n        }\n    return f;\n}\n\nint main () {\n        int n;\n        cin >> n;\n        cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f = 1;\n        for (int i = 0; i < n; ++i) {\n            f = f*n;\n            --n;\n        }\n    return f;\n}\n\nint main () {\n        int n;\n        cin >> n;\n        cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f = 1;\n        for (int i = 0; i < n; ++i) {\n            f = f*n;\n            --n;\n        }\n    return f;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f = 1;\n        if (n < 2) return n;\n        else {\n            for (int i = 0; i < n; ++i) {\n                f = f*n;\n                --n;\n            }\n        }\n    return f;\n}\n\nint main () {\n        int n;\n        cin >> n;\n        cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f = 1;\n        if (n < 2) f = 1;\n        else f = n*factorial (n - 1);\n    return f;\n}\n\nint main () {\n        int n;\n        cin >> n;\n        cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n\n   if (n == 0)    return 1;\n   else           return n*factorial (n - 1);\n  }\n   \nint main() {\n\n    int n;\n\n    cin >> n;\n\n    cout << factorial (n) << endl;\n    \n    \n}    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return (n * factorial(n - 1));\n}\n\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    int fact = 1;\n    if (n == 0) return 1;\n    for (int i = 1; i <= n; ++i){\n        fact = factorial(n - 1) * i;\n    }\n    return fact;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    int fact = 1;\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "# include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int p;\r\n    p = n;\r\n    if (n == 0)\r\n       p = 1;\r\n    else \r\n         p = p * factorial (--n);\r\n    return p;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n    if (n <= 1) return 1;\n    else return n*fact(n - 1);\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n    cout << \"fact(\" << n << \")\" << \" = \" << factorial(n) << endl;\n    }\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    int fact=1;\n    if(n==1) fact=1;\n    else fact=n*factorial(n-1);\n    return fact;\n}\n    \n    \n    \nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    int fact=1;\n    if(n==0) fact=1;\n    else fact=n*factorial(n-1);\n    return fact;\n}\n    \n    \n    \nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "/*\n *  sudig.cc\n *  \n *\n *  Created by David Balsells Edo on 26/05/10.\n *  Copyright 2010 Casa. All rights reserved.\n *\n */\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n != 0){\n        return n * factorial ( n - 1 );\n    }\n    else return 1;\n}\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint a = 1;\r\n\tif ((n == 0) or (n == 1)) {\r\n\t\ta = 1;\r\n\t}\r\n\twhile (n>1) {\r\n\t\ta = a*n;\r\n\t\tn = n - 1;\r\n\t}\r\n\tn = a;\t\r\n}\r\n\t\r\nint main () {\r\n\tint x;\r\n\tcin >> x;\r\n\tfactorial (x);\r\n\tcout << x << endl;\r\n}\r\n\r\n\r\n\t\r\n\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint a = 1;\r\n\tif ((n == 0) or (n == 1)) {\r\n\t\ta = 1;\r\n\t}\r\n\twhile (n>1) {\r\n\t\ta = a*n;\r\n\t\tn = n - 1;\r\n\t}\r\n\treturn a;\t\r\n}\r\n\t\r\nint main () {\r\n\tint x;\r\n\tcin >> x;\r\n\tfactorial (x);\r\n\tcout << x << endl;\r\n}\r\n\r\n\r\n\t\r\n\r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial2(int n) {\n\tif (n == 0) return 1;\n    else return n*factorial2(n - 1);\t\n}\n\nint factorial(int n) {\n\tint a = 1;\n\twhile (n >= 1) {\n\t\ta = a*n;\n\t\tn = n - 1;\n\t}\n\treturn a;\t\n}\n\t\nint main () {\n\tint x;\n\tcin >> x;\n\tcout << factorial2 (x) << endl;\n}\n\n\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n    else return  n * factorial(n - 1);\t\r\n}\r\n\t\r\nint main () {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial (x) << endl;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial ( int n ) {\r\n    int p = 1;\r\n    int i = n;\r\n    if ( n == 0 ) {\r\n         p = 0;\r\n         }\r\n    else {\r\n         while ( i > 1 ) {\r\n               p = p * i;\r\n               --i;\r\n               }\r\n         }\r\n    return p;\r\n    \r\n}\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial( n ) << endl;\r\n    \r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial ( int n ) {\r\n    int p;\r\n    if ( n == 0 ) {\r\n         p = 1;\r\n         }\r\n    else {\r\n         p = n * factorial(n - 1);\r\n         }\r\n    return p;\r\n    \r\n}\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial( n ) << endl;\r\n      \r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial (n-1);\n}\n\nint main(){\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 0) return 0;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n <= 1) return 1;\r\n    else {\r\n        return n*(n-1);\r\n        return factorial(--n);\r\n    }\r\n}\r\n\r\nint main(){\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n        \r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    int n1;\n    if (n == 0) return 1;\n    else if (n == 1) return 1;\n    else {\n        n1 = n;\n        n1 = n1*factorial(n-1);\n    }\n    return n1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    }\n        \n        \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n==0) return(1);\n    else return n * factorial(n-1);\n    }\n    \nint main () {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n} \n\nint main() {\n    int f;\n    cin >> f;\n    cout << factorial(f) << endl;\n} \n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    int a=1;\n    for( int c=a;c<=n;++c) a=a*c;\n    return a;\n}\n    \n\n\n\n\n\n\n\n\n\n",
  "#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    \r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    \r\n    if (n==0)return 1;\r\n    else {\r\n    return n*factorial(n-1);\r\n}\r\n}\r\n\r\n\r\n\r\nint main () {\r\n    \r\n    int n;\r\n    cin >>n;\r\n    cout<<factorial(n)<<endl;\r\n\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n<=1) return 1;\n    else return (n*factorial (n-1)); \n}\n\nint main() {\n\n    int n;\n    while (cin >> n) {\n    cout << \"fact(\" << n << \")= \" << factorial(n) << endl;\n    }\n}\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n) {\n\n    if (n<=1) return 1;\n    else return (n*fact (n-1)); \n}\n\nint main() {\n\n    int n;\n    while (cin >> n) {\n    cout << \"fact(\" << n << \")= \" << fact(n) << endl;\n    }\n}\n    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n   if(n > 1) {\r\n   return n*factorial(n-1);\r\n   } \r\n   return 1;\r\n}\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n    \r\n          \r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n    int s=1;\r\n    cin >> n;\r\n    for (int i=1; i<n; ++i){\r\n        s=s*i;\r\n    }\r\n    return s*n;\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n    int s=1;\r\n    for (int i=1; i<n; ++i){\r\n        s=s*(s+1);\r\n    }\r\n    return s;\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    else return n* factorial(n-1);\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n    for (int i=1; i<n; ++i){\r\n        int s=1;\r\n        s= s*i;\r\n    }\r\n    return s*n;\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {    \n    int a=1;\n    if(n == 0) return a;\n    a = factorial(n-1);\n    if(n != 0) {\n    a = a * n;\n    }\n    return a;\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    if (n > 1) {\n        n *= factorial(n-1);    \n    }\n    return n;\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;    \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;  \n    return n *= factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;    \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n>=0 and n<=12){\n        if (n==0) return 1;\n        return factorial(n-1)*n;\n    } else return n;\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n < 2) return n;\n    return n*factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    return n*factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    return n*(n-1);\r\n}\r\n\r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if ( n <= 1) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    return n! * (n-1)!;\r\n}\r\n\r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    n *= factorial(n - 1);\r\n    return n;\r\n}\r\n\r\nint main() {\r\n\r\n\r\n\r\n}\r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 0;\r\n    else {\r\n        n *= factorial(n - 1);\r\n        return n;\r\n    }\r\n}\r\n\r\nint main() {\r\n\r\n\r\n\r\n}\r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else {\r\n        n *= factorial(n - 1);\r\n        return n;\r\n    }\r\n}\r\n\r\nint main() {\r\n\r\n\r\n\r\n}\r\n\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n)\n{\n    if(n==0)\n    return 1;\n    else return (n*factorial (n-1));\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n)\n{\n    if(n=0)\n    return 1;\n    else return (n*factorial (n-1))\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "\r\n\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    return factorial(n-1);\r\n}\r\n\r\n\n\n",
  "\r\n\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1\r\n    return factorial(n-1);\r\n}\r\n\r\n\n\n",
  "\r\n\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 0;\r\n    if (n == 1) return 1;\r\n    return factorial(n-1);\r\n}\r\n\r\n\n\n",
  "\r\n\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 0;\r\n    if (n == 1) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\n\n\n",
  "\r\n\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int r;\r\n    if (n == 0) return 1;\r\n    else r = n * factorial(n-1);\r\n    return r;\r\n}\r\n\r\nint main(){\r\n    int n,x;\r\n    cin >> n;\r\n    x= factorial(n);\r\n    cout<<x<< endl;\r\n}  \r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint fact(int n){\r\n    int r;\r\n    if (n == 0) r=1;\r\n    else r = n * fact(n-1);\r\n    return r;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout<< fact(n)<< endl;\r\n}  \r\n    \r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint fact(int n){\r\n    int r;\r\n    if (n == 0) r=1;\r\n    else r = n * fact(n-1);\r\n    return r;\r\n}\r\n\r\nint main(){\r\n    int n,x;\r\n    cin >> n;\r\n    x= fact(n);\r\n    cout<<x<< endl;\r\n}  \r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint fact(int n){\r\n    int r;\r\n    if (n == 0) return 1;\r\n    else r = n * fact(n-1);\r\n    return r;\r\n}\r\n\r\nint main(){\r\n    int n,x;\r\n    cin >> n;\r\n    x= fact(n);\r\n    cout<<x<< endl;\r\n}  \r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n!=0) return n * factorial(n -1);\n    else return 1;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\nif(n!=0) return n * factorial(n -1)\nelse return 1;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n!=0) return n * factorial(n -1)\n    else return 1;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    n = n*factorial(n-1);\n    return n;\n}\n\nint main () {\n\n    int n;\n    cin>>n;\n    \n    cout<<factorial(n)<<endl;\n    \n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) //cas_Base\n    return 1;\n    else (n>=1 and n<=12);\n    n=n*factorial(n-1);\n    return n;    \n    }\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n; 0<n<12){\r\n    int m;\r\n    for(int i=1; i<=n; ++i)\r\n    m=m*i;\r\n    return m;    \r\n    }\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n, 0<n<12){\r\n    int m;\r\n    for(int i=1; i<=n; ++i)\r\n    m=m*i;\r\n    return m;    \r\n    }\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int m=1;\r\n        {\r\n        for(int i=1 and n<=12; i<=n; ++i)\r\n        m=m*i;\r\n        }\r\n        return m;    \r\n    }\r\n\r\nint main(){\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a) << endl;\r\n    #ifndef _JUTGE_\r\n        system(\"pause\");\r\n    #endif\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int x;\n    if(n==0) return 1;\n    else x = n * factorial(n-1);\n    return x;\n}          \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n    int x;\n    if(n==0) return 1;\n    else x = n * fact(n-1);\n    return x;\n}           \nint main() {\n    int x;\n    cin >> x;\n    cout << fact(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n    int x;\n    if(n==0) return 1;\n    else x = n * fact(n-1);\n    return x;\n}           \nint main() {\n    int x;\n    cin >> x;\n    cout << fact(x) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) //cas_Base\n    return 1;\n    else (n>=1 and n<=12);\n    n=n*factorial(n-1);\n    return n;    \n    }\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n\n\n\n",
  "#include<iostream>\r\n#include<cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 1) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\n\r\n\r\nint main(){\r\n    cout.setf(ios::fixed);\r\n    cout.precision(6); \r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a) << endl;\r\n\r\n    \r\n\r\n\r\n#ifndef _JUTGE_\r\nsystem(\"pause\");\r\n#endif\r\n}\r\n\n\n",
  "#include <iostream>\n#include <string>\nusing namespace std;  \n\nint factorial(int n){\n    if(n == 1) return 1;\n    return n*factorial(n-1);\n}   \n    \n    \nint main(){   \n#ifndef _JUTGE_\n       system(\"pause\");\n    #endif\n}\n\n\n",
  "#include <iostream>\n#include <string>\nusing namespace std;  \n\nint factorial(int n){\n    if(n <= 1) return 1;\n    return n*factorial(n-1);\n}   \n    \n    \nint main(){   \n#ifndef _JUTGE_\n       system(\"pause\");\n    #endif\n}\n\n\n",
  "int factorial (int n) {\n    if (n > 1) return n * factorial(n - 1);\n    else return 1;\n}\n\n\n",
  "int factorial (int n) {\n    if (n > 1) return n * factorial(n - 1);\n    else return 1;\n}\n\n\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\n  int factorial(int n) {\r\n  if(n==0) return 1;\r\n  else return(n*factorial(n-1));\r\n}\r\n  int main() {\r\n      int x;\r\n      cin >> x;\r\n      cout << factorial(x) << endl;\r\n}\r\n\r\n\r\n    \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n) {\r\n  if(n==0) return 1;\r\n  else return n*n-1;\r\n }\r\n\n\n",
  "int factorial(int n){\n\n    int aux;\n        while(n>0){\n            \n            aux*=n;\n            --n;\n  \n        }   \n    \n    return n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n    int aux=1;\n        while(n>0){\n            \n            aux*=n;\n            --n;\n          }   \n    \n    return aux;\n}\nint main(){\n\n    int n,res;\n    cin>>n;\n    res=factorial(n);\n    \n    cout<<res<<endl;\n\n}\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n    int s=1;\r\n    for (int i=1; i<n; ++i){\r\n        s=s*i;\r\n    }\r\n    return s*n;\r\n}\r\nint main (){\r\n\r\n    int n;\r\n    cin >> n;\r\n    int factorial(int n);\r\n    cout << factorial(n);\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    return n * factorial(n-1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n == 0) return 1;\r\n\telse return (n * factorial(n - 1));\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n>1) return n*factorial(n-1);\n\telse return n;\n} \n\nint main (){\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n, int resul){\r\n    if (n == 0) resul = 1;\r\n    else {\r\n         factorial (n-1, resul);\r\n                   resul = resul * n;\r\n                   }\r\n    return resul;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n, int resul){\r\n    if (n == 0) return 1;\r\n    else {\r\n        return (n * factorial (n - 1))}\r\n        \r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n, int resul){\r\n    if (n == 0) return 1;\r\n    else {\r\n        return (n * factorial (n - 1))}\r\n        \r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else {\r\n        return (n * factorial (n - 1))}\r\n        \r\n}\r\n\n\n",
  "int factorial(int n){\n\tfor(int m=1;m<n;++m)\n\tn*=m;\n\treturn n;\n}\n\n\n",
  "int factorial(int n){\n    if (n>1) return n*factorial(n-1);\n    else return 1;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int suma = 1;\n    for (int i = n; i > 0; --i)\n        suma *= i;\n    return suma;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\treturn n * factorial (n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\treturn n * factorial (n - 1)\n}\n\n\n",
  "# include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    int z;\r\n    if (n == 0) z = 1;\r\n    else z = n * factorial(n-1);\r\n    return z;\r\n}\r\n\r\nint main () {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n != 0){\n        int z = n * factorial(n - 1);\n        return z;\n    }\n    return 1;\n}\n\nint main(){\n    int x;\n    cin >> x;\n    if(x == 0) cout << '1' << endl;\n    else cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n != 0){\n        return n * factorial(n - 1);\n    }\n    return 1;\n}\n\nint main(){\n    int x;\n    cin >> x;\n    if(x == 0) cout << '1' << endl;\n    else cout << factorial(x) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n * factorial(n - 1);\n    return 1;\n    \n}\n\nint main() {\n    \n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\tint factorial (int n) {\n\tif (n==0) {\n\treturn 1;\n\t}\n\telse if (n>0) {\n\tint a;\n\ta=n-1;\n\treturn a*n;\n\t}\n\t}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\tint factorial (int n) {\n\tif (n==0) {\n\treturn 1;\n\t}\n\telse if (n>0) {\n\treturn n*factorial(n-1);\n\t}\n\t}\n\nint main () {\nint n;\ncin >> n;\nint facto;\nfacto = factorial(n);\ncout << facto <<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n)\n{\n  if (n == 0) return 1;\n  return n * factorial(n-1);\n}\n\nint main () {\nint n;\ncin >> n;\nint facto;\nfacto = factorial(n);\ncout << facto <<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n    int factorial(int n) {\r\n        if (n == 0) return 1;\r\n        else return (n * factorial (n - 1));\r\n    }\r\n            \r\n            \r\n        \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\t\n\tint factorial(int n) {\n\t\tint suma;\n\t\tif (n == 0 or n == 1) return 1;\t\t\t\n\t\tif (n > 1) return suma = n * factorial(n-1);\n\t\t\n\n \t}\n\n\tint main () {\n\t\tint n;\n\t\tcin >> n;\n\t\tint suma = factorial(n);\n\t\tcout << suma << endl;\n\t}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\t\n\tint factorial(int n) {\n\t\tint suma;\n\t\tif (n == 0 or n == 1) return 1;\t\t\t\n\t\tif (n > 1) return suma = n * factorial(n-1);\n\t\t\n\n \t}\n\n\tint main () {\n\t\tint n;\n\t\tcin >> n;\n\t\tint suma = factorial(n);\n\t\tcout << suma << endl;\n\t}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\t\n\tint factorial(int n) {\n\t\tint suma;\n\t\tif (n == 0 or n == 1) suma = 1;\t\t\t\n\t\tif (n > 1) suma = n * factorial(n-1);\n\t\treturn suma;\n\n \t}\n\n\tint main () {\n\t\tint n;\n\t\tcin >> n;\n\t\tint suma = factorial(n);\n\t\tcout << suma << endl;\n\t}\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    int k = 1;\n    while(n > 0){\n        k *= n;\n        --n;\n    }\n    return k;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n    \n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial ( n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "int factorial (int n){\n    while (n!=0){\n    int f*=n;\n    --n;\n    }\n    return f;\n}\n\n\n",
  "int factorial (int n){\n    if (n!=0){\n    int f*=n;\n    --n;\n    }\n    return f;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) {\n        return 1;\n        } else { \n            return n*factorial(n-1);\n            }\n    }\n   \nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n);\n    }\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*(factorial(n-1));\n}\n\nint main() {\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int r;\r\n    \r\n    if (n==0) return 1;\r\n    else r=n*factorial(n-1);\r\n    return r;\r\n}\r\n\r\nint main(){\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n}\n        \n        \n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    int res;\n    if (n == 0) {\n        res = 1;\n    }\n    else {\n        res = n*factorial (n-1);\n    }\n    return res;\n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial (n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n\n    cout << factorial(x) << endl;\n}\n\n\n",
  "int factorial(int n) {\n    int fact = 1;\n    if ( n == 0 ) return fact;\n    else fact = n*factorial(n-1);\n    return fact;\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\nif (n == 0) return 1;\r\nn *= factorial(n-1);\r\nreturn n;\r\n}\r\n\r\nint main(){\r\nint a;\r\n  while(cin>>a){\r\n    cout<<factorial(a)<<endl;\r\n  }\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact = 1;\n    if(n == 0) return 1;\n    else fact = n*factorial(n-1);\n    return fact;\n}\n\nint main(){\n    cout<<\"Never gonna give you up! Never gonna let you down!\"<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n     if (n <= 1) return n;\n     return fib(n - 1) + fib(n - 2);\n}\n\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n) {\n    int fact=1;\n    while (n>0) {\n        fact=fact*n;\n        --n;\n    }\n    return fact;\n} \n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial ( int n )  {\n    if ( n == 1 or n == 0 ) return 1;\n    else return n*factorial(n-1);\n}\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\nif (n==0) return 1;\r\nreturn n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n > 0) return n * factorial(n - 1);\n    return 1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n > 1) n = n*factorial(n-1);\n    return n;\n}\n\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n > 1) n = n*factorial(n-1);\n    else return 1;\n    return n;\n}\n\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n\n\n",
  "int factorial(int n){\n    while((n>0)and(n<12)){\n    return n*factorial(n-1);\n    }\n    return 1;\n}\n\n\n",
  "int factorial(int n){\n    int f;\n    while((n>0)and(n<12)){\n    \n    f=n*factorial(n-1);\n    return f;\n    }\n    return 1;\n}\n\n\n",
  "int factorial(int n){\n    int f;\n    if(n==0)return 1;\n    while(n>0){\n    f=n*factorial(n-1);\n    }\n     return f;\n}\n\n\n",
  "int factorial(int n){\n    if(n==0)return 1;\n    return n*factorial(n-1);\n\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n \r\n    if ( n == 0 ) return 1;    \r\n    else return n*factorial(n-1);   \r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial( int n ) {\n    int resultat = 1;\n    if ( n > 1 ) {\n    resultat = n * factorial( n - 1 );\n    }\n    return resultat;\n}\n\nint main() {\n    int n;\n    while ( cin >> n ) {\n        cout << \"fact(\" << n << \")\" << \" : \" << factorial(n) << endl;\n    }\n}\n\n\n",
  "int factorial(int n) {\r\n    if (n == 0) return r;\r\n    else {\r\n       int r = n-1;\r\n       factorial(r)\r\n    }\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n* factorial(n-1);\n}    \nint main() {\n    int a;\n    cin>>a;\n    cout <<(factorial(a))<<endl;        \n}        \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact( int n ) {\n    if ( n == 1 ) return 1;\n    else return ( n * fact( n - 1 ) );\n}\n\nint main() {\n    int n;\n    while ( cin >> n ) {\n        cout << \"fact(\" << n << \")\" << \" : \" << fact(n) << endl;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial( int n ) {\n    if ( n == 1 ) return 1;\n    else return ( n * fact( n - 1 ) );\n}\n\nint main() {\n    int n;\n    while ( cin >> n ) {\n        cout << \"fact(\" << n << \")\" << \" : \" << factorial(n) << endl;\n    }\n}\n\n\n",
  "#include<iostream>\n#include<string>\n#include<cmath>\nusing namespace std;\nint factorial(int n){\n    if(n==0){\n        return(1);\n    }\n    else{\n        return(n*factorial(n-1));\n    }\n}\nint main(){\n    int n,fact;\n    cin>>n;\n    fact=factorial(n);\n    cout<<fact<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f;\n    if( n == 0) f = 1;\n    else f = n * factorial (n-1);\n    return f; \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if (n>1){\n        n=n*factorial(n-1);\n        cout << n << endl;\n    }\n    return n;\n       \n}\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if (n>1)\n        n=n*factorial(n-1);\n    return n;\n       \n}\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if (n>1)\n        n=n*factorial(n-1);\n    return n;\n       \n}\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if (n>1)\n        n=n*factorial(n-1);\n    else \n        n=1;\n    return n;\n       \n}\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if (n>1)\n        n=n*factorial(n-1);\n    else \n        n=1;\n    return n;\n       \n}\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 2) return n;\r\n    else return n *= factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n}\r\n\n\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int i = 1;\r\n    if ( n == 0 ) return 1;\r\n    int mult = 1;\r\n    while ( i <= n ) {\r\n        mult = mult * i;\r\n        ++i;\r\n    }\r\n    return mult;\r\n}\r\n\r\n\r\nint main () {\r\n\r\n\r\n}\r\n\r\n\n\n",
  "#include <cstdlib>\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    return n*factorial (n-1);\r\n}\r\n    \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint s=1;\n    if(n>0) return n * factorial(n-1);\n    else return s;\n}\n\n\nint main(){\n\nint n;\ncin >> n;\n\ncout << factorial(n) << endl;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int c=n;\n    if (n==0) {\n        c=1;\n    }\n    else if (n>1) {\n        c=c*factorial(n-1);\n    }\n    return c;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int c;\n    c=factorial(n);\n    cout << c <<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   if (n==0) return 1;\n   else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n\n    cout << factorial(n)  << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    return n*(n-1);\n}\n\nint main(){}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    return n*factorial(n-1);\n}\n\nint main(){}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n > 1) return n*factorial(n-1);\n  else return 1;\n}\n\nint main () {\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n >= 1)  return n*factorial(n-1);\n    return 1;\n    \n}\n\nint main() {\n    int n;\n    cin >> n;\n    int aux = factorial(n);\n    cout << aux << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial( int n ) {\n    if ( n == 1 ) return 1;\n    else return ( n * factorial( n - 1 ) );\n}\n\nint main() {\n    int n;\n    while ( cin >> n ) {\n        cout << \"fact(\" << n << \")\" << \" : \" << factorial(n) << endl;\n    }\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else return n *= factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    n*= factorial(n-1);\n    return n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    n*= factorial(n-1);\n    if (n == 0) return n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int s;\n    s*= factorial(n-1);\n    if (n == 0) return s;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n \n    int factorial (int n){\n    long factorial=1;\n        if (0<=n<=12){    \n        while (n>1){\n        factorial=factorial*n;\n        n=n-1; \n        }\n    }\n            else if (n==0){\n            factorial=factorial;\n            }\n            n=factorial;\n            return n;\n            }\n            \n    int main (){\n    int n;\n    cin >> n;\n    factorial (n);\n    }\n            \n   \n   \n   \n     \n    \n  \n\n    \n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nlong factorial=1;\nif (0<=n<=12){\n    while (n >1){\n    factorial = factorial*n;\n    n=n-1;\n    }    \n}       else if (n==0) {\n        factorial = factorial;\n        }\n        n=factorial;\n        return n;\n    }\n\nint main () {\nint n;\ncin >> n;\ncout << factorial (n) << endl;\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n    \n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n) {\r\n    if (n < 2) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n       \n     if (n == 0){return 1;\n     }\n     return n*factorial(n-1);\n     \n\n}\n\nint main(){ \n   int x;\n   cin >>x;\n   cout << factorial(x) << endl;\n  \n}  \n\n\n",
  "#include<iostream>\n#include<cmath>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n == 1) return 1;\n    else return (n*factorial(n - 1));\n    \n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n        \n        \n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int r;\n    if (n == 0) r = 1;\n    else r = n*factorial(n-1);\n    return r;\n}\n\nint main (){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return factorial (n-1)*n;\n}\n\nint main() {\n    int a;\n    int b;\n    while (cin >> a) {\n        b = factorial (a);\n        cout << b << endl;\n    }\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    \n    int total = 1;\n    \n    if(n == 0) return 1;\n    \n    else total = n*factorial(n-1);\n    \n    return total;\n}\n\nint main() {\n    \n    int n;\n    \n    cin >> n;\n    \n    cout << factorial(n) << endl;\n    \n}\n\n\n\n\n\n",
  "//funcio factorial recursiu.\r\n#include <iostream>\r\nusing namespace std;\r\n\tint factorial(int n){\r\n\t\t//suposo que 0<=n<=12\r\n\t\tif (n==0){\r\n\t\t\treturn 1;\r\n\t\t}else{\r\n\t\t\treturn n*factorial(n-1);\r\n\t}\r\n\t}\r\n\tint main(){\r\n\t\tint n;\r\n\t\tcin>>n;\r\n\t\tcout<<factorial(n)<<endl;\r\n\t}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n\n}\n\n\n",
  "//funcio factorial recursiu.\r\n#include <iostream>\r\nusing namespace(){\r\n\tint factorial(int n){\r\n\t\t//suposo \r\n\t\tif (n==0){\r\n\t\t\treturn 1;\r\n\t\t}else{\r\n\t\t\treturn n*factorial(n-1);\r\n\t}\r\n\t}\r\n\tint main(){\r\n\t\tint n;\r\n\t\tcin<<factorial(n)<<endl\r\n\t}\r\n\n\n",
  "//funcio factorial recursiu.\r\n#include <iostream>\r\nusing namespace std;\r\n\tint factorial(int n){\r\n\t\t//suposo \r\n\t\tif (n==0){\r\n\t\t\treturn 1;\r\n\t\t}else{\r\n\t\t\treturn n*factorial(n-1);\r\n\t}\r\n\t}\r\n\tint main(){\r\n\t\tint n;\r\n\t\tcin<<factorial(n)<<endl\r\n\t}\r\n\n\n",
  "//funcio factorial recursiu.\r\n#include <iostream>\r\nusing namespace std;\r\n\tint factorial(int n){\r\n\t\t//suposo \r\n\t\tif (n==0){\r\n\t\t\treturn 1;\r\n\t\t}else{\r\n\t\t\treturn n*factorial(n-1);\r\n\t}\r\n\t}\r\n\tint main(){\r\n\t\tint n;\r\n\t\tcin>>n;\r\n\t\tcout<<factorial(n)<<endl\r\n\t}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 0;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 1) return n;\r\n    else n *= factorial (n - 1);\r\n}\r\n\n\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n){\n    int c = n;\n    if (n == 0) return 1;\n    else {\n        c = factorial(n);\n        return c;\n    }\n}\n\n\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return factorial(n);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n     \n\n    \n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n   int n;\r\n   cin >> n;\r\n   cout << factorial(n) << endl;\r\n}   \r\n           \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int res;\n    if (n < 2) res = 1;\n    else res = n*factorial(n - 1);\n    return res;\n}\n\n\n",
  "\nint factorial (int n) {\n\n    int n, aux;\n    cin >> n;\n    aux = n;\n\n    for (int i = 1; aux > i; ++i) {\n        n = i*n;\n    }\n    return n;\n\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n    return (n * factorial(n - 1));\n}\n\n\nint main() {\n\tint n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial(int n) {\n    int f;\n        f=n;\n    while ( n>1 ) {\n        f=f*(n-1);\n        --n;\n    } \n    return f;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << \"el factorial de \" << x << \" es \" << factorial(x) <<endl;\n}\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else return factorial(n-1) * n;\r\n}\r\n\r\nint main () {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial (x) << endl;\r\n}\r\n    \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    int r;\r\n    if (n==0)r=1;\r\n    else r=n*factorial(n-1);\r\n    return r;\r\n}\r\n\r\nint main(){\r\n    int a;\r\n    cin>>a;\r\n    cout<<factorial(a)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n>0) return n*factorial(n-1);\n\treturn 1;\n\t}\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n > 0) return n*factorial(n-1);\n\treturn 1;\n}\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if(n == 0) return 1;\n    else if(n > 1) n *= factorial(n-1);\n    return n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n\n\n\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n   if(n==0){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n}\nint main(){\n    int a;\n    cin>>a;\n    cout<<factorial(a)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial (n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0) return 1;\n    n=n*factorial(n-1);\n    return n;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial (n) <<endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    }\n    \nint main () {\n    int n;\n    cin>>n;\n    \n    cout<<factorial(n)<<endl;\n}\n    \n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n * factorial (n-1);\n}\n    int factorial (int n, int m){\n        if (n==0) return m\n        else return fact_aux (n-1, n*m);  \n    }\n        int facorial (int n){\n            return fact_aux (n,1);\n        }\n  \n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if ( n < 2 ) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return 0;\n\treturn n*factorial(n-1);\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n < 2) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tint f = factorial(x);\n\tcout << f << endl;\n}\n\n",
  "ELF\u0001\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0003\u0000\u0001\u0000\u0000\u0000ð\u0004\b4\u0000\u0000\u0000ô\u0011\u0000\u0000\u0000\u0000\u0000\u00004\u0000 \u0000\b\u0000(\u0000#\u0000 \u0000\u0006\u0000\u0000\u00004\u0000\u0000\u00004\u0004\b4\u0004\b\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0003\u0000\u0000\u00004\u0001\u0000\u00004\u0004\b4\u0004\b\u0013\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0004\b(\t\u0000\u0000(\t\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0001\u0000\u0000\u0000(\t\u0000\u0000(\u0004\b(\u0004\b<\u0001\u0000\u0000h\u0002\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0002\u0000\u0000\u0000@\t\u0000\u0000@\u0004\b@\u0004\bà\u0000\u0000\u0000à\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000H\u0001\u0000\u0000H\u0004\bH\u0004\b \u0000\u0000\u0000 \u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Påtd`\b\u0000\u0000`\u0004\b`\u0004\b,\u0000\u0000\u0000,\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Qåtd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000/lib/ld-linux.so.2\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000GNU\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u000f\u0000\u0000\u0000\u000e\u0000\u0000\u0000\u0007\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u000b\u0000\u0000\u0000\f\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000y\u0000\u0000\u0000\u0000\u0000\u0000\u0000Æ\u0006\u0000\u0000\u0012\u0000\u0000\u0000í\u0000\u0000\u0000h\u0004\b\u0000\u0000\u0000\u0011\u0000\u0018\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000|\u0002\u0000\u0000\u0012\u0000\u0000\u0000<\u0001\u0000\u0000\u0000\u0000\u0000\u0000T\u0000\u0000\u0000\u0012\u0000\u0000\u0000S\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000ø\u0004\b\u0000\u0000\u0000\u0011\u0000\u0018\u0000X\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0012\u0000\u0000\u0000H\u0000\u0000\u0000\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0012\u0000\u0000\u0000I\u0001\u0000\u0000X\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u000e\u0000²\u0000\u0000\u0000°\u0004\bS\u0000\u0000\u0000\u0012\u0000\u0000\u0000÷\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000d\u0000\u0000\u0000À\u0004\bü\u0003\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000libstdc++.so.6\u0000_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc\u0000_ZNSirsERi\u0000_ZNSolsEPFRSoS_E\u0000__gxx_personality_v0\u0000_ZNSt8ios_base4InitC1Ev\u0000_ZSt3cin\u0000_ZNSt8ios_base4InitD1Ev\u0000_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_\u0000_ZSt4cout\u0000_Jv_RegisterClasses\u0000__gmon_start__\u0000libm.so.6\u0000libgcc_s.so.1\u0000libc.so.6\u0000__cxa_atexit\u0000_IO_stdin_used\u0000__libc_start_main\u0000GLIBC_2.0\u0000GLIBC_2.1.3\u0000CXXABI_1.3\u0000GLIBCXX_3.4\u0000\u0000\u0000\u0000\u0002\u0000\u0002\u0000\u0002\u0000\u0003\u0000\u0002\u0000\u0002\u0000\u0004\u0000\u0002\u0000\u0001\u0000\u0002\u0000\u0000\u0000\u0005\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u00002\u0001\u0000\u0000\u0010\u0000\u0000\u00000\u0000\u0000\u0000\u0010ii\r\u0000\u0000\u0004\u0000j\u0001\u0000\u0000\u0010\u0000\u0000\u0000s\u001fi\t\u0000\u0000\u0003\u0000t\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ó¯k\u0005\u0000\u0000\u0005\u0000\u0001\u0000\u0000\u0010\u0000\u0000\u0000t)\b\u0000\u0000\u0002\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000 \u0004\b\u0006\u000e\u0000\u0000h\u0004\b\u0005\u0002\u0000\u0000ø\u0004\b\u0005\u0006\u0000\u00000\u0004\b\u0007\u0001\u0000\u00004\u0004\b\u0007\u0003\u0000\u00008\u0004\b\u0007\u0004\u0000\u0000<\u0004\b\u0007\u0005\u0000\u0000@\u0004\b\u0007\u0007\u0000\u0000D\u0004\b\u0007\b\u0000\u0000H\u0004\b\u0007\n\u0000\u0000L\u0004\b\u0007\f\u0000\u0000P\u0004\b\u0007\r\u0000\u0000T\u0004\b\u0007\u000e\u0000\u0000Uåì\bèá\u0000\u0000\u0000è8\u0001\u0000\u0000èÓ\u0002\u0000\u0000ÉÃ\u0000ÿ5(\u0004\bÿ%,\u0004\b\u0000\u0000\u0000\u0000ÿ%0\u0004\bh\u0000\u0000\u0000\u0000éàÿÿÿÿ%4\u0004\bh\b\u0000\u0000\u0000éÐÿÿÿÿ%8\u0004\bh\u0010\u0000\u0000\u0000éÀÿÿÿÿ%<\u0004\bh\u0018\u0000\u0000\u0000é°ÿÿÿÿ%@\u0004\bh \u0000\u0000\u0000é ÿÿÿÿ%D\u0004\bh(\u0000\u0000\u0000éÿÿÿÿ%H\u0004\bh0\u0000\u0000\u0000éÿÿÿÿ%L\u0004\bh8\u0000\u0000\u0000épÿÿÿÿ%P\u0004\bh@\u0000\u0000\u0000é`ÿÿÿÿ%T\u0004\bhH\u0000\u0000\u0000éPÿÿÿ1í^áäðPTRh\u0004\bh \u0004\bQVh\u0006\u0004\bèÿÿÿôUåSì\u0004è\u0000\u0000\u0000\u0000[Ã\u0004\u0014\u0000\u0000üÿÿÿÒt\u0005èªÿÿÿX[ÉÃUåì\b=\u0004\b\u0000t\fë\u001cÀ\u0004£`\u0004\bÿÒ¡`\u0004\b\u0010ÒuëÆ\u0005\u0004\b\u0001ÉÃUåì\b¡<\u0004\bÀt\u0012¸\u0000\u0000\u0000\u0000Àt\tÇ\u0004$<\u0004\bÿÐÉÃUåì\u0018EüUø}ü\u0001u1}øÿÿ\u0000\u0000u(Ç\u0004$\u0004\bèþÿÿÇD$\b\\\u0004\bÇD$\u0004\u0000\u0000\u0000\u0000Ç\u0004$ò\u0004\bèþÿÿÉÃUåì\bºÿÿ\u0000\u0000¸\u0001\u0000\u0000\u0000è¥ÿÿÿÉÃUåì\bÇ\u0004$\u0004\bèÌþÿÿÉÃL$\u0004äðÿqüUåQì$EðD$\u0004Ç\u0004$ø\u0004\bèvþÿÿÇEô\u0000\u0000\u0000\u0000ëAÇEø\u0000\u0000\u0000\u0000ë\u0018ÇD$\u0004\\\u0004\bÇ\u0004$h\u0004\bè\u0010þÿÿEø\u0001Eø;Eô~àÇD$\u0004°\u0004\bÇ\u0004$h\u0004\bè\u0010þÿÿEô\u0001Eð9Eô|·¸\u0000\u0000\u0000\u0000Ä$Y]aüÃUå]Ãt&\u0000¼'\u0000\u0000\u0000\u0000UåWVSè^\u0000\u0000\u0000Ãy\u0012\u0000\u0000ì\u001cèoýÿÿ\u0004ÿÿÿEð\u0004ÿÿÿ)EðÁ}ð\u0002UðÒt+1ÿÆ¶\u0000\u0000\u0000\u0000E\u0010Ç\u0001D$\bE\fD$\u0004E\b\u0004$ÿ\u0016Æ\u00049}ðußÄ\u001c[^_]Ã\u001c$ÃUåS»,\u0004\bì\u0004¡,\u0004\bøÿt\fë\u0004ÿÐ\u0003øÿuôÄ\u0004[]ÃUåSì\u0004è\u0000\u0000\u0000\u0000[Ãà\u0011\u0000\u0000èðýÿÿY[ÉÃ\u0003\u0000\u0000\u0000\u0001\u0000\u0002\u0000*\u0000\u0000\u0000\u0001\u001b\u0003;(\u0000\u0000\u0000\u0004\u0000\u0000\u00004þÿÿH\u0000\u0000\u0000zþÿÿd\u0000\u0000\u0000þÿÿ\u0000\u0000\u0000¦þÿÿ\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001zP\u0000\u0001|\b\u0005\u0000À\u0004\b\f\u0004\u0004\u0001\u0000\u0000\u0018\u0000\u0000\u0000 \u0000\u0000\u0000\u0004\bE\u0000\u0000\u0000\u0000A\u000e\b\u0002B\r\u0005\u0000\u0000\u0000\u0018\u0000\u0000\u0000<\u0000\u0000\u0000Ú\u0004\b\u0017\u0000\u0000\u0000\u0000A\u000e\b\u0002B\r\u0005\u0000\u0000\u0000\u0018\u0000\u0000\u0000X\u0000\u0000\u0000ò\u0004\b\u0014\u0000\u0000\u0000\u0000A\u000e\b\u0002B\r\u0005\u0000\u0000\u0000$\u0000\u0000\u0000t\u0000\u0000\u0000\u0006\u0004\b\u0000\u0000\u0000\u0000D\f\u0001\u0000\t\u0004\u0001F\f\u0004\u0004A\u000e\b\u0002B\r\u0005A\u0003\u0000\u0000\u0000\u0000\u0000ÿÿÿÿÚ\u0004\b\u0000\u0000\u0000\u0000ÿÿÿÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001a\u0001\u0000\u0000\u0001\u0000\u0000\u0000$\u0001\u0000\u0000\u0001\u0000\u0000\u00002\u0001\u0000\u0000\f\u0000\u0000\u0000(\u0004\b\r\u0000\u0000\u00008\u0004\b\u0004\u0000\u0000\u0000h\u0004\b\u0005\u0000\u0000\u0000¨\u0004\b\u0006\u0000\u0000\u0000¸\u0004\b\n\u0000\u0000\u0000\u0001\u0000\u0000\u000b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000$\u0004\b\u0002\u0000\u0000\u0000P\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ø\u0004\b\u0011\u0000\u0000\u0000À\u0004\b\u0012\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0013\u0000\u0000\u0000\b\u0000\u0000\u0000þÿÿo`\u0004\bÿÿÿo\u0002\u0000\u0000\u0000ðÿÿo@\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000V\u0004\bf\u0004\bv\u0004\b\u0004\b\u0004\b¦\u0004\b¶\u0004\bÆ\u0004\bÖ\u0004\bæ\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00008\u0004\b\u0000GCC: (GNU) 4.1.2 20060928 (prerelease) (Ubuntu 4.1.1-13ubuntu5)\u0000\u0000GCC: (GNU) 4.1.2 20060928 (prerelease) (Ubuntu 4.1.1-13ubuntu5)\u0000\u0000GCC: (GNU) 4.1.2 20060928 (prerelease) (Ubuntu 4.1.1-13ubuntu5)\u0000\u0000GCC: (GNU) 4.1.2 20060928 (prerelease) (Ubuntu 4.1.1-13ubuntu5)\u0000\u0000GCC: (GNU) 4.1.2 20060928 (prerelease) (Ubuntu 4.1.1-13ubuntu5)\u0000\u0000GCC: (GNU) 4.1.2 20060928 (prerelease) (Ubuntu 4.1.1-13ubuntu5)\u0000\u0000GCC: (GNU) 4.1.2 20060928 (prerelease) (Ubuntu 4.1.1-13ubuntu5)\u0000\u0000\u0000\u0000\u0000\u0000,\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0014\u0004\b&\u0000\u0000\u0000(\u0004\b\u000b\u0000\u0000\u00008\u0004\b\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\u0000\u0000\u0000\u0002\u0000\u0018\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000=\u0004\b\u0002\u0000\u0000\u0000P\u0004\b\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000!\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000y\u0000\u0000\u0000_IO_stdin_used\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0000\u0000\u0014\u0004\b\u0014\u0004\b\u0000\u0000\u0000\u0000\u0001;\u0000\u0000\u0000¡\u0000\u0000\u0000\u0002r\u0000\u0000\u0000\u0004\u0007\u0002Z\u0000\u0000\u0000\u0001\b\u0002\u0000\u0000\u0000\u0002\u0007\u0002m\u0000\u0000\u0000\u0004\u0007\u0002\\\u0000\u0000\u0000\u0001\u0006\u0002B\u0000\u0000\u0000\u0002\u0005\u0003int\u0000\u0004\u0005\u0002L\u0000\u0000\u0000\b\u0005\u0002h\u0000\u0000\u0000\b\u0007\u0002Q\u0000\u0000\u0000\u0004\u0005\u0002r\u0000\u0000\u0000\u0004\u0007\u0002c\u0000\u0000\u0000\u0001\u0006\u0004\u0000\u0000\u0000\u0001\u0019\u0000\u0000\u0000\u0001\u0005\u0003X\u0004\b\u0005O\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000B\u0000\u0000\u0000\u0004\u0001'\u0000\u0000\u0000/build/buildd/glibc-2.4/build-tree/i386-libc/csu/crti.S\u0000/build/buildd/glibc-2.4/build-tree/glibc-2.4/csu\u0000GNU AS 2.17\u0000\u0001\u0000\u0000\u0000\u0002\u0000R\u0000\u0000\u0000\u0004\u0001Ã\u0000\u0000\u0000/build/buildd/glibc-2.4/build-tree/i386-libc/csu/crtn.S\u0000/build/buildd/glibc-2.4/build-tree/glibc-2.4/csu\u0000GNU AS 2.17\u0000\u0001\u0001\u0011\u0001\u0010\u0006\u0012\u0001\u0011\u0001%\u000e\u0013\u000b\u0003\u000e\u001b\u000e\u0000\u0000\u0002$\u0000\u0003\u000e\u000b\u000b>\u000b\u0000\u0000\u0003$\u0000\u0003\b\u000b\u000b>\u000b\u0000\u0000\u00044\u0000\u0003\u000e:\u000b;\u000bI\u0013?\f\u0002\n\u0000\u0000\u0005&\u0000I\u0013\u0000\u0000\u0000\u0001\u0011\u0000\u0010\u0006\u0003\b\u001b\b%\b\u0013\u0005\u0000\u0000\u0000\u0001\u0011\u0000\u0010\u0006\u0003\b\u001b\b%\b\u0013\u0005\u0000\u0000\u0000#\u0000\u0000\u0000\u0002\u0000\u001d\u0000\u0000\u0000\u0001\u0001û\u000e\r\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000init.c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000N\u0000\u0000\u0000\u0001\u0001û\u000e\r\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001/build/buildd/glibc-2.4/build-tree/i386-libc/csu\u0000\u0000crti.S\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002\u0014\u0004\b\u0003\u000b\u0001!/!=Z!gg//Z!!!\u0002\u0001\u0000\u0001\u0001\u0000\u0005\u0002(\u0004\b\u0003#\u0001!/=\u0002\u0005\u0000\u0001\u0001\u0000\u0005\u00028\u0004\b\u00033\u0001!/!=Z!\u0002\u0006\u0000\u0001\u0001v\u0000\u0000\u0000\u0002\u0000N\u0000\u0000\u0000\u0001\u0001û\u000e\r\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001/build/buildd/glibc-2.4/build-tree/i386-libc/csu\u0000\u0000crtn.S\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002=\u0004\b\u0003\t\u0001!\u0002\u0001\u0000\u0001\u0001\u0000\u0005\u0002P\u0004\b\u0003\u0012\u0001!!!\u0002\u0001\u0000\u0001\u0001GNU C 4.1.2 20060928 (prerelease) (Ubuntu 4.1.1-13ubuntu5)\u0000init.c\u0000short int\u0000long long int\u0000unsigned char\u0000long long unsigned int\u0000short unsigned int\u0000_IO_stdin_used\u0000/build/buildd/glibc-2.4/build-tree/glibc-2.4/csu\u0000\u0000.symtab\u0000.strtab\u0000.shstrtab\u0000.interp\u0000.note.ABI-tag\u0000.hash\u0000.dynsym\u0000.dynstr\u0000.gnu.version\u0000.gnu.version_r\u0000.rel.dyn\u0000.rel.plt\u0000.init\u0000.text\u0000.fini\u0000.rodata\u0000.eh_frame_hdr\u0000.eh_frame\u0000.ctors\u0000.dtors\u0000.jcr\u0000.dynamic\u0000.got\u0000.got.plt\u0000.data\u0000.bss\u0000.comment\u0000.debug_aranges\u0000.debug_pubnames\u0000.debug_info\u0000.debug_abbrev\u0000.debug_line\u0000.debug_str\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u00004\u0004\b4\u0001\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000H\u0004\bH\u0001\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0002\u0000\u0000\u0000h\u0004\bh\u0001\u0000\u0000P\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u00007\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0002\u0000\u0000\u0000¸\u0004\b¸\u0001\u0000\u0000ð\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000?\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000¨\u0004\b¨\u0002\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000G\u0000\u0000\u0000ÿÿÿo\u0002\u0000\u0000\u0000@\u0004\b@\u0004\u0000\u0000\u001e\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000T\u0000\u0000\u0000þÿÿo\u0002\u0000\u0000\u0000`\u0004\b`\u0004\u0000\u0000`\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000c\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000À\u0004\bÀ\u0004\u0000\u0000\u0018\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000l\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ø\u0004\bØ\u0004\u0000\u0000P\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000u\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000(\u0004\b(\u0005\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000p\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000@\u0004\b@\u0005\u0000\u0000°\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000{\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000ð\u0004\bð\u0005\u0000\u0000H\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u00008\u0004\b8\b\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000T\u0004\bT\b\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000`\u0004\b`\b\u0000\u0000,\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\b\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000§\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000(\u0004\b(\t\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000®\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u00004\u0004\b4\t\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000µ\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000<\u0004\b<\t\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000º\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0003\u0000\u0000\u0000@\u0004\b@\t\u0000\u0000à\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000Ã\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000 \u0004\b \n\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000È\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000$\u0004\b$\n\u0000\u00004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Ñ\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000X\u0004\bX\n\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000×\u0000\u0000\u0000\b\u0000\u0000\u0000\u0003\u0000\u0000\u0000h\u0004\bd\n\u0000\u0000(\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\n\u0000\u0000Ç\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000å\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00000\f\u0000\u0000X\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ô\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000­\f\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000L\u000e\u0000\u0000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001e\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000®\u000e\u0000\u0000=\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000*\u0001\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ë\u000f\u0000\u0000Ò\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000½\u0010\u0000\u00005\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000l\u0017\u0000\u0000à\u0005\u0000\u0000\"\u0000\u0000\u0000B\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\t\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000L\u001d\u0000\u0000j\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00004\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000\u0000\u0000\u0000\u0000H\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0002\u0000\u0000\u0000\u0000\u0000h\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0003\u0000\u0000\u0000\u0000\u0000¸\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0004\u0000\u0000\u0000\u0000\u0000¨\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0005\u0000\u0000\u0000\u0000\u0000@\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0006\u0000\u0000\u0000\u0000\u0000`\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000À\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\b\u0000\u0000\u0000\u0000\u0000Ø\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\t\u0000\u0000\u0000\u0000\u0000(\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\n\u0000\u0000\u0000\u0000\u0000@\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000b\u0000\u0000\u0000\u0000\u0000ð\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\f\u0000\u0000\u0000\u0000\u00008\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\r\u0000\u0000\u0000\u0000\u0000T\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000e\u0000\u0000\u0000\u0000\u0000`\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000f\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0010\u0000\u0000\u0000\u0000\u0000(\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0011\u0000\u0000\u0000\u0000\u00004\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0012\u0000\u0000\u0000\u0000\u0000<\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0013\u0000\u0000\u0000\u0000\u0000@\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0014\u0000\u0000\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0015\u0000\u0000\u0000\u0000\u0000$\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0016\u0000\u0000\u0000\u0000\u0000X\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0017\u0000\u0000\u0000\u0000\u0000h\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001d\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000!\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\"\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ(\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ/\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ:\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿr\u0000\u0000\u0000\u0014\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\u0000\u0000\u0000(\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0011\u0000\u0000\u0000\u00004\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0012\u0000©\u0000\u0000\u0000<\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0013\u0000¶\u0000\u0000\u0000\u0004\b\u0001\u0000\u0000\u0000\u0001\u0000\u0018\u0000Å\u0000\u0000\u0000`\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0017\u0000Ì\u0000\u0000\u0000@\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\f\u0000â\u0000\u0000\u0000p\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿî\u0000\u0000\u00000\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0011\u0000û\u0000\u0000\u00008\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0012\u0000\b\u0001\u0000\u0000$\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0010\u0000\u0016\u0001\u0000\u0000<\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0013\u0000\"\u0001\u0000\u0000\u0010\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\f\u0000/\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ8\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿp\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿz\u0001\u0000\u0000Ú\u0004\b\u0017\u0000\u0000\u0000\u0002\u0000\f\u0000\u0001\u0000\u0000\u0004\bE\u0000\u0000\u0000\u0002\u0000\f\u0000º\u0001\u0000\u0000\u0004\b\u0001\u0000\u0000\u0000\u0001\u0000\u0018\u0000È\u0001\u0000\u0000ò\u0004\b\u0014\u0000\u0000\u0000\u0002\u0000\f\u0000Ð\u0001\u0000\u0000@\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002\u0014\u0000Ù\u0001\u0000\u0000(\u0004\b\u0000\u0000\u0000\u0000\u0000\u0002ñÿê\u0001\u0000\u0000$\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002\u0016\u0000\u0000\u0002\u0000\u0000(\u0004\b\u0000\u0000\u0000\u0000\u0000\u0002ñÿ\u0013\u0002\u0000\u0000\u0000\u0000\u0000\u0000Æ\u0006\u0000\u0000\u0012\u0000\u0000\u00008\u0002\u0000\u0000h\u0004\b\u0000\u0000\u0000\u0011\u0000\u0018\u0000O\u0002\u0000\u0000T\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u000e\u0000V\u0002\u0000\u0000\u0000\u0000\u0000\u0000|\u0002\u0000\u0000\u0012\u0000\u0000\u0000\u0002\u0000\u0000\\\u0004\b\u0000\u0000\u0000\u0000\u0011\u0002\u0017\u0000¨\u0002\u0000\u0000\u0004\b\u0005\u0000\u0000\u0000\u0012\u0000\f\u0000¸\u0002\u0000\u0000\u0000\u0000\u0000\u0000T\u0000\u0000\u0000\u0012\u0000\u0000\u0000Ò\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0012\u0000\u0000\u0000ð\u0002\u0000\u0000(\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\n\u0000ö\u0002\u0000\u0000ð\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\f\u0000ý\u0002\u0000\u0000ø\u0004\b\u0000\u0000\u0000\u0011\u0000\u0018\u0000\u0013\u0003\u0000\u0000 \u0004\bi\u0000\u0000\u0000\u0012\u0000\f\u0000#\u0003\u0000\u0000d\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿ/\u0003\u0000\u0000\u0006\u0004\b\u0000\u0000\u0000\u0012\u0000\f\u00004\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0012\u0000\u0000\u0000Q\u0003\u0000\u0000X\u0004\b\u0000\u0000\u0000\u0000 \u0000\u0017\u0000\\\u0003\u0000\u00008\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\r\u0000b\u0003\u0000\u0000\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0012\u0000\u0000\u0000z\u0003\u0000\u0000d\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿ\u0003\u0000\u0000\t\u0004\b\u0000\u0000\u0000\u0000\u0012\u0002\f\u0000\u0003\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿ\u0003\u0000\u0000X\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u000e\u0000¬\u0003\u0000\u0000°\u0004\bS\u0000\u0000\u0000\u0012\u0000\u0000\u0000ô\u0003\u0000\u0000X\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000\u0017\u0000\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0015\u0004\u0000\u0000À\u0004\bü\u0003\u0000\u0000\u0012\u0000\u0000\u00006\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000[\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000abi-note.S\u0000../sysdeps/i386/elf/start.S\u0000init.c\u0000initfini.c\u0000/build/buildd/glibc-2.4/build-tree/i386-libc/csu/crti.S\u0000call_gmon_start\u0000crtstuff.c\u0000__CTOR_LIST__\u0000__DTOR_LIST__\u0000__JCR_LIST__\u0000completed.5761\u0000p.5759\u0000__do_global_dtors_aux\u0000frame_dummy\u0000__CTOR_END__\u0000__DTOR_END__\u0000__FRAME_END__\u0000__JCR_END__\u0000__do_global_ctors_aux\u0000/build/buildd/glibc-2.4/build-tree/i386-libc/csu/crtn.S\u0000ex1.18.cc\u0000_GLOBAL__I_main\u0000_Z41__static_initialization_and_destruction_0ii\u0000_ZSt8__ioinit\u0000__tcf_0\u0000_DYNAMIC\u0000__init_array_end\u0000_GLOBAL_OFFSET_TABLE_\u0000__init_array_start\u0000_ZNSt8ios_base4InitC1Ev@@GLIBCXX_3.4\u0000_ZSt4cout@@GLIBCXX_3.4\u0000_fp_hw\u0000_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@@GLIBCXX_3.4\u0000__dso_handle\u0000__libc_csu_fini\u0000__cxa_atexit@@GLIBC_2.1.3\u0000_ZNSolsEPFRSoS_E@@GLIBCXX_3.4\u0000_init\u0000_start\u0000_ZSt3cin@@GLIBCXX_3.4\u0000__libc_csu_init\u0000__bss_start\u0000main\u0000__libc_start_main@@GLIBC_2.0\u0000data_start\u0000_fini\u0000_ZNSirsERi@@GLIBCXX_3.4\u0000_edata\u0000__i686.get_pc_thunk.bx\u0000_end\u0000_IO_stdin_used\u0000_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@@GLIBCXX_3.4\u0000__data_start\u0000_Jv_RegisterClasses\u0000__gxx_personality_v0@@CXXABI_1.3\u0000_ZNSt8ios_base4InitD1Ev@@GLIBCXX_3.4\u0000__gmon_start__\u0000\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 1){return 1;}\n\telse {return(n*factorial(n-1));}\n\n\n\n}\nint main ()\n{int x;\ncin >> x;\ncout << factorial(x) <<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0 or n == 1) return 1;\n    return n * factorial(n-1);\n    }\nint main() {\n\n   int x;\n   cout << factorial(x) << endl;\n   \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else {\n        n=factorial(n-1)*n;\n    }\n    return n;\n    \n}\n\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n\n",
  "int factorial( int n ) {\r\n\r\n    if ( n == 0 ) return 1;\r\n    \r\n    else return n * factorial ( n - 1 );\r\n\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if (n == 0) return 1;\n    else total = n * factorial (n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 0 or n == 1 ) return 1;\n    else return n * factorial ( n - 1 );\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "# include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if ( n == 0 ) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n    }\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint girar(int n) {\n    int girat = 0;\n    while (n != 0) {\n        girat = 10*girat + n%10;\n        n /= 10;\n    } \n    return girat;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << girar(n)<< endl;\n    if (n == girar(n)) cout << n << \" es capicua\" << endl;\n    else cout << n << \" no es capicua\" << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if (n == 0) return 1;\n    else if (n > 1){\n        n *= factorial(n - 1);\n    }\n    return n;\n}\n\n\nint main(){\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n)  {\n    if (n<=1) return 1;\n    return (n*factorial(n-1));\n}\n\nint main()  {\n    int n;\n    while (cin >> n)  {\n        cout << \"fact (\" << n << \")=\" << factorial(n) << endl;\n    }\n}\n\n\n",
  "int factorial (int n),\nif (n==0) return 1;\nelse return n+factorial(n-1)\n\n\n",
  "int factorial (int n),\nif (n==0) return 1;\nelse return n+factorial(n-1);\n\n\n",
  "int factorial (int n),\nif (n==0){ \n\treturn 1;\n\t}\nelse{ \n\treturn n*factorial(n-1);\n}\n\n\n",
  "int factorial (int n),{\nif (n==0) return 1;\nelse return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n),{\nif (n==0) return 1;\nelse return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n),{\nif (n==0) return 1;\nelse return n*factorial(n-1);\n}\nint main(){\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n}\n\n\n",
  "int factorial (int n) {\n    if (n<2) return 1;\n    else return n*factorial (n-1)\n}\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact;\n    if(n == 0 or n == 1) fact = 1;\n    else fact = n * factorial(n - 1);\n    return fact;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n cin >> n;\r\n if (n==0) return 0;\r\n else if (n==1) return 1;\r\n else return n*factorial(n-1);\r\n}\n\n",
  "int factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial (n-1);\n}\n    \n\n\n",
  "int factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial (n-1)\n}\n    \n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n==0) return 1;\r\n    else return n * factorial (n-1);\r\n}\r\n \r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n//Funció Factorial\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\n\n//Programa\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial_rec (int n) {\n    if (n == 0) return 1;\n    else return n*factorial_rec(n - 1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial_rec(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) {\n        return n*factorial(n-1);\n    }\n    return 1;\n}\n    \nint main() {\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int aux = 1;\n    if (n >= 0 and n <= 12) {\n        while (n != 1) {\n            aux *= n;\n            --n;\n        }\n    }\n    return aux;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) <<endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n   int factorial(int n){\n        if (n==0) return 1;\n        int f = n*factorial(n-1);\n        return f;\n}\n\n    int main(){\n        int n;\n        cin>>n;\n        cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0)\r\n        return 1;\r\n    else\r\n        return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    n = n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    n = n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include<iostream>\n\n#include<cmath>\n\nusing namespace std;\n\nint factorial(int n){\n\n    if(n==0) return 1;\n    \n    return n * factorial (n-1);\n    \n       \n\n}\n\nint main(){\n    \n    cout<<factorial(5)<<endl;\n    \n}\n    \n    \n    \n\n \n\n\n",
  "     # include <iostream>\n     using namespace std;\n     int factorial(int n){\n          if(n==0) return 1;\n\t  else{\n\t  return n*factorial(n-1);\n\t  }\n     }\n     int main(){\n     int n;\n     cin>>n;\n     n=factorial (n);\n     \n     cout<<n<<endl;\t  \n     }\n \n\n\n\n\n \n\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    int result=factorial(n);\r\n    cout<<result<<endl;\r\n}\r\n    \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==2) return 2;\r\n    else return n*factorial(n-1);\r\n}\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    int result=factorial(n);\r\n    cout<<result<<endl;\r\n}\r\n    \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n<=1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    int result=factorial(n);\r\n    cout<<result<<endl;\r\n}\r\n    \r\n\n\n",
  "int factorial(int n){\r\n    \r\n    if ( n == 0 ) return 1;\r\n    else {\r\n        return n* factorial( n -1);\r\n    }\r\n} \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\t\tif (n==0){\n\t\t\treturn 1;\n\t\t}else{\n\t\t\treturn (n*factorial(n-1));\n\t\t}\n}\nint main(){\n    int x;\n    cin>>x;\n    factorial(x);\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\t\tif (n==0){\n\t\t\treturn 1;\n\t\t}else{\n\t\t\treturn (n*factorial(n-1));\n\t\t}\n}\nint main(){\n    int x;\n    cin>>x;\n    factorial(x);\n\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    \n    if(n==0){\n       return 1;\n    }else{\n       return (n*factorial(n-1));\n    }\n   \n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    //Prec: n>=0<=12\n        \n    if (n==0) return 1;\n\n    return n*factorial(n-1);\n    \n}\n\nint main (){\n    int n;\n    cin>> n;\n    int y = factorial(n);\n    cout << y << endl;\n}\n    \n\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\t//Prec 0 <=n<=12\n\tif (n == 0)\n\t\treturn 1;\n\tint resu = n;\n\twhile (n > 1){ \n\t\tresu *= --n;\n\t\t}\n\treturn resu;\n}\t \n\nint main() {\n\tint n;\n\tcin>> n;\n\tcout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   if (n == 0) return 1;\n   else return n * factorial(n - 1);\n   } \n\nint main(){\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   if (n == 0) return 1;\n   else return n * factorial(n - 1)\n   } \n\nint main(){\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\nint main(){\n    int n;\n    cin >>n;\n    cout << factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int resultado;\n    if (n < 2) resultado= 1;\n    else resultado= n*factorial(n-1);\n    return resultado;\n}\n\nint main(){\n    int n;\n    cin >>n;\n    cout << factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    int f=1;\r\n    while (n!=0){\r\n          f=f*n;\r\n          --n;\r\n          }\r\n}\r\nint main (){\r\n    int n;\r\n    n=5;\r\n    factorial(n);\r\n    cout<<factorial (n)<< endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n == 0) \r\n    return 1;\r\n    else \r\n    return factorial (n-1)*n;\r\n}\r\nint main (){\r\n    int n;\r\n    n=5;\r\n    factorial(n);\r\n    cout<<factorial (n)<< endl;\r\n}\r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n        int p;\n        p=1;\n        if (n==1){\n            p=1;\n        }\n        else {\n            p= n * factorial (n-1);\n        }\n        return p;\n    }\n    \nint main () {\n    int n;\n    cin>>n;\n    cout<<factorial (n);\n    cout<<endl;\n}\n        \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n        int p;\n        \n        if (n==0){\n            p=1;\n        }\n        else {\n            p= n * factorial (n-1);\n        }\n        return p;\n    }\n    \nint main () {\n    int n;\n    cin>>n;\n    cout<<factorial (n);\n    cout<<endl;\n}\n        \n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n - 1) * n;\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n < 2) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    \n    int n; \n    cin >> n;\n    cout << factorial(n) << endl;\n}    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int f;\n  if (n == 0) f = 1;\n  else f = n*factorial(n-1);\n  return f;\n}\n\n\n",
  "/*Escriviu una funció\n\n    int factorial(int n);\n\nque retorni n! .\n\nResoleu aquest problema recursivament. */\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0)return 1;\n    return n*factorial(n-1);\n    \n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n\n",
  "// Factorial recursiu.\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\n    \r\n    \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\t\tif (n == 0 or n == 1) return 1;\r\n\t\treturn n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\t\tint n;\r\n\t\tcin >> n;\r\n\t\tcout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n<0) return 0;\n\telse if (n>1) return n*factorial (n-1);\n\treturn 1;\n}\n\nint main () {\n\tint a;\n\tcin>>a;\n\tcout<<factorial(a)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial ( int n){\n    int r;\n    if( n == 0) r = 1;\n    else r = n* factorial(n-1);\n    \n    return r;\n    }\n\n\nint main( ){\n    int x;\n    cin >> x;\n    int y = factorial(x);\n    cout << y << endl;\n    }\n\n\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint elements_iguals(const vector<int>& v) {\n    int n = v.size();\n    int c = 0;\n    for (int i=0; i<n-1; ++i) {\n        cerr << \"v[\" << i << \"]=\" << v[i]\n             << \"   v[n-1]=\" << v[n-1] << endl;\n        if (v[i] == v[n-1]) ++c;\n    }\n    return c;\n}\n\n\nint main() {\n    int n;\n    int x;\n    cin >> n;\n    vector<int> v(n);\n    for (int i=1; i<n; ++i) {\n        cin >> x;\n        v[i] = x;\n    }\n    cout << elements_iguals(v) << endl;\n}\n\n\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint elements_iguals(const vector<int>& v) {\n    int n = v.size();\n    int c = 0;\n    for (int i=0; i<n-1; ++i) {\n        cerr << \"v[\" << i << \"]=\" << v[i]\n             << \"   v[n-1]=\" << v[n-1] << endl;\n        if (v[i] == v[n-1]) ++c;\n    }\n    return c;\n}\n\n\nint main() {\n    int n;\n    int x;\n    cin >> n;\n    vector<int> v(n);\n    for (int i=0; i<n; ++i) {\n        cin >> x;\n        v[i] = x;\n    }\n    cout << elements_iguals(v) << endl;\n}\n\n\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint elements_iguals(const vector<int>& v) {\n    int n = v.size();\n    int c = 0;\n    for (int i=0; i<n-1; ++i) {\n        cerr << \"v[\" << i << \"]=\" << v[i]\n             << \"   v[n-1]=\" << v[n-1] << endl;\n        if (v[i] == v[n-1]) ++c;\n    }\n    return c;\n}\n\n\nint main() {\n    int n;\n    int x;\n    cin >> n;\n    vector<int> v(n);\n    for (int i=0; i<n; ++i) {\n        cin >> x;\n        v[i] = x;\n    }\n    cout << elements_iguals(v) << endl;\n}\n\n\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint elements_iguals(const vector<int>& v) {\n    int n = v.size();\n    int c = 0;\n    for (int i=0; i<n-1; ++i) {\n        cerr << \"v[\" << i << \"]=\" << v[i]\n             << \"   v[n-1]=\" << v[n-1] << endl;\n        if (v[i] == v[n-1]) ++c;\n    }\n    return c;\n}\n\n\nint main() {\n    int n;\n    int x;\n    cin >> n;\n    vector<int> v(n);\n    for (int i=0; i<n; ++i) {\n        cin >> x;\n        v[i] = x;\n    }\n    cout << elements_iguals(v) << endl;\n}\n\n\n\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint elements_iguals(const vector<int>& v) {\n    int n = v.size();\n    int c = 0;\n    for (int i=0; i<n-1; ++i) {\n        cerr << \"v[\" << i << \"]=\" << v[i]\n             << \"   v[n-1]=\" << v[n-1] << endl;\n        if (v[i] == v[n-1]) ++c;\n    }\n    return c;\n}\n\n\nint main() {\n    int n;\n    int x;\n    cin >> n;\n    vector<int> v(n);\n    for (int i=0; i<n; ++i) {\n        cin >> x;\n        v[i] = x;\n    }\n    cout << elements_iguals(v) << endl;\n}\n\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n){\r\n    \r\n    if (n == 0 ) return 1;\r\n    else return n*factorial(n-1) ;\r\n           \r\n\r\n}\r\n    \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n == 0) return 1;\r\n    return n*factorial(n - 1);\r\n    }\r\nint main() {\r\n    int m;\r\n    cin >> m;\r\n    cout << factorial(m) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1; \n    return (factorial(n-1)*n);\n}   \n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    n*factorial(n - 1);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) n = 1;\n    else n *= factorial(n - 1);\n    return n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int fact = factorial(n);\n    cout << fact << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0 ) return 1;\n    else return n * factorial(n-1); \n\n}\n\nint main(){\n\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    if(n==1) return 1;\n    else return(n*factorial(n-1));\n}\n\nint main(){\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if ( n == 0 ) return 1;\r\n    else return n * factorial ( n - 1 );\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n \n}\n\nint main() {\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n) {\n    int f;\n    if (n==0) f=1;\n    else f= n*fact(n-1);\n    return f;\n}\n\nint main() {\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n) {\n    int f;\n    if (n==0) f=1;\n    else f= n*fact(n-1);\n    return f;\n}\n\nint main() {\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n) {\n    if (n==0) return 1;\n    return n*fact(n-1);\n \n}\n\nint main() {\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x){\n    if(x==1) return 1;\n    return x*factorial(x-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x){\n    if(x==0) return 1;\n    return x*factorial(x-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n) {\n    int f=1;\n    while (n >=0 and n<=12) {\n        \n        f = f * factorial (n-1);\n    }\n    }\n        \n\n\n",
  "int factorial(int n) {\n    int f=1;\n    while (n >=0 and n<=12) {\n        \n        f = f * factorial (n-1);\n    }\n    return f;\n    }\n        \n\n\n",
  "int factorial(int n) {\n    int f=1;\n    while (n >=0 and n<=12) {\n        \n        f = f * factorial (n-1);\n    }\n    return f\n    }\n        \n\n\n",
  "int factorial(int n) {\n    int f=1;\n    while (n != 0) {\n        \n        f = n * factorial (n-1);\n        \n    }\n    return f;\n    }\n        \n\n\n",
  "int factorial(int n) {\n    int f=1;\n    while (n > 0) {\n        \n        f = n * factorial (n-1);\n        \n    }\n    return f;\n    }\n        \n\n\n",
  "int factorial (int n) {\n\tif (n <= 1) {\n\t\n\t\treturn 1;\n\t\t\n\t} \n\t\n\telse {\n\t\treturn n * factorial (n-1);\n        }\n}\n\n\n\n",
  "int factorial(int n) {\n    int f;\n    if (n!=0) {\n       \n    }\n    while (n > 0) {\n        \n        f = n * factorial (n-1);\n        \n    }\n    else {\n    f=1;\n    }\n    return f;\n    }\n        \n\n\n",
  "int factorial(int n) {\n    int f;\n    if (n!=0) {\n       \n    while (n != 0) {\n        \n        f = n * factorial (n-1);\n        \n    }\n    else {\n    f=1;\n    }\n    return f;\n    }\n        \n\n\n",
  "int factorial (int n) {\n\tif (x < = 1) {\n\t\treturn 1;\n\t} else {\n\t\treturn x * fact (n-1);\n} \n\n\n",
  "int factorial (int n) {\n\tif (n < = 1) {\n\t\treturn 1;\n\t} else {\n\t\treturn n * fact (n-1);\n} \n\n\n",
  "int factorial (int n) {\n\tif (n < = 1) {\n\t\treturn 1;\n\t} else {\n\t\treturn n * fact (n-1);\n}\n} \n\n\n",
  "int factorial (int n) {\n\tif (n < = 1) {\n\t\treturn 1;\n\t} else {\n\t\treturn (n * fact (n-1));\n}\n} \n\n\n",
  "int factorial (int n);\n\tif (n < = 1) {\n\t\treturn 1;\n\t} else {\n\t\treturn n * fact (n-1);\n}\n\n\n\n",
  "int factorial (int n) {\n\tif (n < = 1) {\n\t\n\t\treturn 1;\n\t\t\n\t} \n\t\n\telse {\n\t\treturn n * factorial (n-1);\n        }\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==1) return n;\n    else {\n        n = n * factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n < 2) return n;\n    else {\n        n = n * factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n<=1) return n;\n    else {\n        n = n * factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n<2) return n;\n    else {\n        n = n * factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n<3) return n;\n    else {\n        n = n * factorial(n-1);\n    }\n    return n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n<3 and n > 0) return n;\r\n    else if (n == 0) return 0;\r\n    else {\r\n        n = n * factorial(n-1);\r\n    }\r\n    return n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n<3 and n > 0) return n;\r\n    else if (n == 0) return 1;\r\n    else {\r\n        n = n * factorial(n-1);\r\n    }\r\n    return n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int fact = 1;\r\n    if(n < 1) return 1;\r\n    else{\r\n        fact *= factorial(n-1);\r\n    }\r\n    return fact;\r\n}\r\n    \r\n    \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int fact = 1;\r\n    if(n == 0) return 1;\r\n    else{\r\n        fact *= factorial(n-1);\r\n    }\r\n    return fact;\r\n}\r\n    \r\n    \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 0) return 1;\r\n    else{\r\n        int fact = 1;\r\n        fact *= factorial(n-1);\r\n    }\r\n    return fact;\r\n}\r\n    \r\n    \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int fact = 1;\r\n    if(n == 0) fact = 1;\r\n    else{\r\n        fact = n*factorial(n-1);\r\n    }\r\n    return fact;\r\n}    \r\n    \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int a;\n    --n;\n    a*=n;\n    if (n > 1) factorial(n);\n    return a;\n    cout << a << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    total\n    total*=factorial(n-1);\n    return total;\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int x=1;\r\n    if (n==1) return 1;\r\n    else {\r\n        x=x*n;\r\n        x= x*factorial(n-1);\r\n    }\r\n    return x;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int x=1;\r\n    if (n==1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {         \n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int r = factorial(n);\n    cout << r << endl;\n}\n  \n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n) {\n    int fact;\n    if(n > 0) fact = n*factorial(n-1);\n    else return 1;\n    return fact;\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 1) return 1;\n    else return n * factorial(n-1);\n}\nint main (){\n    int n, m;\n    cin >> n;\n    m = factorial (n);\n    cout << m << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n < 1) return 1;\n    else return n * factorial(n-1);\n}\nint main (){\n    int n, m;\n    cin >> n;\n    m = factorial (n);\n    cout << m << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n    if(n == 0)return 1;\r\n    else return (n * factorial (n-1));\r\n}\r\n\r\nint main (){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n    \r\n}\r\n\n\n",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\r\n    int a;\r\n    \r\n    cin>>a;\r\n    cout<<factorial(a)<<endl;\r\n}\r\n \r\n\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n*factorial(n - 1);\n}\nint main() {\n    int n;\n    cin >> n;\n    int fact = factorial(n);\n    cout << fact << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) {\n        return 1;\n    }\n    return n*factorial(n - 1);\n}\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n -1);\n}\n    \nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n);\n    cout << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else n *= factorial(n - 1);\n    return n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n  if(n==1)return 1;\n  n=n*factorial(n-1);\n  return n;\n}\nint main(){\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n  if(n==1 or n==0)return 1;\n  n=n*factorial(n-1);\n  return n;\n}\nint main(){\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    if (n==0) {\n        return 1;\n    }\n    else {\n        int aux=n-1;\n        return (n* factorial (aux));\n    }\n}\nint main() {\n    int n;\n    cin >> n;\n    return (n);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    int a=1;\n    int b=n;\n    while (a<n) {\n        b=a*b;\n        a=a+1;\n    }\nreturn b;\n}\nint main() {\nint x;\ncin>>x;\ncout<<factorial(x)<<endl;\n}\n\n\n",
  "//factorial\n#include <iostream>\n#include <string>\nusing namespace std;\nint factorial(int n) {\n\tif (n==1) {\n\t\treturn 1;\n\t}else if (n==0){\n\t\treturn 0;\n\t}else{\n\t\treturn n*factorial(n-1);\n\t}\nreturn n;\n}\nint main() {\nint x;\ncin>>x;\ncout<<factorial(x)<<endl;\n}\n\n\n\n\n",
  "//factorial\n#include <iostream>\n#include <string>\nusing namespace std;\nint factorial(int n) {\n\tif (n==0) {\n\t\treturn 0;\n\t}\n\tif (n==1) {\n\t\treturn 1;\n\t}else{\n\t\treturn n*factorial(n-1);\n\t}\n}\nint main() {\nint x;\ncin>>x;\ncout<<factorial(x)<<endl;\n}\n\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else\n    return n*factorial(n-1);\n}\n\nint main(){\n    int r;\n    cin >> r;\n    \n    cout << factorial(r) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    \n    if(n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    if (n==1)\n    return 1;\n    else {\n    return n*factorial(n-1);\n    }\n}\nint main(){\n    int n;\n    cin>>n;\n    int s=factorial (n);\n    cout<<s<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    if (n==1)\n    return 1;\n    else {\n    return n*factorial(n-1);\n    }\n}\nint main(){\n    int n;\n    cin>>n;\n    int s=factorial (n);\n    cout<<s<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int f;\n    if (n==0) f=1;\n    else f=n*factorial(n-1);\n    return f;}\n\nint main (){\n    int n=1;\n    cout<<factorial(n)<<endl;\n    }\n \n\n\n",
  "int factorial(int n) {\n    if (n <=1 ) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "int factorial (int n){\r\n    if (n == 1) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n\n\n",
  "int factorial (int n){\n    if (n==0) return 1;\n    return n*factorial (n-1)\n}\n\n\n",
  "int factorial(int n){\r\n    if (n <= 1) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0){\r\n    return 1;\r\n    }else{\r\n    return n*(factorial(n-1));\r\n    }\r\n    }\r\n    \r\nint main (){\r\n    int a;\r\n    cin>>a;\r\n    cout<<factorial(a)<<endl;\r\n    system(\"pause\");\r\n    }\r\n\n\n",
  "int factorial(int n){\r\n    if (n == 1) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n\n\n",
  "int factorial(int n){\r\n    if (n <= 1) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int i,j=1;\n\n    for (i=1; i<=n; i++) j *= i;\n    return(j);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial (int n){\n    if (n==0) return 1;\n    else return (n* factorial(n-1));\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n int factorial(int n){\r\n\tif(n==0) return 1;\r\n\treturn (n*factorial(n-1));\r\n}\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tfactorial(n);\r\n\tcout << factorial(n) << endl;\r\n}\r\n\t\t\t\t\t\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    \r\n    if ( n == 0) return 1;\r\n    \r\n       return n*factorial(n-1);\r\n}\r\n\n\n",
  "int factorial(int n) {\n    if (n==0)return 1;\n    else return factorial(n-1);\n}\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n\n\nint main() {\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n == 0){\r\n          return 1;\r\n    }\r\n    else{\r\n         return n * (factorial(n-1));\r\n    }\r\n}\r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n * (factorial(n-1));\r\n}\r\n\r\n\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\n\nint factorial(int n){\n\n    if (n<= 1) return 1;\n    else return n*factorial(n-1);\n    }\n    \n   \nint main () {\nint n;\n\n        cin>> n;\n        if(n<=12){\n        cout<<factorial(n)<<endl;}\n        \n        }\n        \n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\nif (n==0) return 1;\nelse return n*(factorial(n-1));\n}\n\nint main  (){\nint n;\ncin>>n;\n\nfactorial(n);\n\ncout<<factorial(n);\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   if (n == 0) return 1;\n   else return n*factorial(n - 1);\n\n}\n\nint main () {\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1; \n    else return n*factorial(n - 1);\n    \n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factrec (int n) \n{\n  if (n == 0 or n == 1) return(1);\n  else return(n*factrec(n-1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factrec(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint fact_rec(int b){\r\n    if (b == 0){\r\n          return 1;\r\n    }\r\n    else{\r\n         return b * (fact_rec(b-1));\r\n    }\r\n}\r\n\r\n\n\n",
  "int factorial(int n) {\n    if (n<2) {\n        return (1);\n    }\n    else {\n        return (n * factorial (n-1));\n    }\n}\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\n\n\n\nint factorial(int n){\n\nif (n==1) return 1;\nelse return n*factorial(n-1);\n\n\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\n\n\n\nint factorial(int n){\nif (n==0){\n\t return 1;\n}else if (n==1){\n\t return 1;\n}else return n*factorial(n-1);\n\n\n}\n\nint main(){\nint n;\ncin>>n;\ncout<<factorial(n);\n\n\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n){\n\n\tif (n==1) return 1;\n\telse return n*(factorial (n-1));\n\n}\n\nint main() {\n\n\nint x;\ncin>>x;\ncout<<factorial (x)<<endl;\n\n\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\n\n\n\nint main(){\n int n;\n cin >> n;\n cout << factorial(n) << endl;\n\n\n\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n != 0){\n        return n*factorial(n - 1);\n    }else{\n        return 1;\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n < 2) return 1;\n    else return n*factorial(n - 1);    \n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\n#include <vector>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if(n < 2) return 1;\n    else return n*factorial(n - 1);    \n}\n\nint main() {\n/*    cout.setf(ios::fixed);\n    cout.precision(6);\n*/ \n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if( n==0) {\n        return 1;\n    }\n    else { \n        return n*factorial(n-1);\n    }\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl; \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n     int n;\r\n     cin >> n;\r\n     cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n     int n;\r\n     cin >> n;\r\n     cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n * factorial (n - 1);\n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n        if (n == 0) return 1;\n        return factorial(n-1)*n;\n}\n\nint main() {\n        int n;\n        cin >> n;\n        cout << factorial(n) << endl;\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n){\n\nint r=2;\nfor(int i=3;i<=n;++i){\nr=i*r;\n}\nreturn r;\n\n}\n\n\n",
  "int factorial(int n){\n\nint r=2;\nfor(int i=3;i<n;++i){\nr=i*r;\n}\nreturn r;\n\n}\n\n\n",
  "int factorial(int n){\n\nint r=2;\nfor(i=3;i<=n;++i){\nr=i*r;\n}\nreturn r;\n\n}\n\n\n",
  "int factorial(int n){\n\nint r=1;\nfor(int i=1;i<=n;++i){\nr=i*r;\n}\nreturn r;\n}\n\n\n",
  "\r\n\r\nint factorial (int n){\r\n\r\n  if (n == 0) return 1;\r\n  return n * factorial(n-1);\r\n\r\n}\r\n\n\n",
  "int factorial(int n){\n\nint r=1;\nfor(int i=1;i<=n;++i){\nr=i*r;\n}\ncout<<r;\nreturn r;\n}\n\n\n",
  "int factorial(int n){\n\nint r=1;\nfor(int i=1;i<=n;++i){\nr=i*r;\n}\ncout<<r;\nreturn r;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main () {\n    int x;\n    cin >> x;\n    int r=factorial(x);\n    cout << r << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int x){\n    if (x == 0) return 1;\n    return x*factorial (x-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial (x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n//FACT2\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint main ()\n{\n\tint x;\n\tcin >> x;\n\tint total, aux;\t\n\n\twhile (x > 0)\n\t{\n\t\taux=x*(x-1);\n\t\ttotal=total+aux;\n \t\tx--;\n\t}\n\tcout << \"el factorial de\" << x << \"es\" << total << endl;\n}\n \n\t\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n *= factorial(n-1);\n}\n/*\nint main() {\n\nint n;\ncin>> n;\ncout << factorial (n) <<endl;\n\n}\n*/\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n){\n    if (n == 0) return 1;\n    else return n * fact(n - 1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << fact(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n){\n    if (n == 0) return 1;\n    else return n * fact(n - 1);\n}\n\n\n",
  "int fact (int n){\n    if (n == 0) return 1;\n    else return n * fact(n - 1);\n}\n\n\n",
  "int factorial(int n){\r\n    if(n==0)return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 0) return 1;\n        \n      else return n*factorial(n -1);\n     \n}\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial (x) << endl;\n}    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    return fact_aux(n, 1);\n}\n\nint fact_aux(int n, int m) {\n    if (n < 2) return m;\n    else return fact_aux(n - 1, n*m);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    while ( n > 1 ){\n        n = n * (factorial (n-1));\n    }\n    return n;\n}\n\nint main (){\n    cout.setf(ios::fixed);\n    cout.precision(4); \n    int n;\n    cin >> n;\n    cout << factorial(n)<< endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n > 1) return n * (factorial (n - 1));\n    return 1;\n}\n\nint main (){\n    cout.setf(ios::fixed);\n    cout.precision(4); \n    int n;\n    cin >> n;\n    cout << factorial(n)<< endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial (int n) {\n    if (n<=1) return 1;\n    else return n*factorial (n-1);\n    }\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial (x) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\n\n\n\nint factorial(int n){\nif (n==0) return 0;\nelse if (n==1) return 1;\nelse return n*factorial(n-1);\n\n\n}\n\nint main(){\nint n;\ncin>>n;\ncout<<factorial(n);\n\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int x = 1;\n    if(n != 0) {\n        x = factorial(n-1);\n        x = x*n;\n    }\n    return x;\n}\n\nint main() {\n    cout << factorial(3) << endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n)\n{\n    if (n<=0) {\n        return 1;\n        } \n    else {\n        return n*factorial (n-1);\n        }\n}\nint main()\n{\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return (n*factorial(n-1));\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream> \r\nusing namespace std;\r\n\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial (n-1);\r\n}\r\n\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n//Es té 0 <= n <= 12\nint factorial(int n){\n    int r;\n    if(n==0){ \n    r=1;\n    }else{\n    r=n*factorial(n-1);\n    }\n    return r;\n}\nint main(){\nint x;\ncin >> x;\ncout << factorial(x) <<endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\n    if (n == 1){\n    \n        return 1;\n    }\n    \n    else return n * factorial(n-1);\n    \n    }\n   \n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\n    if (n == 0){\n    \n        return 1;\n    }\n    \n    else return n * factorial(n-1);\n    \n    }\n   \n int main(){\n \n int x;\n \n cin >> x;\n \n cout << factorial(x) <<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int a=1;   \n    if (n==0)\n        n=1;\n    else \n        a=n*factorial(n-1);\nreturn a;\n}\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   if (n==0) return 1;\n   return n*factorial(n-1);\n}\nint main(){\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n}\n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0) return 0;\n\tif(n == 1) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\t\n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 1) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\t\n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\t\n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n<=1) return 1;\r\n    else n = n * factorial(n-1);\r\n    return n;\r\n}\r\n\r\nint main(){\r\n    int a;\r\n    cin>>a;\r\n    \r\n    cout<<factorial(a)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial_rec(int n) {\n    if (n == 0) return 1;\n    return n * factorial_rec(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial_rec(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    return  n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n\r\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\nint total =1;\nif (n==0) return 1;\nelse \n{total=n*factorial(n-1);}\nreturn total;\n}\nint main (){\nint n;\ncin>>n;\ncout <<factorial(n)<<endl; \n}\n \n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int y = 1;\n    if (n == 0) return 1;\n    else y = n * factorial(n - 1);\n    return y;\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int y = 1;\n    if (n == 0) return 1;\n    else y = n * factorial(n - 1);\n    return y;\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    int a;\n    while(n>0){\n       return n*factorial(n-1);\n     }\n} \n        \n        \n               \n        \n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    while(n>0){\n       return n*factorial(n-1);\n     }\n} \n        \n        \n               \n        \n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    while(n>0){\n       return n*factorial(n-1);\n     }\n}\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n        \n        \n               \n        \n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==0){\n    return 1;\n    }else{   \n    return n*factorial(n-1);\n    }\n}\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n        \n        \n               \n        \n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial( int n ){\n    n = n * factorial ( n - 1 );\n    return n;\n}\n\nint main (){\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    int f;\r\n    if (n==0) f = 1;\r\n    else f = n * factorial (n-1);\r\n    return f;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <include>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1);\n}\n\nint main() {\n    int i;\n    cin >> i;\n    cout << factorial(i) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n-1);\n}\n\nint main() {\n    int i;\n    cin >> i;\n    cout << factorial(i) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint main (){\nint n;\nint fact(int n);\n{\nif(n<=1);\nreturn 1;}\nint fact =1;\nwhile(n>=0){\nfact=fact*n;\nn--;\n}\n return fact;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n > 0) n = n * factorial(int (n-1));\n    else return 1;\n    return n;\n}\nint main(){\n    int x;\n    cin >> x;\n    cout << \"el factorial de x es \" << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    n = n*factorial(n - 1);\n    return n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << \"factorial de \" << n << \" = \" << factorial(n) << endl;\n}\n\n\n",
  "int factorial (int n){\n \n  if (n==1) return 1;\n  else return n * factorial (n-1);\n  \n  }\n\n\n",
  "int factorial (int n){\n \n  if (n==1) return 1;\n  else return n*factorial(n-1);\n  \n  }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n \n  if (n==1 or n==0) return 1;\n  else return n*factorial(n-1);\n  \n  }\n\nint main () {\n  int x;\n  cin>>x;\n  cout<<factorial (x) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n);\r\nint main(){\r\n\tint n, resultat;\r\n\tif (n>12){}\r\n\telse\r\n\t\tresultat = factorial(n);\r\n}\r\nint factorial (int n){\r\n\t\r\n\tif (n<1)\r\n\t\treturn 1;\r\n\telse\r\n\t\treturn n*factorial(n-1);\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n\tint n, resultat;\r\n\tif (n>12){}\r\n\telse\r\n\t\tresultat = factorial(n);\r\n}\r\nint factorial (int n){\r\n\t\r\n\tif (n<1)\r\n\t\treturn 1;\r\n\telse\r\n\t\treturn n*factorial(n-1);\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (in n);\r\nint main(){\r\n\tint n, resultat;\r\n\tif (n>12){}\r\n\telse\r\n\t\tresultat = factorial(n);\r\n}\r\nint factorial (int n){\r\n\t\r\n\tif (n<1)\r\n\t\treturn 1;\r\n\telse\r\n\t\treturn n*factorial(n-1);\r\n}\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial (n-1);\n}\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\t\tint x;\r\n\t\tx=n;\r\n\t\tn=n-1;\r\n\t\twhile(n>0){\r\n\t\t\tx=x*(n);\r\n\t\t\tn=n-1;\r\n\t\t}\r\n\t\treturn x;\r\n}\t\t\t\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nusing namespace std;\r\n   int factorial(int n){\r\n   if (n==0){\r\n   return 1;\r\n   }\r\n   if (n!=0){\r\n   return n*factorial(n-1);\r\n   }\r\n}\r\n\r\nint main (){\r\nint x;\r\ncin>>x;\r\ncout<<factorial(x)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int x) {\r\n    if(x==0) return 1;\r\n    else return x*factorial(x-1);\r\n}\r\nint main() {\r\n    int x;\r\n    cin>>x;\r\n    cout<<factorial(x)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    \n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n\n}\n\nint main(){\n\n    int x;\n    \n    while (cin >> x){\n    \n        cout << factorial(x) << endl;\n    \n    }\n\n}\n\n\n",
  "#include <iostream>\n#include <cmath>\n\nint factorial (int n) {\n    if (n >= 0 and  n <=12) {\n        if (n <= 1) return 1 ;\n        else return n * factorial (n - 1) ;\n    }\n    else return 0 ;\n}\nusing namespace std;\n\nint main () {\n    int num ;\n    cin >> num ;\n    cout << factorial ( num ) << endl ;\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n >= 0 and n <=12) {\r\n        if (n == 0) return 1;\r\n        return n * factorial (n - 1);\r\n    }\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n >= 0 and n <=12) {\r\n        if (n == 0) return 1;\r\n        return n * factorial (n - 1);\r\n    }\r\n    return 0;\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n     if (n==0) return 1;\n     int res, cont = n;\n     while (cont > 0){\n       res = n * (n - 1);\n       --cont;      \n      }\n     }\n\nint main(){\n    int n;\n    cin >> n;\n    n = factorial (n);\n    cout << n << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n     if (n==0) return 1;\n     return n * factorial(n - 1);\n     }\n\nint main(){\n    int n;\n    cin >> n;\n    n = factorial (n);\n    cout << n << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\telse return (n * factorial(n - 1));\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n > 1) return n*factorial (n-1);\n\telse return n;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\n",
  "int factorial(int n) {\n    if (n > 1) return n*factorial(n-1);\n    return 1;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n\tif(n==0) return 1;\n\telse{\n\t\tn=n*factorial(n-1);\n\t\treturn n;\n\t}\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tif(n>=0 and n<=12) cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nif (n==0) return 1;\nreturn n*factorial(n-1);\n}\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n        int f=1;\r\n        while(n>0) {\r\n                f*=n;\r\n                --n;\r\n        }\r\n        return f;\r\n}\r\nint main() {\r\n        int n;\r\n        cin>>n;\r\n        factorial(n);\r\n        cout<<factorial(n)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\nif ( n == 0 ) return 1;\nreturn n = n*factorial(n-1);\n}\n\n    int main(){\n    int a;\n    cin >>a;\n        cout << factorial(a)<< endl;\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    \n    int n;\n    \n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return 1;    \n    else return n*factorial(n-1);    \n}\n\nint main() {\n    int x;   \n    cin >> x;   \n    cout << factorial(x) << endl;    \n}\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\nint factorial (int n) {\n    if (n == 0 or n==1) return 1;\n    return n*factorial (n - 1);\n}\n    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial (n -1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n == 0) return 1;\r\n    else if(n <= 12) return( n*factorial(n - 1) );         \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl; \r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n  int factorial(int n) {\r\n        if (n==0) r=1;\r\n        else r=n*factorial(n-1);\r\n        return r;\r\n    }\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif(n == 0) {\r\n        return 1;\r\n    }\r\n    else if(n <= 12) {\r\n        return (n * factorial(n - 1));\r\n    }\r\n}\r\n\r\nint main() {\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a);\r\n    cin>>a;\r\n}\r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif(n == 0) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return (n * factorial(n - 1));\r\n    }\r\n}\r\n\r\nint main() {\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a);\r\n    cin>>a;\r\n}\r\n\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n == 0) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return (n * factorial(n - 1));\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\n\n",
  "\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int n) {\r\n    if (n==1) return 1;\r\n    else {\r\n\r\n               return n*factorial(n-1);\r\n        }\r\n    }\r\n\r\nint main () {\r\n   int n;\r\n   cin>>n;\r\n   factorial (n);\r\n   cout<<factorial (n)<<endl;\r\n  \r\n}\r\n\n\n",
  "\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int n) {\r\n    if (n==1) return 1;\r\n    else {\r\n        if((n>1 and n<=12)) return n*factorial(n-1);\r\n        }\r\n    }\r\n\r\nint main () {\r\n   int n;\r\n   cin>>n;\r\n   factorial (n);\r\n   cout<<factorial (n)<<endl;\r\n  \r\n}\r\n\n\n",
  "\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int n) {\r\n    if (n==1) return 1;\r\n    else {\r\n        if((n>1 and n<=12)) return n*factorial(n-1);\r\n        }\r\n    }\r\n\n\n",
  "\r\n\r\n\r\n\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int n) {\r\n    if (n==1) return 1;\r\n    else {\r\n        if((n>1 and n<=12)) return n*factorial(n-1);\r\n        }\r\n    }\r\n\n\n",
  "\r\n\r\n\r\n\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int n) {\r\n    if (n==1) return 1;\r\n    else {\r\n        if((n>0 and n<=12)) return n*factorial(n-1);\r\n        }\r\n    }\r\n\n\n",
  "\r\n#include<iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial (int n) {\r\n    if (n==1 or n==0) return 1;\r\n    else return n*factorial(n-1);\r\n\r\n    }\r\n\r\nint main () {\r\n   int n;\r\n   cin>>n;\r\n   factorial (n);\r\n   cout<<factorial (n)<<endl;\r\n\r\n\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}  \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tint f=1;\n\tif (n>0)\n\t\tf=n*factorial (n-1);\n\telse \n\t\tf=1;\n\treturn f;\n}\n\n\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial (int x) {\n\tif (x == 0) return 1;\n\telse return x*factorial(x-1);\n}\n\nint main () {\n\tint x;\n\tcin >> x;\n\tx = factorial(x);\n\tcout << x << endl;\n}\n\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) \r\n{\r\n    int total = 1;\r\n    if ((n >= 0)and(n <=12))\r\n    {\r\n        if(n == 0) \r\n        {\r\n            return 1;\r\n        }\r\n        else\r\n        {\r\n            total = n*factorial(n-1);\r\n            return total;\r\n        }\r\n    }\r\n    else \r\n    {\r\n        cout << \"Error no es compleix la precondicio\" << endl;\r\n        return total;\r\n    }\r\n}\r\n\r\nint main() \r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n, b;\n    cin>>n;\n    b= factorial(n);\n    cout<<b<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    else return n*factorial (n-1);   \r\n}\r\n\r\nint main (){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;   \r\n    \r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\treturn factorial(n-1) * n;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n!=0){\n    int i=n;\n    int m=i;\n    while (i>1){\n        i=i-1;\n        m=m*i;\n    }\n    return m;\n    }\n    else{\n        return 1;\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int s = 1;\n    while (n > 1) {\n        s = s*n;\n        --n;\n    }\n    return s;\n}\n\nint main() {\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;  \r\n      \r\n    int factorial(int n) {\r\n    if (n == 0) n = 1;\r\n    else n *= factorial(n-1);\r\n    return n;\r\n    }\r\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <=1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cout << factorial(n) << endl;\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f;\n    if (n == 0) f = 1;\n    else f = n * factorial(n-1);\n    return f;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n\tif(n == 0) return 1;\n\treturn fact(n-1) * n;\n}\n\nint main(){\n\tint n;\n\tfor(int i = 0;i <= 12;++i) cout << i << \" = \" << fact(i) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n\tif(n == 0) return 1;\n\treturn fact(n-1) * n;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\treturn fact(n-1) * n;\n}\n\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n     if ( n == 0 ) return 1;\n     else return n*factorial(n-1);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n     if (n == 0) return 1;\n     return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f=1;\n    while (n>1) {\n        f*=n;\n        --n;\n        }\n        return f;\n        }\nint factorial2(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    }\nint main () {\n    int n;\n    cin>>n;\n    cout<<factorial2(n)<<endl;\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n    \n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "\n#include <iostream>\n\nint factorial(int a)\n{\n  if (a<=0) return 1;\n  if (a>12) return 0;\n    \n  return a*factorial(a-1);\n}\n\nint main()\n{\n  using namespace std;\n  int a;\n  \n  cin >> a;\n  \n  cout << factorial(a) << endl;\n\n  return 0;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\nint res;\nif (n<=1) {\n res=1;\n }\nelse {\n res=n*factorial (n-1);\n }\nreturn res;\n}\nint main () {\n  int a,fact;\n  cin>>a;\n  fact=factorial (a);\n  cout<<fact<<endl;\n }\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\nif ( n == 0 ) return 1;\r\nreturn n * factorial(n-1);\r\n}\r\n\r\nint main () {\r\nint a;\r\ncin >> a;\r\ncout << factorial(a) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n \n int factorial(int a) { \n     if ( a <= 1) return 1;\n     else return a*factorial(a - 1); \n }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial (int n) {\r\n     int sum = 1;\r\n     while (n > 1) {\r\n         sum *= n;\r\n         --n;\r\n     }\r\n     return sum;\r\n }\r\n\r\n int main () {\r\n     int x;\r\n     cin >> x;\r\n     cout << factorial(x) << endl;\r\n }\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\nif (n==0){\n    return 1;\n}else {\n    return n*factorial (n-1);\n  }\n}\nint main (){\n}\n\n\n",
  "int factorial(int n)\n{\n\tif(n>1)\n\t\treturn factorial(n-1) * n;\n\telse\n\t\treturn 1;\t\t\n}\n\n\n",
  "#include<iostream>\n#include<string>\n#include<cmath>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n < 2) return 1;\n\treturn factorial(n-1)*n;\n}\n\nint main (){\n\t\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if(n==0) return 1;\r\n    else return n*factorial(n-1);\r\n    \r\n}\r\n\r\nint main() {\r\n    int a;\r\n    cin >> a;\r\n    cout<< factorial(a)<<endl;\r\n}\r\n    \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n     if (n <= 1) return 1;\n     else return n * factorial(n-1);\n  \n}\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "int factorial (int x){\nif (x==0) return 1;\nelse return factorial(x-1)*x;\n}\n\n\n",
  " include <iostream>\nusing namespace std;\nint factorial (int n){\nint res;\nif (n=<1){\n    res =1\n}\nelse {\n    res= n * factorial (n-1)\n    }\nreturn res;\n}\nint main (){\nint a; \nint fac;\ncin >>a;\nfac = factorial(a);\ncout <<fac << endl;\n}\n\n\n",
  " include <iostream>\nusing namespace std;\nint factorial (int n){\nint res;\nif (n==0){\n    return 1;\n}\nelse {\n    return = n * factorial (n-1);\n    }\n}\nint main (){\nint a; \nint fac;\ncin >>a;\nfac = factorial(a);\ncout <<fac << endl;\n}\n\n\n",
  " include <iostream>\nusing namespace std;\nint factorial (int n){\nif (n==0){\n    return 1;\n}\nelse {\n    return = n * factorial (n-1);\n    }\n}\nint main (){\nint a; \nint fac;\ncin >>a;\nfac = factorial(a);\ncout <<fac << endl;\n}\n\n\n",
  " include <iostream>\nusing namespace std;\nint factorial (int n){\nif (n==0){\n    return 1;\n}\nelse {\n    return n * factorial (n-1);\n    }\n}\nint main (){\n}\n\n\n",
  "int factorial (int n) {\n    if (n =< 1) return 1;\n    else return n*factorial (n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  \n  if (n == 0) return 1;\n  else return n*factorial(n - 1);\n\n}\n\nint main() {\n\n    int k;\n    \n    cin >> k;\n    cout << factorial(k) << endl;\n\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   if (n==0) //cas_Base\n   return 1;\n   else (n>=1 and n<=12);\n   n=n*factorial(n-1);\n   return n;\n   }\n\nint main(){\n   int n;\n   cin >> n;\n   cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else {\n        if (n>=1 and n<=12) {\n            n = n * factorial(n-1);\n        }\n        return n;\n    }\n}\n    \n    \n\nint main () {\n     int n;\n     cin >> n;\n     cout << factorial(n) << endl;\n}\n\n    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1 ) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int i;\r\n    cin >> i;\r\n    i = factorial (i);\r\n    cout << i << endl;\r\n}\r\n\r\n    \r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int suma=1;\n    for (; n<=0; --n) {\n        suma=suma*n;\n    }\n    return suma;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int suma=1;\n    for (; n>=0; --n) {\n        suma=suma*n;\n    }\n    return suma;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int suma=1;\n    for (; n>0; --n) {\n        suma=suma*n;\n    }\n    return suma;\n}\n\nint main() {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==1) return 1;\n    else return (n*factorial(n-1));\n}\n\n\n",
  "int factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n-1);\n}\n\n\n/*    \nint main () {\n    int z;\n    cin >> z;\n    cout << factorial(z) << endl;\n}\n\\*\n\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n > 0) return n * factorial(n - 1);\n\telse return 1;\n}\n\n\n",
  "int factorial(int n) {\n   if (n==0 or n==1) return 1;\n   return n*factorial(n-1);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n    int factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return factorial (n-1)*n;\r\n    }\r\n    int main(){\r\n        int n;\r\n        cin>>n;          \r\n        cout<<factorial(n)<<endl;\r\n          #ifndef _JUTGE_\r\n          system(\"pause\");\r\n          #endif\r\n\r\n}\r\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if(n==0){\n        return 1;\n        }\n    else{\n    return n*factorial(n-1);\n    }\n\n        \n}\n\nint main(){\n    int num;\n    cin>>num;\n    cout<<factorial(num)<<endl;\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int i=1;\n    int fact=1;\n    while ( i < n ) {\n        i++;\n        fact = fact*i;\n    }\n    return fact;\n}\n\n\n",
  "int factorial(int n) {\n    if(n>=0 and n<=12) {\n        int r;\n        if(n==0){\n            r=1;\n        }else{\n            r=n*factorial(n-1);\n        }\n        return r;\n    }\n}   \n    \n\n\n",
  "int factorial(int n) {\n        int r;\n        if(n==0){\n            r=1;\n        }else{\n            r=n*factorial(n-1);\n        }\n        return r;\n}   \n    \n\n\n",
  "int factorial ( int n ) {\n    if ( n == 0 ) return 1;\n    return n*factorial( n-1 );\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n}\n\nint main(){\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) <<endl;\n}\n    \n\n\n",
  "\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    else {\n        return factorial(n-1)*n;\n    }\n}\n\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if(n==0){\n        return 1;\n        }\n    else{\n    return n*factorial(n-1);\n\n        \n}\n\nint main(){\n    int num;\n    cin>>num;\n    cout<<factorial(num)<<endl;\n    }\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if ( n == 1 )return 1;\r\n    else {\r\n        return n*factorial(n-1);\r\n}    \r\n}\r\n// Programa Principal\r\n\r\nint main() {\r\n        int x;\r\n    while (cin >> x){\r\n    cout << factorial(x);\r\n}\r\n}\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if ( n <= 1 )return 1;\r\n    else {\r\n        return n*factorial(n-1);\r\n}    \r\n}\r\n// Programa Principal\r\n\r\nint main() {\r\n\r\n}\r\n\n\n",
  "int factorial(int n) {\n    if(n>=0 and n<=12) {\n        int r;\n        if(n==0){\n            r=1;\n        }else{\n            r=n*factorial(n-1);\n        }\n        cout<<r<<endl;\n    }\n}   \n    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    \r\n    int b = 1;\r\n    for ( int a = n; a > 0; --a) {\r\n        b = b * a;\r\n    } \r\n    return b;       \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n    \r\n    \r\n    \r\n\n\n",
  "int factorial(int n) {\n        int r;\n        if(n==0){\n            r=1;\n        }else{\n            r=n*factorial(n-1);\n        }\n        return r;\n    }\n}   \n    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    \r\n    int b = 1;\r\n    for (int a = n; a > 0; --a){\r\n        b = b * a;\r\n    }\r\n    return b;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n    \r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int total = 1;\r\n    if (n != 1) total *= factorial(n-1);\r\n    return total;\r\n}\r\n\r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int total = 1;\r\n    for (int i = 1; i<=n; ++i) {\r\n        total = total * i;\r\n    }\r\n    return total;\r\n}       \r\n    \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial (n-1);\n}    \n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n)\r\n{\r\n    if(n==0||n==1) return 1;\r\n    int x=n*factorial(n-1);\r\n    return x;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n   if(n < 0) return 0;\n   else if(n > 1) return n*factorial(n-1); \n   return 1; \n}\n   \nint main () {\n   int x;\n   \n   cin >> x;\n   factorial(x);\n   \n}\n  \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int total=0;\r\n    if (n==0) total=1;\r\n    else total=n*factorial(n-1);\r\n    return total;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\nif (n == 0) return 1;\nreturn factorial (n - 1) * n;\n}\n\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial (x) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\nint factorial (int n){\nint i=1;\nint r=1;\n    while (i<=n){\n        r=r*i;\n        ++i;\n    }\n    return r;\n}\nint main (){\nint n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(n )\r\n{\r\n    if(n==0||n==1) return 1;\r\n    int x=n*factorial(n-1);\r\n    return n;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint fact (int n){\r\n    int f = 1;\r\n    while (n>0) {\r\n          f = f*n;\r\n          --n;\r\n    }\r\n    return f;\r\n}\r\n\r\nint main (){\r\n    int n;\r\n    cin>>n;\r\n    \r\n    cout<<fact(n)<<endl;\r\n\r\n    #ifndef _JUTGE_\r\n        system(\"pause\");\r\n    #endif\r\n}\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint fact (int n) {\r\n    if (n==0) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return n*fact (n-1);\r\n    }\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint main() {\n    int factorial (int n) {\n        if (n==0) return 1;\n        return n*factorial(n-1);\n        }\n    }\n\n\n",
  "int fact(int n) {\nif (n <= 1) return 1;\nelse return n*fact(n-1);\n}\n//Ãs una funciÃ³ que es crida a ella matexa.\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\nif (n <= 1) return 1;\nelse return n*fact(n-1);\n}\n//Ãs una funciÃ³ que es crida a ella matexa.\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n    if (n <= 1) return 1;\n    else return n*fact(n-1);\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n    if (n <= 1) return 1;\n    else return n*fact(n-1);\n    }\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << \"fact(\" << n << \")= \" << fact(n) << endl;\n        }\n    }\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n != 0) {\n        return n*factorial (n - 1);\n    }\n    else return 1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int x){\r\n    if(x!=0){\r\n        return x*factorial(x-1);\r\n    }\r\n    else return 1;\r\n}\r\n\r\nint main(){\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x)<< endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\tint factorial (int n) {\n\t\tint s;\n\t\tif (n>0) \n\t\t\ts=n*factorial(n-1);\n\t\telse\n\t\t\ts=1;\n\t\treturn s;\n\t}\nint main () {\n\tint n;\n\tcin>>n;\n\tcout <<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n   if (n == 0) return 1;\n   else return n * factorial (n - 1);\n}\nint main() \t{\n\nint a;\ncin >>a;\n\ncout <<factorial(a)<<endl;\n    \n}\n\t\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\nint fact (int n) {\n   if (n == 0) return 1;\n   else return n * fact (n - 1);\n}\nint main() \t{\n\nint a;\ncin >>a;\n\ncout <<fact(a)<<endl;\n    \n}\n\t\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    if (n<=1){\n    return 1;\n    }else {\n    return n*factorial(n-1);\n    } \n}   \nint main(){\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    if (n == 0) {\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 1) return n;\n    else n = n * factorial(n-1);\n    return n;\n}\n\nint main(){\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1; \n    else return n * factorial(n-1);\n\n}\n\nint main(){\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if ((n==0) or (n==1)) {\n        return 1;\n    }\n    else {\n        return (n * factorial(n-1));\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==1) return 1;\n    else return (n*factorial(n-1));\n}\n\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n<1) return 1;\n    else return (n*factorial(n-1));\n}\n\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n)\r\n  {\r\n    if (n == 0) return 1;\r\n    return (n * factorial (n - 1));\r\n    }\r\n\r\nint main()\r\n {\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial (a) << endl;\r\n    }\r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) return n*factorial(n-1);\n    return 1;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n==1) return 1;\nelse return n*factorial(n-1);\n}\n\nint main(){\nint a;\nif (a>=0 or a<=12) cin>>a;\ncout<<factorial(a)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n==1) return 1;\nelse return n*factorial(n-1);\n}\n\nint main(){\nint a;\ncin>>a;\nif (a>=0 or a<=12) cout<<factorial(a)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n==1) return 1;\nelse return n*factorial(n-1);\n}\n\nint main(){\nint a;\ncin>>a;\nif (a>=0 and a<=12) cout<<factorial(a)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n<=1) return 1;\nelse return n*factorial(n-1);\n}\n\nint main(){\nint a;\ncin>>a;\nif (a>=0 and a<=12) cout<<factorial(a)<<endl;\n}\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n<2) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main(){\r\n    int a;\r\n    while (cin>>a){\r\n          cout<<factorial(a)<<endl;\r\n    }\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f;\n    if (n == 0) f = 1;\n    else f = n * factorial(n-1);\n    return f;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    int fact;\n    if (n == 0) fact = 1;\n    else fact = n*factorial(n - 1);\n    return fact;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0 or n==1) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else { \n        n = factorial(n-1)*n;\n    }\n    return n;\n}\nint main() {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n} \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) <<endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return (n * factorial (n-1));\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n) <<endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int k=1;\n    while (n > 1) {\n        k = k * n;\n        --n;\n    }\n    return k;\n}\n\n\nint main() {\n    int n, m;\n    cin >> n;\n    m = factorial(n);\n    cout << m << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n#ifndef _JUTGE_    \r\nsystem(\"pause\");\r\n#endif\r\n}       \r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){ \n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}    \nint main(){\n    int n;    \n    cin >>n;    \n    cout << factorial(n)<< endl;      \n}\n\n\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1; \n    return n * factorial(n - 1); \n}\n\n\nint main() {\n    int n;   \n    cin >> n;\n    cout << factorial(n) << endl;    \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res;\n    if (n==0) res=1;\n    else res= n*factorial(n-1);\n}\n\nint main() {\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res;\n    if (n==0) res=1;\n    else res= n*factorial(n-1);\n    return res;\n}\nint main() {\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\n    int r;\n\n    if(n==0){\n    \n        r=1;\n    \n    }else{\n    \n        r=factorial(n-1)*n;\n    \n    }\n    \n    return r;\n\n}\n\nint main(){\n\n    int a;\n\n    cin >> a;\n    \n    cout << factorial(a) << endl;\n\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1); \n}\n\n\n",
  "int factorial (int n){\n    if (n==0) return 0;\n    else return factorial(int n);\n    }\n\n\n",
  "int factorial (int n){\n    if (n==0) return 0;\n    else\n        return factorial(int n);\n    }\n\n\n",
  "int factorial (int n){\n    if (n<=1){\n        return 1;\n        } else {\n            return x*fact(x-1);\n            }\n        }\n\n\n",
  "int factorial (int n){\n    if (n<=1){\n        return 1;\n        } else {\n            return n*fact(n-1);\n            }\n        }\n\n\n",
  "int fact (int n){\n    if (n<=1){\n        return 1;\n        } else {\n            return n*fact(n-1);\n            }\n        }\n\n\n",
  "int fact (int n){\n    if (n<=1) return 1;\n    else return n*fact(n-1);\n}\n\n\n",
  "int factorial_rec (int n);\nif (n==1) return 1;\nreturn n*factorial_rec(n-1); \n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    int r;\n    if (n == 0) r=1;\n    else r = n * factorial(n-1);\n    return r;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 0 or n > 12) return 0;\n    if (n == 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 0 or n > 12) return 1;\n    if (n == 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return (n*factorial(n-1));\n    \n}\n\n\nint main() {\n    \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n    }\n\n\n",
  "int factorial(int n){\n    int t=1;\n    if(n!=0 and n>0){\n        t=n*factorial(n-1);\n    }\n    return t;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n \tif(n == 0) return 1;\n\treturn n * factorial(n - 1);\n}\n\nint main() {\n\tint m;\n\twhile(cin >> m)\n\t\tcout << factorial(m) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif(n>1)return n*factorial(n-1);\n\treturn 1;\n}\n\nint main() {\n\tint x;\n\twhile(cin >> x)\n\t\tcout << x << \"! = \" << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\treturn n * factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\t\r\n\tint r;\r\n\r\n\tif (n==0) {\t\r\n\t\tr=1;\r\n }\r\n\telse {\r\n\tr= n*factorial(n-1);\r\n\t}\r\n   return r;\r\n}   \r\n   \r\n\r\nint main () {\r\n\r\nint n;\r\ncin >> n;\r\nn= factorial (n);\r\ncout << n << endl;\r\n}\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return n=1;\n    else return n*factorial(n-1);\n    \n\n}\n   \n\n\n\nint main ( ) {\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tint r;\r\n\tif(n==0){\r\n\t\tr=1;\r\n\t}\r\n\telse {\r\n\t\tr= n*factorial (n-1);\r\n\t}\r\n\treturn r;\r\n}\r\nint main(){\r\n\tint x;\r\n\twhile(cin>>x){\r\n\t\tint r;\r\n\t\tr=factorial(x);\r\n\t\tcout<<r<<endl;\r\n\t}\r\n}\r\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n     if (n == 1) return 1;\n     else return n*factorial(n-1);\n}\n\nint main() {\n\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n     if (n == 0) return 1;\n     else if (n == 1) return 1;\n     else return n*factorial(n-1);\n}\n\nint main() {\n     int n;\n     cin >> n;\n     int facto = factorial(n);\n     cout << facto << endl;\n}\n\n\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n   int n;\n   cin >> n;\n   cout << factorial(n) << endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0){\n        return 1;\n    }else{\n        return (factorial(n-1))*n;\n    }\n}\n\nint main(){\n    int a;\n    cin>>a;\n    cout<<factorial(a)<<endl;\n}\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return (factorial(n-1))*n;\n}\n\nint main(){\n    int a;\n    cin>>a;\n    cout<<factorial(a)<<endl;\n}\n    \n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int total = 1;\n    if (n!=1) total *= factorial (n-1);\n    return total;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int total = 1;\r\n    if (n != 1) total *= factorial(n-1);\r\n    return total;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\n\r\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n\tif(n==0) return 1;\n\telse return n*factorial(n-1);\n}\nint main(){\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int total = 1;\r\n    if(n == 0) return 1;\r\n    else total = n*factorial(n-1);\r\n    return total;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\n\r\n\r\n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int total = 1;\n    if (n!=1) total *= factorial (n-1);\n    return total;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if(n == 0) return 1;\n    else total = n*factorial(n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n    \n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int i){\nint res=i;\n\tif(i>1){\n\tres=res*factorial(i-1);\n\t}\n\treturn res;\n}\n\nint main(){\n\tint i;\n\tcin>>i;\n\tint res;\n\tres=factorial(i);\n\tcout<<res<<endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\nint res=n;\n\tif(n>1){\n\tres=res*factorial(n-1);\n\t}\n\treturn res;\n}\n\nint main(){\n\tint i;\n\tcin>>i;\n\tint res;\n\tres=factorial(i);\n\tcout<<res<<endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial_rec(int n) {\n    if (n==0) return n=1;\n    else return n*factorial_rec(n-1);\n    \n\n}\n   \n\n\n\nint main ( ) {\n    int x;\n    cin>>x;\n    cout<<factorial_rec(x)<<endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial_rec(int n) {\n    if (n==0) return n=1;\n    else return n*factorial_rec(n-1);\n    \n\n}\n   \n\n\n\nint main ( ) {\n    int x;\n    cin>>x;\n    cout<<factorial_rec(x)<<endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return n=1;\n    else return n*factorial_rec(n-1);\n    \n\n}\n   \n\n\n\nint main ( ) {\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\nint res=n;\n\tif (n<=0) return 0;\n\tif(n>1){\n\tres=res*factorial(n-1);\n\t}\n\treturn res;\n}\n\nint main(){\n\tint i;\n\tcin>>i;\n\tint res;\n\tres=factorial(i);\n\tcout<<res<<endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\nint res=n;\n\tif (n<=0 ) return 0;\n\telse if(n>1){\n\tres=res*factorial(n-1);\n\t}\n\treturn res;\n}\n\nint main(){\n\tint i;\n\tcin>>i;\n\tint res;\n\tres=factorial(i);\n\tcout<<res<<endl;\n}\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n     if (n == 1) return 1;\n     else return n*factiorial(n-1);\n}\n\nint main() {\n\n}\n\n\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\n\tif (n<2 ) return 1;\n\telse return n*factorial(n-1);\n\t\n\t\n\t\n}\n\nint main(){\n\tint i;\n\tcin>>i;\n\tint res;\n\tres=factorial(i);\n\tcout<<res<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n * factorial (n-1); \n}\n\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "int factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\n\r\nint main() {\r\n}\r\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0) return 1;\n    n=n*factorial(n-1);\n    return n;\n    }\n    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n==0) return 1;\r\n    else n=n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial (n)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial (n)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n \tif(n<=1) \n\treturn 1;\n\telse return n*factorial(n-1);\n\n}\n\nint main () {\n\n\tint x;\n\tcin>>x;\n\tcout<<factorial(x)<<endl;\n\n}\n\t\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n    int factorial(int n){\n        if(n == 0) return 1;\n        else return n * factorial(n - 1);\n    }\n\nint main(){\n  \n   int x;\n   cin >> x;\n   cout << factorial(x) << endl;\n   }\n   \n\n\n",
  "#include <iostream>\nusing namespace std;\n\n    int factorial(int n){\n        if(n == 0) return 1;\n        else return n * facotrial(n - 1);\n    }\n\nint main(){\n  \n   int x;\n   cin >> x;\n   factorial(x);\n   }\n   \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1)return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;  \n      \n    int factorial (int n) {\n    int r;\n    if (n == 0) r=1;\n    else r= n*factorial(n-1);\n    return r;\n    }\n    \nint main() {\n    int n;\n    cin >> n;\n    int r= factorial(n);\n    cout << r << endl;\n}\n    \n\n\n",
  "int factorial(int n){\n    if (n==1) return n;\n    else return n*factorial(n-1);       \n}\n\n#include<iostream>\nusing namespace std;\n\nint main(){\n    int x;\n    \n    cin >> x;\n    \n    if (x >= 0 and x <= 12) cout << factorial(x) << endl;\n    \n}\n    \n\n\n",
  "int factorial(int n){\n    if (n<=1) return n;\n    else return n*factorial(n-1);       \n}\n\n#include<iostream>\nusing namespace std;\n\nint main(){\n    int x;\n    \n    cin >> x;\n    \n    if (x >= 0 and x <= 12) cout << factorial(x) << endl;\n    \n}\n    \n\n\n",
  "int factorial(int n){\n    if (n<2) return 1;\n    else return n*factorial(n-1);       \n}\n\n#include<iostream>\nusing namespace std;\n\nint main(){\n    int x;\n    \n    cin >> x;\n    \n    if (x >= 0 and x <= 12) cout << factorial(x) << endl;\n    \n}\n    \n\n\n",
  "int factorial (int n) {\n    if (n == 0)\n        return 1;\n    else if (n == 1)\n        return 1;\n    else \n        return n * factorial(n-1);\n}\n\n\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\nint main(){\n   int n;\n   cin >> n;\n   n=factorial(n);\n   cout << n << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif ( n == 1 ) return 1;\nreturn n * factorial ( n - 1 );\n}\n\nint main () {\nint n;\ncin >> n;\ncout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif ( n == 0 ) return 1;\nreturn n * factorial ( n - 1 );\n}\n\nint main () {\nint n;\ncin >> n;\ncout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\nif (n == 0) return 1;\nelse n * fact(n-1)\nreturn n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\nif (n == 0) return 1;\nelse n * fact(n-1)\nreturn n;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\n\r\n                \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) {\n        return 1;\n    } else { \n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n    cin>>n;\n    cout<<factorial (n)<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial (n - 1);\r\n}\r\n\r\nint main () {\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 1) return n;\n    else n *= factorial(n-1);\n    return n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int x = factorial(n);\n    cout << x << endl;\n}\n\n\n",
  "int factorial (int n) {\n    if (n == 0)\n        return 1;\n    else if (n == 1)\n        return 1;\n    else \n        return n * fact(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else n *= factorial(n-1);\n    return n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int x = factorial(n);\n    cout << x << endl;\n}\n\n\n",
  "#include <iostream>\nusing  namespace std;\n\nint factorial(int n){\n    if(n<=12 and n>=0){\n        if(n==0) return 1;\n        return n*factorial(n-1);\n    }\n}\nint main(){\nint x;\ncin>>x;\nint f=factorial(x);\ncout<<f<<endl;\n}\n\n\n",
  "#include <iostream>\nusing  namespace std;\n\nint factorial(int n){\n    int f;\n    if(n<=12 and n>=0){\n        if(n==0) f= 1;\n        else f=n*factorial(n-1);\n    }return f;\n}\nint main(){\nint x;\ncin>>x;\nint f=factorial(x);\ncout<<f<<endl;\n}\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    \r\n    cin>>n;\r\n    \r\n    cout<<factorial(n)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    int valor;\n    int aux=n;\n    int i;\n    i=n-1;\n    while (i>=1) {\n        aux=aux*i;\n        --i;\n    }\n    return valor;\n}\nint main() {\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    //Prec. Es té 0 <= n <= 12 .\r\n    int r = 0;\r\n    if ( n == 0) r = 1;\r\n    else r = n * (factorial (n-1));\r\n    return r;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial (x) << endl;\r\n}    \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1 or n == 0) return 1;\r\n    return n * factorial (n-1);\r\n}\r\n\r\nint main () {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n == 0) return 1;\n    else return n*factorial(n-1);\n}    \nint main(){\nint a;\ncin >> a;\nint b = factorial(a);\ncout << b << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\nif (n==0){\n      return 1;\n}else{\n     int x=n-1;\n     int v=factorial (x)*n;\n     return v;\n}\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint Factorial(int n){\nint fact;\nif (n==0)\nfact=1;\nelse\nfact=n*Factorial(n-1);\nreturn(fact)\n}\n\n\n",
  "int factorial (int n) {\n    if (n==0) return 1;\n    return facttorial (n-1)*n;\n\n\n\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\nif (n==0){\n      return 1;\n}else{\n     x=n-1;\n     v=factorial (x)*n;\n     return v;\n}\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint  factorial(int  n){          \n      if(n==0)return 1;\n      return(n*factorial(n-1));\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n    }\n\n\n",
  "int factorial(int n){\n\n    if (n==0) return 1;\n    \n    n=n*(factorial (n-1));\n    \n    return n;\n    \n \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\tif ( n < 1 ) return 1;\r\n\t\treturn n * factorial (n\t- 1);\r\n}\r\n  \n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int a){\nint n;\nif (a==0) n=1;\nelse return n=(a*factorial(a-1));\nreturn n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint fact2 (int a){\nif (a==0) return 1;\nelse return a * fact2 (a-1);\n}\nint main (){\nint a;\ncin>> a;\ncout<<fact2(a)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint fact2(int a){\nif (a==0) return 1;\nelse return a*fact2(a-1);\n}\nint main (){\nint a;\ncin>> a;\ncout<<fact2(a)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint fact2(int a){\nif (a==0) return 1;\nelse return a*fact2(a-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint fact(int a){\nint n;\nif (a==0) n=1;\nelse return n=(a*fact(a-1));\nreturn n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int a){\nint n;\n\nif (a==0) n=1;\nelse return n=(a*factorial(a-1));\nreturn n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int a){\nint n;\n\nif (a==0) n=1;\nelse return n=(a*factorial(a-1));\nreturn n;\n}\n\n\n",
  "int factorial(int n) {\r\n    if (n < 0) return 0;\r\n    else if (n > 1) return n*factorial(n-1);\r\n    return 1;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<=0) return 1;\n    else return (n*factorial(n-1));\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\n\tif(n == 0) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main(){\n\n\tint n;\n\t\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    int r;\n    if (n == 0) r=1;\n    else r = n * factorial(n-1);\n    return r;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int r;\r\n    if (n == 0) r = 1;\r\n    else r = n * factorial(n-1);\r\n    return r;\r\n}\r\n\r\nint main(){\r\n    \r\n    int n;\r\n    cin>>n;\r\n    cout << factorial(n) <<endl;\r\n    \r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int m = 1;\n    if (n != 0) for (int i = 1; i <= n; ++i) m *= i;\n    return m;\n}\nint main() {\n    int x;\n    cin >> x;\n    int a = factorial (x);\n    cout << a << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==0)return n=1;\n    else return n*factorial(n-1);\n    \n}    \nint main(){\nint x;\ncin>>x;\ncout<<factorial(x)<<endl;\n} \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 0) return 1;\r\n    else {\r\n         return factorial(n-1)*n;\r\n    }\r\n} \r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    int fact;\r\n    fact = factorial(n);\r\n    cout << fact << endl;\r\n}\r\n    \r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n <=1) return 1;\n    return n*=factorial (n-1);\n    \n}\n\nint main () {\n    \n    int a;\n    cin >> a;\n    cout << factorial (a) << endl;\n    \n}\n     \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n > 1)  n *= factorial(n-1);\r\n    return n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n          cout << factorial(n) << endl;\r\n    }\r\n}\r\n          \r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    if (n > 1)  n *= factorial(n-1);\r\n    return n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n          cout << factorial(n) << endl;\r\n    }\r\n}\r\n          \r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    return n*factorial(n-1);\n}\n        \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    while (cin >> n)cout << factorial(n) << endl;\n}\n\n\n\n\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n<=1) return n;\n\telse return ( factorial(n-1)*n );\n}\n\nint main () {\n\tint num;\n\tcin >> num;\n\tcout <<\tfactorial (num);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) return 1;\t\n\tif (n==1) return n;\n\telse return ( factorial(n-1)*n );\n}\n\nint main () {\n\tint num;\n\tcin >> num;\n\tcout <<\tfactorial (num);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main(){\n    //int x;\n    //while (cin >> x) {\n    //    if (x == 0) cout << \"Factorial es: 1\" << endl;\n    //    else cout << \"Factorial es: \" << factorial(x) << endl;\n    //}\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    // if (n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main(){\n    int x;\n    while (cin >> x) {\n        //if (x == 0) cout << \"Factorial es: 1\" << endl;\n        //else\n         cout << \"Factorial es: \" << factorial(x) << endl;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n)\n{\n    if ( n == 0) \n    {\n        return n = 1;\n    }\n    else \n    {\n        \n        return n * factorial ( n - 1);\n    \n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial (n)<<endl ;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial (n-1);\n    \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n    int factorial(int n){\n    if(n==0) {\n    return 1;\n   }\n   else {\n   return n*factorial(n-1);\n   }\n   }\n\n\n",
  "int factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n * factorial(n-1);\r\n}\r\n\r\n \r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n      void intercanvi(int& a, int& b){\r\n           int n = a;\r\n           a = b;\r\n           b = n;\r\n      }\r\n      int mcd(int a, int b){\r\n          int r,x = 0;\r\n          if (b == 0) {\r\n                return a; \r\n                }\r\n          else {\r\n               return mcd(b,a%b);\r\n               }\r\n      }\r\n      int main (){\r\n          int a,b;\r\n          cin>>a>>b;\r\n          if (a < b) {\r\n          intercanvi(a, b);\r\n          }\r\n          cout << mcd(a,b);\r\n      }\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n      void intercanvi(int& a, int& b){\r\n           int n = a;\r\n           a = b;\r\n           b = n;\r\n      }\r\n      int mcd(int a, int b){\r\n          if (b == 0) {\r\n                return a; \r\n                }\r\n          else {\r\n               return mcd(b,a%b);\r\n               }\r\n      }\r\n      int main (){\r\n          int a,b;\r\n          cin>>a>>b;\r\n          if (a < b) {\r\n          intercanvi(a, b);\r\n          }\r\n          cout << mcd(a,b);\r\n      }\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int){\n\nint f=1;\nwhile (n!=0) {\nf=f*n;\n--n;\n}\nreturn n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n    int factorial(int n);\n    if(n==0) {\n    return 1;\n   }\n   else {\n   return n*fact(n-1);\n   }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n    int factorial(int n){\n    if(n==0) {\n    return 1;\n   }\n   else {\n   return n*fact(n-1);\n   }\n   }\n\n\n",
  "int factorial(int n){\n\n    if (n==0) return 1;\n    \n    n=n*(factorial (n-1));\n    \n    return n;\n    \n}\n    \n \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0){\n        return 1;\n    }\n    else {\n        return (n*factorial(n-1));\n    }\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n    int factorial (int n) {\n        if (n==0){\n            return 1;\n        } else {\n            return  n * factorial (n-1);\n        }\n    }\n    int main () {\n        int n;\n        cin >> n;\n        cout << factorial (n) << endl;\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else  n = n*factorial(n-1);\n    return n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n        if(n<2) return 1;\n        else  return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if(n<2) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n\n\n\n",
  "\n// factorial recursiu\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\nif (n==0)\r\nreturn 1;\r\nelse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\nint n;\r\ncin>>n;\r\ncout<<factorial(n);\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n   if (n==0) return 1;\r\n   else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial (n)<<endl;\r\n}\n\n",
  "#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int result;\r\n    if (n <= 1) {\r\n          result = 1;\r\n    }\r\n    else{\r\n         result= factorial(n-1)*n;\r\n    }\r\n    return result;\r\n}\r\n         \r\n          \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int x = 1;\n    if (n>0) {\n        x = n*x;\n        x = x*factorial(n-1);\n    }\n    return n; \n}\n\nint main() {\n    int n;\n    cin >> n;\n    int x = factorial (n);\n    cout << x << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int x = 1;\n    if (n>0) {\n        x = n*x;\n        x = x*factorial(n-1);\n    }\n    return x; \n}\n\nint main() {\n    int n;\n    cin >> n;\n    int x = factorial (n);\n    cout << x << endl;\n}\n\n\n",
  "int factorial(int n){\r\nif (n==0){\r\n     return 1;     \r\n}\r\n     else\r\n{\r\n     return n*factorial(n-1);             \r\n}\r\n}\r\n\r\n\n\n",
  "int factorial(int n){\r\nif (n==0){\r\n     return 1;     \r\n}\r\n     else\r\n{\r\n     return= n*factorial(n-1);             \r\n}\r\n}\r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return factorial(n-1)*n;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\r\n#include<cmath>\r\nusing namespace std;\r\nint main()\r\n{\r\nint factorial (int n);\r\nint n;\r\ncin>>n;\r\nint a = factorial (n);\r\ncout<<a<<endl;\r\n}\r\n\r\nint factorial (int n)\r\n{\r\n if (n==0)return 1;\r\n else  return n*factorial (n-1);    \r\n}\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0)return 1;\n    return n*factorial(n-1);\n\n}\n\nint main(){\nint m;\ncin>>m;\nfactorial(m);\ncout<<factorial(m)<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial ( int n ){\r\n    return n*factorial ( n-1 );\r\n    \r\n}\r\nint main() {\r\n    int s;\r\n    cin >> s;\r\n    cout << factorial(s) << endl;\r\n    \r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if ( n == 1 ) return n;\r\n    else return ( n *factorial( n-1 ));\r\n}\r\nint main()      {\r\n    \r\n    int n;\r\n    cin >> n;\r\n    cout << factorial ( n ) << endl;\r\n\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int total = 1;\r\n    if ( n != 1 ) total = n*factorial( n-1 );\r\n    return total;\r\n}\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial ( n ) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int total = 1;\r\n    if (n == 0) return 1;\r\n    else total = n*factorial( n-1 );\r\n    return total;\r\n}\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial ( n ) << endl;\r\n\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0)\n        return 1;\n    else {\n        int aux = n-1;\n        return n*factorial(aux);\n    }\n\n}\n\nint main() {\n\n    int entrada;\n    \n    cin >> entrada;\n    \n    cout << factorial(entrada) << endl;\n\n}\n\n\n",
  "int factorial(int n) {\n    int f = n;\n    if (n == 0) {\n        f = 1;\n    }  \n    while (n != 1){\n        --n;\n        f = f*n;\n    }\n    return f;\n}\n\n\n",
  "int factorial(int n) {\n    int f;\n    if (n == 0) {\n        f = 1; \n    }\n    return f*factorial(n-1);\n}\n\n",
  "int factorial(int n) {\n    int f;\n    if (n == 0) {\n        f = 1; \n    }\n    return f*factorial(int n-1);\n}\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1)\r\n\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial (n - 1) * n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}        \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n < 2) return 1;\n\treturn n * factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n)<<endl;\n}\n\t\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n*factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    if (n == 0) return 0;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n int factorial (int n){\n if (n==0){\nreturn 1;\n   }else{\nreturn n*factorial(n-1);\n}\n}\nint main (){\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\n    \n\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    if (n==0) return n=1;\n    return n*factorial(n-1);\n}\nint main(){\n    int n;\n    cin >> n;\n    n= factorial(n);\n    cout << n<< endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n>=0 and n<=12){\r\n        int f=1;\r\n        if (n==0){\r\n            return f;\r\n        }\r\n        else{\r\n            for(int i=n;i>0;--i){\r\n                f*=i;\r\n            }\r\n            return f;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nint main(){\r\n    int a;\r\n    cin >> a;\r\n    \r\n    cout << factorial(a) << endl;\r\n    \r\n    int t;\r\n    cin >> t;\r\n}\r\n    \r\n    \r\n\n\n",
  "#include <iostream>//factorial recursiu\r\nusing namespace std;\r\nint factorial(int n){\r\n    int f=1;\r\n    if (n==0){//caso base\r\n        f*=1;\r\n    }\r\n    else{\r\n        f=factorial(n-1)*n;\r\n    }\r\n    return f;\r\n}\r\n\r\nint main(){\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a) << endl;\r\n    \r\n    int t;\r\n    cin >> t;\r\n}\r\n\n\n",
  "#include <iostream>//factorial recursiu\r\nusing namespace std;\r\nint factorial_rec(int n){\r\n    int f=1;\r\n    if (n==0){//caso base\r\n        f*=1;\r\n    }\r\n    else{\r\n        f=factorial_rec(n-1)*n;\r\n    }\r\n    return f;\r\n}\r\n\r\nint main(){\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial_rec(a) << endl;\r\n    \r\n    int t;\r\n    cin >> t;\r\n}\r\n\n\n",
  "# include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n>1) return n=n*factorial(n-1);\n    else return 1;\n}\n\nint main () {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n    \n\n\n",
  "# include <iostream>\nusing namespace std;\n\n\nint fact2 (int n) {\n    if (n>1) return n=n*fact2(n-1);\n    else return 1;\n}\n\nint main () {\n    int n;\n    cin>>n;\n    cout<<fact2(n)<<endl;\n}\n    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n == 0) return 1;\r\n    else return factorial (n-1)*n;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n == 0) return 1;\r\n    else return factorial (n-1)*n;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nif (n <=1) return 1;\nelse return (n*factorial(n-1));\n\n}\nint main () {\n    int n;\n    while (cin >> n) {\n       cout << \"factorial(\" << n << \")= \" << factorial(n) << endl;\n       }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int fac = 1;\n    if (n == 0) return 1;\n    else {\n\tfac = n * factorial (n-1);\n    }\n    return fac;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    int m;\n    m = factorial (n);\n    cout << m << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial( int n ) {\n    if ( n <= 1 ) return 1;\n    else return n*factorial( n - 1 );\n}\n\nint main() {\n    int a;\n    cin >> a;\n    int resultat = factorial( a );\n    cout << resultat << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n<=1) {\n        return 1;\n        }else{\n        return n*factorial (n-1);\n            }\n   } \n\nint main() {\n    int f;\n    cin>>f;\n    cout<<factorial (f)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(x<=1) {\n        return 1;\n        }else{\n        return n*factorial (x-1);\n            }\n   } \n\nint main() {\n    int f;\n    cin>>f;\n    cout<<factorial (f)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    /*int a = n;\n    --n;\n    while (n != 0){\n         a = a * n;\n         --n;\n    }\n    return a;*/ \n    int fact = 1;\n    for(int i = 1; i <= n; ++i){\n        fact = fact*i;\n    }\n    return fact;  \n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n  int factorial(int n){\r\n    int s = 0;\r\n    while (n>2){\r\n           s = n * (n - 1);\r\n           n = n - 2;\r\n                 }\r\n      s = s + 2;\r\n      return s;\r\n      }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    return n * factorial(n - 1);\r\n    \r\n}\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1) return n;\n    else return n * factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if(n == 0 or n == 1) return 1;\n    else if (n == 2) return n;\n    else return n * factorial(n - 1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n);\r\n\r\nint main(){\r\n    \r\n    int n;\r\n    cin>> n;    \r\n    cout<<n*factorial(n-1)<<endl;\r\n}\r\n\r\nint factorial(int n){\r\n     int c;\r\n     c=1;\r\n     if  (n>0){\r\n         while (n>1){\r\n               c=c*n;\r\n               n=n-1;\r\n               }\r\n               }    \r\n     else c=1;\r\n     return c;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n   if(n < 0) return 0;\r\n   else if(n > 1)return n*factorial(n-1);\r\n   return 1;\r\n}\r\n\r\n\r\n    \n\n",
  "#include <iostream>\n\nint factorial(int n){\n\n   if(n == 1) return 1;\n   else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\n\nint factorial(int n){\n\n   if(n == 1 or n == 0) return 1;\n   else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n){\n    if (n==0){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\n        if (n==0) {\r\n                  return 1;\r\n                  }\r\n        else\r\n             return n*factorial (n-1);\r\n                  }\r\n\r\nint main () {\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint mcd(int a, int b){\n    while(a!=b){\n        if (a>b){\n            a-=b;\n        }\n        else{\n            b-=a;\n        }\n    }\n    return a;\n}\n\nint main(){\n    int n,m;\n    cin>>m>>n;\n    cout<<mcd(n,m)<<endl;\n}\n\n\n\n            \n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return n+1;\n    else if (n == 1) return n;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n        \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    n*=factorial (n-1);\n    return n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    n*=factorial (n-1);\n    return n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n < 2) return 1;\n  else return n*(factorial(n-1));\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if ( n <= 1) return 1;\n    else return n*factorial ( n-1);\n}\nint main(){\n    int n;\n    cin >> n;\n    int j = factorial (n);\n    cout << j << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    return n * factorial (n - 1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    return factorial (n - 1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    return n * factorial (n - 1);\r\n}\r\n\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return(n * factorial(n-1));\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return (n * factorial(n - 1));\n}\nint main() {\n    int f;\n    while (cin >> f) {\n        if (f <= 12 and f >= 0) {\n            cout << factorial(f) << endl;\n        }\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int x){\n     int fact=1;\n     for (int i=1; i<=x;++i)\n         fact=fact*i;\n     return x;\n     \n     }\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*fact(n-1);\n}\n\nint main () {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n\n\n",
  "int factorial(int n) {\n    int fact=1;\n    if (n==0) return 1;\n    else {\n        fact=n*factorial(n-1);\n        }\n    return fact;\n}     \n#include <iostream>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factrec(int n) {\n    if (n==0) return 1;\n    else return n*factrec(n-1);\n}    \n\n#include <iostream>\nusing namespace std;\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factrec(x) << endl;\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int x = n;\r\n    while (n >= 2) {\r\n        --n;\r\n        x = x * n;\r\n    }\r\n    return x;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin>> n;\r\n    cout<< factorial(n)<< endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return (factorial (n - 1)) * n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin>> n;\r\n    cout<< factorial(n)<< endl;\r\n}\r\n\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n        int x = 1;\r\n        if (n > 1) {\r\n        x = n * x;\r\n        -- n;\r\n        return x;}\r\n\r\nint main() {\r\n    int n;\r\n    cin>> n;\r\n    cout<< factorial(n)<< endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n ) {\n    if (n == 0) return 1;\n    else return  n*factorial(n-1);\n    }\n    \n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n < 3) return n;\r\n    return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}\r\n    \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}\r\n    \r\n\n\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main (){\n    int n;\n    cin >> n;\n    int fact = 1;\n    fact = factorial(n);\n    cout << fact <<endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n==0) {\n        n = 1;\n        \n    }\n    \n    else {\n    \n    return n*(factorial (n - 1));\n    \n    }\n    return n;\n}\n    \nint main (){\n\n    int x;\n    \n    cin>>x;\n    cout<<factorial(x)<<endl;\n \n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);   \r\n}\r\n\r\nint main() {\r\n \r\n    int n;\r\n    \r\n    cin >> n;\r\n    \r\n    cout << factorial(n) << endl;\r\n\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n// Retorna n!.\r\n// Pre: 0 <= n <= 12.\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << \"El factorial de \" << n << \" es \" << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\tint factorial2 (int n){\n\t\n\t\tif(n==o){ \n\t\treturn 1;\n\t\t}\n\t\telse return n*factorial2(n-1);\n\t\t             \n\t\t\t    }\n\t\t\t    \n\tint main(){\n\tint n;\n\tcin>>n;\n\tif(0<=n and n<=12){\n\tcout<<factorial2(n)<<endl;\n\t}\t\n\t}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\tint factorial2 (int n){\t\n\t\tif(n > 1) return n*factorial2 (n-1);\t\t\n\t\telse return 1;\t\t             \n\t\t}\n\t\t\t    \n\tint main(){\n\tint n;\n\tcin>>n;\n\tif(0<=n and n<=12){\n\tcout<<factorial2(n)<<endl;\n\t}\t\n\t}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\tint factorial2 (int n){\t\n\t\tif(n<=1) return 1; \n\t\telse return n*factorial2 (n-1);\t\t\n\t\t\t             \n\t\t}\n\t\t\t    \n\tint main(){\n\tint n;\n\tcin>>n;\n\tif(0<=n and n<=12){\n\tcout<<factorial2(n)<<endl;\n\t}\t\n\t}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\tint factorial2 (int n){\t\n\t\tif(n>1) return n*factorial2 (n-1); \n\t\telse return 1;\t\t\n\t\t\t             \n\t\t}\n\t\t\t    \n\tint main(){\n\tint n;\n\tcin>>n;\t\n\tcout<<factorial2(n)<<endl;\n\t\n\t}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\tint factorial2 (int n){\t\n\t\tif(n > 1) return (n*factorial2 (n-1)); \n\t\telse return 1;\t\t\n\t\t\t             \n\t\t}\n\t\t\t    \n\tint main(){\n\tint n;\n\tcin>>n;\t\n\tcout<<factorial2(n)<<endl;\n\t\n\t}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\tint factorial2 (int n){\t\n\t\tif (n > 1) return (n * factorial2(n-1) ); \n\t\telse return 1;\t\t\n\t\t\t             \n\t\t}\n\t\t\t    \n\tint main(){\n\tint n;\n\tcin>>n;\t\n\tcout<<factorial2(n)<<endl;\n\t\n\t}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\tint factorial2 (int n){\t\n\t\tif (n > = 1) return 1;\n\t\telse return (n * factorial2(n-1) ); \n\t\t\t\t             \n\t\t}\n\t\t\t    \n\tint main(){\n\tint n;\n\tcin>>n;\t\n\tcout<<factorial2(n)<<endl;\n\t\n\t}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\tint factorial2 (int n){\t\n\t\tif (n >1) return (n * factorial2 (n-1));\n\t\telse return 1; \n\t\t\t\t             \n\t\t}\n\t\t\t    \n\tint main(){\n\tint n;\n\tcin>>n;\t\n\tcout<<factorial2(n)<<endl;\n\t\n\t}\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n <= 1) return 0;\r\n    else return n * factorial(n-1);\r\n    \r\n    }\r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n <= 1) return 0;\r\n    else return n * factorial(n-1);\r\n    \r\n    }\r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n = 0) return 1;\r\n    else return n * factorial(n-1);\r\n    \r\n    }\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n    }\r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n = 0) return 1;\r\n    else return factorial(n-1)* n;\r\n    \r\n    }\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n    }\r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n = 0) return 1;\r\n    else return (factorial(n-1)* n);\r\n    \r\n    }\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n    }\r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n == 0) return 1;\r\n    else return (factorial(n-1)* n);\r\n    \r\n    }\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n    }\r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n == 0) return 1;\r\n    else return (factorial(n-1)* n;\r\n    \r\n    }\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n    }\r\n\n\n",
  "\nint factorial(int n) {\n    if(n==0) return 1;\n    else return n*factorial (n-1);\n}\n\n\n",
  "int factorial(int n) {\n    int total = 1;\n    if (n != 1) total *= factorial(n-1);\n    return total;\n}\n\n\n\n",
  "int factorial(int n) {\n    int total = 1;\n    if(n == 0) return 1;\n    else total = n*factorial(n-1);\n    return total;\n}\n//factorial recursiu//\n\n\n\n",
  "int factorial(int n) {\n    if(n==0)return 1;\n    else return n*factorial(n-1)\n}\n//factorial recursiu//\n\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    return n*factorial(n-1);\n    }\nint main(){\n    int a;\n    cin>>a;\n    cout<<factorial(a)<<endl;\n}\n\n\n",
  "int factorial(int n) {\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n    \r\n    \r\n\r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   int m;\n   if (n==1) m = 1;\n   else m = n * factorial(n-1);\n   return m;\n   \n   \n}\n\nint main() {\n   int n;\n   cin>> n;\n   cout<< factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   int m = 1;\n   for (int i=1; i<=n; ++i){\n      m*=i;\n   }\n   return m;\n}\n\n\nint main() {\n   int n;\n   cin>> n;\n   cout<< factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   int m;\n   if (n==1 or n==0) m = 1;\n   else m = n * factorial(n-1);\n   return m;\n   \n   \n}\n\nint main() {\n   int n;\n   cin>> n;\n   cout<< factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n//factorial\nint factorial(int n){\n   if (n == 0) return 1;\n   return n * factorial(n - 1);\n}\n\nint main(){\n}\n\n\n",
  "int factorial (int n){\n    if (n==1){\n    return 1;\n    }\n    else{\n    return (n*factorial(n-1));\n    }\n}\n\n\n",
  "int factorial (int n){\n    if (n==1){\n    return 1;\n    }\n    else{\n    return (n*factorial(n-1)\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    if (n==1){\n    return 1;\n    }\n    else{\n    return (n*factorial(n-1));\n    }\n}\nint main (){\n    int x;\n    cin>>x;\n    int z=factorial (x);\n    cout<<z<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int f;\n    if (n==0){\n    f= 1;\n    }\n    else{\n    f=(n*factorial(n-1));\n    }\n    return f;\n}\nint main (){\n    int x;\n    cin>>x;\n    int z=factorial (x);\n    cout<<z<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res;\n    if (n == 0){\n        res = 1;\n    }\n    else {\n        res = n*factorial(n - 1);\n    }\n    return res;\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n \nint factorial(int n) {\n    if (n == 1) return 1;\n    return n*factorial(n-1);\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n   if(n < 0) return 0;\n   else if(n > 1) return n*factorial(n-1);\n   return 1;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n   if(n == 0) return 1;\n   return n*factorial(n-1);\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) { \n    if(n == 0) return 1;\n    else return n*(factorial(n-1));\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    int x;\n    if(n==0) return 1;\n    else{\n        x=factorial(n-1);\n\tx=x*n;\n\treturn x;\n\t}\n}\n\nint main (){\n\n   int n;\n   cin>>n;\n   \n   cout<<factorial(n)<<endl;\n   }\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n    if(n<=1) return 1;\n    return n*factorial (n-1);\n    }\n    \nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial( n-1);\n\n}\n\nint main(){\n     int a;\n     cin>>a;\n     cout<<factorial(a)<<endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int p;\n    if (n == 0) p = 1;\n    p = n * factorial(n-1);\n    return p;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int p = factorial(n);\n    cout << p << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int p;\n    if (n <= 1) p = 1;\n    else p = n * factorial(n-1);\n    return p;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int p = factorial(n);\n    cout << p << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n -1);\n}\n\nint main() {\n    int n; \n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res=1;\n    while (n>=1) {\n        res = res*n;\n        n=n-1;\n    }        \n    return res;\n}\n\nint main() {\n    int n;\n    cin >> n ;\n    cout << factorial(n) <<endl;\n}\n    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1 or n == 0) return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n==0){\r\n        return 1;\r\n        }\r\n    else {\r\n        return n*factorial(n-1);\r\n        }   \r\n    }\r\nint main (){\r\n    int n,e;\r\n    cin >> n;\r\n    e=factorial(n);\r\n    cout << e << endl;\r\n}\r\n\r\n\n\n",
  "int factorial(int n){\n\nint r=1;\n\nfor(int i=1;i<=n;++i){\n\n r=i*r;\n \n}\n \n return r;\n} \n \n\n\n",
  "int factorial(int n),\n\nint=1;\n\nfor(int i=2;i<=n;++i){\n\n r=i*r;\n \n}\n  return r;\n \n\n\n",
  "int factorial(int n),\n\nint=0;\n\nfor(int i=1;i<=n;++i){\n\n r=i*r;\n \n}\n  return r;\n \n\n\n",
  "int factorial(int n){\n\nint=0;\n\nfor(int i=1;i<=n;++i){\n\n r=i*r;\n \n}\n \n return r;\n} \n \n\n\n",
  "int factorial(int n){\n\nint=0;\n\nfor(int i=1;i<=n;++i){\n\n r=i*r;\n \n}\n \n return r;\n} \n \n\n\n",
  "int factorial(int n){\n\nint=1;\n\nfor(int i=1;i<=n;++i){\n\n r=i*r;\n \n}\n \n return r;\n} \n \n\n\n",
  "int factorial(int n){\n\nint r=1;\n\nfor(int i=1;i<=n;++i){\n\n r=i*r;\n \n}\n \n return r;\n} \n \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n    \n}\n\nint main() {\n\n    int r;\n    cin >> r;\n    \n    cout << factorial (r) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 1) return 1;\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n\n    int x;\n    cin >> x;\n\n    cout << factorial(x) << endl;\n\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n<=1) return 1;\n\treturn n*factorial(n-1);\n\n}\n\nint main() {\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else if (n > 0 and n <= 12) return n * factorial(n-1);\n    return 0;\n}\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n <= 1) return 0;\r\n    else return n * factorial(n-1);\r\n    \r\n    }\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n int factorial (int n){\r\n if (n==0){\r\nreturn 1;\r\n   }else{\r\nreturn n*factorial(n-1);\r\n}\r\n}\r\nint main (){\r\nint n;\r\ncin>>n;\r\ncout<<factorial(n)<<endl;\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 0) return 0;\n    else if (n > 1) return n*factorial(n-1);\n    return 1;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "/*\n *  fact.cpp\n *  \n *\n *  Created by MacBook on 29/12/06.\n *  Copyright 2006 __MyCompanyName__. All rights reserved.\n *\n */\n\nusing namespace std;\n#include <iostream>\n\nint factorial(int n){\n\tif(n!=1 or n<O and n>12)\t\n\t\treturn n*factorial(n -1);\n\t\treturn 1;\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<< endl;\n}\n\n\n",
  "/*\n *  fact.cpp\n *  \n *\n *  Created by MacBook on 29/12/06.\n *  Copyright 2006 __MyCompanyName__. All rights reserved.\n *\n */\n\nusing namespace std;\n#include <iostream>\n\nint factorial(int n){\n\tif(n!=1 and n<O and n>12)\t\n\t\treturn n*factorial(n -1);\n\t\treturn 1;\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<< endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1)return 1;\n    else return n*factorial(n-1);\n}\nint main(){\n    int a;\n    cin>>a;\n    cout<<factorial(a)<<endl;\n\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1)return 1;\n    else return n*factorial(n-1);\n}\nint main(){\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact=1;\n    for(int i=n; i>1; i--){\n        fact *= factorial(i);\n    }\n    return fact;\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact;\n    if(n>1){\n        for (int i=n; i>0 ; i--){\n            fact *= factorial(i-1);\n        }\n    }\n    return fact;\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact;\n    if(n>0){\n        fact *= factorial(n-1);\n    }\n    return fact;\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    return n*(factorial(n-1));\n}\n\nint main(){\n    int a;\n    while(cin >> a) cout << factorial(a) << endl;;\n\n}\n\n\n",
  "/*\n *  fact.cpp\n *  \n *\n *  Created by MacBook on 29/12/06.\n *  Copyright 2006 __MyCompanyName__. All rights reserved.\n *\n */\n\nusing namespace std;\n#include <iostream>\n\nint factorial(int n){\n\tif(n!=1)\t\n\t\treturn n*factorial(n -1);\n\t\treturn 1;\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<< endl;\n}\n\n\n",
  "/*\n *  fact.cpp\n *  \n *\n *  Created by MacBook on 29/12/06.\n *  Copyright 2006 __MyCompanyName__. All rights reserved.\n *\n */\n\nusing namespace std;\n#include <iostream>\n\nint factorial(int n){\n\tif(n!=1)\t\n\t\treturn n*factorial(n -1);\n\t\treturn 1;\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<< endl;\n}\n\n\n",
  "/*\n *  fact.cpp\n *  \n *\n *  Created by MacBook on 29/12/06.\n *  Copyright 2006 __MyCompanyName__. All rights reserved.\n *\n */\n\nusing namespace std;\n#include <iostream>\n\nint factorial(int n){\n\tif(n!=1 and n<0 and n>12)\t\n\t\treturn n*factorial(n -1);\n\t\treturn 1;\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<< endl;\n}\n\n\n",
  "/*\n *  fact.cpp\n *  \n *\n *  Created by MacBook on 29/12/06.\n *  Copyright 2006 __MyCompanyName__. All rights reserved.\n *\n */\n\nusing namespace std;\n#include <iostream>\n\nint factorial(int n){\n\t if (n<0 or n>12) return 1;\n\t if(n==0)\t\n\t\treturn 1;\n\telse\n\t\treturn factorial(n -1)*n;\n\t\t\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<< endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n    \nint factorial(int n) {\n    if (n == 0) return 1; \n    return n * factorial(n-1);\n}\n    \n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    int i = 0;\n    int fac = 1;\n    \n    while (i != n) {\n        i = i + 1;\n        fac = fac*i;\n    }\n    return fac;\n    \n    \n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n) {\n\n    int fact = 1;\n    for (int i = 1; i <= n; ++i) {\n        fact *= i;\n    }\n    return n*factorial(n);\n    \n}\n\n\n",
  "int factorial(int n) {\n\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n    \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n\n}\n\nint main() {\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if ( n == 0 ) return 1;\n    return (n * factorial(n - 1));\n    }\n\n\nint main(){\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n== 0) return 1;\n    else return n*factorial(n-1);\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int r = 1;\n    if (n == 0) return r;\n    else {\n        r = n * factorial(n-1);\n        return r;\n    }\n}\n\nint main() {\n    int x;\n    cin >> x;\n    x = factorial(x);\n    cout << x << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n    if (n == 0) return 1;\n    else return n * fact(n - 1);\n}\n\nint main (){\n    int x;\n    cin >> x;\n    cout << fact(x) << endl;\n} \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    return (n+factorial (n - 1))\n    }\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial (a) << endl;\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    return (n * factorial (n - 1))\n    }\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial (a) << endl;\n    }\n\n\n",
  "int factorial(int n){\r\n   int k;\r\n   if (n=1) return 1;\r\n   else k=factorial(n-1);\r\n   return k;\r\n}\r\n   \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int total = 1;\r\n    if(n==0) return 1;\r\n    else total = n*factorial(n-1);\r\n    return total;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int total = 1;\r\n    if(n==0) return 1;\r\n    else total = n*factorial(n-1);\r\n    return total;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n  }\nint main (){\n  int n;\n  cin>>n;\n  cout<<\"El factorial de \"<<n;\n  cout<<\" es\"<<factorial(n)<<endl;\n  }\n\n\n",
  "int factorial (int n) {\n    if (n == 1) return 1;\n    else return (n * factorial (n - 1) );\n    } \n\n\n",
  "int factorial (int n) {\n    if (n == 0) return 1;\n    else return (n * factorial (n - 1) );\n    } \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    return (n * factorial (n - 1));\n    }\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial (a) << endl;\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return (n * factorial(n -1));\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n<=1) return 1;\r\n\treturn n*factorial(n-1);\r\n\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int x) {\n    if (x<=1){\n    return 1;\n    }else{\n    return x*factorial(x-1);\n    }\n    }\nint main () {\nint x;\nfactorial (x);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\t\n}\n\n\n",
  "int factorial(int n){\n    if(n==0){\n        n=1;\n    }else{\n        n*=factorial(n-1);\n    }\n    return n;\n}\n\nint main(){\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n   if (x==0) return 1;\n   else return x*factorial(x-1);\n}\n\nint main () {\n\n\tint x;\n\tcin>>x;\n\tcout<<factorial(x)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n\n    int n;\n    cin>>n;\n    \n    cout<<factorial(n)<<endl;\n\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n if (n<=1) return 1;\n else return n*factorial(n-1);\n}\n\nint main () {\n int n;\n while (cin >> n) {\n  factorial (n);\n  cout << factorial (n) << endl; \n }\n}\n\n\n",
  "#include <iostream>\r\n\r\nint factorial(int n)\r\n{\r\n      if (n==0) return 1;\r\n      else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n\n            \n}\nint factorial (int n){\n\n    if (n==1){\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n\n\n\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n            \n}\nint factorial (int n){\n\n    if (n==1){\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 2) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main (){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n} \n\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n            \n}\nint factorial (int n){\n    int r;\n    \n    if (n==1){\n        r=1;\n    }\n    else {\n        r=n*factorial(n-1);\n    }\n    return r;\n}\n\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n    if (n == 0) return 1;\n    else return n * fact(n - 1);\n}\n\nint main (){\n    int x;\n    cin >> x;\n    cout << fact(x) << endl;\n} \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 2) return 1;\n    else return n * fact(n - 1);\n}\n\nint main (){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n} \n\n\n\n\n",
  "int factorial(int n) {\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main () {\r\n    int a;\r\n    cin >> a;\r\n    int x = factorial (a);\r\n    cout << x << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) {return 1;}\n    else {return n*factorial (n-1);}\n}\n\nint main () {\n    int n;\n    cin>>n;\n    cout<<factorial (n)<<endl;\n\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n==1) return 1;\n    else return n*factorial(n-1);\n}\nint main(){\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n ==1)   return n;\r\n    return factorial(n-1);\r\n}\r\n\r\n\r\nint main(){\r\n     int num;\r\n     cin >> num;\r\n     cout << factorial(num);\r\n}\r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n == 1)   return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main(){\r\n     int num;\r\n     cin >> num;\r\n     cout << factorial(num);\r\n}\r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n == 1)   return n;\r\n    return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main(){\r\n     int num;\r\n     cin >> num;\r\n     cout << factorial(num);\r\n}\r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n == 1)   return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    \r\n}\r\n\n\n",
  "#include <iostream> \r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n == 1)   return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int fact = 1;\r\n    while (n > 0) {\r\n        fact *= n;\r\n        --n;\r\n    }\r\n    return fact;\r\n}\r\n        \r\n\n\n",
  "\r\n\r\nint factorial(int n) {\r\n   int aux = n;\r\n   if (aux == 1) return n;\r\n   else {\r\n        n = aux* (aux - 1);\r\n        --aux;\r\n    }\r\n    factorial(aux);\r\n} \r\n\r\n\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n    int f;\n    \n    if (n==0)f=1;\n    else f= n * factorial(n-1);\n    return f;\n    \n}\n\nint main() {\n\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n} \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n   if(n < 0) return 0;\n   else if(n > 1) return n*factorial(n-1);\n   return 1; \n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n) {\r\n    if (n==0) return 11;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) {\n        return 1;\n    } else {\n        return n*factorial(n-1);\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ((n <= 0) and (n >= 12)) return 1;\n    else return n * factorial(n - 1);\n}\n\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ((n <= 0) and (n >= 12)) return 1;\n    else return n * factorial(n - 1);\n}\n\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 0) return 1;\n    else return n * factorial(n - 1);\n}\n\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial (n-1);\n}\n\nint main (){}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n){\n    if(n == 1) return 1;\n    return n*factorial(n - 1);\n}\n\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n    \n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n)\r\n{\r\nint n;\r\nint s;\r\n\r\ns=n-1;\r\n\r\nwhile(s>0)\r\n  {\r\n\r\n  n=n*s;\r\n    s=s-1;\r\n\r\n  \r\n  }\r\n\r\nreturn n;\r\n\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n){\n    if(n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n    \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int k;\n    if (n==0) return 1;\n    else {\n        k=n*factorial(n-1);\n        return k;\n    }\n}\n\nint main (){\n    int n;\nwhile (cin>>n){\n    cout<<factorial(n)<<endl;\n    }\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return factorial(n - 1) * factorial(n - 2);\r\n}\r\n\r\nint main() {\r\n    \r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return factorial(n - 1) * n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n<2)return 1;\r\n    else return n*factorial(n-1);\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\nif (n==0) return 1;\nreturn n * factorial(n - 1);\n}\nint main() {\nint a;\ncin>>a;\ncout<<factorial(a)<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1; \r\n    if (n == 1) return n;\r\n    return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n == 0 ) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n1;\n    cin >> n1;\n    int fact = factorial(n1);\n    cout << fact << endl;\n}   \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if ( n == 0 ) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n1;\r\n    cin >> n1;\r\n    int fact = factorial(n1);\r\n    cout << fact << endl;\r\n}\r\n \r\n\n\n",
  "int factorial(int n){\n\n    int total = 1;\n    if ( n == 0 ) return 1;\n    else total = factorial (n-1);\n    return total;\n\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\nvoid fact_rec(int n, int f){\n    if(n!=1){\n    if (n%f==0){\n        return f;\n        cout<<f<<\" \";\n        n=n/f;\n        }\n    else{\n        ++f;\n    }\n    }\n    \n}\nint main (){\nint n;\nint f;\ncin>>n;\nfact_rec(n,f);\ncout<<f<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint fact_rec(int n) {\n\n    if(n==0) return n=1;\n    else return n*fact_rec(n-1); \n}\n\nint main (){\n    \n    int n;\n    cin>>n;\n    \n    cout<<fact_rec(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint fact_rec(int n) {\n\n    if(n==0) return n=1;\n    else return n*fact_rec(n-1); \n}\n\nint main (){\n    \n    int x;\n    cin>>x;\n    \n    cout<<fact_rec(x)<<endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0)return 1;\n\telse return n * factorial(n-1);\n\t}\nint main(){\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<=1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    cout << factorial(12) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    \r\n    if (n <= 1) return n;\r\n    return n*(factorial(n-1));\r\n}\r\n\r\nint main() {\r\n    \r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    \r\n    if (n <= 1) return n;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    \r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    \r\n    if (n <= 1) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    \r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n    int cnt1=n;\n    int mlt=1;\n    int mlttot=1;\n    \n    if (n==0)\n    {\n        n=1;\n        return n;\n    }\n        \n    while(cnt1>0)\n    {\n        mlttot=mlttot*(n-mlt);\n        ++mlt;\n        --cnt1;\n    }\n    n=n*mlttot;\n    return n;\n}\n        \n     \n\nint main ()\n{\n\n\n\n}\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n    if(n==0) return 1;\n    return n*factorial(n-1);\n\n}\n        \n     \n\nint main ()\n{\n\n\n\n}\n\n\n",
  "int factorial(int n){\n    if(n >= 1){\n        return n * factorial(n-1);\n    }\n    else{\n        return 1;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "int factorial (int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    \r\n    if (n == 0) return 1;\r\n    int m = n;\r\n    m *= factorial(n-1);\r\n    return m;\r\n        \r\n}\r\n\r\nint main() {\r\n\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;    \r\n    \r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==0) return 1;\n    n=n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==0) return 1;\n    n*factorial(n-1);\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==0) return 1;\n    return n=n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n==1)return 1;\r\n    else return (n*factorial(n-1));\r\n}\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n==1 or n==0)return 1;\r\n    else return (n*factorial(n-1));\r\n}\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n}\r\n\n\n",
  "int factorial (int n){\n    int f = 1;\n    while( n > 0){\n        f = f * factorial (n-1);\n    }\n    return f;\n}\n\n\n",
  "int factorial (int n) {\n   if (n == 0) return 1;\n   int f = 1;\n   f = n * factorial (n*1);\n}\n\n\n",
  "int factorial (int n) {\n   if (n == 0) return 1;\n   int f = 1;\n   f = n * factorial (n-1);\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n   if (n == 0) return 1;\n   int f = 1;\n   f = n * factorial (n-1);\n}\n\nint main() {\n   int n;\n   while (cin >> n) {\n\tcout << factorial(n) << endl;\n   }\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n   if (n == 0){\n\treturn 1;\n   }else{\n\treturn (n * factorial(n-1));\n   }\n}\n\nint main() {\n   int n;\n   while (cin >> n) {\n\tcout << factorial(n) << endl;\n   }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n   if(n == 0) return 1;\n   else return n*factorial(n-1);    \n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial (n-1);\n}\n\nint main()\n\n\n",
  "//factorial recursiu\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1){\n        return 1;\n    }else{\n        return n*factorial(n-1);\n    }\n}\n\nint main(){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n-1);       \n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n)<< endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n){\r\n\tif (n==0){\r\n\t\treturn 1;\r\n\t}\r\n\tn = n * factorial(n-1);\r\n\treturn n;\r\n}\r\n\r\nint main (){\r\n\tint n;\r\n\tcin >> n;\r\n\tif ((n>=0) and (n<=12)){\r\n\t\tcout << factorial(n);\r\n\t}\r\n}\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint resultat=1;\r\n\twhile(n!=0) {\r\n\t\t\tresultat =n*factorial(n-1);\r\n\t\t\t--n;\r\n\t}\r\n\treturn resultat;\r\n}\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n<=0) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\treturn (n*factorial(n-1));\r\n\t}\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n    }\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n=1) return n;\r\n    else return n*factorial(n-1);\r\n}\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n=1) return n;\r\n    return n*factorial(n-1);\r\n}\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n==1) return n;\r\n    else return n*factorial(n-1);\r\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n    }\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int x=1;\n    if(n==0) return x;\n    else x= n* factorial(n-1);\n    return x;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "int factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial (n-1);\n}\n\n\n",
  "int factorial(int n){\n\n    int total = 1;\n    if ( n == 0 ) return 1;\n    else total = n*factorial (n-1);\n    return total;\n\n}\n\n\n\n",
  "int factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial (n-1);\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0) return 1;\n\telse return factorial(n-1)*n;\n}\n\nint main(){\n\nint x;\ncin>>x;\n\nint c=factorial(x);\n\ncout<<c<<endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n if (n<=1) return 1;\n else return n*factorial(n-1);\n}\n\nint main () {\n int n;\n while (cin >> n) {\n  factorial (n);\n  cout << factorial (n) << endl; \n }\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\nif (n<1) return 1;\r\nelse return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial (n)<<endl;\r\n}\r\n    \r\n\n\n",
  "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n < 2) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\n\n\n\n\n\n\nusing namespace std;\n\n\n    int factorial (int n){\n    int r;\n    if(n==0)r=1;\n    else r=n*factorial(n-1);\n    \n    return r;\n\n    }\n  \n  int main (){\n  \n  \n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n  \n  }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\nif (n==0) return 1;\n\nreturn n*(factorial(n-1));\n}\n\nint main(){\nint m;\ncin>>m;\ncout<<factorial(m)<<endl; \n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial_recursiu (int n) {\r\nif (n<1) return 1;\r\nelse return n*factorial_recursiu(n-1);\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial_recursiu (n)<<endl;\r\n}\r\n    \r\n\n\n",
  "int factorial(int n){\n\nif(n>1) return n*factorial(n-1);\nelse return n;\n\n}\n\n\n",
  "int factorial(int n){\n\nif(n>2) return n*factorial(n-1);\nelse return n;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 0; \n    if(n>=2) return n*(factorial(n-1));  \n    else return 1;\n}\n\nint main(){\n    int n;\n    \n    cin >> n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "\nint factorial(int n){\n    if(n==0) return 0; \n    if(n==1) return 1;\n    else return n*(factorial(n-1));  \n}\n\n\n\n",
  "\nint factorial(int n){\n    if(n==0) return 1; \n    return n*(factorial(n-1));  \n}\n\n\n\n",
  "int factorial(int n){\n\n\tif(n > 1) return n*factorial(n-1);\n\telse return n;\n\t\n}\n\n\n",
  "int factorial(int n){\n\t\n\tif(n == 0) return 1;\n\tif(n > 1) return n*factorial(n-1);\n\telse return n;\n\t\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int x;\n    x=1;\n    if (n<=1) return 1;\n    return (n*factorial(n-1));\n    \n    \n    }\n    \nint main () {\n    int n;\n    cin >> n;\n    if ((0<=n) and (n<=12)) {\n        factorial(n);\n        cout <<factorial(n)<< endl;\n        }\n    }\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n==1) return n;\r\n    else return (n*factorial(n-1));\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >>n) {\r\n          cout <<factorial(n)<< endl;\r\n          }\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n==1) return n;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n          cout << factorial(n) << endl;\r\n          }\r\n    }            \r\n          \r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n   if(n==0) return 1;\n   return n*factorial(n-1);\n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if(n<=1) return 1;\n  else return (n*factorial(n-1));\n}\n\nint main () {\n  int n;\n  while(cin>>n) {\n    cout<<\"factorial(\"<<n<<\")= \"<<factorial(n)<<endl;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n * factorial (n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\nif (n==0)\nreturn 1;\nelse \nreturn n*factorial (n-1);\n \n\n}\nint main () {\nint n;\ncin >>n;\ncout <<factorial (n) << endl;\n}\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n  int factorial(int n){\r\n      if (n==0) return 1;\r\n      else return n*factorial(n-1);\r\n  }\r\nint main (){    \r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n) {\n  if(n<=1) return 1;\n  else return (n*fact(n-1));\n}\n\nint main () {\n  int n;\n  while(cin>>n) {\n    cout<<\"fact(\"<<n<<\")= \"<<fact(n)<<endl;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0){\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\nint main (){}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0)return 1;\n    return n*factorial(n-1);\n}\nint main (){\n    int n;\n    cin >> n;\n    cout <<factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int a;\n    if ( n == 0) return 1;\n    a = n * factorial(n-1);\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int a;\n    if ( n == 0) return 1;\n    a = n * factorial(n-1);\n    return a;\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint c=n-1;\t\n\twhile (c>0) {\n\t\tn=n*c;\n\t\tc=c-1;\n\t\tint factorial (int n);\n\t}\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint c=n-1;\t\n\twhile (c>0) {\n\t\tn=n*c;\n\t\tc=c-1;\n\t\tint factorial (int n);\n\t}\n\treturn n;\n}\n\nint main() {\n\t\tint n;\n\t\tcin>>n;\n\t\tcout<< factorial(n)<<endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    \n    return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "//FACT2: Funcio que donat un valor n calcula el factorial recursivament\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "int factorial(int n){\r\n    int r;\r\n    if (n==0) r=1;\r\n    else r=n*factorial(n-1);\r\n    return r;\r\n}\r\n\n\n",
  "int factorial(int n){\n    if (n==1) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "int factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if (n != 1) total *= factorial(n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if(n == 0) return 1;\n    else total = n*factorial(n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n  int factorial(int n){\n  \n    if(n==0) return 1;\n    else return n*factorial(n-1);\n  }\n  \n  int main(){\n  \n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n    \n  }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fac=n;\n        if (n > 1){\n        fac *= factorial (n-1);\n        }\n    return fac;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fac=n;\n    if (n >= 0 and n <= 12){\n        if (n > 1){\n        fac *= factorial (n-1);\n        }\n    }\n    return fac;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n > 1 and n <= 12) return n * factorial(n-1);\n    else return 0;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    int m = n;\n    m *= factorial (n - 1);\n    return m;\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tint r;\r\n\t\tif (n==0)\r\n\t\t\tr=1;\r\n\t\telse\r\n\t\t\tr=n*factorial(n-1);\r\n\t\treturn r;\r\n}\r\nint main(){\r\n\tint fac;\r\n\tint res;\r\n\tcin >> fac;\r\n\tres = factorial (fac);\r\n\tcout<< res << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n==0) return 1;\r\n    else return n * factorial (n-1); }\r\n    \r\n    \r\n    int main () {\r\n    \r\n    int a;\r\n    \r\n    cin >> a;\r\n    \r\n    cout << factorial (a) << endl;\r\n    \r\n    }\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n > 0) {\n\treturn n*factorial(n-1);\n\t}\n\treturn 1;\n}\n\n/*\nint main () {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}*/\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n > 0) {\n\treturn n*factorial(n-1);\n\t}\n\treturn 1;\n}\n\n/*\nint main () {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0 ) return 1;\n    else n *= factorial(n);\n    return n;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n     if (n == 1) return 1;\n     return n * factorial(n-1);\n  \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if(n == 0) return 1;\n    else total = n*factorial(n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n\n\n",
  "\r\n\r\n\r\n\r\nint factorial(int n){\r\n    \r\n    if(n==1){return 1;}\r\n    else return factorial(n-1);\r\n}\r\n    \r\n    \r\n    \r\n    \r\n\n\n",
  "\r\n\r\n\r\n\r\nint factorial(int n){\r\n    if(n<1){return 0;}\r\n    else if(n==1){return 1;}\r\n    else return factorial(n-1);\r\n}\r\n    \r\n    \r\n    \r\n    \r\n\n\n",
  "\r\n\r\n\r\n\r\nint factorial(int n){\r\n    if(n<=0 and n>=12){\r\n    if(n<1){return 0;}\r\n    else if(n==1){return 1;}\r\n    else return factorial(n-1);\r\n}}\r\n    \r\n    \r\n    \r\n    \r\n\n\n",
  "\r\n\r\n\r\n\r\nint factorial(int n){\r\n    if(n>=0 and n<=12){\r\n    if(n<1){return 0;}\r\n    else if(n==1){return 1;}\r\n    else return factorial(n-1);\r\n}\r\n\r\nelse return 0;\r\n}\r\n    \r\n    \r\n    \r\n    \r\n\n\n",
  "#include<iostream>\r\n using namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n    if(n>=0 and n<=12){\r\n    if(n<1){return 0;}\r\n    else if(n==1){return 1;}\r\n    else return factorial(n-1);\r\n}\r\n\r\nelse return 0;\r\n}\r\n    \r\n    \r\n      int main(){\r\n          \r\n          \r\n          \r\n          }\r\n\n\n",
  "#include<iostream>\r\n using namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n    if(n>=0 and n<=12){\r\n    if(n<1){return 0;}\r\n    else if(n==1){return 1;}\r\n    else return factorial(n-1);\r\n}\r\n\r\n}\r\n    \r\n    \r\n      int main(){\r\n          \r\n          \r\n          \r\n          }\r\n\n\n",
  "#include<iostream>\r\n using namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n    if(n==1){return 1;}\r\n    else{return factorial(n-1)+n;}\r\n}\r\n    \r\n    \r\n      int main(){\r\n          \r\n          int a;\r\n          \r\n          cin>>a;\r\n          cout<<factorial(a);\r\n          \r\n          \r\n          }\r\n\n\n",
  "#include<iostream>\r\n using namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n    if(n>=0 and n<=12){\r\n    if(n==1){return 1;}\r\n    else{return factorial(n-1)+n;}\r\n}\r\nelse{return 0;}\r\n    \r\n}\r\n    \r\n      int main(){\r\n          \r\n          int a;\r\n          \r\n          cin>>a;\r\n          cout<<factorial(a);\r\n          \r\n          \r\n          }\r\n\n\n",
  "\r\nint factorial(int n){\r\n  if(n>=0 and n<=12){\r\n    if(n==1){return 1;}\r\n    else{return factorial(n-1)+n;}\r\n}\r\nelse{return 0;}   \r\n}\r\n\n\n",
  "\r\nint factorial(int n){\r\n  if(n>=0 and n<=12){\r\n    if(n==1){return 1;}\r\n    else{return factorial(n-1)*n;}\r\n}\r\nelse{return 0;}   \r\n}\r\n\n\n",
  "#include<iostream>\r\n  using namespace std;\r\n  \r\nint factorial(int n){\r\n\r\n    if(n==1){return 1;}\r\n    else{return factorial(n-1)*n;}\r\n  \r\n}\r\nint main(){\r\n    \r\n    int a;\r\n    \r\n    cin>>a;\r\n    cout<<factorial(a);\r\n    \r\n    }\r\n\n\n",
  "#include<iostream>\r\n  using namespace std;\r\n  \r\nint factorial(int n){\r\n\r\n    if(n>0){return factorial(n-1)*n;}\r\n    else{return 1;}\r\n  \r\n}\r\nint main(){\r\n    \r\n    int a;\r\n    \r\n    cin>>a;\r\n    cout<<factorial(a);\r\n    \r\n    }\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int a){\n        if (a<2) return 1;\n        else{\n            return a*factorial(a-1);\n        }\n}\n\nint main(){\n    int n;\n    cin>>n;\n    if (n<12 and n>0){\n    cout<<factorial(n)<<endl;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int e=1;\n    if (n>1){\n        e=n*factorial(n-1);\n    }\n    return e;\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(intx) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    int r;\r\n    if (n==0)r=1;\r\n    else r=n*factorial(n-1);\r\n    return r;\r\n}\r\n\r\nint main(){\r\n    int a;\r\n    cin>>a;\r\n    cout<<factorial(a)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int r;\r\n    if (n == 0) r = 1;\r\n    else r = n * factorial(n-1);\r\n    return r;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) cout << factorial(x) << endl;\r\n}\r\n\n\n",
  "//Exercici 4.1: Factorial. FACT2\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n//Calcula el factorial de un número\r\nint factorial(int n) {\r\n    if(n > 1) return n*factorial(n - 1);\r\n    else return 1;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while(cin >> n) cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n > 0) return n * factorial (n - 1);\n\treturn 1;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n) {\n\tif (n > 0) {\n\t\treturn n * fact (n - 1);\n\t}\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n) {\n\tif (n > 0) return n * fact (n - 1);\n\treturn 1;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n<0) return 0;\n    else if (n>0) return n*factorial(n-1);\n    return 1;\n    }\n    \n\n\nint main() {\n    int x;\n    while (cin>>x) cout<<factorial(x)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n+factorial (n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n*factorial (n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == o) return 1;\n    return factorial(n -1);\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n){\r\n    int f;\r\n    if(n==0) f=1;\r\n    else f=n*factorial(n-1);\r\n    return f;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n * factorial(n-1);\n\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if(n == 0)return 1;\r\n    return n * factorial(n-1);\r\n}\r\n\r\nint main (){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n > 1) return n*factorial(n-1);\n    return n;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n > 0) return n*factorial(n-1);\n    return n;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) n = 1;\n    if (n > 1) return n*factorial(n-1);\n    return n;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n//Prec: 0<=n<=12\n    int c;    \n     if ( n<=1 ){\n    return 1;\n    }    \n    if(n>1){\n    c = n*(factorial(n-1));\n        return c;\n    }\n    return c;\n}\n    \n    int main(){\n        int x;\n        cin >> x;\n        \n        cout << factorial (x) << endl ;\n        }\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n == 0) return 1;\n    return factorial(n-1)*n; \n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if(n==0) return 1;\n    return n*factorial(n-1);\n}\nint main(){\n   int n;\n   cin>>n;\n   n=factorial(n);\n   cout<<n;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    return n * factorial(n -1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    n = factorial(n);\r\n    cout << n;\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    cin >> n;\r\n    int resultat = 1;\r\n    if (n == 0) return resultat;\r\n    else{\r\n      while (n > 1) {\r\n         resultat = resultat * n;\r\n         --n;\r\n      }\r\n    return resultat;\r\n}\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n){\r\n    if (n == 0) return 1;\r\n    return n * factorial (n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    cin >> n;\r\n    int n! = 1;\r\n    if (n == 0) return n!;\r\n    else{\r\n      while (n > 1) {\r\n         n! = n! * n;\r\n         --n;\r\n      }\r\n    return n!;\r\n}\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n, int m) {\r\n    if (n==0) return m;\r\n    else return fact_aux (n-1, n*m);\r\n}\r\nint factorial2 (int n){\r\n    return factorial (n,1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n * factorial (n - 1);\r\n}\r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n < 2) return 1;\n    return n*factorial(n - 1);\n}\n\n\n",
  "/*\n * Funcio que, de manera recursiva, calcula el factorial d'un\n * nombre donat.\n */\n\nint factorial(int n) {\n\n    if (n == 0) {\n\n        return 1;\n    }\n\n    else {\n\n        return n * factorial(n - 1);\n    }\n}\n\n\n",
  "#include <iostream>\n\nint i=1;\nint factorial(int n){\n    if(n!=0){\n        i*=n;\n        factorial(n-1);\n    } else {\n        return i;\n    }\n}\n\n\n",
  "#include <iostream>\n\nint i=1;\nint factorial(int n){\n    if(n=0) return 0;\n    if(n!=0){\n        i*=n;\n        factorial(n-1);\n    } else {\n        return i;\n    }\n}\n\n\n",
  "#include <iostream>\n\nint i=1;\nint factorial(int n){\n    if(n==0) return 0;\n    if(n==1){\n        return i;\n    } else {\n        i*=n;\n        factorial(n-1);\n    }\n}\n\n\n",
  "#include <iostream>\n\nint i=1;\nint factorial(int n){\n    if(n==0) return 0;\n    if(n==1){\n        return i;\n    } else {\n        i=i*n;\n        factorial(n-1);\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint i=1;\nint factorial(int n){\n    if(n==0) return 1;\n    if(n==1) return i;\n    i=i*n;\n    factorial(n-1);\n}\nint main(){\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint i=1;\nint factorial(int n){\n    if(n==0){\n        return 1;\n    } else {\n        return n * factorial(n-1);\n    }\n}\nint main(){\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint i=1;\nint factorial(int n){\n    if(n==0) return 1;\n    } else {\n    factorial (n*(n-1));\n    }\n}\nint main(){\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial ( int n ) {\n    if (n<=1) return 1 ;\n    else return n*factorial ( n -1 ) ;\n}\nint main () {\n    int a ;\n    cin >> a ;\n    int resultat = factorial ( a ) ;\n    cout << resultat << endl ;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial ( int n ) {\n    if (n<=1) return 1 ;\n    else return n*factorial ( n -1 ) ;\n}\nint main () {\n    int a ;\n    cin >> a ;\n    int resultat = factorial ( a ) ;\n    cout << resultat << endl ;\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n     int a = 1;\r\n     if (n == 0) return a;\r\n     else while (n > 0) {\r\n          a = a* n;\r\n          factorial (n-1);\r\n          }\r\n     return n;\r\n}\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n     int a = 1;\r\n     if (n == 0) return a;\r\n     else {\r\n          a = a* n;\r\n          factorial (n-1);\r\n          }\r\n}\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n     int a = 1;\r\n     if (n == 0) return a;\r\n     else if (n > 0) {\r\n          a = a* n;\r\n          factorial (n-1);\r\n          }\r\n     return n;\r\n}\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial ( int n ) {\r\n    if (n<=1) return 1 ;\r\n    else return n*factorial ( n -1 ) ;\r\n}\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n <= 9 ) return n;\n    return n*factorial(n/10);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n == 0 ) return 1;\n    return n*factorial(n--);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n == 0 ) return 1;\n    return n*factorial(--n);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n == 0 ) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n    if(n==0 or n==1) return 1;\n    else return factorial(n-1)*n;\n\n}\n\nint main(){\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n==0) return 1;\r\n\t\treturn n*factorial (n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin>>n;\r\n\tif (n==0) cout<<0<<endl;\r\n\telse if (n>0 and n<=12) cout<<factorial (n)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\n    if (n==0) return 1;\n    \n    else {\n    \n        cout << n;\n        int f=n*factorial(n-1);\n        cout << n;\n        \n        return f;\n    }\n    \n}\n\nbool par (int n){\n\n    return (n%2==0);\n    \n}\n\nint main () {\n\nint x;\n\ncin >> x;\n\ncout << factorial (x) << endl;}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if(n == 0) return 1;\n  return n*factorial(n-1);\n}\n\nint main() {\n  int n, f;\n  cin >> n;\n  f = factorial(n);\n  cout << f << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if(n == 0) return 1;\n  return n*factorial(n-1);\n}\n\nint main() {\n  int n, f;\n  cin >> n;\n  f = factorial(n);\n  cout << f << endl;\n}\n\n\n",
  "int factorial(int n) {\n    if (n<2) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n; \n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    \n    int fact=1;\n\n    if (n>1) {\n    \n    fact=n*factorial(n-1);\n    }\n    \n    return fact;\n}\n\n\nint main() {\n\n    int n1=0;\n    \n    cin >> n1;\n    cout << \"El factorial de: \" << n1 << \" es: \" << factorial(n1) << endl;\n\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int a){\n    if(a==0)return 1;\n    else return a*factorial(a-1);\n}\nint main(){\n    int a;\n    cin>> a;\n    cout<< a <<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    int total =1;\n    if (n!=1) total *=factorial(n-1);\n    return total;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int total =1;\n    if (n==0) return 1; \n    else total = n*factorial(n-1);\n    return total;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==0)return 1;\n    else return factorial(n-1)*n;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int a){\n\tif(a== 0)return 1;\n\telse return a*factorial(a-1);\n}\nint main(){\n\tint a;\n\tcin>> a;\n\tcout<< factorial(a) <<endl;\n} \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if(n == 0) return 1;\n    else total = n*factorial(n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n    int factorial (int n){\n        if (n==0) return 1;\n        return n*factorial (n-1);\n        }\nint main () {    \n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n    }\n\n    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n int factorial (int n){\r\n if (n==0){\r\nreturn 1;\r\n   }else{\r\nreturn n*factorial(n-1);\r\n}\r\n}\r\nint main (){\r\nint n;\r\ncin>>n;\r\ncout<<factorial(n)<<endl;\r\n}\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n   if (n==0) return 1; \n   else return      n*factorial(n-1);\n            \n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    factorial(n);\n    cout << factorial(n) << endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n - 1) * n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return (factorial(n - 1) * n);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n* factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) <<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   if (n == 1) return 1;\n   else return n * factorial(n-1);\n}\n\nint main (){\n\n   int n;\n   cin >> n;\n   cout << factorial(n) << endl;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   if (n == 0) return 1;\n   else return n * factorial(n-1);\n}\n\nint main (){\n\n   int n;\n   cin >> n;\n   cout << factorial(n) << endl;\n\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n==1) return 1;\r\n    else return n*factorial(n-1);\r\n    }\r\nint main(){\r\n    int x;\r\n    while (cin >> x){\r\n        cout << factorial(x) << endl;       \r\n    }\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n<=1) return 1;\r\n    else return n*factorial(n-1);\r\n    }\r\nint main(){\r\n    int x;\r\n    while (cin >> x){\r\n        cout << factorial(x) << endl;       \r\n    }\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x){\n\tif (x == 0)\treturn 1;\n\telse return factorial (x-1)*x;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    int f=0;\n    if(n==0) f=1;\n    else f=n*factorial(n-1);\n    return f;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int b=factorial(n);\n    cout << b << endl;\n}\n \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {    \n    if (n == 0) return 1;\n    else return n*factorial(n-1);    \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n == 0) return 1;\n\tint total = 1;\n\twhile (n > 1) {\n\t\ttotal = total * n;\n\t\t--n;\n\t}\n\treturn total;\n}\n\nint main() {\n\n\tint n, fact;\n\tcin >> n;\n\tfact = factorial(n);\n\tcout << fact << endl;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int i = 1;   \n        while(n > 1) {\n            i = n*i;\n            --n;\n        }\n    return i;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n     if(n == 0) return 1;\n     return factorial(n-1)*n;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0 or n == 1) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\n\nint i=1;\nint factorial(int n){\n    if(n==0){ return 0; }\n    if(n!=0){\n        i*=n;\n        factorial(n-1);\n    } else {\n        return i;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    int fact = n;\n    if (n==0) return fact = 1;\n    else return n*=factorial(n-1);\n}\n\n\n",
  "int factorial (int n){\r\n    if(n==0){\r\n        return 1;\r\n    }else{\r\n        return n*factorial(n-1);\r\n    }\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int total = 1;\n    if (n == 0) return 1;\n    else total = n*factorial(n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0){\n        return 1;\n        }\n    else {\n        return n*factorial(n-1);\n        }   \n    }\nint main (){\n    int n,e;\n    cin>>n;\n    e=factorial(n);\n    cout<<e<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0){\n        return 1;\n        }\n    else {\n        return n*factorial(n-1);\n        }   \n    }\nint main (){\n    int n,e;\n    cin>>n;\n    e=factorial(n);\n    cout<<e<<endl;\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\nif (n==0) {\n    return 1;\n}\nelse {\n    return n*factorial(n-1);\n}\n}\nint main () {\nint n;\ncin >> n ;\ncout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 0;\n    else if (n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0)return 1;\r\n    else{\r\n        return n*(factorial(n-1));\r\n    }\r\n}\r\n    \r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 0)return 1;\r\n    else return n*(factorial(n-1));\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint a;\r\n\r\nint factorial(int n){\r\n    int h;\r\n    a=n;\r\n    for(h=n-1;h>0;h--){\r\n        a=a*h;    \r\n    }\r\nreturn a;\r\n}\r\n\r\nint main(){\r\n    int d;\r\n    d=1; //Sirve para entrar dentro del bucle. Sino la pregunta se hace fuera del bucle.\r\n    while(d>=0 and d<=12){\r\n        cin>>d;\r\n        if(d!=0 and d<=12){\r\n            cout<<factorial(d)<<endl;\r\n        }\r\n        if(d==0){\r\n            cout<<\"1\"<<endl;\r\n    }\r\n}\r\n}\r\n \r\n\r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n<0) return 0;\r\n    else if(n>1) return n*factorial(n-1); //Recursividad (se llama a si misma)\r\n    return 1; //Condición de terminación, n == 1\r\n}\r\n\r\nint main(){\r\n    int x;\r\n    cin>>x;\r\n    cout<<factorial(x)<<endl;\r\n\r\nint a;\r\ncin>>a;\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n    \r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n     int suma = 1;\r\n     if ( n > 0) {\r\n           suma *= n;\r\n           --n;\r\n     int factorial(n);\r\n     }\r\n     return suma;\r\n}\r\n         \r\n         \r\n\r\n          \r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n     int suma = 1;\r\n     if ( n > 0) {\r\n           suma *= n;\r\n           --n;\r\n     int factorial(n)\r\n     }\r\n     return suma;\r\n}\r\n         \r\n         \r\n\r\n          \r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n     int suma = 1;\r\n     if ( n > 0) {\r\n           suma *= n;\r\n           --n;\r\n     factorial(n);\r\n     }\r\n     return suma;\r\n}\r\n         \r\n         \r\n\r\n          \r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\n int factorial(int n) {\r\n     int suma = 1;\r\n     while ( n > 0) {\r\n           suma *= n;\r\n           --n;\r\n     }\r\n     return suma;\r\n}\r\n         \r\n         \r\n\r\n          \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if(n == 0) return 1;\n    else total = n*factorial(n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\t\r\n\tint r;\r\n\r\n\tif (n==0) {\t\r\n\t\tr=1;\r\n }\r\n\telse {\r\n\tr= n*factorial(n-1);\r\n\t}\r\n   return r;\r\n}   \r\n   \r\n\r\nint main () {\r\n\r\nint n;\r\ncin >> n;\r\nn= factorial (n);\r\ncout << n << endl;\r\n}\r\n \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   if (n==0) //cas_Base\n   return 1;\n   else (n>=1 and n<=12);\n   n=n*factorial(n-1);\n   return n;\n   }\n\nint main(){\n   int n;\n   cin >> n;\n   cout << factorial(n) << endl;\n} \n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n   if(n < 0) return 0;\r\n   else if(n > 1) return n*factorial(n-1); /* Recursividad */\r\n   return 1; /* Condición de terminación, n == 1 */\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n}\r\n\n\n",
  "int factorial (int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\n\n",
  "int factorial(int n) {\n    if (n == 1) return 1;\n    return n*factorial(n - 1);\n}\n\n\n",
  "int factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\n\n",
  "int factorial(int n){\r\n    int aux=1;\r\n    while(n>0){\r\n        aux = aux*(n%10);\r\n        n=n/10;\r\n        }\r\n    return aux;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int f=1;\r\n    while (n>0){\r\n          f=n*f;\r\n          --n;\r\n          }\r\n    return f;\r\n    }\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n     if (n == 0) return 1;\r\n     else return n * factorial(n - 1);\r\n}\r\nint main( ) { \r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "\r\n#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    \r\n     if(n == 0)      return 1;\r\n     \r\n     return n * factorial(n-1);\r\n\r\n}\r\n\r\nint main() {\r\n    \r\n     int x;\r\n     \r\n     while(cin >> x)\r\n     \r\n     cout << factorial(x) << endl;    \r\n    \r\n    \r\n}\r\n\n\n",
  "\r\n\r\nint factorial(int n) {\r\n    \r\n     if(n == 0)      return;\r\n     \r\n     return n * factorial(n-1);\r\n    \r\n    \r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n){\r\n    if (n == 0) {\r\n          return 1;\r\n    } else {\r\n           return n * factorial(n - 1);\r\n    }\r\n}\r\n    \r\n\n\n",
  "int factorial(int n) {\n    \n    int nfac=n;\n    if n==0 n=1\n    else {\n        if n==1 return n;\n        else {\n            nfac=n*factorial(n-1);\n        }\n    }\n}\n\n\n",
  "int factorial(int n) {\n    \n    int nfac=n;\n    if n==0 n=1;\n    else {\n        if n==1 return n;\n        else {\n            nfac=n*factorial(n-1);\n        }\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return n;\n    else if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    if (n == 1) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n){\n    \n    int t=1;\n    \n    if(n!=0 and n>0){\n        \n        t=n*factorial(n-1);\n    }    \n    return t;\n    \n}\n\n\n",
  "int factorial(int n){\n    \n    int t=1\n    \n    if(n!=0 and n>0){\n        t=n*factorial(n-1)\n        return t;\n    }\n}\n\n\n",
  "int factorial(int n){\n    \n    int t=1\n    \n    if(n!=0 and n>0){\n        t=n*factorial(n-1)\n    }    \n    return t;\n    \n}\n\n\n",
  "int factorial(int n){\n    \n    int t=1\n    \n    if(n!=0 and n>0){\n        t=n*factorial(n-1);\n    }    \n    return t;\n    \n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n * factorial(n-1);\r\n}\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int m;\n    cin >> m;\n    cout << factorial(m) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n * factorial (n-1);\n    }\nint main ()  {\n    int n;\n    cin >>n;\n    cout<< factorial (n) <<endl;\n }\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n-1) * n;\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream> \r\nusing namespace std;\r\nint factorial(int n){\r\n int r=1;\r\n if (n==0){\r\n return 1;\r\n }\r\n while(n!=1){\r\n    r = r * n;\r\n    --n;\r\n    }\r\n return r;\r\n}\r\nint main() { \r\n    int f;\r\n    int r;\r\n    cin >> f; \r\n    r=factorial(f);\r\n    cout << r << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\nif (n==0) return 1;\r\nreturn n*(factorial(n-1));\r\n}\r\n\r\nint main(){\r\nint n; cin>>n;\r\ncout<<factorial(n);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==1) return 1;\n  else return n*(factorial(n-1));   \n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;   \n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0) return 1;\n  else return n*(factorial(n-1));   \n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;   \n\n}\n\n\n",
  "int factorial(int n){\r\n    if(n == 0) return 1;\r\n    return n*(factorial(n-1));\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif (n ==1) return 1;\n\telse return n*(factorial(n-1));\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif (n == 1 or n == 0) return 1;\n\treturn n*(factorial(n-1));\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    \r\n    if (n <= 1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n    \r\n    int n;\r\n    \r\n    cin >> n;\r\n    \r\n    cout << factorial(n) << endl;\r\n}\r\n    \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n    int factorial(int n){\n        if (n==0) return 1;\n        int f=n*factorial(n-1);\n        return f;\n}\n    \n    int main(){\n        int n;\n        cin>>n;\n        cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    int f;\n    if (n==0)\n        return 1;\n    else f= n+factorial(n-1);\n        return f;\n    }\n    \n        \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    int f;\n    if (n==0)\n        f=1;\n    else f= n+factorial(n-1);\n    return f;\n    }\n    \n        \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int f;\n    if (n==0) f=1;\n    else {\n        f=factorial(n-1);\n        f=f*n;\n    }\n}\n        \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    return n*factorial (n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    return n*factorial (n-1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n > 0)return n * factorial(n - 1);\r\n    else return 1;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif(n > 0) return n * factorial(n - 1);\n\t\n\treturn 1;\n}\n\t\nint main() {\n\tint n;\n\t\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n\t\n\treturn 0;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n ==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusind namespace std;\n\nint factorial(int n) {\n    int res;\n    if (n > 0) {\n        res = res*n;\n        factorial(--n);\n    }\n\n}\n\nint main() {\n    cin >> n;\n    cout << n << endl;\n}\n\n\n",
  "#include <iostream>\nusind namespace std;\n\nint factorial(int n) {\n    int res;\n    if (n > 0) {\n        res = res*n;\n        factorial(--n);\n    }\n\n}\n\nint main() {\n    cin >> n;\n    cout << n << endl;\n}\n\n\n",
  "#include <iostream>\nusind namespace std;\n\nint factorial(int n) {\n    int res;\n    if (n > 0) {\n        res = res*n;\n        factorial(--n);\n    }\n\n}\n\nint main() {\n    cin >> n;\n    cout << n << endl;\n}\n\n\n",
  "#include <iostream>\nusind namespace std;\n\nint factorial(int n) {\n    int res;\n    if (n > 0) {\n        res = res*n;\n        factorial(--n);\n    }\n\n}\n\nint main() {\n    cin >> n;\n    cout << n << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    if(n<=0) {\n        return 0;\n    }else{\n        return factorial(n);\n     }\n}\n\n   int main() {\n   int n,f=1;\n   cin>>n;\n   while(n>0) {\n       f*=n;\n       --n;\n   }\n   cout<<f<<endl;\n}   \n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n    if(n<=1) {\n    return 1;\n    }else{\n   \n\treturn n * factorial(n-1);\n    }\n}\n\n\nint main() {\n   int n;\n   cin>>n;\n   cout<<factorial(n)<<endl;\n}   \n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n    if (n <=1) return 1;\n    else return n*factorial(n-1);\n\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "int factorial (int n){\nif (n>0) {\n    int  b;\n    factorial (--n)\n    b*=n;\n    }\nreturn b;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n    if (n <=1) return 1;\n    else return n*factorial(n-1);\n\n}\n\nint main(){\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n == 0) return 1;\n    if (n == 1) return 1;\n    return n*factorial (n-1);\n} \n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\r\n    if (n == 0) return 1;\r\n    \r\n    return (n * factorial(n-1));\r\n\r\n}\r\n\r\nint main() {\r\n\r\nint n;\r\n\r\ncin >> n;\r\n\r\ncout << factorial(n);\r\n\r\n}\r\n\n\n",
  "int factorial(int n){\n    if (n == 0) return 1;\n    else retunr n*factorial(n-1);\n}\n\n\n",
  "int factorial(int n){\n    factorial(n)\n    if (n == 0) return 1;\n    else retunr n*factorial(n-1);\n}\n\n\n",
  "int factorial(int n){\n    factorial(n)\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n>=0 and n<=12){\n        for (int i=(n-1); i>0; --i){\n            n=n*i;\n        }\n    return n;\n    }\n    else return 0;\n}\n\nint main (){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n>=0 and n<=12){\n        for (int i=(n-1); i>0; --i){\n            n=n*i;\n        }\n        return n;\n    }\n    else return 0;\n}\n\nint main (){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n/*int factorial(int n){\n    //if (n>=0 and n<=12){\n        for (int i = n - 1; i > 0; --i){\n            n *= i;\n        }\n        return n;\n    //}\n    //else return 0;\n}*/\n\nint factorial (int n){\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\n\n\nint main (){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int m=1;\n    if (n==0)return 1;\n    m*=factorial(n-1);\n    return m;\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int m=n;\n    if (n==0)return 1;\n    m*=factorial(n-1);\n    return m;\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if(n==0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n) {\n\n    int f=n;\n    for(int x=n-1; x>0; --n) {\n    \n        f *=n;\n    \n    }\n\n    return f;\n\n}\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n) {\n\n    int f=n;\n    for(int x=n-1; x>0; --x) {\n    \n        f *=n;\n    \n    }\n\n    return f;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int fact = 1;\n    if (n == 0) return 1;\n    else fact *= factorial(n-1);\n    retur fact;\n}\nint main (){\n}    \n\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n) {\n\n    int f=1;\n    for(int x=n; x>0; --x) {\n    \n        f *=x;\n    \n    }\n\n    return f;\n\n}\n\nint main() {\n\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int fact;\n    if (n == 0) fact = 1;\n    else fact = n*factorial(n-1);\n    return fact;\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n    if (n == 1) return n;\n    n*=factorial(n-1);\n    return n;\n}\n\n\n\nint main (){\n    int n;\n    while (cin >> n){\n    cout << factorial (n) << endl;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n    if (n <= 1) return n;\n    n*=factorial(n-1);\n    return n;\n}\n\n\n\nint main (){\n    int n;\n    while (cin >> n){\n    cout << factorial (n) << endl;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n    if (n == 0) return 1;\n    if (n == 1) return n;\n    n*=factorial(n-1);\n    return n;\n}\n\n\n\nint main (){\n    int n;\n    while (cin >> n){\n    cout << factorial (n) << endl;\n    }\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 1) return n;\r\n    n *= factorial(n-1);\r\n    return n;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}\r\n\n\n",
  "int factorial (int n) {\n  if (n == 0) return 1;\n  else return n * factorial (n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n ==1) return n;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n ==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n    }\n    \n             \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 2) return 1; // cas base\n    return n * factorial(n-1); \n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n) {\r\n  if (n<=1) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n\n\n",
  "int factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n        if (n==0) return 1;\n        else if (n <= 2) {\n        return n;\n        }\n        else {\n        return n * factorial(n-1);\n        }\n    } \n       \n       \n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial (x) << endl;\n    \n    }\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n==0) return 1;\r\n    if (n==1) return 1;\r\n    else return (n*factorial(n-1));\r\n}\r\n\r\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int r = 1;\n    while (n>1) {\n        r = r*n;\n        --n;\n    }\n    return r;\n}\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}    \n      \n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else n = n*factorial(n-1);\n    \n    return n;\n}\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}    \n      \n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){        \n        n = n * factorial(n - 1);    \n    return n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){        \n    if (n==0) return 1;\n    else return n * factorial(n-1);\n}\nint main (){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\r\n    while (n!=1){\r\n        return n * factorial(n-1);\r\n    }\r\n    return 1;\r\n}\r\nint main() {\n    int n;\r\n    cin >> n;\n    cout << factorial(n) << endl;\r\n}\n\n\n",
  "int factorial(int n){\n    int i = n - 1;\n    while (i > 0) {\n          n *= i;\n          --i;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\n\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    int f;    \n    if (n == 0){ \n        n = 1;              \n        return n;\n    }else{\n        f =n*factorial(n-1);\n        return f;\n    }\n}\nint main(){\n        int n,f;\n        cin>>n;\n        f = factorial(n);\n        cout<<f<<endl;\n}\n\n\n",
  " int factorial(int n){\n\tif (n==0){\n\t\treturn n;\n\t}\n\tif (n>1){\n\t\treturn n * factorial(n-1);\n\t}\n\t\n}\n\t\n\n",
  " int factorial(int n){\n\tif (n==0){\n\t\treturn n;\n\t}\n\t\n\treturn n * factorial(n-1);\n\t\n\t\n}\n\t\n\n",
  " int factorial(int n){\n\tif (n==0){\n\t\treturn n;\n\t}\n\tif (n>1)\n\t\treturn n * factorial(n-1);\n\t}\n\t\n}\n\t\n\n",
  " int factorial(int n){\n\tif (n<=1){\n\t\treturn 1;\n\t}\n\telse{\n\t\treturn (n = n * factorial(n-1));\n\t}\n\t\n}\n\t\n\n",
  "int factorial(int n) {\n    int m = 1;\n    for (;n != 0; --n) {\n        m *= n;\n    }\n    return m;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n   int factorial(int n){\n   if (n==0){\n   return 1;\n   }\n   if (n!=0){\n   return n*factorial(n-1);\n   }\n}\nint main (){\nint x;\ncin >> x;\ncout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int m = 1;\n    for (;n != 0; --n) {\n        m *= n;\n    }\n    return m;\n}\n\nmain () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int res; \n    if (n==1 or n==0) res = 1;\n    else {\n    res = n * factorial(n-1);\n    }\n    return res;\n}\n    \n\nint main(){\n    int n;\n    cin >> n;\n    factorial (n);\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int x = n-1;\n    while(x>0){\n        n *= x;\n        --x;\n    }\n    return n;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    int res = 1;\n    while(n-1>0){\n        res *= n;\n        --n;\n    }\n    return res;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    int res = 1;\n    while(n>0){\n        res *= n;\n        --n;\n    }\n    return res;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    int res = 1;\n    while(n>0){\n        res *= n;\n        --n;\n    }\n    return res;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    int res = 1;\n    while(n>0){\n        res *= n;\n        --n;\n    }\n    return res;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n    }\n\nint main() {\nint n;\ncin>>n;\ncout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial (a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 0;\n    if (n == 1) return 1;\n    n = n*factorial(n-1);\n    return n;\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 0;\n    n = n*factorial(n-1);\n    return n;\n    if (n == 1) return 1;\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1 or n == 0) return 1;\n    n = n*factorial(n-1);\n    return n;\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0){\n        n=1;\n    }\n    else{\n       n=n*factorial(n-1);\n    }\n    return(n);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x)<< endl;\n}  \n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<=12 and n>0) {\n        int fact;\n        if (n==0 or n==1) fact=1; //Cas senzill\n        else {\n            fact=factorial(n-1)*n;\n        }\n        return fact;\n\n    }\n    else return n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<=12 and n>=0) {\n        int fact;\n        if (n==0 or n==1) fact=1; //Cas senzill\n        else {\n            fact=factorial(n-1)*n;\n        }\n        return fact;\n\n    }\n    else return n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n<2)return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n > 1) n *= factorial(n-1);\r\n\treturn n;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n > 0) n *= factorial(n-1);\r\n\treturn n;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n > 2) n *= factorial(n-1);\r\n\treturn n;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\tif (n > 2) n *= factorial(n-1);\r\n\treturn n;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    int sum = 1;\n    sum = n*factorial(n-1);\n    return sum;\n\n\n\n}\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 2)return n;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 2)return n;\n    else return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    if (n!=0){\n        cout << factorial(n) << endl;\n        }\n\n\n}\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n!=0){\n        if (n <= 2)return n;\n        else return n*factorial(n-1);\n        }\n}\n/*int main() {\n    int n;\n    cin >> n;\n    if (n!=0){\n        cout << factorial(n) << endl;\n        }\n\n\n}*/\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n        if(n==0) return 1;\n        if (n <= 2)return n;\n        else return n*factorial(n-1);\n        \n}\n/*int main() {\n    int n;\n    cin >> n;\n    if (n!=0){\n        cout << factorial(n) << endl;\n        }\n\n\n}*/\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int prod = n;\n    while (n > 1){\n        prod = prod * (factorial(n-1));\n    }\n    return prod;\n}\n\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial ( int n ) {\n    if ( n == 0 or n == 1 ) return 1;\n    else {\n        int p = n;\n        p = p * factorial(n-1);\n    }\n}\n    \n    \n\n\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial ( int n ) {\n    if ( n == 0 or n == 1 ) return 1;\n    else {\n        int p = n;\n        return p * factorial(n-1);\n    }\n}\n    \n    \n\n\n\n\n",
  "int factorial(int n) {\n\n    return n * factorial(n-1);\n\n}\n\n\n",
  "int factorial(int n) {\n\n    if(n > 0)\n        return n * factorial(n-1);\n    else\n        return 1;\n\n}\n\n\n",
  "int factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    int t;\r\n    return t = n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint fact2(int n){\r\n    int t;\r\n    return t = n*fact2(n-1);\r\n}\r\n\r\nint main(){\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n == 1) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n}\r\n\n\n",
  "#include <iostream>\n\n\nusing namespace std;\n\n\nint factorial (int n) {\nif ( n==0 ) return 1;\nelse return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\n\n\nusing namespace std;\n\n\nint factorial (int n) {\nif ( n==0 ) return 1\nelse return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\r\n    if(n==1 or n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main() {\n    int n;\r\n    cin >> n;\n    cout << factorial(n) << endl;\r\n}\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n <= 1) return 1;\r\n\telse return n*factorial(n-1);\r\n\t\r\n    \r\n\t\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return (factorial (n) * factorial (n));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int fact = factorial (n);\n    cout << fact << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else {\n        while (n>0) {\n            return n*factorial(n-1); \n        }\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);  \n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n=n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==1) return 1;\n    else return n=n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return  n * factorial(n - 1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f;\n    if(n==0) f=1;\n    else if(n<=12) f= n*factorial(n-1);\n    return f;\n\n    \n}\n\n\nint main(){\n    \n\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint fact(int n){\n    if(n == 0) return 1;\n    else return n * fact(n-1);\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << fact(x) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n * fact(n-1);\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << fact(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std; \nint factorial(int n) {\n    if (n == 0) return 1;\n    if (n == 1) return 1;\n    return n * factorial(n-1);\n}\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n        if (n==0)\n\t\t\treturn 1;\n\t\telse {\n\t\t\treturn n*factorial(n-1);\n        }\n}   \n\nint main () {\n    int n;\n    int r;\n    cin >>n;\n    r=factorial (n);\n    cout<< r;\n}\n\n\n",
  "# include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int n) {\r\n    int f = 1;\r\n    while ( n > 0) {\r\n          f *= n;\r\n          --n;\r\n          } return f;\r\n}\r\nint main () {\r\n    int x;\r\n    cin >> x;\r\n    int f;\r\n    f = factorial (x);\r\n    cout << f << endl;\r\n\r\nsystem (\"pause\");\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else return factorial (n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int c=n;\n    if (n == 0) return 1;\n    else c=c*factorial(n-1);\n    return c;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n//Escriu una funciÃ³ int factorial(int n) que retorni n! (((Resoleu aquest problema recursivament)))\n\nint factorial(int n){\n\tint f;//variable donde saldrÃ¡ el resultado factorial\n\tif((n==1) or (n==0)){//Caso Base\n\t\tf=1;\n\t}\n\telse{\n\t\tf= factorial(n-1)*n;\n\t}\n\treturn f;\n}\n\nint main(){\nint x;\ncin>>x;\ncout<<factorial(x)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n//programa amb una funciÃ³ que retorni n!\n\nint factorial(int n){\n\tif (n == 0) return 1;//caso base\n\telse{\n\t\treturn n*factorial(n-1);\n\t}\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\n\nint main() {\n\tint k;\n\twhile (cin >> k) {\n\t\tcout << factorial(k) << endl;\n\t}\n}\n\n\n",
  "int factorial(int n) {\n    if(n=0) return 1;\n    else  return n * factorial(n-1);\n    }\n\n\n",
  "int factorial(int n) {\n    if(n==0) return 1;\n    else  return n * factorial(n-1);\n    }\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if(n>0) {\n        return n*factorial(n-1);\n    } else {\n        return 1;\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) <<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "void gira(){\n    string mot;\n    if(cin>>mot){\n        gira();\n        cout<<mot<<endl;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n    if (n<=1) return 1;\n    else return n*fact(n-1);\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout << fact(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==1) return 1;\n\tn *= factorial(n-1);\n\treturn n;\n}\n\nint main() {\n\tint n;\n\n\twhile (cin>>n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n<1) return 1;\n\tn *= factorial(n-1);\n\treturn n;\n}\n\nint main() {\n\tint n;\n\n\twhile (cin>>n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n ) {\n    int f;\n    if ( n == 0 )f=1;\n    else {\n        f= n * factorial(n-1);\n    }\n    return f;\n}\n    \nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int f ;\r\n    if ( n < 2)f = 1;\r\n    else f = n* factorial(n-1);\r\n    return f;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n==0) return 1;\n    else return (n*factorial(n-1));\n}\nint main() {\n    int a;\n    cin >> a;\n    factorial(a);\n    cout << a << endl;\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int x){\r\n\t\r\n\tint r;\r\n\t\r\n\tif (x==0){\r\n\t\tr=1;\r\n\t}\r\n\t\r\n\telse{\r\n\t\tr=x*factorial(x-1);\r\n\t}\r\n\t\r\n\treturn r;\r\n\r\n}\r\n\r\nint main (){\r\n\t\r\n\tint x;\r\n\tcin>>x;\r\n\tcout << factorial(x) << endl;\r\n\t}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1); \n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\t\n\treturn n *= factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return factorial (n-1)*n;\n    }\n\nint main(){\n    int n,s;\n    cin>>n;\n    s=factorial(n);\n    cout<<s<<endl;\n    }\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    int cont=1,s=1;\r\n    while(n>=cont){\r\n        s= cont*s; \r\n        ++cont;\r\n    }   \r\n    return s;\r\n     \r\n    \r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n  \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    }\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    int cont=1,s=1;\r\n    while(n>=cont){\r\n        s= cont*s; \r\n        ++cont;\r\n    }   \r\n    return s;\r\n     \r\n    \r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n  \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    }\r\n\n\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else n= n*factorial(n-1);\n    return n;\n}\n\nint main(){\n    int n;\n    cin>>n;\n    int s=factorial(n);\n    cout << s << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n>0 and n<=12){\n\t\t\tn=n*n-1;\n\t\t\tfactorial (n-1);\n\t}\n\telse return 1;\n\treturn n;\n}\n\nint main () {\n\n\tint n;\n\tcin >>n;\n\tfactorial (n);\n\tcout <<n <<endl;\n}\n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n!=0 and n<=12){\n\t\t\tn=n*n-1;\n\t\t\tfactorial (n-1);\n\t}\n\telse return 1;\n\treturn n;\n}\n\nint main(){\n\tint n;\n\tcin >>n;\n\tcout <<factorial (n) <<endl;\n}\n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tint c;\n\tif (n==0) return 1;\n\telse{\n\t\tc=n*factorial (n-1);\n\t\treturn c;\n\t}\n}\n\n\nint main(){\n\tint n;\n\tcin >>n;\n\tcout <<factorial (n) <<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n)\r\n{\r\n\tint p=n;\r\n\t\tif (n==0) p=1;\r\n\t\telse\r\n\t\tp=factorial (n-1) *p;\r\n\t\t\r\nreturn p;\r\n}\r\nint main ()\r\n{\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\t\t\r\n}\n\n",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint factorial(int n){\n    while (n>0) {\n        n= n* factorial(n-1);\n        \n    }\nreturn n;\n\n}\n\n\n",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint factorial(int n){\n    if( n == 1 ) return 1;\n    return n* factorial(n-1);\n}     \n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n\n\n",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint factorial(int n){\n    if( n == 1 or n == 0) return 1;\n    return n* factorial(n-1);\n}     \n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif (n==0) return 1;\n\telse return n*factorial (n-i);\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int );\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\nint factorial(int n)\r\n{\r\n    if (n<1) n=1;\r\n    int a = n-1;\r\n    if (n>=2) n = n * factorial(a);\r\n    return n;\r\n};\r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    }\n    \nint main(){\n    int z;\n    cin >> z;\n    cout << factorial(z) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n>=1) return factorial(n-1);\n}\n\nint main() {\n    bool mj,mn;\n    mj=mn=false;\n    string s, maj, min;\n    while(cin >> s and not( mj and mn)){\n        if(s[0]>='a' and s[0]<='z' and not mn){\n            mn=true;\n            min=s;\n        }\n        else{\n            if(not mj){\n                mj=true;\n                maj=s;\n            }\n        }\n    }\n    if(not mj)cout << \"No hi ha cap paraula que comenci amb majuscula.\";\n    else cout << maj;\n    cout << endl;\n    if(not mn) cout << \"No hi ha cap paraula que comenci amb minuscula.\";\n    else cout << min;\n    cout << endl;\n}\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n>=1) return fact(n-1);\n}\n\nint main() {\n    bool mj,mn;\n    mj=mn=false;\n    string s, maj, min;\n    while(cin >> s and not( mj and mn)){\n        if(s[0]>='a' and s[0]<='z' and not mn){\n            mn=true;\n            min=s;\n        }\n        else{\n            if(not mj){\n                mj=true;\n                maj=s;\n            }\n        }\n    }\n    if(not mj)cout << \"No hi ha cap paraula que comenci amb majuscula.\";\n    else cout << maj;\n    cout << endl;\n    if(not mn) cout << \"No hi ha cap paraula que comenci amb minuscula.\";\n    else cout << min;\n    cout << endl;\n}\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n>=1) return factorial(n-1);\n    return n;\n}\n\nint main() {\n    bool mj,mn;\n    mj=mn=false;\n    string s, maj, min;\n    while(cin >> s and not( mj and mn)){\n        if(s[0]>='a' and s[0]<='z' and not mn){\n            mn=true;\n            min=s;\n        }\n        else{\n            if(not mj){\n                mj=true;\n                maj=s;\n            }\n        }\n    }\n    if(not mj)cout << \"No hi ha cap paraula que comenci amb majuscula.\";\n    else cout << maj;\n    cout << endl;\n    if(not mn) cout << \"No hi ha cap paraula que comenci amb minuscula.\";\n    else cout << min;\n    cout << endl;\n}\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n>1) return n*factorial(n-1);\n    return n;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n>1) return n*factorial(n-1);\n    return n;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    int y=factorial(x);\n    if(y==0) cout << '1' << endl;\n    else cout << y << endl;\n}\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    if(n>1) return n*factorial(n-1);\n    return n;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    int y=factorial(x);\n    if(y==0) cout << '1' << endl;\n    else cout << y << endl;\n}\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) rentun 1;\n    if(n>1) return n*factorial(n-1);\n    return n;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    int y=factorial(x);\n    if(y==0) cout << '1' << endl;\n    else cout << y << endl;\n}\n\n\n\n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int f = 1;\n    while (n > 1) {\n        f *= n;\n        --n;\n    }\n    return f;    \n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int x){\nif (x==0){return 1;\n}else{\n      return x*factorial(x-1);}\n      }\nint main() {\nint num;\ncin>>num;\nint res=factorial(num);\ncout<<res<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint fact(int x){\nif (x==0){return 1;\n}else{\n      return x*fact(x-1);}\n      }\nint main() {\nint num;\ncin>>num;\nint factorial=fact(num);\ncout<<factorial<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint fact(int x){\nif (x==0){return 1;\n}else{\n      return x*fact(x-1);}\n      }\nint main() {\nint num;\ncin>>num;\nint factorial=fact(num);\ncout<<factorial<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint fact(int x){\nif (x==0){return 1;\n}else{\n      return x*fact(x-1);}\n      }\nint main() {\nint num;\ncin>>num;\nint res=fact(num);\ncout<<res<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int aux = 1; \n    if (n==0) return aux;\n    else if (n == 1) return aux;\n    else \n        aux = aux * n;\n        factorial (n-1);\n    return 0;\n}\n\nint main () {\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n * factorial (n-1);\n        \n}\n\nint main () {\n    int n;\n    cin >> n;\n    int fac= factorial(n);\n    cout<<fac<<endl;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n * factorial (n-1);\n        \n}\n\nint main () {\n    int n;\n    cin >> n;\n    int fac= factorial(n);\n    cout<<fac<<endl;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n == 0 ) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n){\n\tif (n<=1){\n\treturn 1;\n\t}\n\telse {\n\treturn n * factorial (n-1);\n\t}\n}\n\n\n",
  "int fact (int x){\n\tif (x<=1){\n\treturn 1;\n\t}\n\telse {\n\treturn x * fact (x-1);\n\t}\n}\n\n\n",
  "int fact (int n){\n\tif (n<=1){\n\treturn 1;\n\t}\n\telse {\n\treturn n * fact (n-1);\n\t}\n}\n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n > 0) return n*factorial(n-1);\n    else return 1;\n\n\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\t--n;\n\tif (n != 0) return factorial(n-1)*n;\n\treturn 1;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout <<\tfactorial(n) << endl;\n\n}\n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint recursiu(int x) {\n\t--x;\n\tif (x != 0) return recursiu(x)*x;\n\treturn 1;\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout <<\trecursiu(x) << endl;\n\n}\n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n != 0) return factorial(n-1)*n;\n\treturn 1;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout <<\tfactorial(n) << endl;\n\n}\n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    int m = n;\n    m *= factorial (n - 1);\n    return m;\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial (n-1);\n}\nint main() {\n    int x;\n    cin >> x;\n    if (x == 0) {\n        cout << x << \"!\" << \" = \" << 1 << endl;\n    }\n    if (0 < x and x <= 12) {\n        cout << x << \"!\" << \" = \" << x*factorial (x-1) << endl;\n    }\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int a) {\n    if (a == 0) return 1;\n    return a*factorial(a-1);\n}\n  \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint x;//para que no se queje al compilar\nif (n>1){\n    x=n*factorial(n-1);    \n    }\n    else{\n    return 1;\n    }\nreturn x;\n}\n\nint main(){\nint x;\ncin >> x;\nint res=factorial(x);\ncout << res << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int p;\n    \n    if (n<=1) return 1;\n    \n    p=n*factorial(n-1);\n    return p;\n}\n\nint main() {\n    int p;\n    cin >> p;\n    \n    cout << factorial(p) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int fact = 1;\n        while (n > 0){\n            fact*=n;\n            --n;\n        }\n        return fact;\n}\n    \n\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial (n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n if (n==0) return 1;\n else return n*factorial(n-1);\n}\n\n\nint main(){\nint n;\n\n cin >> n;\n\n cout << factorial (n) << endl;\n\n}\n\n\n\n\n\n",
  "#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\nint aux=1;\r\nwhile (n>0) {\r\naux=aux*n;\r\nn=n-1;\r\nfactorial(n);\r\n}\r\nreturn aux;\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n     if (n==0) {\n     n=1;\n     return n;\n     }\n     \n     else {\n      int i=n;\n     while (i>1) {\n            i=i-1;\n            n=n*i;\n     }\n     return n;\n     }\n}     \n\n\nint main () {\n    int n;\n    cin>>n;      \n    int resultat=factorial(n);\n    cout<<resultat<<endl;\n    }           \n           \n           \n          \n           \n     \n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int fact1=factorial(n);\n    cout << fact1 << endl;\n}\n\n\n",
  "int factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial (n-1) ;\n}\n\n\n",
  "int mcd (int a, int b) {\n    if (b!=0) {\n    int r=a%b;\n    a=b;\n    b=r;\n    return mcd(a,b);\n    }\n    else return a;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else return n * factorial (n - 1);\n    \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n<2){\n        n = 1;\n    }else{\n        n = n*factorial(n-1);\n    }\n    return n;\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n        \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n!=0){\n        n=n*factorial(n-1);\n    }else n=1;\n    return n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else retrun n * factorial(n-1);\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int i = 0;\n    int f = 1;\n    if (0 <= n <= 12){\n        while (i < n){\n            ++i;\n            f = f*i;\n        }\n    }\n    return f;\n}\n\nint main (){\n    int numero;\n    cin >> numero;\n    cout << factorial (numero) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n   if(n < 0) return 0;\n   else if (n>1) return n*factorial(n-1);\n   return 1;\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint x = 1;    \n    while (n > 0){\n    x *= n;\n    n--;\n    }\nreturn x;\n}\n\nint main(){\nint a;\ncin >> a;\ncout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\nint r;\n\n\tif (n == 0) r = 1;\n\telse {r = factorial(n-1)*n;}\n\treturn r; \n}\n\nint main(){\n\nint n;\ncin >> n;\n\nint c = factorial (n);\n\ncout << c << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int x) {\n\n\tif (x == 0) return 1;\n\telse return factorial(x-1)* x;\n}\n\nint main () {\n\nint x;\n\ncin >> x;\n\ncout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int );\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\nint factorial(int n)\r\n{\r\n    int a = n-1;\r\n    if (n>=2) n = n * factorial(a);\r\n    return n;\r\n};\r\n\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n){\r\nif(n==0) return 1;\r\nreturn n*factorial(n-1);\r\n\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\r\n\t\r\n\r\n\tif(n==0){\r\n\t\treturn 1;\r\n\t}\r\n\telse{\r\n\t\treturn n*factorial(n-1)\r\n\t}\r\n   \r\n}\r\nint main(){\r\n\r\n\tint n;\r\n\tint fact;\r\n\tcin>>n;\r\n\t\r\n\tfact=factorial(n);\r\n    cout<<fact<<endl;\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\r\n\t\r\n\r\n\tif(n==0){\r\n\t\treturn 1;\r\n\t}\r\n\telse{\r\n\t\treturn n*factorial(n-1)\r\n\t}\r\n   \r\n}\r\nint main(){\r\n\r\n\tint n;\r\n\tint fact;\r\n\tcin>>n;\r\n\t\r\n\tfact=factorial(n);\r\n    cout<<fact<<endl;\r\n}\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\n           \n           if(n==0)return 1;\n           return n*factorial(n-1);\n           }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0)return 1;\n    else if(n == 1)return 1;\n    else    return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int c;\n    cin >> c;\n    cout << factorial(c);\n}\n\n\n",
  "// factorial recursiu\n#include <iostream>\nusing namespace std;\n    int factorial (int n) {\n        if (n<=1) {\n            return 1;\n            }else{\n            return n*factorial(n-1);\n            }\n            }\n    int main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n    }\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n>1) n=n*factorial(n-1);\n    return n;\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial (x) << endl;\n}\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else{\n        if(n>1) n=n*factorial(n-1);\n        return n;\n    }\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial (x) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\nint res;\nif(n<=1){\nres=1;\n}\nelse{\nres=n*factorial(n-1);\n}\nreturn res;\n}\nint main(){\nint a;\nint fact;\ncin>>a;\nfact= factorial(a);\ncout<<fact;\ncout<<endl;\n}\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\nint res;\r\nif(n<=1){\r\nres=1;\r\n}\r\nelse{\r\nres=n*factorial(n-1);\r\n}\r\nreturn res;\r\n}\r\nint main(){\r\nint a;\r\nint fact;\r\ncin>>a;\r\nfact= factorial(a);\r\ncout<<fact;\r\ncout<<endl;\r\n}\r\n\r\n\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 1 or n == 0) return 1;\r\n    else return ( n * factorial (n-1) );\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n    }\r\nint main(){\r\n    int n;\r\n    cin >>n;\r\n    cout << factorial(n) << endl;\r\n#ifndef _JUTGE_\r\n        system(\"pause\");\r\n    #endif\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){        \n    if (n==0) return 1;\n    else return n * factorial(n-1);\n}\nint main (){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\nif (n == 0) return 1;\nelse return n*factorial(n-1);\n}\nint main () {\n}\n\n\n",
  "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact;\n    for(int x=1; x<=n; ++x){\n        fact=fact*x;\n    }\n    return fact;\n}\n\n\nint main(){\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact=0;\n    for(int x=1; x<=n; ++x){\n        fact=fact*x;\n    }\n    return fact;\n}\n\n\nint main(){\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact=1;\n    for(; n>1; --n){\n        fact=fact*n;\n    }\n    return fact;\n}\n\n\nint main(){\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int b;\n    if (n == 0){\n        return 1;\n    }\n    else\n    return n*factorial(n-1);\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n == 0){\n        return 1;\n    }\n    else\n    return n*factorial(n-1);\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n==0 or n==1) return 1;\r\n    else return n*factorial (n-1);\r\n}\r\n\r\nint main (){\r\n    int v;\r\n    cin>>v;\r\n    cout<<factorial(v)<<endl;\r\n    \r\n    int g;\r\n    cin>>g;\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint fact (int n){\n\tif (n==0){\n\t\treturn 1;}\n\telse {return n*fact(n-1);}}\nint main (){\nint n;\ncin>>n;\ncout<<fact(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint fact (int n){\n\tif (n==0){\n\t\treturn 1;}\n\telse {return n*fact(n-1);}}\nint main (){\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n\tif (n==0){\n\t\treturn 1;}\n\telse {return n*fact(n-1);}}\nint main (){\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    int aux, r = 1;\n    aux = n;\n\n    while (aux >= 1) {\n        r = r*aux;\n        aux = aux - 1;\n    }\n    return r;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n     if (n <= 0) return 1;\r\n     else return n*factorial(n-1);\r\n}\r\nint main (){\r\n\r\n     int n;\r\n     cin >> n;\r\n     cout << factorial(n) << endl;\r\n     system (\"PAUSE\");\r\n}        \r\n\n\n",
  "#include <iostream>\r\n#include <string>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n > 0)return n * factorial(n-1);\r\n    else return 1;\r\n}\r\n\r\n    \r\n\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n    \r\n#ifndef _JUTGE_\r\nsystem(\"PAUSE\");\r\n#endif\r\n} \r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int b;\n    if (n == 0){\n        b=1;\n    }\n    else{\n        b=n;\n        while (b>1){\n            --b;\n            factorial(n)=n*factorial(b);\n        }\n    }\n    return factorial(n);\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\n    if (n==0) return 1;\n    \n    return n*factorial(n-1);\n        }\n        \n    \nint main () {\n\n    int n;\n    cin>>n;\n    \n    cout<<factorial(n)<<endl;\n    \n\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    return n*factorial(n/10);\n}\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\n int factorialNoFinal(int num); \r\n int factorialFinal(int num,int fact);\r\n \r\n int factorialNoFinal(int num)  // recursividad no final\r\n { // Pre: Verdadero\r\n        int fact;\r\n        \r\n        if (num==0)     // Caso que 'num' valga 0\r\n                fact = 0;\r\n        else {  // resto de casos de 1 hasta N\r\n                if (num==1)\r\n                        fact = 1;\r\n                else\r\n                        fact = factorialNoFinal(num-1)*num;\r\n        }               // a medida que vamos volviendos de las llamadas\r\n                        // recursivas, vamos calculando el factorial    \r\n        return (fact);\r\n        \r\n // Post: fact = Producto x:1..num:x\r\n //   fact tendra como valor el producto entre los numeros\r\n //   existentes entre 1 i 'num'\r\n }\r\n \r\n int factorialFinal(int num, int fact)  // recursividad final\r\n { // Pre: Verdadero\r\n        \r\n        if (num==0)     // Caso concreto que 'num' valga 0\r\n                fact = 0;\r\n        else {  // resto de casos de 1 hasta N\r\n                if (num==1)\r\n                        fact = 1*fact;\r\n                else\r\n                        fact = factorialFinal(num-1,fact*num);\r\n        }       // cuando volvemos de las llamadas recursivas,\r\n                // ya tenemos calculado el factorial\r\n        return (fact);\r\n        \r\n // Post: fact = Producto x:1..num:x\r\n //   fact tendra como valor el producto entre los numeros\r\n //   existentes entre 1 i 'num'\r\n }\r\n \r\n void main()\r\n {\r\n        int solucioFinal,solucioNoFinal,num;\r\n        \r\n        cout << endl << \"Introduce un numero: \" << endl;\r\n        cin >> num;\r\n        cout << endl;\r\n        \r\n        solucioFinal = factorialFinal(num,1);\r\n        solucioNoFinal = factorialNoFinal(num);\r\n        \r\n        cout << \"El factorial de \" << num << \" es: \" << endl << endl;\r\n        cout << \"               \" << \"Recursividad Final: \" << solucioFinal << endl;\r\n        cout << \"               \" << \"Recursividad No Final: \" << solucioNoFinal << endl;\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n <= 1) return 1\n    else return n * factorial(n-1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n   int factorial(int n)\r\n   {\r\n       int cosa=1;\r\n       while(n>0)\r\n       {\r\n                cosa*=n;\r\n                n--;}\r\n                }\r\n\n\n",
  "/*#include <iostream>\nusing namespace std;*/\n\nint fact(int n){\n  if (n>=1){\n  return 1;\n  }\n  else{\n  return (n*fact(n-1));\n  }\n}\n\n/*int main() {\n  \n  while (cin >>n){\n    cout << \"fact(\" << n << \") =\" << fact(n) << endl;\n  \n }*/\n\n\n",
  "/*#include <iostream>\nusing namespace std;*/\n\nint fact(int n){\n  if (n>=1){\n  return '1';\n  }\n  else{\n  return (n*fact(n-1));\n  }\n}\n\n/*int main() {\n  \n  while (cin >>n){\n    cout << \"fact(\" << n << \") =\" << fact(n) << endl;\n  \n }*/\n\n\n",
  "/*#include <iostream>\nusing namespace std;*/\n\nint fact(int n){\n  if (n<=1){\n  return 1;\n  }\n  else{\n  return (n*fact(n-1));\n  }\n}\n\n/*int main() {\n  \n  while (cin >>n){\n    cout << \"fact(\" << n << \") =\" << fact(n) << endl;\n  \n }*/\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n \r\n    if(n <= 1) return 1;\r\n    else return n*factorial(n-1);\r\n    \r\n}\r\n\r\nint main(){\r\n\r\n    int n;\r\n    cin >> n;\r\n    if(n >= 0 and n <= 12) cout << factorial(n) << endl;\r\n    else cout << \"No existeix\" << endl;\r\n    \r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n   if (n == 0) return 1;\r\n   else return n * factorial(n-1);\r\n}\r\n\r\nint main (){\r\n\r\n   int n;\r\n   cin >> n;\r\n   cout << factorial(n) << endl;\r\n\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int total = 1;\r\n    if (n != 1) total *= factorial(n-1);\r\n    return total;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "int factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1)\n    }\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int x) {\n    \n    if (x == 0 or x == 1) return 1;\n    return x*factorial(x - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n<=1){return 1; }\r\n    else {return n*factorial (n-1); }\r\n}\r\nint main (){\r\nint x;\r\ncin>>x;\r\ncout<<factorial(x)<<endl;\r\n#ifndef _JUTGE_\r\n        system(\"pause\");\r\n    #endif\r\n}\r\n\n\n",
  "// Factorial recursivo de n\n\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n   \n    if ( n == 0) return 1;\n    else return n * factorial(n - 1); \n}\n\nint main() {\n    \n    int n;\n    \n    cin >> n;\n \n    cout << factorial(n) << endl;\n\n}\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << \"El factorial de \" << x << \" es \" << factorial(x) << endl;\n}\n\n\n",
  "using namespace std;\nint factorial (int p) {\n    if (p == 0) \n        return 1;\n    int f = p;\n    for (int i=1; i <= p-1; ++i) f=f*i;\n    return f;\n}\nint main () {\n   int b;\n   cin >> b;\n   int a = factorial (b);\n   cout << a << endl;\n  \n}\n\n",
  "using namespace std;\nint factorial (int p) {\n    if (p == 0) \n        return 1;\n    int f = p;\n    for (int i=1; i <= p-1; ++i) f=f*i;\n    return f;\n}\nint main () {\n   int b;\n   cin >> b;\n   int a = factorial (b);\n   cout << a << endl;\n  \n}\n\n",
  "using namespace std;\nint factorial (int p) {\n    \tif (p == 0) return 1;\n\telse return p*factorial (n-1);S\n}\nint main () {\n   int b;\n   cin >> b;\n   int a = factorial (b);\n   cout << a << endl;\n  \n}\t\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n   if (n == 0) return 1;\r\n   else  total= n * factorial(n-1)\r\n   return total;\r\n}\r\n\r\nint main (){\r\n\r\n   int n;\r\n   cin >> n;\r\n   cout << factorial(n) << endl;\r\n\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return factorial(n-1);    \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> c) {\r\n        cout << factorial(n) << endl << endl;   \r\n    }    \r\n}\r\n\n\n",
  "/*#include <iostream>\nusing namespace std;*/\n\nint factorial(int n){\n\n  if (n==0)return 0;\n  \n  else return (n*factorial(n-1));\n  \n}\n\n/*int main() {\n  \n  while (cin >>n){\n    cout << \"fact(\" << n << \") =\" << fact(n) << endl;\n  \n }*/\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n==0) return 1;\n    else {\n        int s=n*factorial(n-1);\n        return s;\n    }\n}\nint main() {\nint n;\ncin >> n;\nint s=factorial(n);\ncout << s << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int c;\n    if (n==0) return 1;\n    else{\n        c=n*(factorial(n-1));\n        return c;\n    }\n}\n\nint main(){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int c;\n    if (n == 0) return 1;\n    else{\n        c = n*(factorial(n-1));\n        return c;\n    }\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n       else if (n == 1) return n;\n       else return n*factorial(n-1);\n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a) << endl;\r\n}\r\n\n\n",
  "// factorial recursivo\n\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    factorial(n);\n\n}\n\n\n/*\n\n,__6__,\n-----------------\nfact(3)\nn=3\nn*,_2_,\n------------------\nfact (2)\nn=2\nn*,_1__,\n------------------\nfact(1)\nn=1\n1\n*/\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if(n <= 1) return 1;\n    else return n*factorial(n-1);\n    \n}\nint main() {\n    int a;\n    cin >> a;\n    int f = factorial(a);\n    cout << f;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n    \n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif(n > 0) return n * factorial(n - 1);\n\t\n\treturn 1;\n}\n\t\nint main() {\n\tint n;\n\t\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n\t\n\treturn 0;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    \n    return n * factorial(n - 1);\n}\n\nint main() {\n}\n        \n        \n        \n        \n    \n    \n        \n        \n        \n        \n     \n                \n    \n    \n            \n        \n\n\n",
  "# include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\nif (n==0) return 1;\nreturn n*factorial (n-1);\n}\n\n\nint main (){\nint n;\nwhile (cin >> n) cout << factorial(n) << endl;\n\n}\n\n\n\n\n\n",
  "int factorial(int n) {\n    if(n > 1) return n*factorial(n-1);\n    else return n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial_rec (int n) {\n    if (n == 0) return 1;\n       else return n*factorial_rec(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial_rec (int n) {\n    if (n == 0) return 1;\n       else if (n == 1) return n;\n       else return n*factorial_rec(n-1);\n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial_rec(n) << endl;\n}\n\n\n",
  "int factorial(int n) {\n    if(n == 0) return 1;\n    if(n > 1) return n*factorial(n-1);\n    else return n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial( int n ){\n\n    if ( n == 0 ) return 1;\n    else return n * factorial( n -1 );\n}\n\n\nint main () {\n\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\nif(n==0){\nreturn 1;\n}\nelse {\nreturn n*factorial(n-1);\n}\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n   if (n==0) return 1;\n   else return n*factorial(n-1);\n}\nint main() {\n   int n;\n   cin>>n;\n   cout<<n<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==1) return 1;\n    else{\n        return (n*factorial(n-1));\n        }\n    }\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==1 or n==0) return 1;\n    else{\n        return (n*factorial(n-1));\n        }\n    }\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n<=1) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n    \r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n    \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int o = 1;\r\n    for (int i = n; i > 0; --i){\r\n    o = o*i;\r\n    }\r\n    return o;\r\n} \r\n               \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n}\n        \n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\nif (n==0) return 1;\r\nreturn n * factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while (cin >> n) cout << factorial (n)  << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std ;\n\nint factorial (int n ){\nn >= 0  , n <= 12 ;\nif (0 == 1) \nreturn 1 ;\nelse\nreturn  n * factorial (n-1) ;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\nif(n==0){\nreturn 1;\n}\nelse {\nreturn n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\nint total = 1;\nwhile (n > 0){\n    total *= n;\n    --n;\n    }\nreturn total;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n      int factorial (int n) {\r\n          if (0<=n<=12) {\r\n             if (n<=1) {\r\n                return 1;\r\n                }else{\r\n                return n*factorial(n-1);\r\n                }\r\n             }\r\n          }\r\n      \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) n = 1;\r\n    else n = n * factorial(n-1);\r\n    return n;\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    while (cin >> n) {\r\n          cout << factorial(n) << endl;\r\n    }\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main () {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0)\n    return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std \n\nint factorial (int n){\n\nif (0n ==1) \nreturn 1 ;\nelse\nreturn  n * factorial (n-1) ;\n}\n\n\n",
  "#include <iostream>\nusing namespace std ;\n\nint factorial (int n ){\nn => 0  , n =< 12 ;\nif (0 == 1) \nreturn 1 ;\nelse\nreturn  n * factorial (n-1) ;\n}\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return factorial(n-1) * n;    \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;   \r\n    }    \r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*(factorial(n-1));\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) <<endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact;\n    if (n == 0) return 1;\n    else fact = n*factorial(n - 1);\n    return fact;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}      \n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0){\n        return 1;\n    }else{\n        return n*factorial(n-1);\n    }\n    }\n\nint main(){\n    int x=3;\n    cout<<factorial(x)<<endl;\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n\n\n    int factorial(int n){\nif (n==0) return 1;\nelse return n*factorial (n-1);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\nint main() {\n\n\n\n    int factorial(int n){\nif (n==0) return 1;\nelse return n*factorial (n-1);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n\n\n    int factorial(int n){\nif (n==0) return 1;\nelse return n*factorial (n-1);\n}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nwhile (n > 0){\nreturn n*factorial(n-1);\n}\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nwhile (n > 0){\nreturn n*factorial(n-1);\n}\nif (n = 0){ return 1;}\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nwhile (n > 0){\nreturn n*factorial(n-1);\n}\nif n = 0 return 1;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n > 0){ return n * factorial(n - 1);\n}else{ return 1;\n}\n}\nint main(){\nint n;\ncin>>n;\n\ncout<<factorial(n)<<endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n > 0)return n * factorial(n-1);\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "int factorial(int n){\r\n    if (n==0)\r\n        return 1;\r\n    else\r\n        return factorial(n-1)*n;  \r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if(n==0) return 1;\n    return n*factorial (n-1);\n    }\nint main(){\n    int n,s;\n    cin>>n;\n    while(n>=0 or n<=12){\n    s=factorial(n);\n    }\n    cout<<s<<endl;\n    \n}\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*(factorial (n - 1));\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n}\r\n\r\n\n\n",
  "int factorial (int n) {\n    if (n == 0) return 1;\n    return n*factorial (n - 1);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n*factorial (n - 1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n>0){\r\n       return n*factorial(n-1);\r\n    }\r\n    else return 1;\r\n}\r\n\r\nint main(){\r\nint n;\r\ncin >> n;\r\ncout << factorial(n)<<endl;\r\n\r\nint j;\r\ncin>>j;\r\n\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        n = 1;\n    }\n    else{\n        n = n * factorial(n - 1);\n    }\n    return n;\n}\n    \nint main() {\n    int numero;\n    cin>>numero;\n    cout <<factorial(numero) << endl;\n}\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0)return  1;\n    return(n*factorial(n-1));\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}    \n\nint main(){\n    \n    int n;\n    cin>>n;\n    n=factorial(n);\n    cout<<n<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int m;\n    cin>>m;\n    m=factorial(m);\n    cout<<m<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n==1) return 1;\r\n    int total = n * factorial(n-1);\r\n    return total;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n==1) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n==0) return 1;\r\n    else if (n > 0) return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    int x;\r\n    if (n==0) x = 1;\r\n    else if (n > 0) x = n * factorial(n-1);\r\n    return x;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else if (n > 0) return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\n    int fact = 1;\n    \n    while (n>=1) {\n        fact = fact * factorial (n-1);\n    \n    }\n    return fact;\n    \n    }\n \nint main() {\n\nint n;\n\ncin >> n;\n\ncout << factorial(n) << endl;\n\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\nint fact;\n\n    if (n==0) {\n        return 1;\n    }\n    \n\n    fact = n * factorial(n-1);\n    return fact;\n\n\n     \n     \n     \n    \n}\n \nint main() {\n\nint n;\n\ncin >> n;\n\ncout << factorial(n) << endl;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n = n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0)\n        return 1;\n    else\n        return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    if (n>=0 and n<=12)\n        cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n) {\n    if (n==0) return 1;\n    else return n*(factorial(n-1));\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if ( n == 0 ) return 1;\n    return n*factorial(n - 1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial( n ) << endl;\n}\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n){\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\nif (n==0) return 1;\nelse return n*factorial(n-1);\n}\n\nint main(){\nint n;\ncin>>n;\n\ncout << factorial(n) << endl;\n\n\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return (n*factorial(n-1));\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout << factorial(n)<< endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin>>n;\n    int resultat=factorial(n);\n    cout<<resultat<<endl;\n}\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1)\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n){\r\n    if (n == 0) return 1;\r\n    return n*fact(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n   int r;\n   if (n==0) return r=1;\n   return r=n*factorial(n-1);\n }\n \n int main() {\n    int a;\n    cin >> a;\n    cout << factorial(a)<< endl;    \n }\n \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint s=1;\n\tint c=1;\n\twhile (c <= n) {\n\t\ts = s * c;\n\t\t++c;\n\t}\n\treturn s;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);   \n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);   \n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {  \n    //Pre: n està comprés entre 0 i 12, ambós inclosos.\n    //Post: la funció retorna n!.\n    int fact = n;\n    if (n == 0) fact = 1;\n    else fact *= factorial(n - 1);\n    return fact;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else if (n > 1) return n = n * factorial(n-1);\n    return n;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    if (x >= 0 and x <= 12) cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0 or n==1)\n   return 1;\n   \n  else return n*factorial(n-1);     \n}\n\nint main(){\n   int num;\n   cin>>num;\n   cout<<factorial(num)<<endl;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    return n * factorial (n-1);\n}\n    \nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n>1) n=n*factorial(n-1);\r\n  return n;\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n>1)\r\n    n=n*factorial(n-1);\r\n    return n;\r\n}\r\n\r\nint main(){\r\n  int x;\r\n  cin >> x;\r\n  x=factorial(x);\r\n  cout << x << endl;\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0) return 1;\r\n    else{\r\n    n=n*factorial(n-1);\r\n    return n;\r\n    }\r\n}\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==1)  return n;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1)  return n;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1)  return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\nif ((n==1) or (n==0)) {\nreturn 1;\n}\nelse {\n\treturn (n* fact(n-1));\n\t}\n}\n\n\n\nint main () {\nint n;\ncin >> n;\n\tcout << fact(n)  << endl;\n}\n \n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint s=1;\n\tfor (int i = 1; i <= n; ++i){\n\t\ts = s * n;\n\t\t--n;\n\t}\n\treturn s;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nif ((n==1) or (n==0)) {\nreturn 1;\n}\nelse {\n\treturn (n* factorial(n-1));\n\t}\n}\n\n\n\nint main () {\nint n;\ncin >> n;\n\tcout << factorial(n)  << endl;\n}\n \n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==1) return 1;\n\treturn n*(factorial (n-1)) ;\n}\n\n\nint main() {\n\t\nint n ;\ncin >> n ;\ncout << factorial (n) << endl;\n\t\t\n\t\n}\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\t\n\tint aux;\n\n\tint fact;\n\n\tif (n==0){\n\t\n\t\tint zero=1;\n\t\t\n\t\treturn zero;\t\n\n\t}\n\t\n\telse if (n>0){\n\n\t\tfact=factorial(n-1);\n\t\t\n\t\taux=fact*n;\n\t}\n\n\telse aux=0;\n\n\treturn aux;\n\t\n}\n\t\nint main(){\n\t\n\tint n;\n\t\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n\t\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0 or n==1) return 1;\n\treturn n*(factorial (n-1)) ;\n}\n\n\nint main() {\n\t\nint n ;\ncin >> n ;\ncout << factorial (n) << endl;\n\t\t\n\t\n}\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n    if (n==1) return 1;\n    else return factorial(n-1)*n;\n}    \n\nint main() {\n\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n    if (n==0) return 1;\n    else return factorial(n-1)*n;\n}    \n\nint main() {\n\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}    \n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\n#include <string>\n#include <cmath>\n#include <algorithm>\n#include <cstdlib>\n#include <vector>\nusing namespace std;\n\ndouble factorial(double x) {\nif (x == 1) return 1;\nelse return x*factorial(x - 1);\n}\n\nint main() {\n\tdouble x;\n\twhile(cin >> x) cout << factorial(x) << endl;\t\n}\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\n#include <algorithm>\n#include <cstdlib>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\nif (n == 1) return 1;\nelse return x*factorial(n - 1);\n}\n\nint main() {\n\tint x;\n\twhile(cin >> x) cout << factorial(x) << endl;\t\n}\n",
  "ELF\u0001\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0003\u0000\u0001\u0000\u0000\u0000à\u0004\b4\u0000\u0000\u0000t\u0014\u0000\u0000\u0000\u0000\u0000\u00004\u0000 \u0000\t\u0000(\u0000%\u0000\"\u0000\u0006\u0000\u0000\u00004\u0000\u0000\u00004\u0004\b4\u0004\b \u0001\u0000\u0000 \u0001\u0000\u0000\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0003\u0000\u0000\u0000T\u0001\u0000\u0000T\u0004\bT\u0004\b\u0013\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0004\b\u001c\n\u0000\u0000\u001c\n\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0001\u0000\u0000\u0000ð\u000e\u0000\u0000ð\u0004\bð\u0004\bH\u0001\u0000\u0000\u0002\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0002\u0000\u0000\u0000\b\u000f\u0000\u0000\b\u0004\b\b\u0004\bè\u0000\u0000\u0000è\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000h\u0001\u0000\u0000h\u0004\bh\u0004\bD\u0000\u0000\u0000D\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Påtdp\t\u0000\u0000p\u0004\bp\u0004\b$\u0000\u0000\u0000$\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Qåtd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000Råtdð\u000e\u0000\u0000ð\u0004\bð\u0004\b\u0010\u0001\u0000\u0000\u0010\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000/lib/ld-linux.so.2\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000GNU\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u000f\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0003\u0000\u0000\u0000GNU\u00007[Nµb\u000eX E\u0017ØwÌi\u0018·\u0003\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u000f\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u000e\u0000\u0000\u0000\r\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0005\u0000\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\u0000\u0003\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001+\u001c!\f\u0000\u0000\u0000\r\u0000\u0000\u0000\u000e\u0000\u0000\u0000s\u0007\u0002­KãÀ(EÕL\u0014\fCyIk¶\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000$\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u00003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u001f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000k\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000K\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000@ \u0004\b\u0000\u0000\u0000\u0011\u0000\u001a\u0000\u0015\u0001\u0000\u0000l\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u0010\u0000»\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000W\u0000\u0000\u0000à \u0004\b\u0000\u0000\u0000\u0011\u0000\u001a\u0000Þ\u0000\u0000\u0000´\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000libstdc++.so.6\u0000__gmon_start__\u0000_Jv_RegisterClasses\u0000_ZSt16__throw_bad_castv\u0000_ZNSo3putEc\u0000_ZSt4cout\u0000_ZNSolsEi\u0000_ZNSt8ios_base4InitC1Ev\u0000_ZSt3cin\u0000_ZNSo5flushEv\u0000_ZNKSt5ctypeIcE13_M_widen_initEv\u0000_ZNSt8ios_base4InitD1Ev\u0000_ZNSirsERi\u0000__gxx_personality_v0\u0000libm.so.6\u0000libgcc_s.so.1\u0000libc.so.6\u0000_IO_stdin_used\u0000__cxa_atexit\u0000__libc_start_main\u0000GLIBC_2.0\u0000GLIBC_2.1.3\u0000CXXABI_1.3\u0000GLIBCXX_3.4.11\u0000GLIBCXX_3.4\u0000\u0000\u0000\u0000\u0002\u0000\u0003\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0002\u0000\u0005\u0000\u0002\u0000\u0002\u0000\u0002\u0000\u0002\u0000\u0001\u0000\u0002\u0000\u0002\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u000b\u0001\u0000\u0000\u0010\u0000\u0000\u00000\u0000\u0000\u0000\u0010ii\r\u0000\u0000\u0005\u0000C\u0001\u0000\u0000\u0010\u0000\u0000\u0000s\u001fi\t\u0000\u0000\u0003\u0000M\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0003\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ó¯k\u0005\u0000\u0000\u0006\u0000Y\u0001\u0000\u0000\u0010\u0000\u0000\u0000aø\u0002\u0000\u0000\u0004\u0000d\u0001\u0000\u0000\u0010\u0000\u0000\u0000t)\b\u0000\u0000\u0002\u0000s\u0001\u0000\u0000\u0000\u0000\u0000\u0000ð\u0004\b\u0006\u0004\u0000\u0000@ \u0004\b\u0005\f\u0000\u0000à \u0004\b\u0005\u000f\u0000\u0000\u0000 \u0004\b\u0007\u0001\u0000\u0000\u0004 \u0004\b\u0007\u0002\u0000\u0000\b \u0004\b\u0007\u0003\u0000\u0000\f \u0004\b\u0007\u0004\u0000\u0000\u0010 \u0004\b\u0007\u0006\u0000\u0000\u0014 \u0004\b\u0007\u0007\u0000\u0000\u0018 \u0004\b\u0007\b\u0000\u0000\u001c \u0004\b\u0007\u000e\u0000\u0000  \u0004\b\u0007\t\u0000\u0000$ \u0004\b\u0007\n\u0000\u0000( \u0004\b\u0007\u0010\u0000\u0000, \u0004\b\u0007\u000b\u0000\u0000UåSì\u0004è\u0000\u0000\u0000\u0000[Ã\u0014\u001a\u0000\u0000üÿÿÿÒt\u0005èN\u0000\u0000\u0000èu\u0001\u0000\u0000è \u0003\u0000\u0000X[ÉÃÿ5ø\u0004\bÿ%ü\u0004\b\u0000\u0000\u0000\u0000ÿ%\u0000 \u0004\bh\u0000\u0000\u0000\u0000éàÿÿÿÿ%\u0004 \u0004\bh\b\u0000\u0000\u0000éÐÿÿÿÿ%\b \u0004\bh\u0010\u0000\u0000\u0000éÀÿÿÿÿ%\f \u0004\bh\u0018\u0000\u0000\u0000é°ÿÿÿÿ%\u0010 \u0004\bh \u0000\u0000\u0000é ÿÿÿÿ%\u0014 \u0004\bh(\u0000\u0000\u0000éÿÿÿÿ%\u0018 \u0004\bh0\u0000\u0000\u0000éÿÿÿÿ%\u001c \u0004\bh8\u0000\u0000\u0000épÿÿÿÿ%  \u0004\bh@\u0000\u0000\u0000é`ÿÿÿÿ%$ \u0004\bhH\u0000\u0000\u0000éPÿÿÿÿ%( \u0004\bhP\u0000\u0000\u0000é@ÿÿÿÿ%, \u0004\bhX\u0000\u0000\u0000é0ÿÿÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00001í^áäðPTRh°\u0004\bhÀ\u0004\bQVh\u0000\u0004\bèsÿÿÿôUåSì\u0004=l¡\u0004\b\u0000u?¡p¡\u0004\b»\u0000\u0004\bëü\u0004\bÁû\u0002ë\u00019Øs\u001e¶\u0000\u0000\u0000\u0000À\u0001£p¡\u0004\bÿ\u0014ü\u0004\b¡p¡\u0004\b9ØrèÆ\u0005l¡\u0004\b\u0001Ä\u0004[]Ãt&\u0000¼'\u0000\u0000\u0000\u0000Uåì\u0018¡\u0004\u0004\bÀt\u0012¸\u0000\u0000\u0000\u0000Àt\tÇ\u0004$\u0004\u0004\bÿÐÉÃU¸\u0001\u0000\u0000\u0000åU\bú\u0000t\u0010°\u0000~\f°\u0001f\u000f¯Âê\u0001uø]Ã´&\u0000\u0000\u0000\u0000¼'\u0000\u0000\u0000\u0000Uåì\u0018Ç\u0004$t¡\u0004\bèþÿÿÇD$\b4 \u0004\bÇD$\u0004t¡\u0004\bÇ\u0004$\u0004\bè&þÿÿÉÃUåäðVSì(D$\u001cD$\u0004Ç\u0004$@ \u0004\bèþÿÿD$\u001cº\u0001\u0000\u0000\u0000ø\u0000t\u0013²\u0000~\u000f²\u0001t&\u0000\u000f¯Ðè\u0001uøT$\u0004Ç\u0004$à \u0004\bèÄýÿÿÃ\u0000@ôt\u0003|ötK~\u001c\u0000t+\u000f¶F'\u000f¾À\u001c$D$\u0004èLþÿÿ\u0004$è\u0014þÿÿÄ(1À[^ì]Ãt&\u00004$è¼ýÿÿ\u0006ÇD$\u0004\n\u0000\u0000\u00004$ÿP\u0018ë¿èýÿÿUå]Ãt&\u0000¼'\u0000\u0000\u0000\u0000UåWVSèO\u0000\u0000\u0000Ã)\u0017\u0000\u0000ì\u001cèûüÿÿ»üþÿÿüþÿÿ)ÇÁÿ\u0002ÿt$1öE\u0010D$\bE\fD$\u0004E\b\u0004$ÿ³üþÿÿÆ\u00019þrÞÄ\u001c[^_]Ã\u001c$ÃUåSì\u0004¡ô\u0004\bøÿt\u0013»ô\u0004\bfë\u0004ÿÐ\u0003øÿuôÄ\u0004[]ÃUåSì\u0004è\u0000\u0000\u0000\u0000[Ã\u0016\u0000\u0000è¬ýÿÿY[ÉÃ\u0003\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0001\u001b\u0003; \u0000\u0000\u0000\u0003\u0000\u0000\u00000þÿÿ@\u0000\u0000\u0000`þÿÿ\\\u0000\u0000\u0000þÿÿx\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001zPR\u0000\u0001|\b\u0006\u0000´\u0004\b\u001b\f\u0004\u0004\u0001\u0018\u0000\u0000\u0000 \u0000\u0000\u0000èýÿÿ\"\u0000\u0000\u0000\u0000A\u000e\bG\u0002\r\u0005\u0000\u0000\u0000\u0018\u0000\u0000\u0000<\u0000\u0000\u0000üýÿÿ0\u0000\u0000\u0000\u0000A\u000e\bB\u0002\r\u0005\u0000\u0000\u0000,\u0000\u0000\u0000X\u0000\u0000\u0000\u0010þÿÿ¯\u0000\u0000\u0000\u0000A\u000e\bB\u0002\r\u0005W\u0010\u0003\u0007U\tð\u001a\tø\"\u0010\u0006\u0007U\tð\u001a\tü\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ÿÿÿÿÐ\u0004\b\u0000\u0000\u0000\u0000ÿÿÿÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000ó\u0000\u0000\u0000\u0001\u0000\u0000\u0000ý\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u000b\u0001\u0000\u0000\f\u0000\u0000\u0000Ô\u0004\b\r\u0000\u0000\u0000L\u0004\b\u0004\u0000\u0000\u0000¬\u0004\bõþÿo\u0004\u0004\b\u0005\u0000\u0000\u0000H\u0004\b\u0006\u0000\u0000\u00008\u0004\b\n\u0000\u0000\u0000\u0001\u0000\u0000\u000b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000ô\u0004\b\u0002\u0000\u0000\u0000`\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0017\u0000\u0000\u0000t\u0004\b\u0011\u0000\u0000\u0000\\\u0004\b\u0012\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0013\u0000\u0000\u0000\b\u0000\u0000\u0000þÿÿoì\u0004\bÿÿÿo\u0002\u0000\u0000\u0000ðÿÿoÈ\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0004\b*\u0004\b:\u0004\bJ\u0004\bZ\u0004\bj\u0004\bz\u0004\b\u0004\b\u0004\bª\u0004\bº\u0004\bÊ\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000GCC: (Ubuntu 4.4.1-4ubuntu8) 4.4.1\u0000GCC: (Ubuntu 4.4.1-4ubuntu9) 4.4.1\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000à\u0004\b\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000!\u0000\u0000\u0000\u0002\u0000b\u0000\u0000\u0000\u0000\u0000\u0000u\u0000\u0000\u0000_IO_stdin_used\u0000\u0000\u0000\u0000\u0000^\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0000\u0000à\u0004\b\u0002\u0004\b../sysdeps/i386/elf/start.S\u0000/build/buildd/eglibc-2.10.1/csu\u0000GNU AS 2.20\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0014\u0000\u0000\u0000\u0004\u00013\u0000\u0000\u0000\u0001}\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0004\b\u0004\u0004\b[\u0000\u0000\u0000\u0002\u0001\bo\u0000\u0000\u0000\u0002\u0002\u0007 \u0000\u0000\u0000\u0002\u0004\u0007b\u0000\u0000\u0000\u0002\u0004\u0007]\u0000\u0000\u0000\u0002\u0001\u0006q\u0000\u0000\u0000\u0002\u0002\u0005?\u0000\u0000\u0000\u0003\u0004\u0005int\u0000\u0002\b\u0005\u0000\u0000\u0000\u0002\b\u0007X\u0000\u0000\u0000\u0002\u0004\u0005\u0000\u0000\u0000\u0004\u0004\u0007\u0002\u0001\u0006x\u0000\u0000\u0000\u0005I\u0000\u0000\u0000\u0001\u0019\u0000\u0000\u0000\u0001\u0005\u0003l\u0004\b\u0006O\u0000\u0000\u0000\u0000\u0001\u0011\u0000\u0010\u0006\u0011\u0001\u0012\u0001\u0003\b\u001b\b%\b\u0013\u0005\u0000\u0000\u0000\u0001\u0011\u0001%\u000e\u0013\u000b\u0003\u000e\u001b\u000e\u0011\u0001\u0012\u0001\u0010\u0006\u0000\u0000\u0002$\u0000\u000b\u000b>\u000b\u0003\u000e\u0000\u0000\u0003$\u0000\u000b\u000b>\u000b\u0003\b\u0000\u0000\u0004$\u0000\u000b\u000b>\u000b\u0000\u0000\u00054\u0000\u0003\u000e:\u000b;\u000bI\u0013?\f\u0002\n\u0000\u0000\u0006&\u0000I\u0013\u0000\u0000\u0000W\u0000\u0000\u0000\u0002\u00002\u0000\u0000\u0000\u0001\u0001û\u000e\r\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001../sysdeps/i386/elf\u0000\u0000start.S\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002à\u0004\b\u0003À\u0000\u00013!4=%\"\u0003\u0018 YZ!\"\\[\u0002\u0001\u0000\u0001\u0001#\u0000\u0000\u0000\u0002\u0000\u001d\u0000\u0000\u0000\u0001\u0001û\u000e\r\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000init.c\u0000\u0000\u0000\u0000\u0000/build/buildd/eglibc-2.10.1/csu\u0000short unsigned int\u0000GNU C 4.4.1\u0000short int\u0000_IO_stdin_used\u0000long long unsigned int\u0000unsigned char\u0000init.c\u0000long long int\u0000\u0000.symtab\u0000.strtab\u0000.shstrtab\u0000.interp\u0000.note.ABI-tag\u0000.note.gnu.build-id\u0000.gnu.hash\u0000.dynsym\u0000.dynstr\u0000.gnu.version\u0000.gnu.version_r\u0000.rel.dyn\u0000.rel.plt\u0000.init\u0000.text\u0000.fini\u0000.rodata\u0000.eh_frame_hdr\u0000.eh_frame\u0000.ctors\u0000.dtors\u0000.jcr\u0000.dynamic\u0000.got\u0000.got.plt\u0000.data\u0000.bss\u0000.comment\u0000.debug_aranges\u0000.debug_pubnames\u0000.debug_info\u0000.debug_abbrev\u0000.debug_line\u0000.debug_str\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000T\u0004\bT\u0001\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000h\u0004\bh\u0001\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\b\u0001\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000H\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0002\u0000\u0000\u0000¬\u0004\b¬\u0001\u0000\u0000X\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000D\u0000\u0000\u0000öÿÿo\u0002\u0000\u0000\u0000\u0004\u0004\b\u0004\u0002\u0000\u00004\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000N\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0002\u0000\u0000\u00008\u0004\b8\u0002\u0000\u0000\u0010\u0001\u0000\u0000\u0007\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000V\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000H\u0004\bH\u0003\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000^\u0000\u0000\u0000ÿÿÿo\u0002\u0000\u0000\u0000È\u0004\bÈ\u0004\u0000\u0000\"\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000k\u0000\u0000\u0000þÿÿo\u0002\u0000\u0000\u0000ì\u0004\bì\u0004\u0000\u0000p\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000z\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000\\\u0004\b\\\u0005\u0000\u0000\u0018\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000t\u0004\bt\u0005\u0000\u0000`\u0000\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000Ô\u0004\bÔ\u0005\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0004\b\u0004\u0006\u0000\u0000Ð\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000à\u0004\bà\u0006\u0000\u0000l\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000L\u0004\bL\t\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000h\u0004\bh\t\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000¦\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000p\u0004\bp\t\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000´\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\b\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000¾\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000ð\u0004\bð\u000e\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000Å\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000ü\u0004\bü\u000e\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ì\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0004\u0004\b\u0004\u000f\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ñ\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0003\u0000\u0000\u0000\b\u0004\b\b\u000f\u0000\u0000è\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000Ú\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000ð\u0004\bð\u000f\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000ß\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000ô\u0004\bô\u000f\u0000\u0000<\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000è\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u00000 \u0004\b0\u0010\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000î\u0000\u0000\u0000\b\u0000\u0000\u0000\u0003\u0000\u0000\u0000@ \u0004\b8\u0010\u0000\u00008\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000ó\u0000\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u00008\u0010\u0000\u0000F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000ü\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0010\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Å\u0010\u0000\u0000ï\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000'\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000´\u0011\u0000\u0000_\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0013\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000'\u0013\u0000\u0000L\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000<\u001a\u0000\u0000p\u0005\u0000\u0000$\u0000\u0000\u00007\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\t\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¬\u001f\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000\u0000\u0000\u0000\u0000h\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0003\u0000\u0000\u0000\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0004\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0005\u0000\u0000\u0000\u0000\u00008\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0006\u0000\u0000\u0000\u0000\u0000H\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000È\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\b\u0000\u0000\u0000\u0000\u0000ì\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\t\u0000\u0000\u0000\u0000\u0000\\\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\n\u0000\u0000\u0000\u0000\u0000t\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000b\u0000\u0000\u0000\u0000\u0000Ô\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\f\u0000\u0000\u0000\u0000\u0000\u0004\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\r\u0000\u0000\u0000\u0000\u0000à\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000e\u0000\u0000\u0000\u0000\u0000L\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000f\u0000\u0000\u0000\u0000\u0000h\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0010\u0000\u0000\u0000\u0000\u0000p\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0011\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0012\u0000\u0000\u0000\u0000\u0000ð\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0013\u0000\u0000\u0000\u0000\u0000ü\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0004\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0015\u0000\u0000\u0000\u0000\u0000\b\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0016\u0000\u0000\u0000\u0000\u0000ð\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0017\u0000\u0000\u0000\u0000\u0000ô\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0018\u0000\u0000\u0000\u0000\u00000 \u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0019\u0000\u0000\u0000\u0000\u0000@ \u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u001a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001d\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000!\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\u0013\u0000\u0000\u0000ð\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0013\u0000!\u0000\u0000\u0000ü\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0014\u0000/\u0000\u0000\u0000\u0004\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0015\u0000<\u0000\u0000\u0000\u0010\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\u000e\u0000R\u0000\u0000\u0000l¡\u0004\b\u0001\u0000\u0000\u0000\u0001\u0000\u001a\u0000a\u0000\u0000\u0000p¡\u0004\b\u0004\u0000\u0000\u0000\u0001\u0000\u001a\u0000o\u0000\u0000\u0000p\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\u000e\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ{\u0000\u0000\u0000ø\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0013\u0000\u0000\u0000\u0000\u0018\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0012\u0000\u0000\u0000\u0000\u0004\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0015\u0000¢\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\u000e\u0000¸\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿÅ\u0000\u0000\u0000Ð\u0004\b0\u0000\u0000\u0000\u0002\u0000\u000e\u0000Þ\u0000\u0000\u0000t¡\u0004\b\u0001\u0000\u0000\u0000\u0001\u0000\u001a\u0000í\u0000\u0000\u0000ô\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002\u0018\u0000\u0003\u0001\u0000\u0000ð\u0004\b\u0000\u0000\u0000\u0000\u0000\u0002\u0013\u0000\u0014\u0001\u0000\u0000ð\u0004\b\u0000\u0000\u0000\u0000\u0000\u0002\u0013\u0000'\u0001\u0000\u0000\b\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002\u0016\u00000\u0001\u0000\u00000 \u0004\b\u0000\u0000\u0000\u0000 \u0000\u0019\u0000;\u0001\u0000\u0000@ \u0004\b\u0000\u0000\u0000\u0011\u0000\u001a\u0000Q\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000h\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000°\u0004\b\u0005\u0000\u0000\u0000\u0012\u0000\u000e\u0000\u0001\u0000\u0000à\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u000e\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000¾\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000Í\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000á\u0001\u0000\u0000h\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u0010\u0000è\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0019\u0002\u0000\u0000L\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u000f\u0000\u001f\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000D\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000a\u0002\u0000\u0000 \u0004\b\"\u0000\u0000\u0000\u0012\u0000\u000e\u0000o\u0002\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0002\u0000\u0000l\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u0010\u0000£\u0002\u0000\u00000 \u0004\b\u0000\u0000\u0000\u0000\u0010\u0000\u0019\u0000°\u0002\u0000\u0000à \u0004\b\u0000\u0000\u0000\u0011\u0000\u001a\u0000Ç\u0002\u0000\u00004 \u0004\b\u0000\u0000\u0000\u0000\u0011\u0002\u0019\u0000Ô\u0002\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0011\u0002\u0014\u0000á\u0002\u0000\u0000À\u0004\bZ\u0000\u0000\u0000\u0012\u0000\u000e\u0000ñ\u0002\u0000\u00008 \u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿý\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0018\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u00000\u0003\u0000\u0000x¡\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿ5\u0003\u0000\u00008 \u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿ<\u0003\u0000\u0000´\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000]\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000v\u0003\u0000\u0000\u001a\u0004\b\u0000\u0000\u0000\u0000\u0012\u0002\u000e\u0000\u0003\u0000\u0000\u0000\u0004\b¯\u0000\u0000\u0000\u0012\u0000\u000e\u0000\u0003\u0000\u0000Ô\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\f\u0000\u0000init.c\u0000crtstuff.c\u0000__CTOR_LIST__\u0000__DTOR_LIST__\u0000__JCR_LIST__\u0000__do_global_dtors_aux\u0000completed.6990\u0000dtor_idx.6992\u0000frame_dummy\u0000__CTOR_END__\u0000__FRAME_END__\u0000__JCR_END__\u0000__do_global_ctors_aux\u0000factorial.cc\u0000_GLOBAL__I__Z9factoriali\u0000_ZStL8__ioinit\u0000_GLOBAL_OFFSET_TABLE_\u0000__init_array_end\u0000__init_array_start\u0000_DYNAMIC\u0000data_start\u0000_ZSt3cin@@GLIBCXX_3.4\u0000_ZNSolsEi@@GLIBCXX_3.4\u0000__cxa_atexit@@GLIBC_2.1.3\u0000__libc_csu_fini\u0000_start\u0000_ZSt16__throw_bad_castv@@GLIBCXX_3.4\u0000__gmon_start__\u0000_Jv_RegisterClasses\u0000_fp_hw\u0000_ZNKSt5ctypeIcE13_M_widen_initEv@@GLIBCXX_3.4.11\u0000_fini\u0000_ZNSt8ios_base4InitC1Ev@@GLIBCXX_3.4\u0000__libc_start_main@@GLIBC_2.0\u0000_Z9factoriali\u0000_ZNSt8ios_base4InitD1Ev@@GLIBCXX_3.4\u0000_IO_stdin_used\u0000__data_start\u0000_ZSt4cout@@GLIBCXX_3.4\u0000__dso_handle\u0000__DTOR_END__\u0000__libc_csu_init\u0000__bss_start\u0000_ZNSo5flushEv@@GLIBCXX_3.4\u0000_ZNSirsERi@@GLIBCXX_3.4\u0000_end\u0000_edata\u0000__gxx_personality_v0@@CXXABI_1.3\u0000_ZNSo3putEc@@GLIBCXX_3.4\u0000__i686.get_pc_thunk.bx\u0000main\u0000_init\u0000",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n){\n\tif (n<1) return 1;\n\telse {\n\t\treturn (n * fact (n-1));\n\t\t}\n\t}\n\nint main () {\n\tint n;\n\tcin >> n;\n\t cout << fact (n) << endl;\n }\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n){\n\tif (n<1) return 1;\n\treturn n * fact(n-1);\n\t}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << fact (n) << endl;\n }\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n){\n\tif (n<=1) return 1;\n\treturn n * fact(n-1);\n\t}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << fact (n) << endl;\n }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n<=1) return 1;\n\treturn n * factorial(n-1);\n\t}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n }\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n   if(n == 0) return 1;\n   else n = n * factorial(n-1);\n   return n;\n}\n\nint main(){\n   int n;\n   cin >> n;\n   n = factorial(n);\n   cout << n << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>0) {\r\n        return n*factorial(n-1);\r\n        }\r\n    else {\r\n         return 1;\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tint fact=1;\n\t  while (n>1) {\n\t\tfact= fact*n;\n\t\t--n;\n\t    factorial (n);\t\n\t}\n\treturn fact;\n\t}\n\t\n\nint main() {\n\tint y;\n\tcin >> y;\n\tcout << factorial (y) << endl;\n}\n\n\n\n\n\n\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==1) return n;\n\telse n=n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\tif (n==1) return n;\n\telse n=n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\tif (n==1) return n;\n\telse return (n*factorial(n-1));\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "int factorial(int n) {\n\tif (n==0) {\n\t\treturn 1;\n\t} else {\n\t\treturn n*factorial(n-1);\n\t}\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\telse if (n==1) return 1;\n\treturn n*factorial(n-1);\n}\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n\n\n}\n \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n==1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n==1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n>=1) return n*factorial(n-1);\n\telse return 1;\n}\n\nint main(){\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n==1){ \n\t\treturn 1;\n\t}else{ \n\t\treturn n*factorial(n-1);\n\t\t}\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int num) {\n\tif (num==1) return 1;\n\treturn factorial(num-1)*num;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n*(factorial(n-1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int a;\n  cin >> a;\n  cout << factorial(a);\n}",
  "#include <iostream>\nusing namespace std;\n\tint factorial (int n) {\n    \t\tint m=0;\n\t\tint l=1;\n   \t\t while (m<n) {\n   \t\t m=m+1;\n\t\t l=l*m;\t\t\n   \t\t}\n\treturn l;\n    \n} \nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n);\n    cout << endl;\n    \n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\nif ( n == 0 ) return 1;\nif ( n > 1 ) return n* = factorial ( n - 1 );\nelse return n;\n}\n\nint main (){\nint n;\ncin >> n;\ncout << factorial (n)<<endl;\n} \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\nif ( n == 0 ) return 1;\nif ( n > 1 ) return n = n * factorial ( n - 1 );\nelse return n;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n-1 >= 1){\r\n\treturn n*factorial(n-1);}\r\n\telse return n;\r\n}\r\n\r\nint main (){\r\n  int n;\r\n  cin >>n;\r\n\tcout<< factorial(n) << endl;\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    int i = 0;\n    int fac = 1;\n    \n    while (i != n) {\n        i = i + 1;\n        fac = fac*i;\n    }\n    return fac;\n    \n    \n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n){\n\tif(n==0){\n\t\treturn 1;\n\t}\n\telse return n*factorial(n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n != 0){\n        if (n == 1) return n;\n        else return n*factorial(n - 1);\n    }\n    return 1;\n}\n\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a);\n} \n",
  "#include <iostream>\nusing namespace std;\nint factorial (int a){\nif (a>0)return (a*factorial(a-1));\nelse return 1;\n}\n\nint main (){\nint a;\ncin >> a;\ncout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (n) {\n    if (n==0) return 1;\n    return n*factorial(n-1)\n}\n\nint main() {\n    \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int a;\n  cin >> a;\n  cout << factorial(a);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    \n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\nif (n==0) return 1;\nelse return n*factorial (n-1);\n}\n\nint main(){\nint n ;\ncin >> n;\ncout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\nif (n==0) return 1;\nelse return n*factoril (n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n\tif (x == 0) return 1;\n\telse return x*factorial(x-1);\n}\nint main () {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  int sum = 1;\n  if (n >= 1){\n    while (n >= 1) {\n      sum = sum * n;\n      n = n-1;\n    }\n  } else {\n    if (n < 0) {\n      while (n <= -1) {\n      sum = sum * n;\n      n = n+1;\n      } \n    } \n  }\n    return sum;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0 or n == 1) return 1;\n\telse return n*factorial(n - 1);\n}\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\tint x = factorial(n);\n\tcout << x << endl;\n}\n",
  "int factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\n// P12509: Factorial recursiu\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial (n - 1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << \"Factorial de \" << x << \" es: \" << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==1) return 1;\n\telse return n*(factorial(n-1));\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif n==1 return 1;\n\telse return n*(factorial(n-1));\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==1) return 1;\n\telse if (n==0) return 0;\n\telse return n*(factorial(n-1));\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==1) return 1;\n\telse if (n==0) return 1;\n\telse return n*(factorial(n-1));\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) {\n\t\treturn 1;\n\t}\n\treturn n*factorial(n-1);\n}\n\nint main () {\nint n;\ncin >> n;\ncout << factorial(n) << endl;\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n    }\n    \nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n != 1) return n*factorial(n - 1);\n    else return 1;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n\tint n;\n\twhile (cin >> n)\n\t\tcout << factorial(n) << endl;\n}\n\nint factorial(int n){\n\tint res;\n\tif (n == 1)\n\t\tres = 1;\n\telse\n\t\tres = (factorial(n-1))*n;\n\treturn res;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n > 1) return n*factorial(n - 1);\n    else return 1;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n\tint n;\n\twhile (cin >> n)\n\t\tcout << factorial(n) << endl;\n}\n\nint factorial(int n){\n\tint res;\n\tif (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn (factorial(n-1))*n;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n\tint n;\n\twhile (cin >> n)\n\t\tcout << factorial(n) << endl;\n}\n\nint factorial(int n){\n\tif (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn (factorial(n-1))*n;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n\tint n;\n\twhile (cin >> n)\n\t\tcout << factorial(n) << endl;\n}\n\nint factorial(int n){\n\tif (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn n*factorial(n-1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while(cin>>n){\n        cout<<factorial(n)<<endl;\n    }\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif(n==0) return 1;\n\telse return n*factorial(n-1);\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\t\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return n;\n\telse return n*factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return n;\n\telse return n*factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n <= 1) return 1;\n    else return n = n*factorial(n-1);\n    }\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n} \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 1) return 1;\n\telse return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 1) return 1;\n\telse if (n == 2) return 2;\n\telse return n*(n-1)*factorial(n-2);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0){\n    return 1;\n  }\n  else{\n    return n * factorial(n-1);\n  }\n}\n\nint main(){\n  int num;\n  cin >> num;\n  cout << factorial(num) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n);\r\n\r\nint main () {\r\n\tint numero;\r\n\tcin >> numero;\r\n\tcout << factorial(numero) << endl;\r\n}\r\n\r\nint factorial (int n) {\r\n\tif (n == 0 or n == 1) return 1;\r\n\telse {\r\n\t\tint fact = n * factorial(n-1);\r\n\t\treturn fact;\r\n\t}\r\n}\r\n\r\n\t\t\t",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return true;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint facto(int num){\r\n    if (num == 1) return 1;\r\n    return num*facto(num - 1);\r\n}\r\n\r\nint main() {   \r\n    int x,y;\r\n    cin>>x;\r\n    cout<<facto(x);\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint facto(int num){\r\n    if (num == 1) return 1;\r\n    return num*facto(num - 1);\r\n}\r\n\r\nint main() {   \r\n    int x;\r\n    cin>>x;\r\n    cout<<facto(x);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint main() {\n\treturn 0;\n}\nint factorial(int n) {\n\tint s = 1;\n\twhile (n>0) {\n\t\ts *= n;\n\t\t--n;\n\t}\n\treturn s;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0){\n    return 1;\n  }\n  else{\n    return n * factorial(n-1);\n  }\n}\n\nint main(){\n  int num;\n  cin >> num;\n  cout << factorial(num) << endl;\n}",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 1) return 1;\r\n    return num*facto(n - 1);\r\n}\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 1) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 1) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n\r\nint main() {   \r\n    int x;\r\n    cin>>x;\r\n    cout<<factorial(x);\r\n}\r\n\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 1) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n\r\nint main() {   \r\n    int x;\r\n    cin>>x;\r\n    cout<<facto(x);\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int fact = 1;\r\n    for(int i = 0; i < n; ++i) {\r\n        fact = fact*(n-i);\r\n    }\r\n    return fact;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n/*\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint prod(int x, int y) {\n    if (y == 0) return 0;\n    if (y%2 == 0) return prod(x*2,y/2);\n    return prod(x,y - 1) + x;\n}\n\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    return prod(n, factorial(n-1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n/*\nint prod(int x, int y) {\n    if (y == 0) return 0;\n    if (y%2 == 0) return prod(x*2,y/2);\n    return prod(x,y - 1) + x;\n}*/\n\nint prod(int x, int y) {\n    int p = 0;\n    while (y != 0) {\n        if (y%2 == 0) {\n            x = x*2;\n            y = y/2;\n        }\n        else {\n            p = p + x;\n            y = y - 1;\n        }\n    }\n    return p;\n}\n\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    return prod(n, factorial(n-1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n<=1) return 1;\n    else return factorial(n-1)*n;\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int resultado = 0;\r\n    if (n < 2) return 1;\r\n    else resultado = n * factorial(n - 1);\r\n    return resultado;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n/*\n\nproducto rapido \"version recursiva\"\nint prod(int x, int y) {\n    if (y == 0) return 0;\n    if (y%2 == 0) return prod(x*2,y/2);\n    return prod(x,y - 1) + x;\n}\n\nproducto rapido \"version iterativa\"\nint prod(int x, int y) {\n    int p = 0;\n    while (y != 0) {\n        if (y%2 == 0) {\n            x = x*2;\n            y = y/2;\n        }\n        else {\n            p = p + x;\n            y = y - 1;\n        }\n    }\n    return p;\n}*/\n\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    //return prod(n, factorial(n-1));\n    return n*(factorial(n-1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n/*\n\nproducto rapido \"version recursiva\"\nint prod(int x, int y) {\n    if (y == 0) return 0;\n    if (y%2 == 0) return prod(x*2,y/2);\n    return prod(x,y - 1) + x;\n}\n\nproducto rapido \"version iterativa\"\nint prod(int x, int y) {\n    int p = 0;\n    while (y != 0) {\n        if (y%2 == 0) {\n            x = x*2;\n            y = y/2;\n        }\n        else {\n            p = p + x;\n            y = y - 1;\n        }\n    }\n    return p;\n}*/\n\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    //return prod(n, factorial(n-1));\n    return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int fact = 1;\r\n    if(n < 1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n>1){ \r\n        n=n*factorial(n-1);\r\n    }\r\n    return n;\r\n}\r\n\r\nint main(){\r\n    int num;\r\n    cin >> num;\r\n    cout << factorial(num) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n>1){ \r\n        n=n*factorial(n-1);\r\n    }\r\n    else if (n==0) n=1;\r\n    \r\n    return n;\r\n}\r\n\r\nint main(){\r\n    int num;\r\n    cin >> num;\r\n    cout << factorial(num) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    int fact = 1;\n    for (int i = 2; i <= n; ++i) {\n        fact *= i;\n    }\n    return fact;\n}\n\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <sstream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 1) return 1;\n\treturn n * factorial(n - 1);\n}\n",
  "#include <iostream>\n#include <sstream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 1) return 1;\n\tif (n == 2) return 2;\n\tif (n == 3) return 6;\n\tif (n == 4) return 24;\n\treturn n * factorial(n - 1);\n}\n",
  "#include <iostream>\n#include <sstream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\t/*if (n == 1) return 1;\n\tif (n == 2) return 2;\n\tif (n == 3) return 6;\n\tif (n == 4) return 24;*/\n\treturn n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint fact = n;\n\t--n;\n\tif (n > 1) {\n\t\tfact *= factorial(n);\n\t}\n\treturn fact;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tint cont=1;\r\n\t\r\n\tif (n>1 and n<13) {\r\n            cont *= n;\r\n\t   \t\tcont *= factorial (n-1);\r\n\t}\r\n\treturn cont;\r\n}\r\n\r\nint main () {\r\n\tint a;\r\n\tcin >> a;\r\n\tint p= factorial (a);\r\n\tcout << p << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tint cont=1;\r\n\tcont *= n;\r\n\tif (n>1 and n<13) cont *= factorial (n-1);\r\n\treturn cont;\r\n}\r\n\r\nint main () {\r\n\tint a;\r\n\tcin >> a;\r\n\tint p= factorial (a);\r\n\tcout << p << endl;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\telse return n*(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) <<endl;\r\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==1) return 1;\r\n\telse return n*(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) <<endl;\r\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) <<endl;\r\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n>1) return n*factorial(n-1);\r\n\telse if(n==0) return 0;\r\n\telse return 1;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) <<endl;\r\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n>1) return n*factorial(n-1);\r\n\treturn 1;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) <<endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n/*\n\nproducto rapido \"version recursiva\"\nint prod(int x, int y) {\n    if (y == 0) return 0;\n    if (y%2 == 0) return prod(x*2,y/2);\n    return prod(x,y - 1) + x;\n}\n\nproducto rapido \"version iterativa\"\nint prod(int x, int y) {\n    int p = 0;\n    while (y != 0) {\n        if (y%2 == 0) {\n            x = x*2;\n            y = y/2;\n        }\n        else {\n            p = p + x;\n            y = y - 1;\n        }\n    }\n    return p;\n}*/\n\n\nint factorial (int n) {\n    if (n == 1 or n == 0) return 1;\n    //return prod(n, factorial(n-1));\n    return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "int factorial(int n){\r\n\tif(n==0) return 1;\r\n\treturn factorial(n-1) * n;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0 or n == 1) return 1;\r\n    else return factorial(n-1)*n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n        \r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 1 or n == 0) return 1;\n\telse return n*factorial(n-1);\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\telse return n*factorial(n-1);\n}\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial1(int m){\r\n    int f = 1;\r\n    int i = 0;\r\n    while (i<m){\r\n                i = i+1;\r\n                f = f*i;\r\n                }}\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial1(n- 1);\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial1(int m){\r\n    int f = 1;\r\n    int i = 0;\r\n    while (i<m){\r\n                i = i+1;\r\n                f = f*i;\r\n                }}\r\nint factorial(int n){\r\n    if (n == 0) \r\n       return 1;\r\n    else \r\n         return n*factorial1(n-1);\r\n}\r\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\n#include <algorithm>\n#include <cstdlib>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\nif (n == 1) return 1;\nelse return n*factorial(n - 1);\n}\n\nint main() {\n\tint x;\n\twhile(cin >> x) cout << factorial(x) << endl;\t\n}\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\n#include <algorithm>\n#include <cstdlib>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\nif (n == 0) return 1;\nelse return n*factorial(n - 1);\n}\n\nint main() {\n\tint x;\n\twhile(cin >> x) cout << factorial(x) << endl;\t\n}\n",
  "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\n\n\nint factorial (int n){\n\tif(n>0) return n*factorial(n-1);\n\telse return 1;\n}\n\n\n\n\nint main(){\n\t\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n-1) * n;\n}\n",
  "#include <iostream>\n\nint factorial(int n)\n{\n\tif(n <= 1) return 1;\n\treturn (n * factorial(n - 1));\n}\n\n\nint main()\n{\n\tfor(int ii=0; ii<13; ii++)\n\t\tstd::cout << factorial(ii) << std::endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n <= 2) return n;\n\treturn n*factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n <= 2) return n;\n\treturn n*factorial(n - 1);\n}\n\n/*\n int main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n*/",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 0) return 1;\r\n    return factorial(n-1) * n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial ( int n) {\r\n\r\n\tif ( n == 0 ) return 1;\t\t\t//\r\n\telse return n*factorial (n-1);\t\t//3*factorial (2)--->2*factorial(1)--->1*(factorial (0)=1)\r\n}\t\t\t\t\t\t//     3*2<--------------2*1<-----------------1*1\t\t\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n}",
  "int factorial(int n) {\n\tif(n==0) return 1;\n\treturn n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return n;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif(n==0) return 1; // Cas base,\n\telse return factorial(n-1)*n; // Crida recursiva.\n\n}\n\n\n\n\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\n\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n//Factorial iteratiu\n\nint factorial(int n){\n\tif(n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\r\n\n    int i = 0;\r\n    int fac = 1;\r\n\r\n    while (i != n) {\r\n        i = i + 1;\r\n        fac = fac * i;\r\n    }\r\nreturn fac;\r\n    }\r\n\r\nint main () {\r\n    int n;\r\ncin >> n;\r\ncout << \"Factorial de \" << n << \" es \" << factorial (n) << endl;\r\n    }\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    }\n    \n",
  "/*\r\nFactorial recursiu P12509 ca\r\nEscriviu una funcio  \t\t\tint factorial (int n);\r\nque retorni n!.\r\nResoleu aquest problema recursivament.\r\nPrecondicio\r\nEs compleix 0 <= n <= 12.\r\n*/\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif ((n == 0) or (n == 1)) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n  if(n==1) return 1;\n  else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n  if(n==0) return 1;\n  return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\telse return factorial (n-1) * n;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\t\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n\t\n\t// Code\n\t\n}\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int x;\n    if (n == 0){\n        x = 1;\n    }\n    else {\n        x = n*factorial(n - 1);\n    }\n    return x;\n}\n\nint main (){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    }\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n    }\n    \n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 1) return n;\n  else {\n    if (n-1 != 1) return n*factorial(n-1);\n    else return 2;\n  }\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if(n==0 or n==1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int f =1;\n    int i =0;\n    while ( i < n) {\n    i +=1;\n    f *=i;\n    }\n    return f;\n} \n    \nint main () {\n    int y;\n    cin >> y;\n    cout << factorial(y) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n&, int p) {\n\tif(p==n) return 0;\n\treturn p*factorial(n, p-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int &n,int p) {\n\tif(p==n) return 0;\n\treturn p*factorial(n, p-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int &n,int p) {\n\tif(p==n) return 0;\n\treturn p*factorial(n, p-1);\n}\n\nint main(void) {\n\tcout << \"Hello World!\" << endl;\n}\n",
  "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) return 1;\n\treturn n * factorial(n-1);\n}\n\nint main() {\n\tint pr;\n\tcin >> pr;\n\tcout << factorial(pr) << endl;\n}\n\n",
  "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint factorial(int n);\n\nint factorial(int n)\n{\n\t\tif ( n == 1 )\n\t\t\treturn 1;\n\t\treturn n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif(n==0) return 0;\n\treturn n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif(n>0) {\n\treturn n*factorial(n-1);\n\t}\n}\n",
  "int factorial(int n) {\n\tif (n == 1) return 1;\n\treturn n * factorial(n-1);\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int a)\n{\n    if (a==0)\n        return 1;\n    return a*factorial(a-1);\n}\n\nint main()\n{\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int a)\n{\n    if (a==0)\n        return 1;\n    return a*factorial(a-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tint resultat=1;\n\tfor(int i=n; i=1; --i) {\n\t\tresultat = resultat * i;\n\t}\n\treturn resultat;\t\n}\n",
  "int factorial(int n)\n{\n\t\tif ( n == 0 )\n\t\t\treturn 1;\n\t\treturn n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif(n<=1) return 1;\n\treturn n*factorial(n-1);\n}\n",
  "int factorial(int n) {\n\tif (n == 1) return 1;\n\tif (n == 0) return 0;\n\treturn n * factorial(n-1);\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "int factorial(int a) {\n\n\tif (a==0) return 1;\n\treturn a*factorial(a-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\tif (n > 1){\n\t\treturn (n*factorial(n-1));\n\t} else return 1;\n}\nint main(){\n}\n",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial (int n) {\n\tint r = 0;\n\tif (n > 1) {\n\treturn n*factorial(n-1); }\n\telse return 1;\n}\n\nint main () {\n\tint n = 0;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint factorial(int b){\n\tif (b==0)\n\t\treturn 1;\n\telse return b*factorial(b-1);\n\t\n\t\t\n}\nint main (){\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n ==0 ) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main(){\n\tint x;\n\tcin >>x;\n\tcout << factorial (x) << endl;\n\n}\n\n\n\n\n",
  "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint factorial(int a){\n\tif (a<=1) return 1;\n\telse \n\treturn a*factorial(a-1);\n} \n\nint main(){\n\tint n,m;\n\tcin>>n;\n\tm=factorial(n);\n\tcout<<m;\n}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int res = 1;\n    int i = 1;\n    while ( i<=n ) {\n       res= i*res;\n       i = i + 1;\n  }\n  return res;\n}\n\n\n\nint main () {\n    int a, b;\n    cin >> a >> b;\n    cout << factorial(a) << \" \" << factorial(b) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial (int n) { \n\tif (n==0) return 1;\n\treturn n*factorial(n-1);\n\n}\nint main() {\n\tint n;\n\twhile (cin>>n) cout << factorial (n) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\tint res;\n\tres=n*factorial(n-1);\n\tif(n==0) return 1;\n\telse return res;\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n\t}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\tint res=n;\n\tif(n==0) return 1;\n\tres=n*factorial(n-1);\n\treturn res;\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n\t}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1)\treturn 1;\n\telse return n * factorial(n-1);\n\t\t\n\n}\n\nint main () {\n\tint x;\n\t\tcin >> x;\n\t\tcout << factorial(x) << endl;\n\t\n\t} \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn n * factorial (n-1);\n\t}\n\n}\n\nint main() {\n\tint x;\n\tcin >>x;\n\tcout << factorial(x) << endl;\n\t\n}\n\t",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\nif (n==0) {\nreturn 1;\n}\nelse {\nreturn n * factorial (n-1);\n}\n\n}\n\nint main() {\nint x;\ncin >>x;\ncout << factorial(x) << endl;\n\n} \n",
  "factorial recursiu\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\nif (n==0) {\nreturn 1;\n}\nelse {\nreturn n * factorial (n-1);\n}\n\n}\n\nint main() {\nint x;\ncin >>x;\ncout << factorial(x) << endl;\n\n} \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn n * factorial (n-1);\n\t}\n\n}\n\nint main() {\n\tint x;\n\tcin >>x;\n\tcout << factorial(x) << endl;\n\t\n}\n\t",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n-1 > 0){\r\n\treturn n*factorial(n-1);}\r\n\telse return n;\r\n}\r\n\r\nint main (){\r\n  int n;\r\n  cin >>n;\r\n\tcout<< factorial(n) << endl;\r\n}\r\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\tn=n*factorial(n-1);\n\treturn n;\n}\n\nint main() {\n\tint a;\n\twhile (cin >> a) {\n\tcout << factorial(a) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n\tif(n<0 or n>12){\n\t\treturn false;\n\t}\n\tif(n==0){\n\t\treturn 1;\n\t}else{\n\t\treturn n*factorial(n-1);\n\t}\n}\nint main(){\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) n=1;\n\tn = n * factorial (n-1);\n\treturn n;\n}\n\nint main() {}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n>1) return factorial(n-1)*n;\n\telse return 1;\n}\n\nint main() {\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) return n=1;\n\tn = n * factorial (n-1);\n\treturn n;\n}\n\nint main() {\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0)\r\n        return 1;\r\n    else\r\n        return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    \r\n    cout << factorial(n);\r\n}\r\n",
  "int factorial (int n) {\r\n  if(n == 0) {\r\n    return 1; // 0! = 1\r\n  }\r\n  return n * factorial(n - 1);\r\n}\r\n",
  "int factorial (int n){\r\n    if (n==0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f;\n    if (n == 0) f = 1;\n    else f = n*factorial(n - 1);\n    return f; \n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    return 0;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n != 1) return n*factorial(n-1);\n    else return 1;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n*factorial(n-1);\n    else return 1;\n}\n\nint main () {\n\n    cout << factorial(11) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int x) {\n    if(x ==1 || x == 0){\n        return 1;\n    }\n    \n    else {\n        return x*factorial(x-1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    n = factorial(n);\n    cout << n << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n//funcio recursiva factorial\nint factorial (int n) {\n  if (n <= 1) return 1;\n  else return n*fact_rec (n - 1);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res;\n    if (n == 1) return 1;\n    else {\n        res = n * factorial(n - 1);\n    }\n    return res;\n}\n\nint main() {\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n *= factorial(n - 1);\n    else return 1;\n}\n\nint main() {\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//funcio recursiva factorial\nint factorial (int n) {\n  if (n <= 1) return 1;\n  else return n*factorial (n - 1);\n\n}\n",
  "#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n)\r\n{\r\n    if(n>0)\r\n    {\r\n        return n*factorial(n-1);       \r\n    }\r\n    else\r\n    {\r\n        return 1;    \r\n    }    \r\n}\r\n\r\nint main ()\r\n{\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;    \r\n}\r\n",
  "int factorial(int n)\r\n{\r\n  if (n==1 or n==0)\r\n      return 1;\r\n  else\r\n      return factorial(n-1)*n;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    while (n >= 1) {\n        n *= factorial (n-1);\n        --n;\n    }\n    return n;\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int k = 1;\n    while (n >= 1) {\n        k *= factorial (n-1);\n        --n;\n    }\n    return n;\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    while (n >= 1) {\n        n *= factorial (n-1);\n    }\n    return n;\n}\n\nint main() {\n}\n",
  "int factorial (int n) {\n\tif (n==0 or n == 1) return n;\n\telse return n*(factorial(n-1));\n} \n",
  "int factorial (int n) {\n\tif (n==0 or n == 1) return n;\n\treturn n*(factorial(n-1));\n} \n",
  "int factorial (int n) {\n\tif (n==0) return 1;\n\treturn n*(factorial(n-1));\n} \n",
  "int factorial(int n) {\r\n    if (n == 0) return 1; // 0! = 1\r\n    return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n <= 1) return 1;  \n    else return n * factorial(n-1);\n}\n\n\nint main() {\n\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial_recursiu (int n) {\n\tint res;\n\tif (n==1) res=1;\n\telse res = n*factorial_recursiu(n-1);\n\treturn res;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial_recursiu(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial_recursiu (int n) {\n\tint res;\n\tif (n==1 or n==0) res=1;\n\telse res = n*factorial_recursiu(n-1);\n\treturn res;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial_recursiu(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\n int factorial(int n) {\r\n  if(n==0) return 1;\r\n  else return n*factorial(n-1);\r\n }\r\n int main() {\r\n  int z;\r\n  cin >> z;\r\n  cout << factorial(z) << endl;\r\n }\r\n \r\n   \r\n  \r\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial_recursiu (int n) {\n\tif (n==1 or n==0) n=1;\n\telse n = n*factorial_recursiu(n-1);\n\treturn n;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial_recursiu(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==1 or n==0) n=1;\n\telse n = n*factorial(n-1);\n\treturn n;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return factorial(n-1)*n; \n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\treturn n * factorial (n - 1);\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "int factorial(int n) {\n    int fact;\n    if (n == 0) return 1;\n    fact = n*factorial(n-1);\n    return fact;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n==1 or n==0) return 1;\n\telse return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n, int fact) {\n\t--n;\n\tif(n>1) fact*=n;\n\tif (n>1) factorial(n);\n\treturn fact;\n}\n\nint main () {\n\tint n,fact;\n\tcin >> n;\n\tfact=n;\n\t\n\tcout << factorial(n,fact) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n,fact;\n\tcin >> n;\n\tfact=n;\n\t\n\tcout << factorial(n) << endl;\n}\n",
  "int factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "def factorial(x):\n\tif x == 0:\n\t\treturn 1\n\telse:\n\t\treturn x*factorial(x-1)\n",
  "def factorial(x):\n\tif x <= 1:\n\t\treturn 1\n\telse:\n\t\treturn x*factorial(x-1)\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return n * factorial (n - 1);\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==1) return 1;\n\treturn n*factorial(n-1);\n}\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\tif (n==0) cout << n << endl;\n\telse cout << factorial (n) << endl;\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0)\n        return 1;\n    else\n        return n*factorial(n-1);\n}\n\n\nint main () {\n\tint e;\n\tcin >> e;\n\tcout << factorial(e) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n//entrada:funcinon\n//salida:retori n!\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial (n-1);\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int);\n\nint main () {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n    \nint factorial (int n){\n\n    int f=1;\n    int i=0;\n    \n    while (i<n){\n    i=i+1;\n    f=f*i;\n    }\n    return f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n)  {\n\tif ( n <= 1) return 1;\n\treturn n*fact(n-1) ;\n}\n\nint main () {\n\tint n;\n\tcin>>n;\n\tcout<<fact(n)<<endl;\n }\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n)  {\n\tif ( n <= 1) return 1;\n\treturn n*fact(n-1) ;\n}\n\nint main () {\n\tint n;\n\tcin>>n;\n\tcout<<fact(n)<<endl;\n }\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n)  {\n\tif ( n <= 1) return 1;\n\treturn n*factorial(n-1) ;\n}\n\nint main () {\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n }\n\t\n",
  "#include<iostream>\nusing namespace std;\n\nint main () {\n    int factorial(int n);\n    if (n>0) return 0;\n    else if (n>1) return n*factorial(n-1);\n    return 1;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n>0) return 0;\n    else if (n>1) return n*factorial(n-1);\n    return 1;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\treturn n * factorial (n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==1) return 1;\n\treturn (n*factorial(n-1));\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\treturn (n*factorial(n-1));\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "int factorial(int n) {\n  if (n<2) return 1;\n  else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==1 or n==0) return 1;\n    return (n*factorial(n-1)\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==1 or n==0) return 1;\n    return (n*factorial(n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\nif (n==0) return 1;\nelse return n*factorial(n-1);\n}\nint main(){}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==1) return 1;\n\treturn n * factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==1) return 1;\n\treturn (n * factorial(n-1));\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif ( n == 1) \n\t\treturn n;\n\treturn factorial (n*(n-1);\n}\n\t\n\n\nint main(){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif ( n == 1) \n\t\treturn n;\n\treturn factorial (n*(n-1));\n}\n\t\n\n\nint main(){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif ( n == 0) \n\t\treturn n;\n\treturn factorial (n*(n-1));\n}\n\t\n\n\nint main(){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif ( n == 0) \n\t\treturn 1;\n\treturn factorial (n*(n-1));\n}\n\t\n\n\nint main(){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif ( n == 0) \n\t\treturn 1;\n\treturn n*factorial(n-1));\n}\n\t\n\n\nint main(){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif ( n == 0) \n\t\treturn 1;\n\treturn n*factorial(n-1);\n}\n\t\n\n\nint main(){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0) return 1;\n\treturn n * factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout<<factorial(n)<<endl\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0) return 1;\n\treturn n * factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint fact (int n)  {\n\tif ( n== 1) return 1;\n\treturn ( n*fact(n-1)) ;\n}\n\nint main () {\n\tint n;\n\tcin>>n;\n\tcout<<fact (n)<<endl;\n }\n\t\n",
  "#include<iostream>\nusing namespace std;\n\nint fact (int n)  {\n\t\n\tif ( n <= 1) return 1;\n\treturn ( n*fact(n-1)) ;\n}\n\nint main () {\n\tint n;\n\tcin>>n;\n\tcout<<fact (n)<<endl;\n }\n\t\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n == 0){\r\n       return 1;\r\n    }\r\n    else{\r\n         return n * factorial(n - 1);\r\n    }\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while(cin>>n){\r\n        cout<<factorial(n)<<endl;\r\n    }\r\n}\r\n         \r\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n)  {\n\tif ( n <= 1) return 1;\n\treturn ( n*fact(n-1)) ;\n}\n\nint main () {\n\tint n;\n\tcin>>n;\n\tcout<<fact(n)<<endl;\n }\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tint fact = 1;\n\tif (n == 1) return n;\n\tfact = n * factorial(n-1);\n\treturn fact;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return ;\n    else return n*factorial(n-1);\n    \n}\n",
  "#include<iostream>\nusing namespace std;\nint factorial (int n) {\n\n   if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main(){\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\treturn n>=1 ? n*factorial (n-1):1;\n}\n\nint main(){\n\tint int_num;\n\twhile (cin >> int_num)\n\t\tcout << factorial (int_num) << endl;\t\n}\n",
  "int factorial(int n) {\n    if ( n < 2 ) return 1;\n    else return n*factorial(n - 1);\n        \n",
  "#include <iostream>\nusing namespace std;\n/* FunciÃ³n recursiva para cÃ¡lculo de factoriales */\nint factorial(int n) {\n   if(n < 0) return 0;\n   else if(n > 1) return n*factorial(n-1); /* Recursividad */\n   return 1; /* CondiciÃ³n de terminaciÃ³n, n == 1 */\n}\n    int main() {\n    int n;\n    cin >> n;\n    cout << factorial(n)<< endl;\n    \n}\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n    if(n==0) return 1;\n    if(n>1){\n        return factorial(n-1)*n;\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) <<endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n    if(n==0) return 1;\n    if(n>=1){\n        return factorial(n-1)*n;\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact_rec(int n){\n  if(n <= 1) return 1;\n  else return n*fact_rec(n-1);\n}\n  \nint main() {\n  int n;\n  cin >> n;\n  cout << fact_rec(n) << endl;\n}",
  "/*\n * factorial_rec.cc\n *\n *  Created on: 23/10/2010\n *      Author: xavi\n */\n\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif(n <= 1) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn n*factorial(n-1);\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int a;\n    while (cin >>a) {\n        cout << factorial(a) << endl;\n    }\n}\n",
  "\n// factorial recursiu\n\n#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n\tint x=1;\n\tif (n==1) return x;\n\telse {\n\t\tx=x*n;\n\t\treturn factorial (n-1);\n\t}\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n\tint x = 1;\n\tif (n == 0) return 1;\n\telse x=n*factorial(n-1);\n\treturn x;\n}\n\nint main () {\n\n\tint z;\n\tcin >> z;\n\tcout << factorial(z) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n int r;\n    if(n<2)\n        r=1;\n    else\n        r=n*factorial(n-1);\n    return r;\n}\nint main(){\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    if(n<2) {return 1;}\n    else {return n*factorial(n-1);}\n}\nint main(){}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    if ( n < 2 ) ( r = 1 );\n    else ( r = n * factorial(n-1) );}\n    \n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    int r;\n    if ( n < 2 ) ( r = 1 );\n    else ( r = n * factorial(n-1) );}\n    \n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    int r;\n    if ( n < 2 ) ( r = 1 );\n    else ( r = n * factorial(n-1) );\n    return r;}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f = 1;\n    if (n == 0) return 1;\n    for (int i = 1; i <= n; ++i) {\n    f *= i;\n    }\n    return f;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    factorial(n);\n    cout << factorial(n) << endl;\n    }\n",
  "int factorial(int n) {\n    if ( n < 2 ) return 1;\n    else return n*factorial(n - 1);\n}\n        \n",
  "int factorial(int n){\r\n    int prod=1;\r\n    return prod*(n*factorial(n-1));\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n\n...\n\nint r;\n\n\n\nif ( n < 2 ) ( r = 1 );\n\n\n\nelse ( r = n * factorial(n-1) );\n\n\n\nreturn r;}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n\n\nint r;\n\n\n\nif ( n < 2 ) ( r = 1 );\n\n\n\n   else ( r = n * factorial(n-1) );\n\n\n\nreturn r;}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n) {\n\tif(n==1) return 1;\n\treturn n*fact(n-1);\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << fact(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n\tif(n==0) return 1;\n\telse return n*factorial(n-1);\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) <<endl;\n}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n > 1) return n*factorial(n-1);\n    else return n;\n}\n\nint main(){\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n == 0) return 1;\n    if(n > 1) return n*factorial(n-1);\n    else return n;\n}\n\nint main(){\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n) {\n\tif(n==1 or n==0) return 1;\n\treturn n*fact(n-1);\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << fact(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int prod;\n    if (n == 1) prod = 1;\n    else {\n        prod = n*factorial(n - 1);\n    }\n    return prod;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int prod;\n    if (n == 1) prod = 1;\n    else {\n        prod = n*factorial(n - 1);\n    }\n    return prod;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n <= 1) return 1;\n\treturn n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int prod;\n    if (n < 1) prod = 1;\n    else {\n        prod = n*factorial(n - 1);\n    }\n    return prod;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return(n*factorial(n-1));\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << \"fact(\" << n << \") = \" << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\telse if (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\t",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\t",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int num;\n    if (n == 0) num = 0;\n    else if (n == 1) num = 1;\n    else num = n*factorial(n-1);\n    return num;\n}\nint main() {\n    int n;\n    cin >> n;\n    n = factorial(n);\n    cout << n << endl;\n    }\n             \n \n",
  "int factorial(int n) {\n    int r=1;\n    if(n==0) return 1;\n    else r=n*factorial(n-1);\n    return r;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n){\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main (){\r\n    int n;\r\n    while (cin >> n){\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n    \nint factorial (int n) {\n    int suma;\n    if (n == 0) return 1;\n    else suma = n*factorial(n - 1);\n    cerr << suma << endl;\n    return suma;\n}   \n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;    \n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n    \nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}   \n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;    \n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0 or n == 1) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n}\r\n    \r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    cout << factorial(10) << endl;\n}\n",
  "include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) return n*factorial(n-1);\n    else return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) return n*factorial(n-1);\n    else return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\nint r;\n    if (n<2)\n    r=1;\n    else r=n*factorial(n-1);\n    \nreturn n;\n}\nint main () {\nint n;\nn=factorial(n);\ncout << n << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int a;\n  cin >> a;\n  cout << factorial(a);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n);{\n\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n);{\n\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\nint r=1;\n    while (n>=2){\n        r=r*n;\n        n--;\n        }\nreturn n;\n}\n\n\nint main(){\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n);{\n\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==0)return 0;\n    else{\n    if(n>1)return n*factorial(n-1);\n    else if (n<0)return 0;\n    return 1;\n    }\n}\nint main() {\n    int n;\n    cin >> n;\n    n=factorial(n);\n    cout << n << endl;\n    }\n             \n \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){    \n    if (n==0) return 1;\n    else  return  n*factorial(n-1);\n    \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n){\n    int r;\n    if (n>=2){\n        r=n*fact(n-1);\n    }\n    else r=1;\n    return n;\n}\nint main (){\n}\n    \n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    int suma = 1;\n    while ( n > 0){\n\tsuma = suma * n;\n\t--n;\n    }\n    return suma;\n}\n\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int f;\n    if (n<=1) f=1;\n    else f=n*factorial(n-1);\n    return f;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\nint r;\n    if (n>=2)\n    r=n*factorial(n-1);\n    else \n    r=1;\nreturn n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){      //factorial iteratiu\n    int r=1;\n    while (n>=2){\n        r=r*n;\n        n=n-1;\n    }\n    return r;\n}\nint main (){\n    int x;\n    while (cin >> x){\n        cout << factorial(x) << endl;\n    }\n}\n\n\n/*    int r;                            //factorial recursiu\n    if (n>=2) r=n*factorial(n-1);\n    else r=1;\n    return n;\n}\nint main (){\n    int x;\n    while (cin >> x){\n        cout << factorial(x) << endl;\n    }\n}  \n*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int x;\n    while (n > 0){\n        x = n * factorial(n-1);\n    }\n    return x;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n   if (n == 0) return 1;\n   else if (n > 1) return n*factorial(n-1);\n   return 1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\tif (n==1) return 1;\n\tif (n>1) return (n*factorial(n-1));\n}\n\nint main() {\n\tint n;\n\tcin>> n;\n\tcout << factorial(n)<<endl;\n}\n\t\t\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n==0){\n\t\treturn 1;\n\t}\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint num;\n\tcin >> num;\n\tcout << factorial(num) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\nint r;\n    if (n>=2)\n    r=n*factorial(n-1);\n    else \n    r=1;\nreturn r;\n}\nint main (){\nint i;\ncin >> i;\ncout << factorial(i) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n == 1) return n;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\nint r;\n    if (n>=2){\n    r=n*factorial(n-1);}\n    else{\n    r=1;}\n    return r;\n}\n\n\nint main(){\n\nint n;\nfor(int i=0; i<=12; i++){\nn=factorial(i);\ncout<<\"el factorial de \"<<i<<\" es \"<<n<<endl;}\n}\n",
  "#include <iostream>\nusing namespace std;\nint fact(int n){\n    int r;\n    if (n>=2)\n    r=n*fact(n-1);\n    else \n    r=1;\nreturn r; \n}  \nint main() {\nint x;\ncin >>x;\ncout << fact(x)<< endl;\n}    \n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n\tif (n==0) return 1;\n\tif (n==1) return 1;\n\telse return (n*fact(n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n\tif (n==0) return 1;\n\tif (n==1) return 1;\n\telse return (n*fact(n-1));\n}\n\nint main (){\n}\n",
  "#include <iostream>\nusing namespace std;\nint fact(int n){\n    int r;\n    if (n>=2)\n    r=n*fact(n-1);\n    else \n    r=1;\nreturn r; \n}  \nint main() {\nint x;\ncin >>x;\ncout << fact(x)<< endl;\n}    \n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n\tif (n==0) return 1;\n\tif (n==1) return 1;\n\telse return (n*fact(n-1));\n}\n\nint main (){\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return (factorial(n - 1) * n);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int r;\n    if (n>=2)\n    r=n*factorial(n-1);\n    else \n    r=1;\nreturn r; \n}  \nint main() {\nint x;\ncin >>x;\ncout << factorial(x)<< endl;\n}    \n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n\tif (n==0) return 1;\n\tif (n==1) return 1;\n\telse return (n*fact(n-1));\n}\n\nint main (){\n\tint n;\n\tcin>>n;\n\tcout <<fact(n)<<endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n * factorial(n -1);\n}\n\n\nint main() {    \n    for (int i = 1; i < 12; ++i) cout << factorial(i) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n\n\nint main() {    \n   \n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint fact(int n){\n\tif (n==0) return 1;\n\tif (n==1) return 1;\n\tif (n>1) return (n*fact(n-1));\n}\n\nint main (){\n\tint n;\n\tcin>>n;\n\tcout <<fact(n)<<endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\telse return (n*factorial(n-1));\n}\n\nint main () {\n\tint a;\n\tcin >> a;\n\tcout << factorial (a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n\tif n==1 return 1;\n\telse return (n* factorial(n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    return n*factorial (n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\tif (n==0) return 1;\n\tif (n==1) return 1;\n\tif (n>1) return (n*factorial(n-1));\n}\n\nint main (){\n\tint n;\n\tcin>>n;\n\tcout <<fact(n)<<endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\treturn n*(factorial (n-1));\n\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) <<endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 0;\n    else if (n > 1) return n * factorial(n - 1);\n    else return 1;\n}\n\n\nint main() {    \n    for (int i = 1; i < 12; ++i) cout << factorial(i) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\n\n\nint main() {    \n    for (int i = 1; i <= 12; ++i) cout << factorial(i) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\nint r;\n\nif (n>=2){\nr=n*factorial(n-1);\n}\n\nelse {\nr= 1;\n}\nreturn r;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n ) {\n    int r;\n    if (n >= 2) {\n        r = n * factorial (n - 1):\n    }\n    else {\n        r = 1;\n    }\n    return r;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: 0 <= n <= 12 (natural)\n//Post:funcio retorna factorial de n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << \"factorial(n)=\" << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n\tif (n==1) return 1;\n\tif (n==0) return 1;\n\t\n\telse return n* factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >>n;\n\tcout << factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n ) {\n    int r;\n    if (n >= 2) {\n        r = n * factorial (n - 1);\n    }\n    else {\n        r = 1;\n    }\n    return r;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    \n    if (n == 0) return 1;\n    n *= factorial (n-1);\n    return n;\n\n\n\n}\n\nint main(){\n\n    for(int i=0; i<=12; ++i) cout << factorial(i) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n    if (n==0){\n        return 1;\n    }else{\n        return n*factorial(n-1);\n    }\n\n}\n\nint main(){\n\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n      if ( n == 0 ) return 1;\n      else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int a = 1;\n    while (n != 0) {\n        a = a * n;\n        n = n - 1;\n    }\n    return a;\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\nif (n == 0) return 1;\nelse return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    n = factorial(n);\n    cout << n << endl;\n    }\n             \n \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f = 1;\n    for (int i = 1; i < n; ++i) f = f + i*f;\n    return f;\n}\n\nint main () {\n}\n",
  "int factorial(int n){\n\tif(n == 1) return 1;\n\treturn n*factorial(n-1);\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n    for (int i = n-1; i > 1; --i) \n    {\n        n *= i;\n    }\n    return n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "int factorial(int n){\n\tif(n == 0) return 1;\n\treturn n*factorial(n-1);\n}",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    else{\n        factorial(n) = factorial(n-1)*n;\n    }\n}\n\n\nint main(){\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n\tif (n==0) return 1;\n\telse return n * factorial(n-1);\n}\n\n\nint main () {\n\n\tint n;\n\tcin >>n;\n\t\n\tcout <<factorial(n);\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial (int n){\n\tif ( n== 0) return 1;\n\treturn n* factorial (n-1);\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif(n==1 or n==0) return 1;\n\treturn n*fact(n-1);\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << fact(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact_rec(int n) {\n\t\tif (n <= 1) return 1;\n\t\telse return n * fact_rec(n-1);\n}\n\nint main() {\n\n\tint n;\n\tcin >> n;\n\tcout << fact_rec(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact_rec(int n) {\n\t\tif (n <= 1) return 1;\n\t\telse return n * fact_rec(n-1);\n}\n\nint main() {\n\n\tint n;\n\tcin >> n;\n\tcout << fact_rec(n) << endl;\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if(n <= 1) return 1\n  return factorial(n-1)*n;\n}\n\nint main(){\n}",
  "int factorial(int n) {\r\n\t\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n\t\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif(n==1 or n==0) return 1;\n\treturn n*factorial(n-1);\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\r\nif (n == 0) return 1;\r\nelse return n * factorial(n - 1);\r\n\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint fact_rec(int n) {\n\t\tif (n <= 1) return 1;\n\t\telse return n * fact_rec(n-1);\n}\n\nint main() {\n\n\tint n;\n\tcin >> n;\n\tcout << fact_rec(n) << endl;\n}\n",
  "\nint factorial(int n) {\n    if(n == 0)  return 1;\n    else        return n * factorial(n-1);\n} \n",
  "#include <iostream>\nusing namespace std;\n\nint fact_rec(int n) {\n\t\tif (n <= 1) return 1;\n\t\telse return n * fact_rec(n-1);\n}\n\n",
  "int fac_rec(int n){\n    if (n <= 1) return 1;\n    else return n*fact_rec(n-1)\n}\n",
  "int fac_rec(int n){\n    if (n <= 1) return 1;\n    else return n*fact_rec(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "int fact_rec(int n){\n    if (n <= 1) return 1;\n    else return n*fact_rec(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nif(n == 2) return 2;\nelse return factorial(n - 1)*n;\n}\n\nint main() {\nint n, x;\ncin >> n;\nx = factorial(n);\ncout << x << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n if (n==0) return 1;\n else return n*factorial(n-1);\n }\nint main() {\n int n;\n cin >> n;\n cout << factorial(n) << endl;\n }\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 2) return (2);\n    else {\n        return factorial(n-1)*n;\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    factorial(n);\n    cout << factorial(n) << endl;\n}\n        \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nif(n == 0) return 1;\nelse return n*factorial(n - 1);\n}\n\nint main() {\nint n, x;\ncin >> n;\nx = factorial(n);\ncout << x << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 2) return (2);\n    else {\n        return factorial(n-1)*n;\n    }\n}\n\nint main() {}\n        \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1)\n        return 1;\n    else\n        return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "int factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint fact (int n) {\n  if ( n == 0 ) return 1;\n  else return n*fact(n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n <= 2) return (2);\n    else {\n        return factorial(n-1)*n;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n        \n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n < 2) return (1);\n    else {\n        return factorial(n-1)*n;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n        \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n<=1) return 1;\n    else return factorial (n-1)*n;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int x) {\r\n   if(x == 0) return 1;\r\n   return x*factorial(x - 1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin>> x;\r\n    cout<< factorial(x);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\t\tif (n <= 1) return 1;\n\t\telse return n * factorial(n-1);\n       }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n) {\n  if ( n == 0 ) return 1;\n  else return n*fact(n-1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << fact(n) << endl;\n}\n",
  "//PRO1 Arnau Castellvi\n//N0501-P12509\n// factorial recursiu\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial (n - 1);\n}\n\nint main() {\n    int input;\n    while (cin >> input) cout << factorial(input) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0)\n        return 1;\n    else if (n == 1)\n        return 1;\n    else\n        return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\nint r;\n\n    if (n<2){\n        r=1;\n    }else{\n    r=n*factorial(n-1);\n    }\n    return r;\n\n}\nint main(){\n\nint n;\nint r;\n\n    while(cin >> n){\n    r=factorial(n);\n    cout << n ;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\nif (n==0){\nreturn 1;\n}\nelse return factorial (n);\n}\n\nint main () {\nint n;\nwhile (cin>>n) {\ncout << factorial ((n)*(factorial (n-1))) << endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n     if(n == 0){\n      return 1;\n      }\n      else{\n      return factorial (n-1)*n;\n      }\n}\n    int main(){\n     int n;\n     while(cin>>n){\n     cout<<factorial(n)<<endl;\n     }\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int numero;\n    cin >> numero;\n    cout << factorial(numero) << endl;\n}\n",
  "int factorial (int n){\n     if(n == 0){\n      return 1;\n      }\n      else{\n      return factorial (n-1)*n;\n      }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\nif (n==0){\nreturn 1;\n}\nelse return factorial (n);\n}\n\nint main () {\nint n;\nfor (int i=0;i<=12;++i){\nwhile (cin>>n) {\ncout << factorial ((n)*(factorial (n-1))) << endl;\n}\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\n    if(n==1) return 1;\n    else if(n>=1) return n*factorial(n-1);\n    \n}\n\n\nint main (){\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n   if(n==0)\n   return 1;\n   \n   else\n   return n*factorial (n-1);\n}\n\nint main()\n{\nint n,total;\n\ncin >>n;\n\ntotal=factorial(n);\n\ncout<<total<<endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\n    if(n==0) return 1;\n    else if(n>=1) return n*factorial(n-1);\n    \n}\n\n\nint main (){\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n}\n",
  "int factorial(int n) {\n    int r=1;\n    if(n==0) return 1;\n    else r=n*factorial(n-1);\n    return r;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else {\n        return factorial (n-1)*n;\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\nint fa= 0;\nint suma=1\n    if (n!=0 ){\n    for ( i=1 ;1>=1;1++){\n      suma=n*n-1;\n         }\n         return suma ;\n         }\n         else{\n         return 1;\n \n int main (){\nint a , b ;\nwhile( cin >> n ){\ncout << factorial(n) << endl;\n}} \n   \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\nif (n==0){\nreturn 1;\n}\nelse return factorial (n-1)*n;\n}\n\nint main () {\nint n;\nwhile (cin>>n) {\ncout << factorial(n) << endl;\n\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if(n == 0) return 1;\n    else total = n*factorial(n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\n    if(n==0) return 1;\n    else if(n>=1) return n*factorial(n-1);\n    \n}\n\n\nint main (){\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\n    if(n==0) return 1;\n    else if(n>=1) return n*factorial(n-1);\n    \n}\n\nint main (){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==1) return 1;\n\treturn (n*factorial(n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n* factorial (n-1);\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\nif ( n == 0 ) return 1;\nelse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n    if(n<=1)return 1;\n    else return n*fact(n-1);\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << fact(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n    if(n<=1)return 1;\n    else return n*fact(n-1);\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << fact(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial( int n ){\n\tif ( n == 0) return 1;\n\telse {\n\t\treturn n*factorial(n-1);\n\t\t\n\t}\t\n\t\n}\nint main(){\n\tint x;\n\tcin>>x;\n\tcout << factorial(x)<<endl;\n}\n",
  "//Factorial recursiu\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif (n<2){\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn n*factorial(n-1);\n\t}\n\t\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\t\n\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif( n == 0 or n == 1) return 1;\n\tfor ( int x=n-1; x>0; --x ){\n\t\tn *= x;\n\t}\n\treturn n;\n}\n\nint main (){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "int factorial(int n) {\n    if (n < 2) return 1;\n    return n * factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n\tint res = 1;\r\n\tfor(int i=n; i>0; --i) {\r\n\t\tres *= i;\r\n\t}\r\n\treturn res;\r\n\r\n}\r\n\r\nint main() {\r\n\r\n\tint n1;\r\n\tcin >> n1;\r\n\r\n\tint fact = factorial(n1);\r\n\tcout << \"Facotiral: \" << fact << \".\" << endl;\r\n\r\n}\r\n\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) return 0;\n\telse if (n==1) return 1;\n\treturn n*factorial(n-1);\n}\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n\n\n}\n",
  "# include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\r\n if ( n == 0 )\r\n return 1;\r\n \r\n else\r\n return n*factorial ( n-1 );\r\n\r\n}\r\n\r\nint main () {\r\n\r\nint n;\r\n\r\ncin >> n;\r\n\r\ncout << factorial ( n ) << endl;\r\n\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\n\tif (!n)\t\treturn 1;\n\t\n\treturn n * factorial (n-1);\n}\n\t\n\t\nint main() {\n\t\n\tint n = 0;\n\t\n\twhile (n <= 12)\n\t\tcout << factorial (n++) << endl;\n\t\t\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main(){\r\n    int n;\r\n    while (cin>>n){\r\n        cout<<factorial(n)<<endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n<=1){\n        return 1;\n    }\n    else return n*factorial(n-1);\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else {\r\n        int k = 1;\r\n        while (n >= 1) {\r\n            k *= factorial (n-1);\r\n            --n;\r\n        }\r\n        return n;\r\n    }\r\n}\r\n\r\nint main() {\r\n}\r\n",
  "# include <iostream>\n# include <cmath>\nusing namespace std;\n\nint factorial (int n) {\n\n    int f=1;\n    while (n > 1) {\n    f = f*n;\n    n = n-1;\n    }\n    return f;\n}\n\nint main () {\n\n    int m;\n    while (cin >> m) {\n        cout << m << \" ! = \" << factorial(m) << endl;\n    }\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n \r\n  int res = 1;\r\n  for(int i = 1; i <= n; ++i){\r\n        res = res*i;\r\n  }\r\n  return res;\r\n}\r\n\r\nint main(){\r\n\r\n    int n;\r\n    cin >> n;\r\n    if(n >= 0 and n <= 12) cout << factorial(n) << endl;\r\n    else cout << \"No existeix\" << endl;\r\n    \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint n,m;\n\nint factorial(int n){\n  if(n==0) {\n    return 1;\n  }\n  else{\n    return n*factorial(n-1);\n  }\n  \n}\n\nint main(){\n  cin >> n;\n  \n  cout << factorial(n);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int prod = 1;\n    if (n == 0 or n == 1) return 1;\n    for (int i = 2; i <= n; ++i) {\n        prod *= i;\n    }\n    return prod;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tfor (int cont=n-1; cont>1; --cont) {\n\t\tn*=cont;\n\t}\n\treturn n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n  if (n <= 1)\n    return 1;\n  else\n    return factorial(n-1)*n;\n}\n\nint main() {\n  int i;\n  while (cin >> i) {\n    cout << i << \"! = \" << factorial(i) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint mcd (int a,int b) {\n\t\n\twhile (a%b != 0) {\n\t\tint c=a;\n\t\ta=b;\n\t\tb=c%b;\n\t}\n    return b;\n}\n    \nint main () {\n\tint a,b;\n\tcin >> a >> b;\n\tcout << mcd (a,b) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint mcd (int a,int b) {\n\t\n\twhile (a%b != 0) {\n\t\tint c=a;\n\t\ta=b;\n\t\tb=c%b;\n\t}\n    return b;\n}\n    \nint main () {\n\tint a,b;\n\tcin >> a >> b;\n\tcout << mcd (a,b) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n <= 1) return 1;\r\n    return n * factorial(n-1);\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    while (cin >> n){\r\n    cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "int factorial(int n){\r\n  if (n <= 1) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n        if ( n <= 1 ) return 1;\n        else return n*factorial(n-1);\n}\n\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 0) return 0;\n    else if (n > 1){\n        \n        return n*factorial(n-1);\n        \n    }\n    return 1;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    factorial(x);\n    cout << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n<=1) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n)<< endl;\n}\n\n\t\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint facto(int n)  {\nif (n==0) return 1;\nelse return n*facto(n-1);\n}\n\nint main () {\nint m;\ncin>>m;\ncout<< facto(m) <<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)  {\nif (n==0 and n<=12) return 1;\nelse return n*factorial(n-1);\n}\n\nint main () {\nint m;\ncin>>m;\ncout<< factorial(m) <<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    \n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;   \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#inlcude <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0)return 1;\n\treturn n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0)return 1;\n\treturn n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n>1) return n *= factorial (n-1);\n\telse return n;\n}\n\nint main (){\n\tint n;\n\tcin >> n;\n\tcout << factorial (n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n==0) return 1;\n\tif (n>1) return n *= factorial (n-1);\n\telse return n;\n}\n\nint main (){\n\tint n;\n\tcin >> n;\n\tcout << factorial (n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if(n == 0) return 1;\n    else total = n*factorial(n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n\tif (n < 2) return (1);\n\treturn (factorial (n-1)*n);\n}\n\nint main (){\n\tint n ;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n\t}\n",
  "#include <iostream>\n\nusing namespace std;\nint factorial (int n){\n\t\tif(n == 0) return 1;\n\t\telse return n*factorial(n-1);\n\t\n\t\t\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout <<  factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint fact(int x) {\n   if (x==0) return 1;\n   else return x*fact(x-1);\n}\n\n\n",
  "#include <iostream.h>\r\n#include <stdlib.h>\r\n\r\nint factorial(int n)\r\n{\r\n      if (n==0) return 1;\r\n      else return (n*factorial(n-1));\r\n}\r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n            \n}\nint factorial (int n){\n    int r;\n    if (n>12){\n        return 0;\n    }\n    if (n==1){\n        r=1;\n    }\n    else {\n        r=n*factorial(n-1);\n    }\n    return r;\n}\n\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact2 ( int x ){\n    if ( x == 0 ) return 1;\n    return x * fact2(x-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n    \n}\n\n\n\nint main() {\n\nint n;\ncin >> n;\n\ncout << factorial(n) << endl;\n\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n==1) return 1;\n    return n*factorial(n-1);\n}\nint main(){\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return n;\n\telse {\n\t\treturn factorial(n - 1)*n;\n\t}\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n\tif (n==1) return 1;\n\t\n\telse return (n* factorial(n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) { \n if(n<=1)\n  return 1;\n else\n  return n*factorial(n-1);\n}\n\nint main () {\n int n;\n  while(cin>>n)\n   cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n    \n    \n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\tif (n==0) return 1;\n\tif (n==1) return 1;\n\tif (n>1) return (n*factorial(n-1));\n}\n\nint main (){\n\tint n;\n\tcin>>n;\n\tcout <<factorial(n)<<endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n <= 1) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main() {\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n     if (n==0) return 1;\n     else return (n*factorial(n-1));\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint canvibase(int a, int b){\n//\tint c=a%b;\n\tif (a==0) return 0;\n\telse return canvibase (a%b*10+canvibase(a/b, b), b);\n}\nint main (){\nint a;\ncin >> a;\ncout << canvibase(a, 2);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\treturn n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 1 or n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main () {\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n == 0 or n ==1) return 1;\nelse return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    int k=factorial(n);\n    cout << k << endl;\n}\n    \n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    return (n==1)?1:n*factorial(n-1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nstatic inline int factorial(int n)\r\n{\r\n    return (n==1)?1:n*factorial(n-1);\r\n}\r\n/*\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n    system(\"pause\");\r\n}\r\n*/\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n)\r\n{\r\n    if (n==1)\r\n        return 1;\r\n    else \r\n        return factorial(n-1)*n;\r\n}\r\n/*\r\nstatic inline int factorial2(int n)\r\n{\r\n    return (n==1)?1:n*factorial2(n-1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n    system(\"pause\");\r\n}\r\n*/\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n  if(n==0) return 1;\n  return factorial(n-1)*n;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n   int n;\n   cin >> n;\n   cout << factorial(n) << endl; \n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\nif(n<=1) {return 1;}\nelse {return n*factorial(n-1);}\n}\nint main() {\n}\t\n\n    \n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n)\n    if(n<2) {return 1;}\n    else {return n*factorial(n-1);}\nint main(){}\n",
  "int factorial(int n, int& r){\n    if (n<2){r=1;}\n    else {r=n*factorial(n-1);}\n    return r;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int res = 1;\n\tint i = 1;\n    while ( i<=n ) {\n       res= i*res;\n       i = i + 1;\n  }\n  return res;\n}\n\n\n\nint main () {\n    int a, b;\n    cin >> a >> b;\n    cout << factorial(a) << \" \" << factorial(b) << endl;\n}\n",
  "int factorial(int n){\n    int r;\n    if (n<2){r=1;}\n    else {r=n*factorial(n-1);}\n    return r;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int res;\n    if (n == 0){\n        res = 1;\n    }\n    else{\n        res = n*factorial(n-1);\n    }\n    return res;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return n;\n    else return (n * factorial (n-1));\n    }\nint main (){\n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tint x=1;\n\tif (n==1){ return 1;\n}else{ return n*factorial(n-1);\n}\n}\n",
  "#inlcude <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0)return 1;\n\treturn n*factorial(n-1)\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n ) {\n    int r;\n    if (n >= 2) {\n        r = n * factorial (n - 1):\n    }\n    else {\n        r = 1;\n    }\n    return r;\n}\n\n",
  "int fact (int n){\r\n    if (n==0)return 1;\r\n    else return n*fact(n-1);\r\n    }\r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tint res=1;\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\nif(n==0){\nreturn 1;\n}\nelse{ \nreturn n*factorial(n-1);\n}\n\n\n}\n\n\n\nint main () {\nint a;\nwhile(cin>>a){\ncout<<factorial(a)<<endl;\n}\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tint res = 1;\n\twhile (n > 1) {\n\t\tres *= n;\n\t\t--n;\n\t}\n\treturn res;\n}\n\nint main() {\n\tint a;\n\tcin>>a;\n\tcout<<factorial(a)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint result = n;\nif (n > 1){\n    n -= 1;\n    result *= factorial (n);\n}\nreturn result;\n}\n\nint main(){\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    int f=1;\r\n    while(n>1){\r\n               f=f*n;\r\n               n=n-1;\r\n    }\r\n    return f;\r\n        \r\n}\r\nint main (){\r\n    #ifndef _JUTGE_\r\n                system(\"pause\");\r\n        #endif\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1)\n}\n\nint main() {  \n}\n\n\n\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial (int n) {\n    if ( n == 1) return n;\n    else {\n           return ( n * factorial ( n-1));\n        }\n    }\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial (x) << endl;\n    }\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial( int n ){\n    if ( n == 1 ) return 1;\n    else return n * factorial( n - 1 );\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial( n ) << endl;\n} \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial( int n ){\n    else if ( n == 1 or n == 0 ) return 1;\n    else return n * factorial( n - 1 );\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial( n ) << endl;\n} \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\telse return (n * factorial(n - 1));\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n == 0) return 1;\n  else return(n * factorial(n-1));\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial_rec(int x){\r\n\tint r;\r\n\tif(x==0){\r\n\t\tr=1;\r\n\t}\r\n\telse{\r\n\t\tr=x*factorial_rec(x-1);\r\n\t}\r\n\treturn r;\r\n}\r\nint main (){\r\nint f;\r\ncin >> f;\r\ncout << factorial_rec(f) <<endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial_ite(int x){\r\n\tint r=1;\r\n\twhile(x!=0){\r\n\t\tr=r*x;\r\n\t\tx=x-1;\r\n\t}\r\n\treturn r;\r\n}\r\nint main(){\r\n\tint x;\r\n\twhile(cin>>x){\r\n\t\tint r;\r\n\t\tr=factorial_ite(x);\r\n\t\tcout<<r;\r\n\t}\r\n}\r\n\n\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial (int n) {\n    if ( n == 1) return n;\n    else {\n    return ( n * factorial ( n-1));\n        }\n    }\nint main (){\n    }\n",
  "int factorial(int n) {\n    if (n == 0) return 0;\n    else if (n == 1) return 1;    \n    else return n*factorial(n-1);\n}\n\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint fact (int n){\n   int r;\n   if (n == 0) r = 1;\n   else r = n * fact(n - 1);\n   return r;\n   }\n   \nint main(){\n   int n;\n   cin>>n;\n   int r = fact(n);\n   cout<<r<<endl;\n   }\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n); \r\n    if(n==0) return 1;\r\n    else {\r\n         return  n*factorial(n-1);\r\n         }\r\n} \r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout<< factorial<<endl;\r\n    }\r\n         \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\treturn (n<=1)?1:n*factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n/*\r\n\tint test;\r\n\tcin >> test;\r\n\tcout << factorial( (int)test ) << endl;\r\n*/\r\n}\r\n\n\n",
  "int factorial(int n) {\n    if(n==0) return 1;\n    return(n*factoral(n-1));\n}\n\n\n",
  "[Project]\r\nFileName=FACT2.dev\r\nName=FACT2\r\nUnitCount=1\r\nType=0\r\nVer=1\r\nObjFiles=\r\nIncludes=\r\nLibs=\r\nPrivateResource=\r\nResourceIncludes=\r\nMakeIncludes=\r\nCompiler=\r\nCppCompiler=\r\nLinker=\r\nIsCpp=1\r\nIcon=\r\nExeOutput=\r\nObjectOutput=\r\nOverrideOutput=0\r\nOverrideOutputName=\r\nHostApplication=\r\nFolders=\r\nCommandLine=\r\nUseCustomMakefile=0\r\nCustomMakefile=\r\nIncludeVersionInfo=0\r\nSupportXPThemes=0\r\nCompilerSet=0\r\nCompilerSettings=\r\n\r\n[Unit1]\r\nFileName=FACT2.cpp\r\nCompileCpp=1\r\nFolder=\r\nCompile=1\r\nLink=1\r\nPriority=1000\r\nOverrideBuildCmd=0\r\nBuildCmd=\r\n\r\n[VersionInfo]\r\nMajor=0\r\nMinor=1\r\nRelease=1\r\nBuild=1\r\nLanguageID=1033\r\nCharsetID=1252\r\nCompanyName=\r\nFileVersion=\r\nFileDescription=Developed using the Dev-C++ IDE\r\nInternalName=\r\nLegalCopyright=\r\nLegalTrademarks=\r\nOriginalFilename=\r\nProductName=\r\nProductVersion=\r\nAutoIncBuildNr=0\r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 1) return 1;\r\n    else return n * factorial (n-1);\r\n}\r\n\r\nint main() {\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==1) return 1;\n    else return n * factorial(n-1);\n}\n\n\nint main () {\n\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact;\n    if (n == 0) fact = 1;\n    else {\n        fact = factorial(n - 1) * n;\n    }\n    return fact;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1)\n}\n\n\n",
  "ELF\u0001\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0003\u0000\u0001\u0000\u0000\u0000\u0000\u0004\b4\u0000\u0000\u0000Ð\u0012\u0000\u0000\u0000\u0000\u0000\u00004\u0000 \u0000\t\u0000(\u0000$\u0000!\u0000\u0006\u0000\u0000\u00004\u0000\u0000\u00004\u0004\b4\u0004\b \u0001\u0000\u0000 \u0001\u0000\u0000\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0003\u0000\u0000\u0000T\u0001\u0000\u0000T\u0004\bT\u0004\b\u0013\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0004\bp\t\u0000\u0000p\t\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0001\u0000\u0000\u0000p\t\u0000\u0000p\u0004\bp\u0004\b<\u0001\u0000\u0000h\u0002\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u0004\b\u0004\bà\u0000\u0000\u0000à\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000h\u0001\u0000\u0000h\u0004\bh\u0004\b \u0000\u0000\u0000 \u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0004\b\u0004\b\u0018\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Påtdô\b\u0000\u0000ô\u0004\bô\u0004\b\u001c\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Qåtd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000/lib/ld-linux.so.2\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000GNU\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000SuSESuSE\u0000\u0000\u0000\u0000\u0001\u0000\n\u0000\u0003\u0000\u0000\u0000\u000f\u0000\u0000\u0000\u000e\u0000\u0000\u0000\f\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0007\u0000\u0000\u0000\b\u0000\u0000\u0000\u0005\u0000\u0000\u0000\n\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u000b\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0012\u0000\u0000\u0000¸\u0000\u0000\u0000°\u0004\b\u0000\u0000\u0000\u0011\u0000\u0019\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0002\u0000\u0000\u0012\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0012\u0000\u0000\u0000\\\u0000\u0000\u0000@\u0004\b\u0000\u0000\u0000\u0011\u0000\u0019\u0000#\u0001\u0000\u0000\u0000\u0000\u0000\u0000î\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0000\u0000\u0000k\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0014\u0001\u0000\u0000ð\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u000f\u0000}\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0000\u0000\u0000\u0012\u0000\u0000\u0000Â\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000/\u0000\u0000\u0000¸\u0004\b\u0010\u0004\u0000\u0000\u0012\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000§\u0002\u0000\u0000\u0012\u0000\u0000\u0000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000Ö\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000libstdc++.so.6\u0000_ZNSolsEl\u0000_ZNSirsERi\u0000_ZNSolsEm\u0000__gxx_personality_v0\u0000_ZNSt8ios_base4InitC1Ev\u0000_ZSt3cin\u0000_ZNSt8ios_base4InitD1Ev\u0000_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_\u0000_ZSt4cout\u0000_Jv_RegisterClasses\u0000__gmon_start__\u0000libm.so.6\u0000libgcc_s.so.1\u0000libc.so.6\u0000__cxa_atexit\u0000_IO_stdin_used\u0000__libc_start_main\u0000GLIBC_2.0\u0000GLIBC_2.1.3\u0000CXXABI_1.3\u0000GLIBCXX_3.4\u0000\u0000\u0000\u0002\u0000\u0002\u0000\u0002\u0000\u0003\u0000\u0002\u0000\u0004\u0000\u0002\u0000\u0001\u0000\u0002\u0000\u0000\u0000\u0005\u0000\u0002\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0002\u0000ý\u0000\u0000\u0000\u0010\u0000\u0000\u00000\u0000\u0000\u0000\u0010ii\r\u0000\u0000\u0004\u00005\u0001\u0000\u0000\u0010\u0000\u0000\u0000s\u001fi\t\u0000\u0000\u0003\u0000?\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ó¯k\u0005\u0000\u0000\u0005\u0000K\u0001\u0000\u0000\u0010\u0000\u0000\u0000t)\b\u0000\u0000\u0002\u0000V\u0001\u0000\u0000\u0000\u0000\u0000\u0000h\u0004\b\u0006\u000e\u0000\u0000°\u0004\b\u0005\u0002\u0000\u0000@\u0004\b\u0005\u0005\u0000\u0000x\u0004\b\u0007\u0001\u0000\u0000|\u0004\b\u0007\u0003\u0000\u0000\u0004\b\u0007\u0004\u0000\u0000\u0004\b\u0007\u0006\u0000\u0000\u0004\b\u0007\u0007\u0000\u0000\u0004\b\u0007\t\u0000\u0000\u0004\b\u0007\u000b\u0000\u0000\u0004\b\u0007\f\u0000\u0000\u0004\b\u0007\r\u0000\u0000\u0004\b\u0007\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Uåì\bèõ\u0000\u0000\u0000èP\u0001\u0000\u0000è[\u0003\u0000\u0000ÉÃ\u0000ÿ5p\u0004\bÿ%t\u0004\b\u0000\u0000\u0000\u0000ÿ%x\u0004\bh\u0000\u0000\u0000\u0000éàÿÿÿÿ%|\u0004\bh\b\u0000\u0000\u0000éÐÿÿÿÿ%\u0004\bh\u0010\u0000\u0000\u0000éÀÿÿÿÿ%\u0004\bh\u0018\u0000\u0000\u0000é°ÿÿÿÿ%\u0004\bh \u0000\u0000\u0000é ÿÿÿÿ%\u0004\bh(\u0000\u0000\u0000éÿÿÿÿ%\u0004\bh0\u0000\u0000\u0000éÿÿÿÿ%\u0004\bh8\u0000\u0000\u0000épÿÿÿÿ%\u0004\bh@\u0000\u0000\u0000é`ÿÿÿÿ%\u0004\bhH\u0000\u0000\u0000éPÿÿÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00001í^áäðPTRh@\u0004\bhÐ\u0004\bQVhP\u0004\bègÿÿÿôUåSè\u001c\u0000\u0000\u0000Ã3\u0014\u0000\u0000ì\u0004üÿÿÿÒt\u0005èÿÿÿX[]Ã\u001c$ÃUåPP=Ð\u0004\b\u0000t\fë\u001cÀ\u0004£¨\u0004\bÿÒ¡¨\u0004\b\u0010ÒuëÆ\u0005Ð\u0004\b\u0001ÉÃöUåQQ\u0015\u0004\bÒt\u0016¸\u0000\u0000\u0000\u0000Àt\rì\fh\u0004\bÿÐÄ\u0010ÉÃUåS»\u0001\u0000\u0000\u0000M\bÉt\u000e1ÒÈ)ÐB\u000f¯Ø9ÑuôØ[]Ã¶\u0000\u0000\u0000\u0000¿\u0000\u0000\u0000\u0000UåÇE\bÔ\u0004\b]éØþÿÿUúÿÿ\u0000\u0000\u000fÂHå\u000fÀQÐQu\u0002ÉÃì\fhÔ\u0004\bè3þÿÿÄ\fh¤\u0004\bj\u0000hð\u0004\bè?þÿÿÄ\u0010ÉÃöUºÿÿ\u0000\u0000¸\u0001\u0000\u0000\u0000å]ë°Uåì\u0018äðì\u0018EüPh@\u0004\bè.þÿÿEüPèMÿÿÿÂ¡°\u0004\bÄ\u0014@ô¼\u0004\b¨@u\u0004¨\bt\"PPRh°\u0004\bèÍýÿÿÄ\u0010ì\fPè\u0001þÿÿ1ÀÉÃt&\u0000PPRh°\u0004\bè\u000bþÿÿÄ\u0010ì\fPèßýÿÿ1ÀÉÃUåì\u0018]ôèwþÿÿÃ\u0012\u0000\u0000uø}üèAýÿÿ@\u0000\u0000\u0000@\u0000\u0000\u0000)ÐÁø\u0002Eðu\r]ôuø}üì]Ã1ÿÖv\u0000¼'\u0000\u0000\u0000\u0000Gÿ\u0016Æ\u0004;}ðrõ]ôuø}üì]Ã´&\u0000\u0000\u0000\u0000Uåì\u0018]ôè\u0007þÿÿÃ\u001e\u0012\u0000\u0000uø}ü@\u0000\u0000\u0000@\u0000\u0000\u0000)ÐÁø\u0002EðHøÿt\u001741ÿ´&\u0000\u0000\u0000\u0000Gÿ\u0016î\u00049}ðuõè@\u0000\u0000\u0000]ôuø}üì]ÃUåSR¡t\u0004\bøÿt\u0012»t\u0004\bÿÐCüë\u0004øÿuóX[]Ã\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000UåSì\u0004èyýÿÿÃ\u0011\u0000\u0000èyýÿÿY[]Ã\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0001\u001b\u0003;\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000\fþÿÿ8\u0000\u0000\u0000\\þÿÿT\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001zP\u0000\u0001|\b\u0005\u0000¸\u0004\b\f\u0004\u0004\u0001\u0000\u0000\u0018\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0004\b>\u0000\u0000\u0000\u0000A\u000e\b\u0002L\r\u0005S.\u0010 \u0000\u0000\u0000<\u0000\u0000\u0000P\u0004\b}\u0000\u0000\u0000\u0000A\u000e\b\u0002B\r\u0005R.\u0010I.\u0004h.\u0010\u0000\u0000\u0000\u0000\u0000\u0000ÿÿÿÿ@\u0004\b\u0000\u0000\u0000\u0000ÿÿÿÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000å\u0000\u0000\u0000\u0001\u0000\u0000\u0000ï\u0000\u0000\u0000\u0001\u0000\u0000\u0000ý\u0000\u0000\u0000\f\u0000\u0000\u00000\u0004\b\r\u0000\u0000\u0000Ð\u0004\b\u0004\u0000\u0000\u0000 \u0004\b\u0005\u0000\u0000\u0000à\u0004\b\u0006\u0000\u0000\u0000ð\u0004\b\n\u0000\u0000\u0000b\u0001\u0000\u0000\u000b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000l\u0004\b\u0002\u0000\u0000\u0000P\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0017\u0000\u0000\u0000Ø\u0004\b\u0011\u0000\u0000\u0000À\u0004\b\u0012\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0013\u0000\u0000\u0000\b\u0000\u0000\u0000þÿÿo`\u0004\bÿÿÿo\u0002\u0000\u0000\u0000ðÿÿoB\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000^\u0004\bn\u0004\b~\u0004\b\u0004\b\u0004\b®\u0004\b¾\u0004\bÎ\u0004\bÞ\u0004\bî\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000\u001c\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00004\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000U\u0004\b\u0004\u0000\u0000\u0000Ð\u0004\b\u0012\u0000\u0000\u00000\u0004\b\u000b\u0000\u0000\u00000\u0004\b%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000,\u0000\u0000\u0000\u0002\u0000{\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000U\u0004\b\u0004\u0000\u0000\u0000ç\u0004\b\u0004\u0000\u0000\u0000E\u0004\b\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000!\u0000\u0000\u0000\u0002\u0000o\u0000\u0000\u0000\u0000\u0000\u0000y\u0000\u0000\u0000_IO_stdin_used\u0000\u0000\u0000\u0000\u0000k\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0000\u0000\u0000\u0004\b\"\u0004\b../sysdeps/i386/elf/start.S\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000GNU AS 2.16.91.0.2\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0014\u0000\u0000\u0000\u0004\u0001X\u0000\u0000\u0000$\u0004\b$\u0004\b\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000N\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\u0007\u0002t\u0000\u0000\u0000\u0001\b\u0002\u0000\u0000\u0000\u0002\u0007\u0002\u0000\u0000\u0000\u0004\u0007\u0002v\u0000\u0000\u0000\u0001\u0006\u0002\u0007\u0000\u0000\u0000\u0002\u0005\u0003int\u0000\u0004\u0005\u0002@\u0000\u0000\u0000\b\u0005\u0002\u0000\u0000\u0000\b\u0007\u0002E\u0000\u0000\u0000\u0004\u0005\u0002\u0000\u0000\u0000\u0004\u0007\u0002}\u0000\u0000\u0000\u0001\u0006\u0004¬\u0000\u0000\u0000\u0001\u0019\u0000\u0000\u0000\u0001\u0005\u0003ð\u0004\b\u0005O\u0000\u0000\u0000\u0000w\u0000\u0000\u0000\u0002\u0000V\u0000\u0000\u0000\u0004\u0001|\u0000\u0000\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crti.S\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000GNU AS 2.16.91.0.2\u0000\u0001w\u0000\u0000\u0000\u0002\u0000f\u0000\u0000\u0000\u0004\u0001\u001c\u0001\u0000\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crtn.S\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000GNU AS 2.16.91.0.2\u0000\u0001\u0001\u0011\u0000\u0010\u0006\u0011\u0001\u0012\u0001\u0003\b\u001b\b%\b\u0013\u0005\u0000\u0000\u0000\u0001\u0011\u0001\u0010\u0006\u0012\u0001\u0011\u0001%\u000e\u0013\u000b\u0003\u000e\u001b\u000e\u0000\u0000\u0002$\u0000\u0003\u000e\u000b\u000b>\u000b\u0000\u0000\u0003$\u0000\u0003\b\u000b\u000b>\u000b\u0000\u0000\u00044\u0000\u0003\u000e:\u000b;\u000bI\u0013?\f\u0002\n\u0000\u0000\u0005&\u0000I\u0013\u0000\u0000\u0000\u0001\u0011\u0000\u0010\u0006\u0003\b\u001b\b%\b\u0013\u0005\u0000\u0000\u0000\u0001\u0011\u0000\u0010\u0006\u0003\b\u001b\b%\b\u0013\u0005\u0000\u0000\u0000T\u0000\u0000\u0000\u0002\u0000/\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001../sysdeps/i386/elf\u0000\u0000start.S\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002\u0000\u0004\b\u0003À\u0000\u00010\u001e1:\"\u001f\u0003\u0018\u001dVW\u001e\u001fYX\u0002\u0001\u0000\u0001\u0001 \u0000\u0000\u0000\u0002\u0000\u001a\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0000init.c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000C\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001/usr/src/packages/BUILD/glibc-2.3/cc/csu\u0000\u0000crti.S\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002U\u0004\b\u0003Ä\u0000\u0001:\u0002\u0001\u0000\u0001\u0001\u0000\u0005\u0002Ð\u0004\b\u00031\u0001\u001e,\u001e:V\u0002\u0006\u0000\u0001\u0001\u0000\u0005\u00020\u0004\b\u0003!\u0001\u001e,:\u0002\u0005\u0000\u0001\u0001\u0000\u0005\u00020\u0004\b\u0003\u000b\u0001\u001e,\u001eVd:d,,W\u001e\u001e\u001e\u0002\u0001\u0000\u0001\u0001{\u0000\u0000\u0000\u0002\u0000C\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001/usr/src/packages/BUILD/glibc-2.3/cc/csu\u0000\u0000crtn.S\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002U\u0004\b\u0003\"\u0001:\u0002\u0001\u0000\u0001\u0001\u0000\u0005\u0002ç\u0004\b\u0003\u0012\u0001\u001e\u001e\u001e\u0002\u0001\u0000\u0001\u0001\u0000\u0005\u0002E\u0004\b\u0003\t\u0001\u001e\u0002\u0001\u0000\u0001\u0001init.c\u0000short int\u0000GNU C 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000long long int\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000unsigned char\u0000long long unsigned int\u0000short unsigned int\u0000_IO_stdin_used\u0000\u0000.symtab\u0000.strtab\u0000.shstrtab\u0000.interp\u0000.note.ABI-tag\u0000.note.SuSE\u0000.hash\u0000.dynsym\u0000.dynstr\u0000.gnu.version\u0000.gnu.version_r\u0000.rel.dyn\u0000.rel.plt\u0000.init\u0000.text\u0000.fini\u0000.rodata\u0000.eh_frame_hdr\u0000.eh_frame\u0000.ctors\u0000.dtors\u0000.jcr\u0000.dynamic\u0000.got\u0000.got.plt\u0000.data\u0000.bss\u0000.comment\u0000.debug_aranges\u0000.debug_pubnames\u0000.debug_info\u0000.debug_abbrev\u0000.debug_line\u0000.debug_str\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000T\u0004\bT\u0001\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000h\u0004\bh\u0001\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\b\u0001\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0002\u0000\u0000\u0000 \u0004\b \u0001\u0000\u0000P\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000B\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0002\u0000\u0000\u0000ð\u0004\bð\u0001\u0000\u0000ð\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000J\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000à\u0004\bà\u0002\u0000\u0000b\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000R\u0000\u0000\u0000ÿÿÿo\u0002\u0000\u0000\u0000B\u0004\bB\u0004\u0000\u0000\u001e\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000_\u0000\u0000\u0000þÿÿo\u0002\u0000\u0000\u0000`\u0004\b`\u0004\u0000\u0000`\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000n\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000À\u0004\bÀ\u0004\u0000\u0000\u0018\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000w\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ø\u0004\bØ\u0004\u0000\u0000P\u0000\u0000\u0000\u0005\u0000\u0000\u0000\f\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u00000\u0004\b0\u0005\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000{\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000H\u0004\bH\u0005\u0000\u0000°\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0004\b\u0000\u0006\u0000\u0000È\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000Ð\u0004\bÐ\b\u0000\u0000\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000ì\u0004\bì\b\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000ô\u0004\bô\b\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000¨\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0010\u0004\b\u0010\t\u0000\u0000`\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000²\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000p\u0004\bp\t\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000¹\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000|\u0004\b|\t\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0004\b\t\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000Å\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0004\b\t\u0000\u0000à\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000Î\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000h\u0004\bh\n\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000l\u0004\bl\n\u0000\u00004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000 \u0004\b \n\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000â\u0000\u0000\u0000\b\u0000\u0000\u0000\u0003\u0000\u0000\u0000°\u0004\b¬\n\u0000\u0000(\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ç\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¬\n\u0000\u0000s\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ÿ\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¨\f\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Í\f\u0000\u0000ö\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ã\u000e\u0000\u0000v\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00009\u000f\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ô\u0010\u0000\u0000»\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000@\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000p\u0018\u0000\u0000ð\u0005\u0000\u0000#\u0000\u0000\u0000@\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\t\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`\u001e\u0000\u00000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000\u0000\u0000\u0000\u0000h\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0003\u0000\u0000\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0004\u0000\u0000\u0000\u0000\u0000ð\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0005\u0000\u0000\u0000\u0000\u0000à\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0006\u0000\u0000\u0000\u0000\u0000B\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000`\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\b\u0000\u0000\u0000\u0000\u0000À\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\t\u0000\u0000\u0000\u0000\u0000Ø\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\n\u0000\u0000\u0000\u0000\u00000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000b\u0000\u0000\u0000\u0000\u0000H\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\r\u0000\u0000\u0000\u0000\u0000Ð\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000e\u0000\u0000\u0000\u0000\u0000ì\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000f\u0000\u0000\u0000\u0000\u0000ô\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0010\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0011\u0000\u0000\u0000\u0000\u0000p\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0012\u0000\u0000\u0000\u0000\u0000|\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0015\u0000\u0000\u0000\u0000\u0000h\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0016\u0000\u0000\u0000\u0000\u0000l\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0017\u0000\u0000\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0018\u0000\u0000\u0000\u0000\u0000°\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001d\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000!\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000#\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ<\u0000\u0000\u00000\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿW\u0000\u0000\u0000p\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0012\u0000e\u0000\u0000\u0000|\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0013\u0000s\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0014\u0000\u0000\u0000\u0000Ð\u0004\b\u0001\u0000\u0000\u0000\u0001\u0000\u0019\u0000\u0000\u0000\u0000¨\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0018\u0000\u0000\u0000\u0000`\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000¬\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ¸\u0000\u0000\u0000x\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0012\u0000Å\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0013\u0000Ò\u0000\u0000\u0000l\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0011\u0000à\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0014\u0000ì\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\u0002\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ2\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ:\u0001\u0000\u0000@\u0004\b\u0010\u0000\u0000\u0000\u0002\u0000\r\u0000S\u0001\u0000\u0000Ô\u0004\b\u0001\u0000\u0000\u0000\u0001\u0000\u0019\u0000a\u0001\u0000\u0000ð\u0004\b\u0010\u0000\u0000\u0000\u0002\u0000\r\u0000i\u0001\u0000\u0000\u0000\u0004\b>\u0000\u0000\u0000\u0002\u0000\r\u0000\u0001\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿª\u0001\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿ½\u0001\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿÎ\u0001\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿá\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0012\u0000\u0000\u0000\u0006\u0002\u0000\u0000°\u0004\b\u0000\u0000\u0000\u0011\u0000\u0019\u0000\u001d\u0002\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0011\u0000\u0015\u0000&\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0002\u0000\u0000\u0012\u0000\u0000\u0000=\u0002\u0000\u0000ì\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u000f\u0000D\u0002\u0000\u0000¤\u0004\b\u0000\u0000\u0000\u0000\u0011\u0002\u0018\u0000Q\u0002\u0000\u0000@\u0004\b]\u0000\u0000\u0000\u0012\u0000\r\u0000a\u0002\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0012\u0000\u0000\u0000{\u0002\u0000\u00000\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u000b\u0000\u0002\u0000\u0000À\u0004\b#\u0000\u0000\u0000\u0012\u0000\r\u0000\u0002\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\r\u0000\u0002\u0000\u0000@\u0004\b\u0000\u0000\u0000\u0011\u0000\u0019\u0000¬\u0002\u0000\u0000Ð\u0004\bh\u0000\u0000\u0000\u0012\u0000\r\u0000¼\u0002\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿÈ\u0002\u0000\u0000P\u0004\b}\u0000\u0000\u0000\u0012\u0000\r\u0000Í\u0002\u0000\u0000\u0000\u0000\u0000\u0000î\u0000\u0000\u0000\u0012\u0000\u0000\u0000ê\u0002\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000 \u0000\u0018\u0000õ\u0002\u0000\u0000Ð\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u000e\u0000û\u0002\u0000\u0000\u0000\u0000\u0000\u0000k\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0013\u0003\u0000\u0000¬\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿ\u001a\u0003\u0000\u0000U\u0004\b\u0000\u0000\u0000\u0000\u0012\u0002\r\u00001\u0003\u0000\u0000l\u0004\b\u0000\u0000\u0000\u0000\u0011\u0002\u0017\u0000G\u0003\u0000\u0000Ø\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿL\u0003\u0000\u0000ð\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u000f\u0000[\u0003\u0000\u0000\u0000\u0000\u0000\u0000T\u0000\u0000\u0000\u0012\u0000\u0000\u0000£\u0003\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0010\u0000\u0018\u0000°\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000Ä\u0003\u0000\u0000¸\u0004\b\u0010\u0004\u0000\u0000\u0012\u0000\u0000\u0000å\u0003\u0000\u0000\u0000\u0000\u0000\u0000§\u0002\u0000\u0000\u0012\u0000\u0000\u0000ü\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000!\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000initfini.c\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crti.S\u0000call_gmon_start\u0000crtstuff.c\u0000__CTOR_LIST__\u0000__DTOR_LIST__\u0000__JCR_LIST__\u0000completed.4497\u0000p.4496\u0000__do_global_dtors_aux\u0000frame_dummy\u0000__CTOR_END__\u0000__DTOR_END__\u0000__FRAME_END__\u0000__JCR_END__\u0000__do_global_ctors_aux\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crtn.S\u00004ex1.cc\u0000_GLOBAL__I__Z9factoriali\u0000_ZSt8__ioinit\u0000__tcf_0\u0000_Z41__static_initialization_and_destruction_0ii\u0000__fini_array_end\u0000__fini_array_start\u0000__init_array_end\u0000__init_array_start\u0000_ZNSt8ios_base4InitC1Ev@@GLIBCXX_3.4\u0000_ZSt4cout@@GLIBCXX_3.4\u0000_DYNAMIC\u0000_ZNSolsEm@@GLIBCXX_3.4\u0000_fp_hw\u0000__dso_handle\u0000__libc_csu_fini\u0000__cxa_atexit@@GLIBC_2.1.3\u0000_init\u0000_Z9factoriali\u0000_start\u0000_ZSt3cin@@GLIBCXX_3.4\u0000__libc_csu_init\u0000__bss_start\u0000main\u0000__libc_start_main@@GLIBC_2.0\u0000data_start\u0000_fini\u0000_ZNSirsERi@@GLIBCXX_3.4\u0000_edata\u0000__i686.get_pc_thunk.bx\u0000_GLOBAL_OFFSET_TABLE_\u0000_end\u0000_IO_stdin_used\u0000_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@@GLIBCXX_3.4\u0000__data_start\u0000_Jv_RegisterClasses\u0000__gxx_personality_v0@@CXXABI_1.3\u0000_ZNSolsEl@@GLIBCXX_3.4\u0000_ZNSt8ios_base4InitD1Ev@@GLIBCXX_3.4\u0000__gmon_start__\u0000\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int total = 1;\r\n    if ( n == 0) return 1;\r\n    else total = n*factorial(n-1);\r\n    return total;\r\n}\r\n         \r\nint main (){\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n\n\n",
  "ELF\u0001\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0003\u0000\u0001\u0000\u0000\u0000\u0000\u0004\b4\u0000\u0000\u0000`\u0011\u0000\u0000\u0000\u0000\u0000\u00004\u0000 \u0000\t\u0000(\u0000$\u0000!\u0000\u0006\u0000\u0000\u00004\u0000\u0000\u00004\u0004\b4\u0004\b \u0001\u0000\u0000 \u0001\u0000\u0000\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0003\u0000\u0000\u0000T\u0001\u0000\u0000T\u0004\bT\u0004\b\u0013\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0004\b\b\b\u0000\u0000\b\b\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0001\u0000\u0000\u0000\b\b\u0000\u0000\b\u0004\b\b\u0004\b0\u0001\u0000\u0000È\u0001\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0002\u0000\u0000\u0000 \b\u0000\u0000 \u0004\b \u0004\bà\u0000\u0000\u0000à\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000h\u0001\u0000\u0000h\u0004\bh\u0004\b \u0000\u0000\u0000 \u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0004\b\u0004\b\u0018\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Påtd\u0007\u0000\u0000\u0004\b\u0004\b\u001c\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Qåtd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000/lib/ld-linux.so.2\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000GNU\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000SuSESuSE\u0000\u0000\u0000\u0000\u0001\u0000\n\u0000\u0003\u0000\u0000\u0000\u000b\u0000\u0000\u0000\n\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0007\u0000\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0012\u0000\u0000\u0000®\u0000\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0012\u0000\u0000\u0000H\u0000\u0000\u00008\u0004\b\u0000\u0000\u0000\u0011\u0000\u0019\u0000Ê\u0000\u0000\u0000\u0000\u0000\u0000\u0000î\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000k\u0001\u0000\u0000\u0012\u0000\u0000\u0000»\u0000\u0000\u0000\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u000f\u0000i\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u001b\u0000\u0000\u0000È\u0004\b\u0010\u0004\u0000\u0000\u0012\u0000\u0000\u0000Q\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000}\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000libstdc++.so.6\u0000_ZNSirsERi\u0000__gxx_personality_v0\u0000_ZNSt8ios_base4InitC1Ev\u0000_ZSt3cin\u0000_ZNSt8ios_base4InitD1Ev\u0000_Jv_RegisterClasses\u0000__gmon_start__\u0000libm.so.6\u0000libgcc_s.so.1\u0000libc.so.6\u0000__cxa_atexit\u0000_IO_stdin_used\u0000__libc_start_main\u0000GLIBC_2.0\u0000GLIBC_2.1.3\u0000CXXABI_1.3\u0000GLIBCXX_3.4\u0000\u0000\u0000\u0000\u0002\u0000\u0003\u0000\u0002\u0000\u0004\u0000\u0002\u0000\u0001\u0000\u0000\u0000\u0005\u0000\u0002\u0000\u0000\u0000\u0001\u0000\u0002\u0000¤\u0000\u0000\u0000\u0010\u0000\u0000\u00000\u0000\u0000\u0000\u0010ii\r\u0000\u0000\u0004\u0000Ü\u0000\u0000\u0000\u0010\u0000\u0000\u0000s\u001fi\t\u0000\u0000\u0003\u0000æ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ó¯k\u0005\u0000\u0000\u0005\u0000ò\u0000\u0000\u0000\u0010\u0000\u0000\u0000t)\b\u0000\u0000\u0002\u0000ý\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0006\n\u0000\u00008\u0004\b\u0005\u0003\u0000\u0000\u0010\u0004\b\u0007\u0001\u0000\u0000\u0014\u0004\b\u0007\u0002\u0000\u0000\u0018\u0004\b\u0007\u0004\u0000\u0000\u001c\u0004\b\u0007\u0005\u0000\u0000 \u0004\b\u0007\b\u0000\u0000$\u0004\b\u0007\t\u0000\u0000(\u0004\b\u0007\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Uåì\bèÅ\u0000\u0000\u0000è \u0001\u0000\u0000èË\u0002\u0000\u0000ÉÃ\u0000ÿ5\b\u0004\bÿ%\f\u0004\b\u0000\u0000\u0000\u0000ÿ%\u0010\u0004\bh\u0000\u0000\u0000\u0000éàÿÿÿÿ%\u0014\u0004\bh\b\u0000\u0000\u0000éÐÿÿÿÿ%\u0018\u0004\bh\u0010\u0000\u0000\u0000éÀÿÿÿÿ%\u001c\u0004\bh\u0018\u0000\u0000\u0000é°ÿÿÿÿ% \u0004\bh \u0000\u0000\u0000é ÿÿÿÿ%$\u0004\bh(\u0000\u0000\u0000éÿÿÿÿ%(\u0004\bh0\u0000\u0000\u0000éÿÿÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00001í^áäðPTRhà\u0004\bhp\u0004\bQVhÀ\u0004\bèÿÿÿôUåSè\u001c\u0000\u0000\u0000ÃË\u0013\u0000\u0000ì\u0004üÿÿÿÒt\u0005èÿÿÿX[]Ã\u001c$ÃUåPP=È\u0004\b\u0000t\fë\u001cÀ\u0004£4\u0004\bÿÒ¡4\u0004\b\u0010ÒuëÆ\u0005È\u0004\b\u0001ÉÃöUåQQ\u0015\u001c\u0004\bÒt\u0016¸\u0000\u0000\u0000\u0000Àt\rì\fh\u001c\u0004\bÿÐÄ\u0010ÉÃUåPP1Àäðì\u0010ÉÃUåì\u0010E\bPh8\u0004\bèÔþÿÿU\bÄ\u0010¸\u0001\u0000\u0000\u0000Òu\u0002ÉÃì\fBÿPèÏÿÿÿU\bÄ\u0010\u000f¯ÂÉÃt&\u0000UåÇE\bÌ\u0004\b]é¸þÿÿUúÿÿ\u0000\u0000\u000fÂHå\u000fÀQÐQu\u0002ÉÃì\fhÌ\u0004\bèCþÿÿÄ\fh0\u0004\bj\u0000h\u0010\u0004\bè?þÿÿÄ\u0010ÉÃöUºÿÿ\u0000\u0000¸\u0001\u0000\u0000\u0000å]ë°Uåì\u0018]ôè×þÿÿÃ\u0012\u0000\u0000uø}üèÑýÿÿ4\u0000\u0000\u00004\u0000\u0000\u0000)ÐÁø\u0002Eðu\r]ôuø}üì]Ã1ÿÖv\u0000¼'\u0000\u0000\u0000\u0000Gÿ\u0016Æ\u0004;}ðrõ]ôuø}üì]Ã´&\u0000\u0000\u0000\u0000Uåì\u0018]ôègþÿÿÃ\u0016\u0012\u0000\u0000uø}ü4\u0000\u0000\u00004\u0000\u0000\u0000)ÐÁø\u0002EðHøÿt\u001741ÿ´&\u0000\u0000\u0000\u0000Gÿ\u0016î\u00049}ðuõè@\u0000\u0000\u0000]ôuø}üì]ÃUåSR¡\f\u0004\bøÿt\u0012»\f\u0004\bÿÐCüë\u0004øÿuóX[]Ã\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000UåSì\u0004èÙýÿÿÃ\u0011\u0000\u0000èÙýÿÿY[]Ã\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0001\u001b\u0003;\u0018\u0000\u0000\u0000\u0002\u0000\u0000\u0000<þÿÿ8\u0000\u0000\u0000þÿÿT\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001zP\u0000\u0001|\b\u0005\u0000È\u0004\b\f\u0004\u0004\u0001\u0000\u0000\u0018\u0000\u0000\u0000 \u0000\u0000\u0000Ð\u0004\b<\u0000\u0000\u0000\u0000A\u000e\b\u0002B\r\u0005L.\u0010\u0018\u0000\u0000\u0000<\u0000\u0000\u0000 \u0004\b>\u0000\u0000\u0000\u0000A\u000e\b\u0002L\r\u0005S.\u0010\u0000\u0000\u0000\u0000ÿÿÿÿ`\u0004\b\u0000\u0000\u0000\u0000ÿÿÿÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000¤\u0000\u0000\u0000\f\u0000\u0000\u0000`\u0004\b\r\u0000\u0000\u0000p\u0004\b\u0004\u0000\u0000\u0000 \u0004\b\u0005\u0000\u0000\u0000\u0004\b\u0006\u0000\u0000\u0000à\u0004\b\n\u0000\u0000\u0000\t\u0001\u0000\u0000\u000b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0004\u0004\b\u0002\u0000\u0000\u00008\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0017\u0000\u0000\u0000 \u0004\b\u0011\u0000\u0000\u0000\u0010\u0004\b\u0012\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0013\u0000\u0000\u0000\b\u0000\u0000\u0000þÿÿo°\u0004\bÿÿÿo\u0002\u0000\u0000\u0000ðÿÿo\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0004\b®\u0004\b¾\u0004\bÎ\u0004\bÞ\u0004\bî\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0004\b\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000GCC: (GNU) 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000\u0000\u0000\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00004\u0000\u0000\u0000\u0002\u0000\u0000\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000U\u0004\b\u0004\u0000\u0000\u0000p\u0004\b\u0012\u0000\u0000\u0000`\u0004\b\u000b\u0000\u0000\u00000\u0004\b%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000,\u0000\u0000\u0000\u0002\u0000{\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000U\u0004\b\u0004\u0000\u0000\u0000\u0004\b\u0004\u0000\u0000\u0000u\u0004\b\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000!\u0000\u0000\u0000\u0002\u0000o\u0000\u0000\u0000\u0000\u0000\u0000y\u0000\u0000\u0000_IO_stdin_used\u0000\u0000\u0000\u0000\u0000k\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0000\u0000\u0000\u0004\b\"\u0004\b../sysdeps/i386/elf/start.S\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000GNU AS 2.16.91.0.2\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0014\u0000\u0000\u0000\u0004\u0001X\u0000\u0000\u0000$\u0004\b$\u0004\b\u0011\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000N\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\u0007\u0002t\u0000\u0000\u0000\u0001\b\u0002\u0000\u0000\u0000\u0002\u0007\u0002\u0000\u0000\u0000\u0004\u0007\u0002v\u0000\u0000\u0000\u0001\u0006\u0002\u0007\u0000\u0000\u0000\u0002\u0005\u0003int\u0000\u0004\u0005\u0002@\u0000\u0000\u0000\b\u0005\u0002\u0000\u0000\u0000\b\u0007\u0002E\u0000\u0000\u0000\u0004\u0005\u0002\u0000\u0000\u0000\u0004\u0007\u0002}\u0000\u0000\u0000\u0001\u0006\u0004¬\u0000\u0000\u0000\u0001\u0019\u0000\u0000\u0000\u0001\u0005\u0003\u0004\b\u0005O\u0000\u0000\u0000\u0000w\u0000\u0000\u0000\u0002\u0000V\u0000\u0000\u0000\u0004\u0001|\u0000\u0000\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crti.S\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000GNU AS 2.16.91.0.2\u0000\u0001w\u0000\u0000\u0000\u0002\u0000f\u0000\u0000\u0000\u0004\u0001\u001c\u0001\u0000\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crtn.S\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000GNU AS 2.16.91.0.2\u0000\u0001\u0001\u0011\u0000\u0010\u0006\u0011\u0001\u0012\u0001\u0003\b\u001b\b%\b\u0013\u0005\u0000\u0000\u0000\u0001\u0011\u0001\u0010\u0006\u0012\u0001\u0011\u0001%\u000e\u0013\u000b\u0003\u000e\u001b\u000e\u0000\u0000\u0002$\u0000\u0003\u000e\u000b\u000b>\u000b\u0000\u0000\u0003$\u0000\u0003\b\u000b\u000b>\u000b\u0000\u0000\u00044\u0000\u0003\u000e:\u000b;\u000bI\u0013?\f\u0002\n\u0000\u0000\u0005&\u0000I\u0013\u0000\u0000\u0000\u0001\u0011\u0000\u0010\u0006\u0003\b\u001b\b%\b\u0013\u0005\u0000\u0000\u0000\u0001\u0011\u0000\u0010\u0006\u0003\b\u001b\b%\b\u0013\u0005\u0000\u0000\u0000T\u0000\u0000\u0000\u0002\u0000/\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001../sysdeps/i386/elf\u0000\u0000start.S\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002\u0000\u0004\b\u0003À\u0000\u00010\u001e1:\"\u001f\u0003\u0018\u001dVW\u001e\u001fYX\u0002\u0001\u0000\u0001\u0001 \u0000\u0000\u0000\u0002\u0000\u001a\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0000init.c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000C\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001/usr/src/packages/BUILD/glibc-2.3/cc/csu\u0000\u0000crti.S\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002U\u0004\b\u0003Ä\u0000\u0001:\u0002\u0001\u0000\u0001\u0001\u0000\u0005\u0002p\u0004\b\u00031\u0001\u001e,\u001e:V\u0002\u0006\u0000\u0001\u0001\u0000\u0005\u0002`\u0004\b\u0003!\u0001\u001e,:\u0002\u0005\u0000\u0001\u0001\u0000\u0005\u00020\u0004\b\u0003\u000b\u0001\u001e,\u001eVd:d,,W\u001e\u001e\u001e\u0002\u0001\u0000\u0001\u0001{\u0000\u0000\u0000\u0002\u0000C\u0000\u0000\u0000\u0001\u0001û\u000e\n\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001/usr/src/packages/BUILD/glibc-2.3/cc/csu\u0000\u0000crtn.S\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002U\u0004\b\u0003\"\u0001:\u0002\u0001\u0000\u0001\u0001\u0000\u0005\u0002\u0004\b\u0003\u0012\u0001\u001e\u001e\u001e\u0002\u0001\u0000\u0001\u0001\u0000\u0005\u0002u\u0004\b\u0003\t\u0001\u001e\u0002\u0001\u0000\u0001\u0001init.c\u0000short int\u0000GNU C 4.0.2 20050901 (prerelease) (SUSE Linux)\u0000long long int\u0000/usr/src/packages/BUILD/glibc-2.3/csu\u0000unsigned char\u0000long long unsigned int\u0000short unsigned int\u0000_IO_stdin_used\u0000\u0000.symtab\u0000.strtab\u0000.shstrtab\u0000.interp\u0000.note.ABI-tag\u0000.note.SuSE\u0000.hash\u0000.dynsym\u0000.dynstr\u0000.gnu.version\u0000.gnu.version_r\u0000.rel.dyn\u0000.rel.plt\u0000.init\u0000.text\u0000.fini\u0000.rodata\u0000.eh_frame_hdr\u0000.eh_frame\u0000.ctors\u0000.dtors\u0000.jcr\u0000.dynamic\u0000.got\u0000.got.plt\u0000.data\u0000.bss\u0000.comment\u0000.debug_aranges\u0000.debug_pubnames\u0000.debug_info\u0000.debug_abbrev\u0000.debug_line\u0000.debug_str\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000T\u0004\bT\u0001\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000h\u0004\bh\u0001\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\b\u0001\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0002\u0000\u0000\u0000 \u0004\b \u0001\u0000\u0000@\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000B\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0002\u0000\u0000\u0000à\u0004\bà\u0001\u0000\u0000°\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000J\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\b\u0002\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000R\u0000\u0000\u0000ÿÿÿo\u0002\u0000\u0000\u0000\u0004\b\u0003\u0000\u0000\u0016\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000_\u0000\u0000\u0000þÿÿo\u0002\u0000\u0000\u0000°\u0004\b°\u0003\u0000\u0000`\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000n\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0010\u0004\b\u0010\u0004\u0000\u0000\u0010\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000w\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000 \u0004\b \u0004\u0000\u00008\u0000\u0000\u0000\u0005\u0000\u0000\u0000\f\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000`\u0004\b`\u0004\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000{\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000x\u0004\bx\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0004\b\u0000\u0005\u0000\u0000h\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000p\u0004\bp\u0007\u0000\u0000\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\b\u0007\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\b\u0007\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000¨\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000°\u0004\b°\u0007\u0000\u0000X\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000²\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\b\u0004\b\b\b\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000¹\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0014\u0004\b\u0014\b\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u001c\u0004\b\u001c\b\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000Å\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0003\u0000\u0000\u0000 \u0004\b \b\u0000\u0000à\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000Î\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0004\b\u0000\t\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0004\u0004\b\u0004\t\u0000\u0000(\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000,\u0004\b,\t\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000â\u0000\u0000\u0000\b\u0000\u0000\u0000\u0003\u0000\u0000\u00008\u0004\b8\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ç\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00008\t\u0000\u0000s\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000°\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ÿ\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00008\u000b\u0000\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000]\u000b\u0000\u0000ö\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000S\r\u0000\u0000v\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000É\r\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u000f\u0000\u0000»\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001f\u0010\u0000\u0000@\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000°\u0005\u0000\u0000#\u0000\u0000\u0000@\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\t\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000°\u001c\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000\u0000\u0000\u0000\u0000h\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0003\u0000\u0000\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0004\u0000\u0000\u0000\u0000\u0000à\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000°\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\b\u0000\u0000\u0000\u0000\u0000\u0010\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\t\u0000\u0000\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\n\u0000\u0000\u0000\u0000\u0000`\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000b\u0000\u0000\u0000\u0000\u0000x\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\r\u0000\u0000\u0000\u0000\u0000p\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000e\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000f\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0010\u0000\u0000\u0000\u0000\u0000°\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0011\u0000\u0000\u0000\u0000\u0000\b\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0014\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u001c\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0014\u0000\u0000\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0016\u0000\u0000\u0000\u0000\u0000\u0004\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0017\u0000\u0000\u0000\u0000\u0000,\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0018\u0000\u0000\u0000\u0000\u00008\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001d\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000!\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000#\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ<\u0000\u0000\u00000\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿW\u0000\u0000\u0000\b\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0012\u0000e\u0000\u0000\u0000\u0014\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0013\u0000s\u0000\u0000\u0000\u001c\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0014\u0000\u0000\u0000\u0000È\u0004\b\u0001\u0000\u0000\u0000\u0001\u0000\u0019\u0000\u0000\u0000\u00004\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0018\u0000\u0000\u0000\u0000`\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000¬\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000L\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ¸\u0000\u0000\u0000\u0010\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0012\u0000Å\u0000\u0000\u0000\u0018\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0013\u0000Ò\u0000\u0000\u0000\u0004\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0011\u0000à\u0000\u0000\u0000\u001c\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0014\u0000ì\u0000\u0000\u0000@\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\r\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\u0002\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ2\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ:\u0001\u0000\u0000`\u0004\b\u0010\u0000\u0000\u0000\u0002\u0000\r\u0000J\u0001\u0000\u0000Ì\u0004\b\u0001\u0000\u0000\u0000\u0001\u0000\u0019\u0000X\u0001\u0000\u0000\u0010\u0004\b\u0010\u0000\u0000\u0000\u0002\u0000\r\u0000`\u0001\u0000\u0000 \u0004\b>\u0000\u0000\u0000\u0002\u0000\r\u0000\u0001\u0000\u00008\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿ¡\u0001\u0000\u00008\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿ´\u0001\u0000\u00008\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿÅ\u0001\u0000\u00008\u0004\b\u0000\u0000\u0000\u0000\u0001\u0002ñÿØ\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0012\u0000\u0000\u0000ý\u0001\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0011\u0000\u0015\u0000\u0006\u0002\u0000\u0000\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u000f\u0000\r\u0002\u0000\u00000\u0004\b\u0000\u0000\u0000\u0000\u0011\u0002\u0018\u0000\u001a\u0002\u0000\u0000à\u0004\b]\u0000\u0000\u0000\u0012\u0000\r\u0000*\u0002\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0012\u0000\u0000\u0000D\u0002\u0000\u0000`\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u000b\u0000J\u0002\u0000\u0000Ð\u0004\b<\u0000\u0000\u0000\u0012\u0000\r\u0000X\u0002\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\r\u0000_\u0002\u0000\u00008\u0004\b\u0000\u0000\u0000\u0011\u0000\u0019\u0000u\u0002\u0000\u0000p\u0004\bh\u0000\u0000\u0000\u0012\u0000\r\u0000\u0002\u0000\u00008\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿ\u0002\u0000\u0000À\u0004\b\u000f\u0000\u0000\u0000\u0012\u0000\r\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000î\u0000\u0000\u0000\u0012\u0000\u0000\u0000³\u0002\u0000\u0000,\u0004\b\u0000\u0000\u0000\u0000 \u0000\u0018\u0000¾\u0002\u0000\u0000p\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u000e\u0000Ä\u0002\u0000\u0000\u0000\u0000\u0000\u0000k\u0001\u0000\u0000\u0012\u0000\u0000\u0000Ü\u0002\u0000\u00008\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿã\u0002\u0000\u0000U\u0004\b\u0000\u0000\u0000\u0000\u0012\u0002\r\u0000ú\u0002\u0000\u0000\u0004\u0004\b\u0000\u0000\u0000\u0000\u0011\u0002\u0017\u0000\u0010\u0003\u0000\u0000Ð\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿ\u0015\u0003\u0000\u0000\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u000f\u0000$\u0003\u0000\u0000,\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000\u0018\u00001\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000E\u0003\u0000\u0000È\u0004\b\u0010\u0004\u0000\u0000\u0012\u0000\u0000\u0000f\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000initfini.c\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crti.S\u0000call_gmon_start\u0000crtstuff.c\u0000__CTOR_LIST__\u0000__DTOR_LIST__\u0000__JCR_LIST__\u0000completed.4497\u0000p.4496\u0000__do_global_dtors_aux\u0000frame_dummy\u0000__CTOR_END__\u0000__DTOR_END__\u0000__FRAME_END__\u0000__JCR_END__\u0000__do_global_ctors_aux\u0000/usr/src/packages/BUILD/glibc-2.3/cc/csu/crtn.S\u00004ex1.cc\u0000_GLOBAL__I_main\u0000_ZSt8__ioinit\u0000__tcf_0\u0000_Z41__static_initialization_and_destruction_0ii\u0000__fini_array_end\u0000__fini_array_start\u0000__init_array_end\u0000__init_array_start\u0000_ZNSt8ios_base4InitC1Ev@@GLIBCXX_3.4\u0000_DYNAMIC\u0000_fp_hw\u0000__dso_handle\u0000__libc_csu_fini\u0000__cxa_atexit@@GLIBC_2.1.3\u0000_init\u0000_Z9factoriali\u0000_start\u0000_ZSt3cin@@GLIBCXX_3.4\u0000__libc_csu_init\u0000__bss_start\u0000main\u0000__libc_start_main@@GLIBC_2.0\u0000data_start\u0000_fini\u0000_ZNSirsERi@@GLIBCXX_3.4\u0000_edata\u0000__i686.get_pc_thunk.bx\u0000_GLOBAL_OFFSET_TABLE_\u0000_end\u0000_IO_stdin_used\u0000__data_start\u0000_Jv_RegisterClasses\u0000__gxx_personality_v0@@CXXABI_1.3\u0000_ZNSt8ios_base4InitD1Ev@@GLIBCXX_3.4\u0000__gmon_start__\u0000\n\n",
  "int factorial(int n) {\n    if(n == 1) {\n        return 1;\n    }\n    else {\n        return n * factorial(n-1);\n    }\n    \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial_rec(int n){\n   if(n==0) return 1;\n   return n*factorial_rec(n-1);\n   }\n\nint main(){\n   int x;\n   cin>>x;\n   cout<<factorial_rec(x)<<endl;\n   }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return (n * factorial(n - 1));\n    else return 1; \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial (int n){\n        if (n<=1) return 1;\n        else return n*factorial (n-1);\n}\n\nint main() {\n    int n;\n    cin>>n;\n    int a;\n    a=factorial(n);\n}\n\n        \n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    // prec: 0<= n <= 12\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n ==1) return 1;\n    else return  n* factorial(n-1); \n}\n        \n        \n    \nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n        \n            \n        \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint f(int n){\r\n      int r;\r\n      if(n==0) r=1;\r\n      else r=n*f(n-1);\r\n      return r;       \r\n      }\r\n\r\n\n\n",
  "int factorial(int n) {\n\tif (n > 1) return n*factorial(--n);\n\telse return 1;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return n;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    int fact = 1;\n    for (int i = 1; i <= n; ++i){\n        fact = factorial(n - 1) * i;\n    }\n    return fact;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n==0)\r\n    return 1;\r\n    else\r\n    return n*factorial(n-1);\r\n}\r\nint main () {\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a)<< endl;\r\n }\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n)\n{\n    if(n=0)\n    return 1;\n    else return (n*factorial (n-1));\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n   if(n==0) return 1;\n   \n   else return n*factorial(n-1);\n   \n}\nint main(){\n\n    int n,res;\n    cin>>n;\n    res=factorial(n);\n    \n    cout<<res<<endl;\n\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f=1;\n    if ( n==0 or n==1 ) return f;\n    else {\n        f=n*factorial(n-1);\n    }\n    return f;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << \"el factorial de \" << x << \" es \" << factorial(x) <<endl;\n}\n\n\n\n",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==1 or n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\r\n    int a;\r\n    \r\n    cin>>a;\r\n    cout<<factorial(a)<<endl;\r\n}\r\n \r\n\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    n*factorial(n - 1);\n}\nint main() {\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int total=1;\n    int aux=1;\n    while(aux!=n){\n        total*=aux;\n        ++aux;\n    }\n    return total;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int x=1;\r\n    if (n==1) return 1;\r\n    else {\r\n        x=x*n;\r\n        x= x*factorial(n-1);\r\n    }\r\n    return x;\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    int x=factorial(n);\r\n    cout << x << endl;\r\n}\r\n\n\n",
  "#include<iostream>\r\n#include<cmath>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if( n==0 ) return 1;\r\n    else return factorial(n-1)* n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while( cin>>n ){\r\n        cout<<factorial(n)<<endl;\r\n    }\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint fact (int n) {\n    if (n<=1) return 1;\n    else return n*fact (n-1);\n    }\n\nint main() {\n    int x;\n    cin >> x;\n    cout << fact(x) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n){\n\t\n\tif (n<=1) return 1;\n\telse return n*(factorial (n-1));\n\n}\n\nint main() {\n\n\nint x;\ncin>>x;\ncout<<factorial (x)<<endl;\n\n\n}\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n\t\n\t// Code\n\t\n}\n\nint factorial(int n){\n\tif (n = 0) return 1;\n\telse return n*factorial(n-1);\n}\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n) {\n if(n == 0) return 1;\n return n*factorial(n - 1);\n}\n\n\n",
  "\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\n    if(n==0){\n    \n        return 1;\n    \n    }else{\n    \n        return n*factorial(n-1);\n        \n    }\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n   if (n < 2) return 1;\n   return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nsub fact(int n) {\n    if (n <= 1) return 1;\n    else return n*fact(n-1);\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) <<endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n\n  if (n<=1) return 1;\n  \n  else return n*fact(n-1);\n  \n}\n\nint main() {\n\n  int n;\n  \n  while (cin >> n) {\n  \n    cout << fact(n) << endl;\n    \n  }\n  \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nif (n == 0) return 1;\nelse n * factorial(n-1)\nreturn n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint fact (int n){\nif (n==0){\n      return 1;\n}\nreturn fact (n-1)*n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1\n    return n*factorial (n-1)\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    return n*factorial (n-1);\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0){\n        return 1;\n    }\n    else {\n        return (n*factorial(n-1));\n    }\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return n;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n        \n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\tint factorial (int n){\t\n\t\tif (n >1) return (n * factorial (n-1));\n\t\telse return 1; \n\t\t\t\t             \n\t\t}\n\t\t\t    \n\tint main(){\n\tint n;\n\tcin>>n;\t\n\tcout<<factorial(n)<<endl;\n\t\n\t}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n < 2) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main (){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res = 1;\n    if (n == 0) return res;\n    else {\n        res = n*factorial(n-1);\n        return res;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0) return 1;\n    else {\n    return n*factorial(n-1);\n    }\n}\n\n\nint main (){\n\n    int n;\n\n    cin >> n;\n    n = factorial(n);\n    cout << n << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n\n}\n\nint main() {\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res;\n        if (n == 0) res = 1;\n        else res = n * factorial (n - 1);\n        return res;\n    }\nint main () {\n    int n;\n    cin >> n;\n    int fact = factorial(n);\n    cout << fact <<endl;\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n==0) return 1;\r\n    return n * factorial_rec(n-1);\r\n}\r\n\r\nint main() {\r\n    \r\n}\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n==0) return 1;\r\n    return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    \r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    //Prec: Es té 0 <= n <= 12;\n    if(n == 0) return 1;\n    else return n * factorial(n - 1);    \n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n)<< endl;\n}\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n   if(n > 1) return n*factorial(n-1);\r\n   return 1;\r\n}\r\nint main() {\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n}\r\n\n\n",
  "int factorial(int n) {\nint c=1;\ni=0\nelse {\nwhile (i<n) {\n++i;\nc=c*i\n}\nreturn c\n}\n \n\n\n",
  "int fact( int n) {\nint c;\nif (n==0) {c=1;}\nelse {c=n*fact(n-1);}\nreturn c;\n}\n\n\n",
  "int fact( int n) {\nif (n==0) {n=1;}\nelse {n=n*fact(n-1);}\nreturn n;\n}\n\n\n",
  "int fact( int n) {\nint t=1;\nif (n!=0)and {n>0\n\nt=n*fact(n-1);\n}\nreturn n;\n}\n\n\n",
  "int factorial(int n) {\nint t=1;\nif ((n!=0)and (n>0)){\nt=n*factorial(n-1);\n}\nreturn n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    if(n==0) return 1;\n    return factorial(n-1)*n;\n}\nint main()  {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n    if(n > 1) return n * factorial(n-1);\n    return 1;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n int factorial(int n){\r\n     int s=0;\r\n     if(n==0) return 1;\r\n     else {return (n*factorial(n-1))\r\n           \r\n           }\r\n           \r\n int main(){\r\n     int n;\r\n     cin >>n;\r\n     cout <<factorial(n)<<endl;\r\n        \r\n        } \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n int factorial(int n){\r\n     int s=0;\r\n     if(n==0) return 1;\r\n     else {return (n*factorial(n-1))\r\n           \r\n           }\r\n           \r\n int main(){\r\n     int n;\r\n     cin >>n;\r\n     cout <<factorial(n)<<endl;\r\n        \r\n        } \r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if ( n == 1 ) return 1;\n    return (n*factorial(n - 1));\n    }\n\n\nint main(){\nint n;\ncin >>n;\ncout <<factorial(n)<<endl;\n}\n\n\n",
  "int factorial(int n){\r\n   if (n==1) return 1;\r\n   else return (n*factorial(n-1));\r\n}\r\n   \r\n\n\n",
  "int factorial(int n){\r\n   if (n==1) return 1;\r\n   return  n*factorial(n-1);\r\n}\r\n   \r\n\n\n",
  "int factorial(int n){\r\n   if (n==0) return 1;\r\n   return  n*factorial(n-1);\r\n}\r\n   \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f = 1;\n    if (n > 0) {\n        f = n * factorial(n - 1);\n    }\n    return f;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << \"El factorial de \" << n << \" fet de forma recursiva es \" << factorial(n) << \".\" << endl << \"Jutge accepta-me'l siusplau.\" << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n < 2) return 1;\n    else return n*factorial(n-1);\n} \n\nint main(){\n    int n;\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n) {\n    if (n > 0) return n*fact(n-1);\n    else return 1;\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << fact(a) << endl;\n}\n\n\n",
  "int fact (int n) {\n    if (n > 0) return n*fact(n-1);\n    else return 1;\n}\n\n\n",
  "int fact (int n) {\n    if (n > 0) return n*fact(n-1);\n    return 1;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n) {\n    if (n > 0) return n*fact(n-1);\n    return 1;\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << fact(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n\n\n",
  "int factorial(int n){\nint fact=1;\nwhile(n>0){\nfact=n*factorial (n-1);\n}\nreturn fact;\n}\n\n\n",
  "int factorial(int n){\nint fact=1;\nif(n>0){\nfact=n*factorial (n-1);\n}\nreturn fact;\n}\n\n\n",
  "int factorial(int n){\n    if (n == 0){\n        return = 1;\n    }\n    else{\n       return n*factorial(n-1)\n    }\n}\n\n\n",
  "int factorial(int n){\n    if (n == 0){\n        return = 1;\n    }\n    else{\n       return n*factorial(n-1);\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std ;\n    \nint factorial(int n){\n    if (n==0) return 1;\n    else  return n*factorial(n-1);\n    cerr << factorial(n) << endl;\n}    \nint main () {\n    int n;\n    cin>>n;\n    cout << factorial(n) << endl;\n}   \n\n\n",
  "int factorial (int n){\n\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 0 ) return 1;\n    else return ( n * factorial(n - 1) );\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int x) {\n   if (x==0) return 1;\n   else {\n      f=fact(x-1);\n      f=f*x;\n      return f;\n   }\n}\n\nint main () {\n\n\t\n\n\t\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int x) {\n   if (x==0) return 1;\n   else return x*fact(x-1);\n}\n\nint main () {\n\n\tint x;\n\tcin>>x;\n\tcout<<fact(x)<<endl;\n\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int x) {\n   if (x==0) return 1;\n   else return x*fact(x-1);\n}\n\nint main () {\n\n\tint x;\n\tcin>>x;\n\tcout<<fact(x)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n\n    if(n==0) return n=1;\n    else return n*factorial(n-1); \n}\n\nint main (){\n    \n    int x;\n    cin>>x;\n    \n    cout<<factorial(x)<<endl;\n}\n\n\n",
  "int factorial(int n) {\n    if (n==1) return 1;\n    return n*factorial(n-1);\n}\n\n",
  "int factorial(int n){\n    if (n>= 0 and n<=12){\n            int f=1;\n            int i=1;\n            while (1<=n){\n                f=f*i;\n                i=i+1;\n                \n            }\n            return f;\n    }\n    return n;\n}\n\n\n",
  "int factorial ( int n ) {\n    if ( n == 0 ) {\n        return 1;\n    }\n    else {\n        return n * factorial ( n-1 );\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n     if (n == 1) return 1;\n     else n=n*factorial(n-1);\n     return n;\n  \n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\n\nint i=1;\nint factorial(int n){\n    if(n=0){ return 0; }\n    if(n!=0){\n        i*=n;\n        factorial(n-1);\n    } else {\n        return i;\n    }\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n == 1 ) return n;\n    return n*factorial(n--);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int prod = 1;\n    while (n > 1){\n        prod = prod * (factorial(n-1));\n    }\n    return prod;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1 or n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif (n==0) return 1;\n\telse return n*factorial (n-1);\n}\n\n\n",
  "int factorial(int n);\n\tif (n<=1){\n\treturn 1;\n\t}\n\telse {\n\treturn n * fact (n-1);\n\t}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total;\n    if (n == 0) return 1;\n    else total= n*factorial(n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}    \n \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "/*#include <iostream>\nusing namespace std;*/\n\nint fact(int n){\n\n  if (n==0)return 0;\n  \n  else return (n*fact(n-1));\n  \n}\n\n/*int main() {\n  \n  while (cin >>n){\n    cout << \"fact(\" << n << \") =\" << fact(n) << endl;\n  \n }*/\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial_rec (int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial_rec(n-1);\r\n}\r\n\r\nint main () {\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial_rec(a) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std ;\n\nint factorial (int n){\n\nif (0 ==1) \nreturn 1 ;\nelse\nreturn  n * factorial (n-1) ;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==1) return n;\n    else {\n        return n*factorial(n-1);\n         \n    }\n}    \n\nint main(){\n    \n    int n;\n    cin>>n;\n    n=factorial(n);\n    cout<<n<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n*factorial(n - 1);\n}\n\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact_rec(int n){\n  if(n <= 1) return 1;\n  else return n*fact_rec(n-q);\n}\n  \nint main() {\n  int n;\n  cin >> n;\n  cout << fact_rec(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==1)  return n;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int fact = 1;\r\n    if(n!=0){\r\n        fact = n * factorial(n-1);\r\n    }\r\n    else return fact;\r\n}\r\n\r\nint main(){\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n  int fact;\n  if (n == 0) fact = 1;\n  else fact = factorial(n-1)*n;\n  return fact;\n}\n\nint main()\n{\n  int n;\n  cin >> n;\n  cout << \"El factorial de \" << n << \" es: \" << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n < 1) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 0) return n;\n    else if (n > 1) return n*factorial(n-1);\n    else return 1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    n = factorial(n);\n    cout << n << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n < 2) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==1) return 1;\n\treturn n*factorial(n-1);\n}\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact_rec(int n) {\n\t\tif (n <= 1) return 1;\n\t\telse return n * fact_rec(n-1);\n}\n\nint main() {\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n<2) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int E;\r\n    cin >> E;\r\n    cout << E << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 1) return n;\n  else {\n    return n*factorial(n-1);\n  }\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 1) return n;\n  else {\n    if (n != 1) return n*factorial(n-1);\n    else return factorial(n-1);\n  }\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n != 1) return n*factorial(n-1);\n  else {\n    return n;\n  }\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n > 1) return n*factorial(n-1);\n  else return 1;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint a;\n\tcin>>a;\n\tcout<<factorial(a)<<endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n == 0) return 1;\r\n    else {\r\n        return factorial (n-1)*n;        \r\n        }    \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint i = 0;\n\tint c = 1;\n\twhile(i<n) {\n\t\t++i;\n\t\tc *=i;\n\t}\n\treturn c;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) return 1;\n\treturn n * factorial(n-1);\n}\n\n",
  "int factorial (int n) {\n\tif (n == 1) return 1;\n\treturn n * factorial(n-1);\n}\n\n",
  "int factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n * factorial(n-1);\n}\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==1) return 1;\r\n\telse return n*factorial(n-1);\n}\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n  if (n==1)\n      return 1;\n  else\n      return factorial(n-1)*n;\n}\n\nint main () {\n\tint e;\n\tcin >> e;\n\tcout << factorial(e) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n  if (n==1)\n      return 1;\n  else\n      return n*factorial(n-1);\n}\n\nint main () {\n\tint e;\n\tcin >> e;\n\tcout << factorial(e) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}\n\nint factorial(int n) {\n\tif (n == 1) return n;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}\n\nint factorial(int n) {\n\tif (n == 1) return n;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n   if (n < 2) return 1;\n   else return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tint res = 1;\n\tint i = 1;\n\twhile (i<=n) {\n\t\tres = i*res;\n\t\ti= i+1;\n\t}\n\treturn res;\n}\n\nint main() {\n\tint a;\n\tcin >> a;\n\tcout << factorial (a) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return n;\n\telse return factorial(n - 1)*n;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\tif (n<=1) return n;\n\treturn n*factorial(n-1);\n}\n\n\nint main () {\n\tint f;\n\twhile (cin>>f) cout << factorial(f) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return factorial(n-1)*n;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    }\n",
  "#include <iostream>\r\n#include <cmath>\r\n#include <string>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n    int n;\r\n    while(cin >> n);\r\n    //system(\"pause\");\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n>0) return n*factorial(n-1); else return 1;\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    /*\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n    system(\"pause\");\r\n    */\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\n \r\nint factorial(int n) {\r\n        int f = 1;\r\n        for (int i = 1; i <= n; ++i) {\r\n                f = f*i;\r\n        }\r\n        return f;\r\n}\r\n//Pre: Llegeix un natural\r\n//Post: Calcula el factorial\r\n\r\nint main() {\r\n        int n;\r\n        while (cin >> n){\r\n        cout << factorial(n) << endl;\r\n}\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) {\n    return 1;\n  } else {\n    return n * factorial(n - 1);\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) {\n    return 1;\n  } else {\n    return n * factrorial(n - 1);\n  }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    \r\n    \r\n    \r\n    if(n > 0)\r\n       return n * factorial(n-1);\r\n    \r\n    return 1;   \r\n    \r\n}\r\n\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    \r\n    cout << factorial(n) << endl;\r\n    \r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else {\r\n        int f = factorial(n-1);\r\n        return n*f;\r\n    }\r\n}\r\n\r\n// pre: L'entrada consisteix en una seqüència de naturals tal que\r\n//      0 <= n <= 12.\r\n\r\n//post: Es mostra en la pantalla el factorial de cadascun d'ells.\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "int factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n",
  "int factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while(cin >> n) {\n        int t = factorial(n);\n        cout << t << endl;\n    }\n    cout << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  cout << n << endl;\n  if (n==1) return 1;\n  else return factorial (n-1)*n;\n}\n  \n\nint main () {\n  int n;\n  while (cin >> n){\n    cout << factorial(n) << endl;}\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  if (n==1) return 1;\n  else return factorial (n-1)*n;\n}\n  \n\nint main () {\n  int n;\n  while (cin >> n){\n    cout << factorial(n) << endl;}\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  if (n==1) return 1;\n  else return n*factorial (n-1);\n}\n  \n\nint main () {\n  int n;\n  while (cin >> n){\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  if (n==0) return 1;\n  else return n*factorial (n-1);\n}\n  \n\nint main () {\n  int n;\n  while (cin >> n){\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){if (n==0) return 1; else return n*factorial (n-1);} int main () { int n; while (cin >> n){cout << factorial(n) << endl;}}\n",
  "int factorial(int n){\n\tif(n==0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// n entre 0 i 12\n\nint factorial( int n ) ;\n    return n * factorial(n);\n\n\nint main() {\n    \n}",
  "#include <iostream>\nusing namespace std;\n\n// n entre 0 i 12\n\nint factorial( int n ) ;\n    if ( n = 0 ) return 1;\n    else return n * factorial(n);\n\n\nint main() {\n    \n}",
  "#include <iostream>\nusing namespace std;\n\n// n entre 0 i 12\n\nint factorial( int n ) {\n    if ( n = 0 ) return 1;\n    else return n * factorial(n);\n}\n\nint main() {\n    \n}",
  "#include <iostream>\nusing namespace std;\n\n// n entre 0 i 12\n\nint factorial( int n ) {\n    if  n = 0  return 1;\n    else return n * factorial(n);\n}\n\nint main() {\n    \n}",
  "#include <iostream>\nusing namespace std;\n\n// n entre 0 i 12\n\nint factorial( int n ) {\n    if ( n == 0 )  return 1;\n    else return n * factorial(n);\n}\n\nint main() {\n    \n}",
  "#include <iostream>\nusing namespace std;\n\n// n entre 0 i 12\n\nint factorial( int n ) {\n    if ( n == 0 or n == 1 )  return 1;\n    else return n * factorial(n);\n}\n\nint main() {\n    \n}",
  "#include <iostream>\nusing namespace std;\n\n// n entre 0 i 12\n\nint factorial( int n ) {\n    if ( n == 0 or n == 1 )  return 1;\n    else if ( n == 2 ) return 2;\n    else return n * factorial(n);\n}\n\nint main() {\n    \n}",
  "#include <iostream>\nusing namespace std;\n\n// n entre 0 i 12\n\nint factorial( int n ) {\n    if ( n == 0 or n == 1 ) return 1;\n    else return factorial(n-1) * n ;\n}\n\nint main() {\n    \n}",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  \n  if (n==1) return 1;\n  else if (n==0) return 1;\n  else return n*factorial(n-1);\n  \n}\n\nint main () {\n  \n  int n;\n  while (cin>>n) {\n      \n      cout<<factorial(n)<<endl;\n  }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\nint main(){\r\nint n,fact;\r\ncin >>n;\r\nfact=factorial(n);\r\ncout <<fact<<endl;\r\n}\r\nint factorial (int n){\r\n\tif(n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\nif (n == 0) return 1;\r\nelse return n?factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\nif (n == 0) return 1;\r\nelse return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n>1) {\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\telse {\r\n\t\treturn 1;\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl; \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1)*n;\n}\n    \n/*int main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\nint main(){\n    \n int n;\n while(cin>> n){\n cout << factorial(n) << endl;}\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {return 1;}\n    else {\n        n = n*factorial(n-1);\n        return n;\n    }\n    \n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) <<endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main () {\n\t\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n\t\n}\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\telse return n * factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial (n - 1);\r\n}\r\n\r\nint main () {\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial (a);\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\r\n\r\nint factorial (int a){\r\n\tint f = 1;\r\n\tfor (int i = 1; i <= a; ++i){\r\n\t\tf = f * i;\r\n\t}\r\n\treturn f;\r\n}\r\n\r\nint main (){\r\n\tint a;\r\n\twhile (cin >> a){\r\n\tcout << factorial (a) <<endl;\t\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) { \r\nint f = 1;\r\nint i = 0;\r\nwhile (i < n) {\r\n\ti = i+1;\r\n\tf = f*i;\r\n}\r\nreturn f;\r\n}\r\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    \n    return n*factorial(n - 1);\n}\n\nint main() {}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse {\r\n\t\tint s = factorial(n - 1);\r\n\t\treturn (s * n);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\r\n\tint n;\r\n\twhile (cin >> n) cout << factorial(n) << endl;\r\n}",
  "int factorial(int n){\r\n\tn*=factorial(n-1);\r\n}\r\n",
  "int factorial(int n){\r\n\twhile (n!=0){\r\n\t\tn*=factorial(n-1);\r\n\t}\r\n}\r\n",
  "int factorial(int n){\r\n\tint t;\r\n\tif(n <= 1) return 1;\r\n\tt = n * factorial(n - 1);\r\n\treturn t;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse{\r\n\t    int s = factorial(n-1);\r\n\t\treturn (s * n);\r\n\t}\r\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    if (n == 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    if (n == 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if(n==0) return 1;\n    else {\n        return n*factorial (n-1);\n    }\n}\n\nint main() {\n    \nint n;\n\nwhile (cin >> n) { \n\ncout << factorial(n) << endl;\n\n    }\n}\n    ",
  "int factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n){\n     \n     if ( n<=1) return 1;\n     else return n*factorial (n-1);\n }",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n){\n\n\t\nif (n != 1) return factorial (n - 1) * n; //Introduint un 5, el que  fara sera multiplicar 5 pel factorial de 4. (4!=4*3*2*1) \nelse return n;\n\n\n}\n\n\nint main(){\nint n;\ncin >>n;\ncout<<factorial(n)<<endl;}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n){\n\n\t\nif (n != 1) return factorial (n - 1) * n; //Introduint un 5, el que  fara sera multiplicar 5 pel factorial de 4. (4!=4*3*2*1) \nelse return n;\n\n\n}\n\n\nint main(){\nint n;\ncin >>n;\ncout<<factorial(n)<<endl;}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n){\n\n\t\nif (n != 1){\n//Introduint un 5, el que  fara sera multiplicar 5 pel factorial de 4. (4!=4*3*2*1) \n return n*  factorial(n - 1); //Retorna n* factorial, el qual es defineix com (n-1)\n \n \n \n } else return (n);\n\n\n}\n\n\nint main(){int n;\ncin >>n;\ncout<<factorial(n)<<endl;}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n){\n\n\t\nif (n == 0) return 1; \n//Introduint un 5, el que  fara sera multiplicar 5 pel factorial de 4. (4!=4*3*2*1) \nelse return n* factorial(n - 1); //Retorna n* factorial, el qual es defineix com (n-1)\n \n \n \n }\n\n\n\n\nint main(){\n\tint n;\n\tcin >>n;\n\tcout<<factorial(n)<<endl;\n\t\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\r\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial(n - 1);\n        return n*f;\n    }\n}\nint factorial_2(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int k;\n    cin >> k;\n    cout << factorial(k) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif(n == 0) return 1;\nelse return n*factorial(n - 1);\n}\n\nint main(){\n\tint numero;\n\tcin >> numero;\n\tcout << factorial(numero) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n* factorial (n-1);\n}\n\nint main() {\n\tint x;\n\tint res = 0;\n\tcin >> x;\n\tres = factorial (x);\n\tcout << res << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    while (cin >> x)\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n   if(n < 0) return 0;\r\n   else if(n > 1) return n*factorial(n-1);\r\n   return 1;\r\n}\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<< endl;\r\n    }\r\n\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint mcd(int a, int b){\r\n    if (b)\r\n        return mcd(b,a%b);\r\n    return a;\r\n}\r\n\r\nint main(){\r\n    int a,b;\r\n    cin>>a>>b;\r\n    cout<<mcd(a,b)<< endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n);\n\nint factorial (int n)\n{\n\tint a, p=1;\n\tcin>>a;\n\tif (a<2) {return 0;}\n\telse\n\t{\n\t\tfor(int i=1;i<a;++i)\n\t\t{\n\t\tp=p*(i+1);\n\t\t}\n\t\treturn p;\n\t}\n}\n\nint main()\n{\n\t\tint f,m;\n\t\tm= factorial(f);\n\t\tcout<<m<<endl;\n\t\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint factorial(int n)\n{\n\tint a, p=1;\n\tcin>>a;\n\tif (a<2) {return 1;}\n\telse\n\t{\n\t\tfor(int i=1;i<a;++i)\n\t\t{\n\t\tp=p*(i+1);\n\t\t}\n\t\treturn p;\n\t}\n}\n\nint main()\n{\n\t\tint f,m;\n\t\tm= factorial(f);\n\t\tcout<<m<<endl;\n\t\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint factorial(int n)\n{\n\tint p=1;\n\tif (n<2) {return 1;}\n\telse\n\t{\n\t\tfor(int i=1;i<n;++i)\n\t\t{\n\t\tp=p*(i+1);\n\t\t}\n\t\treturn p;\n\t}\n}\n\nint main()\n{\n\t\tint f;\n\t\tcin>>f;\n\t\tcout<<factorial(f)<<endl;\n\t\t\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return (n * factorial (n - 1));\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while (cin >> n){\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n==0) return 1;\r\n  else return n*factorial(n-1);\r\n  }",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n<2) return 1;\r\n    else{\r\n        n=n*factorial(n-1);\r\n        return n;\r\n    }\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<< endl;\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  else return n * factorial(n - 1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse {\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tint x;\r\n\t\tx=factorial(n);\r\n\t\tcout << x << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int num;\n    while(cin >> num) {\n        int fact = factorial(num);\n        cout << fact << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n > 1) return n*factorial(n-1);\n    else return 1; \n}\nint guardar_n (int n) {\n    \n    \n}\n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl; \n}",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n    int f=1;\n    int i=0;\n    while (i<n) {\n        i = i+ 1;\n        f = f*i;\n    } return f;\n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1)\n}\n",
  "#include <iostream>\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1)\n}\n",
  "#include <iostream>\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "//#include <iostream>\n//using namespace std;\n\nint factorial(int a) {\n    int f;\n    if (a == 0) f = 1;\n    else f = f*facotrial(a-1);\n    return f;\n}\n\n/*int main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;    \n}*/",
  "//#include <iostream>\n//using namespace std;\n\nint factorial(int a) {\n    int f;\n    if (a == 0) f = 1;\n    else f = f*factorial(a-1);\n    return f;\n}\n\n/*int main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;    \n}*/",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\tif (n == 0) return 1;\n\treturn n*(factorial (n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n  if (n>1) {\n    cout << n*factorial(n-1)\n  }\n  else {\n    return 1\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n  if (n>1) {\n    cout << n*factorial(n-1)\n  }\n  else {\n    return 1;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n  if (n>1) {\n    cout << n*factorial(n-1);\n  }\n  else {\n    return 1;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\n//calcula el mcd\nint mcd(int a, int b) {\n\tif (b == 0) return a;\n\telse { \n\t\treturn mcd(b,a%b);\n\t}\n}\n\nint main () {\n\tint n,m;\n\tcin >> n >> m;\n\tcout << mcd(n,m) << endl;\n}",
  "//#include <iostream>\n//using namespace std;\n\nint factorial(int a) {\n    int f;\n    if (a == 0) f = 1;\n    else f = a*factorial(a-1);\n    return f;\n}\n\n/*int main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;    \n}*/",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n  if (n>1) {\n    return n*factorial(n-1);\n  }\n  else {\n    return 1;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\n     int factorial(int n);\n\nint main(){\n\t\n\tint a;\n\tcin>>a;\n\tcout<<factorial(a)<<endl;\n\t\n}\n\nint factorial(int n){\n\tint a=1;\n\t\n\tif(n>1){\n\t\t\n\t\twhile(n>1){\n\t\t\ta*=n;\n\t\t\tn--;\n\t\t}\n\t\n\treturn a;\n\t\n\t}else return 1;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif (n == 0){\n\t\treturn 1;\n\t\t}\n\telse return n = n*factorial(n-1);\n\t\n\t}\n\t\n\t\n\t\nint main () {\n\tint n;\n\twhile (cin >> n){\n\t\tfactorial (n);\n\t\t}\n\t\n\t\n\t\n\t}\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\nint main () { \n\tint n;\n\tcin >> n;\n\tint x = factorial(n);\n    cout << x << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return1;\n  else return n*factorial(n-1);\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  \n  if(n>1) {\n    return n*factorial(n-1);\n  } else {\n    return 1;\n  }\n}\n\nint main() {\n  \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\nint main (){\n  int a;\n  cin >> a;\n  cout << factorial(a) << endl;\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  \n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  \n  int x;\n  \n  cin>>x;\n  \n  cout<<factorial(x)<<endl;\n  \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int i=1, s=1;\n  while(i<=n){\n    s *= i;\n    ++i;\n  }\n  return s;\n}\n\nint main() {\n  int n;\n  while(cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  int d = n;\n  int count = 1;\n  if  ( d > 0) {\n  count = d  * factorial (d-1);\n  }\n  return count;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  factorial (n);\n  cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n<2) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial (n) << endl;\r\n\t}\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0)return 1;\n    else return factorial(n-1)*n;\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n    cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  else return (n*factorial(n-1));\n}\n\nint main () {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n < 2) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n    while(cin >> n) {\n         cout << factorial(n) << endl;\n    }\n}",
  "int factorial (int n) {\n  int f=1;\n  int i=0;\n  while (i<n) {\n    i=i+1;\n    f=f*1;\n  }\n  return f;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  int m = 1;\n  while(n > 0){\n    m = m * n;\n    n = n - 1;\n  }\n  return m;\n}\n\n\nint main () {\n  int n;\n  while(cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial(int n){\n  if (n==1) return n;\n  else return n*factorial(n-1);\n}",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial(int n){\n  if (n==1) return 1;\n  else return n*factorial(n-1);\n}",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    int count = 1;\n    \n    if (n == 0) return 1;\n    \n    else {\n        \n        while (n > 0) {\n            \n            count = count * n;\n    \n            --n;\n            \n        }\n    \n        return count;\n    \n    }\n    \n    \n}\n\n\nint main() {\n    \n    int n;\n    \n    while (cin >> n) {\n        \n     cout << factorial(n) << endl;       \n        \n        \n    }\n    \n    \n    \n    \n    \n    \n    \n}",
  "#include <iostream>\rusing namespace std;\r\r\rint factorial (int n) {\r    int count=1;\r    while (n>=0) {\r        if (n>=2) {\r            count = count*n;\r            --n;\r        }\r        else {\r            count = count*1;\r            --n;\r        }\r    }\r    return count;\r}\r\rint main() {\r    int n;\r    while (cin>>n) cout << factorial(n) << endl;\r}\r",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n<2) return 1;\n    else return n*factorial(n-1);\n}\nint main {\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n<2) return 1;\n    else return n*factorial(n-1);\n}\nint main () {\n cout << blablabla << endl;\n    \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n<2) return 1;\n    else return n*factorial(n-1);\n}\nint main () {\n cout << \"blablabla\" << endl;\n    \n}",
  "#include <iostream>\rusing namespace std;\r\r\rint factorial (int n) {\r    /*int count=1;\r    while (n>=0) {\r        if (n>=2) {\r            count = count*n;\r            --n;\r        }\r        else {\r            count = count*1;\r            --n;\r        }\r    }\r    return count;*/\r    if (n<2) return 1;\r    else return n*factorial(n-1);\r}\r\rint main() {\r    int n;\r    while (cin>>n) cout << factorial(n) << endl;\r}\r",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n < 2) return 1;\n\telse return n*factorial(n-1);\n\t}\n\nint main (){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\t}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<2) return 1;\n    else return n*factorial (n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n<2) return 1;\n    else return n*factorial (n-1);\n}\n\nint main (){\n    int n;\n    while (cin >> n) cout << factorial (n) << endl;\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main (){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n     if (n==0) return 1;\n     else return n*factorial(n-1);     \n}\n\n",
  "int factorial (int n) {\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n}",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else {\n\treturn n+factorial(n-1);\n    }\n}\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else {\n\treturn n*factorial(n-1);\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tint r=1;\n\tfor (int i=n; i>1; --i){\n\t\tr=r*i;\n\t}\n    return r;\n}\n\nint main (){\n\tint n;\n    while (cin >> n) {\n\t\tcout << factorial(n) << endl;\n    }\n}\n\t\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main(){\n  int n;\n  while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint mcd(int a, int b) {\n    while (a != b) {\n        if (a > b) a -= b;\n        else if (b > a) b -= a;\n    }\n    return a;\n}\n\nint main() {\n    int a, b;\n    while (cin >> a >> b);\n    cout << (mcd(a,b)) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\nif ( n== 0) return 1;\nelse return n*factorial(n - 1);\n}\nint main() {\nint n;\nwhile (cin >> n) {\ncout << factorial(n) << endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main(){\n  int x;\n  cin >> x;\n  cout << (factorial(x)) << endl;\n}",
  "// Factorial (recursiu)\n// nomÃ©s bool\n\n#include <iostream>\nusing namespace std;\n\n// ENUNCIAT:\n// Escriviu una funciÃ³ que retorni n!.\n// Resoleu aquest problema recursivament.\n\nint factorial(int n) {\n\t// CASOS BASE:\n\t// (i) si n=0, n!=1;\n\tif (n > 1) return n*factorial(n-1);\n\telse return 1; \n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//funciÃ³ recursiva: retorna n!\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\treturn (n*factorial(n-1));\n}\n\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n  if (n == 0) return 1;\n  else return n * factorial(n-1);\n}\nint main() {\n  int n;\n  while (cin >> n);\n  cout << factorial(n) << endl;\n}\n  ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else {\n    return factorial(n-1)*n;\n  }\n}\n  \n\n\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n  \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n <= 1) return 1;\n  else return n*factorial(n-1);\n}\n\nint main (){\n  int n;\n  while ( cin >> n ) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//Pre: programa que calculi el factorial del nombre n d'entrada\r\n\r\nint factorial(int n){\r\n\tint f = 1;\r\n\tint i = 0;\r\n\t\r\n\twhile(i < n){\r\n\t\ti += 1;\r\n\t\tf *= i;\r\n\t}\r\n\treturn f;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial << endl;\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//Pre: programa que calculi el factorial del nombre n d'entrada\r\n\r\nint factorial(int n){\r\n\tint f = 1;\r\n\tint i = 0;\r\n\t\r\n\twhile(i < n){\r\n\t\ti += 1;\r\n\t\tf *= i;\r\n\t}\r\n\treturn f;\r\n}\r\n\r\nint main(){\r\n\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//Pre: programa que calculi el factorial del nombre n d'entrada\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\r\n\r\n\t\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\n//Calcula el MCD recursivament\r\n\r\nint mcd (int a, int b) {\r\n\tif (b > 0) return mcd(b,a%b);\r\n\treturn a;\r\n}\r\n\r\nint main(){\r\n\t\r\n\t\r\n}\r\n",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) { // iterative solution\nint f = 1;\nint i = 0;\nwhile (i < n) {\ni = i + 1;\nf = f*i;\n}\nreturn f;\n}\nint main(){\n    int en,ou;\n    while (cin>>en){\n        ou=factorial(en);\n        cout<<ou<<endl;\n    }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n>0){\n    n = n*factorial(n-1);\n  }\n  \n  else{\n    \n    n = 1;\n  }\n  return n;\n}\n\n\nint main(){\n  \n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}\n    \n    ",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n    }    \n\nint main (){\n    int n;\n    while (cin >> n){\n    cout << factorial (n) << endl; \n    }\n   }\n",
  "\n#include <iostream>\nusing namespace std;\n\nint mcd (int a, int b){  \n    if (a%b == 0) return b;\n    if (b!=0) return mcd (b,a%b);\n}\n\n\nint main (){\n    int a, b;\n    cin >> a >> b;\n    cout << mcd (a,b) << endl; \n    }\n",
  "#include <iostream> \nusing namespace std ;\n\nint factorial (int n) {\n\tif (n < 2 ) return 1 ;\n\telse \n\t\treturn n * factorial ( n-1 ) ; \n}\n\n\nint main () {\n\tint k ;\n\twhile ( cin >> k ) {\n\t\tcout << factorial (k) << endl ;\n}}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\nif (n==0) return 1;\nelse return factorial(n-1)*n;\n}\nint main(){\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\n if(n > 1) {\n\t \n\t return n*factorial(n-1);\n\n\t}\n else return 1;\n}\n\n\nint main () {\n\t\n\t\tint n;\n\t\tcin >> n;\n\t\tcout << factorial(n) << endl;\n\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//P12509\n//pre: un natural n, 0<=n<=12.\n//post: retornar n!\n\nint factorial (int n) {\n\tif (n <= 1) return 1;\n\treturn n*factorial(n - 1);\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n\treturn 0;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint fact (int n){\n  if (n == 0) return 1;\n  else return fact (n-1)*n;\n}\n\nint main (){\n  int n;\n  cin >> n;\n  cout << fact(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return factorial (n-1)*n;\n}\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial (x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  return n*factorial(n-1);  \n}\n\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  return n*factorial(n-1);  \n}\n\n\nint main(){\n  int n;\n  while (cin >> n){\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n  if (n == 0) return 1;\n  else return fact (n-1)*n;\n}\n\nint main (){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n  if (n == 0) return 1;\n  else return factorial (n-1)*n;\n}\n\nint main (){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n>1) {\n\t\treturn n*factorial(n-1);\n\t}\n\telse {\n\t\treturn 1;\n\t}\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n){\n\tcout << factorial(n) << endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int x){\nif (x == 0) return 1;\nelse return (factorial(x-1))*x;\n}\n\nint main () {\n  int x;\n  cin >> x;\n  cout << factorial (x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0) return 1;\n  else return n*factorial(n-1);}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;}\n  \n  ",
  "#include <iostream>\n\nusing namespace std;\n\n//cas base: factorial de 1 i 0 es 1 \n\n\nint factorial (int n){\n  if (n==1 or n==0){\n   return 1; \n  }\n  \n  n = n*factorial(n- 1);\n  return n;\n}\n\nint main(){\n  int n;\n  \n  while (cin>>n){\n    cout<<factorial(n)<<endl;\n  }\n  \n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint factorial( int n ) {\n  if ( n == 0) { return 1; }\n  else { return n*factorial( n - 1 ); }\n}",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int z=n, s=1;\n    while (n>0){\n        s = s *n;\n        n--;\n    }\n}\n\nint main (){\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int x;\n  if (n == 0) return 0;\n  else for (int i = 1; i <= n; i++) {\n     x = x*i;\n  }\n  \n}",
  "int factorial(int n) {\n  int x = 1;\n  if (n == 0) return 0;\n  else for (int i = 1; i <= n; i++) {\n     x = x*i;\n  }\n  return x;\n}",
  "int factorial(int n) {\n  int x = 1;\n  if (n == 0) return 1;\n  else for (int i = 1; i <= n; i++) {\n     x = x*i;\n  }\n  return x;\n}",
  "//factorial recursiu\n#include <iostream> \nusing namespace std;\n\nint factorial(int n){\n\tif (n > 0) return n * factorial(n-1);\n\t\n\treturn 1;\n}\n\n\nint main() {\n\tint n;\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n}\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int s=1;\n    int z=n;\n    while (n>0){\n        s = s *n;\n        n--;\n    }\n    if (z=0) s=1;\n    return s;\n}\n\nint main (){\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){ \nif (n < 1) return 1;\nelse return n*factorial(n-1);\n}\n\nint main () {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else {\r\n        int f = factorial(n - 1);\r\n        //Hip: f es (n - 1)!\r\n        return n*f;\r\n    }\r\n}\r\n\r\nint factorial_2(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n    \r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n == 0) return 1;\r\n    else return factorial(n-1) * n;\r\n}\r\n\r\nint main() {\r\n    int x, y;\r\n    while (cin >> x){\r\n          y = factorial (x);\r\n          cout << y << endl;\r\n          }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 1) return 1; \n    else if(n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main(){\n    int n;\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n - 1);\r\n\t}\r\n\r\nint main(){\r\nint n;\r\ncin >> n;\r\ncout << factorial(n) << endl;\r\n}\r\n\r\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int count;\n    count = 1;\n    while (n > 0){\n        count = count * n;\n\t--n;\n    }\n    return count;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  int x = factorial(n);\n  cout << x << endl;\n}\n  ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "int factorial(int n) {\n  if (n == 0) {\n    return 1;\n  } else {\n    return n * factorial(n - 1);\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse retur n * factorial (n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial (n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n>1){\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\telse {\r\n\t\treturn 1;\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0){\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\tn = n * factorial(n - 1);\r\n\t\treturn n;\r\n\t}\r\n}\r\n\r\nint main (){\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tcout << factorial (n) << endl;\r\n\t}\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\nif (n>1){\n  return n* factorial(n-1);\n}\nelse return 1;\n}\n\nint main() {\n  int n;\n  cin >> n;\n cout << factorial(n) << endl;\n}",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n} \n  int main() {\n  \n     int m;\n     cin >> m;\n     cout << factorial(m) <<endl;\n}\n",
  "#inculde<iostream>\nusing namespace std ;\n\nint fact (int n){\n\tif(n==0) return 1;\n\telse{\n\t\treturn fact(n-1)*n;\n\t}\n\nint main(){\n\tint a ;\n\tcin>>a;\n\t\tcout<<fact(a)<<endl;\n} \n\t\n",
  "#include<iostream>\nusing namespace std ;\n\nint fact (int n){\n\tif(n==0) return 1;\n\telse{\n\t\treturn fact(n-1)*n;\n\t}\n\nint main(){\n\tint a ;\n\tcin>>a;\n\t\tcout<<fact(a)<<endl;\n} \n\t\n",
  "#include<iostream>\nusing namespace std ;\n\nint fact (int n){\n\tif(n==0) return 1;\n\telse{\n\t\treturn fact(n-1)*n;\n\t}\n}\nint main(){\n\tint a ;\n\tcin>>a;\n\t\tcout<<fact(a)<<endl;\n} \n\t\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint fact(int n){\r\n\tif(n==0)return 1;\r\n\telse {\r\n\t\treturn (n*fact(n-1));\r\n\t}\r\n}\r\n int main(){\r\n \tint n;\r\n \tcin>>n;\r\n \tcout<<fact(n)<<endl;\r\n }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint fact(int n){\r\n\tif(n==0)return 1;\r\n\telse {\r\n\t\treturn (n*fact(n-1));\r\n\t}\r\n}\r\n int main(){\r\n \tint n;\r\n \twhile(cin>>n){\r\n\t \r\n\t  \tcout<<fact(n)<<endl;\r\n }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n<=0)return 1;\r\n\telse {\r\n\t\treturn (n*factorial(n-1));\r\n\t}\r\n}\r\n int main(){\r\n \tint n;\r\n \twhile(cin>>n){\r\n\t \r\n\t  \tcout<<factorial(n)<<endl;\r\n }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n    if(n==0) return 1;\n    \n    return n*factorial(n-1);\n}\n\nint main()\n{\n    int n;\n    \n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n  if(n==0)return 1;\r\n  else return n*factorial(n-1);\r\n}",
  "int factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0){\n    return 1;\n  }\n  else {\n    return (n*factorial(n-1));\n  }\n}\n\nint main(){\n  int n;\n  cin>>n;\n  int f;\n  f=factorial(n);\n  cout<<f<<endl;\n}",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    if (n==0)n=1;\n    if (n>1) n=n*factorial(n-1);\n    return n;\n}\nint main(){\n    int n;\n    while(cin>>n){\n    cout<<factorial(n)<<endl;\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int x;\n  cin >> x;\n  cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int x;\n  cin >> x;\n  cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\nif (n <= 1) return 1;\nelse return (n*factorial(n-1));\n\n}\n\nint main () {\n\tint q;\n\twhile (cin >> q) cout << factorial (q) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint main () {\n    int a, b, cont = 0;\n    while (cin >> a >> b) {\n        while (a > 0) {\n            a = b/a;\n            b = b%a;\n            ++cont;\n        }\n        cout << cont <<endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    if (n == 1) return n;\n    return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n ) {\n        cout << factorial(n) << endl;\n    }\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\n\n\tint factorial(int n ){\n\t\tint f;\n\t\tif (n==0){\n\t\t\tf=1;\n\t\t}\n\t\telse {\n\t\t\tf= n*factorial(n-1);\n\t\t}\n\t\n\treturn f;\n}\n\nint main(){\n\tint c;\n\tcin >> c;\n\tcout << factorial(c)<< endl;\n\n\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "// Factorial\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif ( n > 1 ) {\n\t\treturn n*factorial(n-1);\n\t}\n\telse return 1;\n}\n\nint main () {\n\t\n\tint n;\n\twhile ( cin >> n ) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n > 1) return n*factorial(n-1);\n    else return 1;\n}\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    int f = 1;\n        for (int i = 1; i <= n; ++i) {\n                f = f*i;\n        }\n        return f;\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n        ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  return n * factorial(n-1);\n}\n\nint main () {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n != 1) return n * factorial (n - 1);\n\telse return 1;\n}\n\nint main () {\n\tint N;\n\tcin >> N;\n\tif (N != 0) cout << factorial (N) << endl;\n\telse cout << 1 << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\n    \n    if (n == 0) return 1;\n    \n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}    ",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n==1 or n==0) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse  return n * factorial (n - 1);\n}\n\nint main () {\n\tint N;\n\tcin >> N;\n\tcout << factorial (N) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\t\r\n\tint x;\r\n\r\n\tif (n == 0) x = 1;\r\n\telse {\r\n\t\tx = n * factorial (n-1);\r\n\t}\r\n\treturn x;\r\n}\r\n\r\nint main () {\r\n\t\r\n\tint n, x;\r\n\tcin >> n;\r\n\t\r\n\tx = factorial (n);\r\n\tcout << x << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n  if ( n == 0 ) return 1;\n  if ( n == 1 ) return 1;\n  else return n* factorial (n-1);\n}\nint main () {\n  int x;\n  while ( cin >> x ) {\n  cout << factorial (x) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n\tif (n > 1) return n*factorial (n-1);\n\telse return 1;\n}\n \nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n<=1) return 1;\r\n    return factorial(n-1)*n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\nif( n>=1){\n    return n*factorial(n-1);\n}\nelse{\n  return 1;\n}\n}\n  int main(){\n    int n;\n   cin >> n;\n    cout << factorial(n) << endl;\n    \n  }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1;\n    else return n * factorial(n-1);\n\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n\n}\n\n/*\nint factorial_iteratiu(int n){\n    int p = 1;\n    for (int i = n; i >= 1; --i) {\n    p *= i;\n    }\nreturn p;\n}\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial_iteratiu(x)<< endl;\n}\n*/\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n>1){\n\t\treturn factorial(n-1);\n\t}else return 1;\n\t\n}\n\n\n\nint main(){\n\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n\n\n\n\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n>1){\n\t\treturn factorial(n-1);\n\t}else return 1;\n\t\n}\n\n\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n\n\n\n\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n>1){\n\t\treturn n*factorial(n-1);\n\t}else return 1;\n\t\n}\n\n\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n\n\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else{\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n    int n, sum;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\r\n\r\nint factorial(int n){\r\n\tif (n<=1) return 1;\r\n\telse return (n*factorial(n-1));\r\n}\r\nint main(){\r\n\tint num;\r\n\twhile (cin >> num)\r\n\tcout << factorial(num); \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\twhile (n != 1) {\n\t\tfactorial = n * factorial(n - 1)\n\t}\n\telse {\n\t\treturn 1;\n\t}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\twhile (n != 1) {\n\t\treturn n * factorial(n - 1);\n\t}\n\treturn 1;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n > 1) {\n\t\treturn n * factorial(n - 1);\n\t}\n\telse {\n\t\treturn 1;\n\t}\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n== 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\nint main(){\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n==0){\r\n    return 1;\r\n  }\r\n  else {\r\n    return (n*factorial(n-1));\r\n  }\r\n}\r\n\r\nint main(){\r\n  int n;\r\n  cin>>n;\r\n  int f;\r\n  f=factorial(n);\r\n  cout<<f<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int z = 1;\n    for (int i=1; i <= n; ++i){\n        z = z*i;\n    }\n    return z;\n}\n\n    \nint main(){\n    int n;\n    while (cin >> n){\n    cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n   \n  if (n == 1 or n==0) return 1;\n  else {\n    int sum;\n    sum = n*(factorial(n-1)) ;     \n    return sum;\n  }\n}\n \nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n ",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if (n==0)\r\n        return 1;\r\n    else\r\n        return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main (){\r\n    int n;\r\n    while (cin >> n)\r\n        cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\t\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif (n <=1){\r\n\t\treturn 1;\r\n\t}\r\n\t\r\n\telse {\r\n\t\treturn (n * factorial(n-1));\r\n\t}\r\n}\r\n\r\nint main(){\r\n\t\r\n\tint n,r;\r\n\tcin >> n;\r\n\t\r\n\tr = factorial(n);\r\n\t\r\n\tcout << r << endl;\r\n\t\r\n\t\r\n}\r\n",
  "#include <iostream>\t\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif (n <=1){\r\n\t\treturn 1;\r\n\t}\r\n\t\r\n\telse {\r\n\t\treturn (n * factorial(n-1));\r\n\t}\r\n}\r\n\r\nint main(){\r\n\t\r\n\tint n,r;\r\n\tcin >> n;\r\n\t\r\n\tr = factorial(n);\r\n\t\r\n\tcout << r << endl;\r\n\t\r\n\t\r\n}\r\n",
  "#include <iostream>\r\n#include <string>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n==0 or n==1) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n==0 or n==1) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n > 1){\n\t\treturn n*factorial(n-1);\n\t}\n\telse return 1;\n}\n\t\t\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n   int n;\n   while (cin >> n) {\n       cout << factorial(n) << endl;\n   }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n\n\n",
  "\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\nint f=1, i=0;\nwhile (i<n) {\ni=i+1;\nf=f*1;\n}\nreturn f;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\nint res;\nif(n==0) res=1;\nelse res = n*factorial(n-1);\nreturn res;\n}",
  "#include <iostream>\nusing namespace std;\n\nint fac( int a) {\n    //pre: introduim el nombre a\n    //post: retorna el factorial de a\n    int res;\n    if (a==0) res = 1;\n    else res = n*facorial(n-1);\n    return res;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fac( int a) {\n    //pre: introduim el nombre a\n    //post: retorna el factorial de a\n    int res;\n    if (a==0) res = 1;\n    else res = a*facorial(a-1);\n    return res;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fac( int a) {\n    //pre: introduim el nombre a\n    //post: retorna el factorial de a\n    int res;\n    if (a==0) res = 1;\n    else res = a*fac(a-1);\n    return res;\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n    \nint res;\nif (n==0) res=1;\nelse res=n*factorial(n-1);\nreturn(res);\n}",
  "#include <iostream>\nusing namespace std;\n\nint fac( int a) {\n    //pre: introduim el nombre a\n    //post: retorna el factorial de a\n    int res;\n    if (a==0) res = 1;\n    else res = a*fac(a-1);\n    return res;\n}\nint main() {\n    int a;\n    cin>>a;\n    cout<< fac(a)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\nint res;\nif(n==0) res=1;\nelse res = n*factorial(n-1);\nreturn res;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nint res;\nif(n==0) res=1;\nelse res = n*factorial(n-1);\nreturn res;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    //pre: introduim el nombre a\n    //post: retorna el factorial de a\n    int res;\n    if (n==0) res = 1;\n    else res = n*factorial(n-1);\n    return res;\n}\nint main() {\n    int n;\n    cin>>n;\n    cout<< factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nint res;\nif (n==0) res=1;\nelse res=n*factorial(n-1);\nreturn (res);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\nint res;\nif(n==0)res=1;\nelse res=n*factorial(n-1);\nreturn (res);\n}\n\nint main () {\n\nint x,r;\ncin>>x;\nr=factorial(x);\ncout<<r<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\nint res;\nif(n==0 or n==1) res=1;\nelse res=n*factorial(n-1);\nreturn res;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\n\tint res;\n\t\n\tif (n>0)\n\t\tres=n*factorial(n-1);\n\t//else res=fac(n-1)*fib(n-0);\n\t//res n;\n\telse\n\t\tres=1;\n\treturn res;\n}\nint main()\n{\n\tint n;\n\tint res;\n\tcout<<\"Dona'm un numero\"<<endl;\n\tcin>>n;\n\n\tres=factorial(n);\n\t\n\tcout<<res;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n//pre:n Ã©s un natural\n//post: retorna el factorial de n; n!\nint res;\nif(n>0) {\nres=n*factorial(n-1);\n}\nelse res=1;\n\nreturn res;\n}\n\nint main(){\n\n\nint n;\ncin>>n;\n\ncout<<\"El factorial de \"<<n<<\" es \"<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\nint res;\n\nif(n==0 or n==1) res = n;\nelse{\n\tres=n*factorial(n-1);\n}\n\nreturn res;\n\n}\n\nint main(){\n\nint x;\ncin>>x;\ncout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\nint res;\n\nif(n==0 or n==1) res = 1;\nelse{\n\tres=n*factorial(n-1);\n}\n\nreturn res;\n\n}\n\nint main(){\n\nint x;\ncin>>x;\ncout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//RECURSIVITAT: Factorial d'un numero.\r\n\r\nint factorial (int n) {     //DefiniciÃ³ de la funciÃ³ recursiva.\r\n    // Pre: n Ã©s un nombre enter positiu.\r\n    // Post: retorna n!\r\n    int res;\r\n    if (n==0) {             //Si n=0, el factorial serÃ  1 (cas simple/directe).\r\n        res = 1;\r\n    }\r\n    else {                  //Si n no Ã©s 0 --> cas general/recursiu.\r\n        res = n * factorial (n-1);        //AquÃ­, la funciÃ³ es crida a sÃ­ mateixa.\r\n    }                                   // Factorial dâun nombre n mÃ©s gran que 0.\r\n    return res;\r\n}\r\n\r\nint main () {\r\n    cout<<factorial(5)<<endl;       //Crida a la funciÃ³. Li envies el nÃºmero x.\r\n}\r\n",
  "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint factorial(int n) {\n\tint r;\n\t\n\tif(n == 0) r = 1;\n\t\n\telse{\n\t\tr = n * factorial(n-1);\n\t}\n\t\n\treturn r;\n}\n\nint main() {\n\n\tcout << factorial(5) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\t\n\t// Pre:\n\t// Post:\n\t\n\tint f;\n\t\n\tif (n == 0)\t\tf = 1;\n\telse \tf = n * factorial(n-1);\n\n\treturn f;\n\t\n}\n\n\nint main(){\n\t\n\tcout << factorial(4) << endl;\n\t\n}\n",
  "int factorial(int n) {\n//Pre:...\n//Post:...\nint res;\nif (n==0) res=1;\nelse if (n>0) {\n\tres=n*factorial(n-1);\n}\nreturn res;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n//cas simple:\nint res;\nif (n==0 or n==1) res=1;\n//cas recursiu:\nelse res=factorial(n-1)*n;\n\nreturn (res);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint res;\n//cas simple \nif(n==0 or n==1)\n    res= 1;\n//cas recursiu:\nelse res=factorial(n-1)*n;\n\nreturn res;\n}\n\n\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==1) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn n*factorial(n-1);\n\t}\n}\n\nint main(){\nint n;\ncin>>n;\ncout<< factorial(n) <<endl;\t\t\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n){\n\tif (n<=1) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn n*factorial(n-1);\n\t}\n}\n\nint main(){\nint n;\ncin>>n;\ncout<< factorial(n) <<endl;\t\t\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tint res;\n\tif (n==0) res=1;\n\telse res=n*factorial(n-1);\n\treturn res;\n}\n\nint main(){\n\tint x;\n\tcin>>x;\n\tif ((x<=12) and (x>=0)){\n\t\tcout<<factorial(x)<<endl;\n\t}\n\telse cout<<\"Res\"<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n//Pre:\tn Ã©s un enter positiu.\n//Post:\tRetorna el factorial de n.\n\tint res;\n\tif(n==0 or n==1) res=1;\n\telse res=n*factorial(n-1);\n\treturn res;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nlong factorial(int numero) {\n\t//Pre: n Ã©s un enter positiu\n\t//Post: Retorno el factorial de n\n\tlong res;\n\n\tif (numero==0 or numero==1) {\n\t\tres=1;\n\t}else{\n\t\tres = numero * factorial(numero-1);\n\t}\n\n\treturn res;\n}\n\nint main() {\n\n\tlong n;\n\n\tcin >> n;\n\n\tcout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int numero) {\n\t//Pre: n Ã©s un enter positiu\n\t//Post: Retorno el factorial de n\n\tint res;\n\n\tif (numero==0 or numero==1) {\n\t\tres=1;\n\t}else{\n\t\tres = numero * factorial(numero-1);\n\t}\n\n\treturn res;\n}\n\n/*int main() {\n\n\tlong n;\n\n\tcin >> n;\n\n\tcout << factorial(n) << endl;\n}*/\n\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial (int n){\n\t//pre: n es un enter positiu \n\t//post: retorna el factorial de n \n\tint res;\n\tif (n==0 or n==1) res=1;\n\telse res= n* factorial(n-1);\n\n\treturn res;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n int factorial(int n){\n//pre:n Ã©s un enter positiu\n//post:retorna el factorial de n\nint res;\nif (n==0 or n==1){\nres=1;\n}\nelse{ res= n*factorial(n-1);\nreturn res;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n int factorial(int n){\n//pre:n Ã©s un enter positiu\n//post:retorna el factorial de n\nint res;\nif (n==0 or n==1){\nres=1;\n}\nelse{ res= n*factorial(n-1);\nreturn res;\n}\n}\nint main(){\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\nint res;\nif(n==0 or n==1) res=1;\nelse res=n*factorial(n-1);\nreturn res;\n}\nint main(){\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint f;\n\n\tif(n > 0 and n <= 12){\n\t\tf = n * factorial(n-1);\n\t}else if(n > 12){\n\t\tf = factorial (n-1);\n\t}else if(n == 1 or n == 0){\n\t\treturn 1;\n\t}\n\n\treturn f;\n}\n",
  "//\n//  main.cpp\n//  Factorial Recursiu\n//\n//  Created by Pau Biosca on 2/12/16.\n//  Copyright Â© 2016 Pau Biosca. All rights reserved.\n//\n\n#include <iostream>\n\nusing namespace std;\n\n\n\nint factorial (int n) {\n    \n    if (n==1) return 1;\n    else {\n        return n*factorial(n);\n    }\n    \n}\n\nint main( ) {\n    \n    int x;\n    \n    while (cin>>x) {\n        \n        cout<<factorial(x)<<endl;\n        \n        \n    }\n}\n",
  "//\n//  main.cpp\n//  Factorial Recursiu\n//\n//  Created by Pau Biosca on 2/12/16.\n//  Copyright Â© 2016 Pau Biosca. All rights reserved.\n//\n\n#include <iostream>\n\nusing namespace std;\n\n\n\nint factorial (int n) {\n    \n    if (n==1) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n    \n}\n\nint main( ) {\n    \n    int x;\n    \n    while (cin>>x) {\n        \n        cout<<factorial(x)<<endl;\n        \n        \n    }\n}\n",
  "int factorial (int n){\n\t//pre: n es un nombre enter positiu\n\t//post: retorna n!\n int res;\n if (n==0) res =1;\n  else res= n*factorial(n-1);\n return res;\n}\n",
  "int factorial(int n) {\n  if (n <= 1) return 1;\n  return n * factorial(n - 1);\n}\n",
  "\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n - 1);\n}\n",
  "\ndef factorial(n):\n  if n <= 1: return 1\n  return n * factorial(n - 1)\n\n",
  "class Solution {\n\n  public static int factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n - 1);\n  }\n  \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\treturn n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif(n!=0)return (n*factorial(n-1));\n\telse return 1;\n}\n\n\nint main() {\n\tint x;\n\twhile (cin >> x) {\n    \t\tcout << factorial(x) << endl;\n\t}   \n}\n\n",
  "#include<iostream>\r\nusing namespace std ;\r\n\r\n\r\n int factorial(int n){\r\n \tif(n==0 or n==1) return '1';\r\n \telse {\r\n \t\treturn (n*factorial(n-1));\r\n\t }\r\n }\r\n \r\n int main (){\r\n \tint n ;\r\n \twhile (cin>>n ) {\r\n \t\tcout<<factorial(n)<<endl;\r\n\t }\r\n }\r\n\r\n",
  "#include<iostream>\r\nusing namespace std ;\r\n\r\n\r\n int factorial(int n){\r\n \tif(n==0 or n==1) return 1;\r\n \telse {\r\n \t\treturn (n*factorial(n-1));\r\n\t }\r\n }\r\n \r\n int main (){\r\n \tint n ;\r\n \twhile (cin>>n ) {\r\n \t\tcout<<factorial(n)<<endl;\r\n\t }\r\n }\r\n\r\n",
  "#include <iostream>\r\n#include <string>\r\n\r\nusing namespace std;\r\n\r\nint a=1;\r\n\r\nint factorial (int n)\r\n{\r\n\ta=a*n;\r\n\t--n;\r\n\tif (n > 0)\r\n\t{\r\n\t\tfactorial(n);\r\n\t}\r\n\treturn a;\r\n}\r\n\t\r\n\r\n\r\nint main()\r\n{\r\n\tint f;\r\n\twhile (cin >> f)\r\n\t{\r\n\t\tif (f!=0)\r\n\t\t{\r\n\t\t\tcout << factorial(f) << endl;\r\n\t\t\ta = 1;\r\n\t\t}\r\n\t\tif (f==0)\r\n\t\t{\r\n\t\t\tcout << 1 << endl;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n)\r\n{\r\n\tif (n==1 or n == 0)\r\n\t{\r\n\t\treturn 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n\r\n\r\nint main()\r\n{\r\n\tint x;\r\n\twhile (cin >> x)\r\n\t{\r\n\t\tcout << factorial(x) << endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n//pre:n Ã©s un nombre enter positiu\n//post:retorna n!\nint res;\nif (n==0){\n\tres=1;\n\t}else{\n\t\tres=n*factorial(n-1);\n\t}\nreturn res;\n}\nint main(){\nint n;\ncin>>n;\nint res;\nif (n==0){\n\tres=1;\n\t}else{\n\t\tres=n*factorial(n-1);\n\t}\ncout<<res<<endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\tif (n <= 1){\n\t\treturn 1;\n\t}else{\n\t\treturn n*factorial(n-1);\n\t}\t\n}\n\nint main () {\nint n;\nwhile (cin>>n){\n\tcout<< factorial (n)<< endl;\n\t}\n\t\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n     \tif(n <= 1) return n;\r\n     \telse return n* factorial(n-1);\r\n\t }\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin >> n){\r\n\tcout <<\tfactorial(n) << endl;\r\n\t\t\r\n\t}\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n     \tif(n <= 1) return 1;\r\n     \telse return n* factorial(n-1);\r\n\t }\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin >> n){\r\n\tcout <<\tfactorial(n) << endl;\r\n\t\t\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\n\n int factorial(int n){\n   if(n==0)return 1;\n   else{\n     return n*factorial(n-1);\n   }\n }\n     \n\n\n  int main(){\n    int n;\n    cin >> n;\n    cout << factorial(n)<<endl;\n  }",
  "#include <iostream>\nusing namespace std;\n\n\n\n int factorial(int n){\n   if(n==0)return 1;\n   else{\n     return n*factorial(n-1);\n   }\n }\n     \n\n\n  int main(){\n    int n;\n    cin >> n;\n    cout << factorial(n)<<endl;\n  }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1) return 1;\n    else return n*factorial(n-1);\n\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1) return 1;\n    return n*factorial(n-1);\n\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1) return 1;\n    return n*factorial(n-1);\n\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n < 2) return 1;\n    return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n - 1) * n;\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        int fac = factorial(n);\n        cout << \"Factorial: \" << fac << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n == 0) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n < 2) return n;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n; \r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint main(){\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n < 2) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n>1) return n*factorial(n-1);\n    else return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\r\nif (n<2){\r\n\treturn 1;\r\n}else{\r\n\t\treturn n*factorial(n-1);\r\n}\r\n\r\n}\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==1 or n==0) return 1;\r\n    else return n*factorial(n-1);\r\n\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    cin>>n;\n    \n    if (n == 0) return 1;\n    \n    else return factorial(n-1) * n;\n}\n\nint main() {\n    \n    int n;\n    \n    cin>>n;\n    \n    cout<<factorial(n)<<endl;\n    \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    \n    else return n * factorial(n-1);\n}\n\nint main() {\n    \n    int n;\n    \n    cin>>n;\n    \n    cout<<factorial(n)<<endl;\n    \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n = 0 or n = 1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0 or n == 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial (n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n\tint res;\n\tif (n==0) res=1;\n\telse res=n*factorial(n-1);\n\treturn res;\n\t\n}\n\nint main() {\n\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint main () {\r\nint n, m=1;\r\ncin>>n;\r\nfor(int i=1;i<n+1;++i){\r\n    m=m*i;\r\n}\r\ncout<<m<<endl;\r\n}\r\n",
  "//\n//  main.cpp\n//  Nombre de xifres\n//\n//  Created by Pau Biosca on 25/1/17.\n//  Copyright Â© 2017 Pau Biosca. All rights reserved.\n//\n\n#include <iostream>\n\nusing namespace std;\n\n\n\nint factorial(int n) {\n    \n    if (n<=1) return 1;\n        \n    return factorial(n-1)*n;\n    \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint main () {\r\nint n, m=1;\r\ncin>>n;\r\nfor(int i=1;i<n+1;++i){\r\n    m=m*i;\r\n}\r\ncout<<m<<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint main () {\r\nint n, m=1;\r\ncin>>n;\r\nfor(int i=1;i<n+1;++i){\r\n    m=m*i;\r\n}\r\ncout<<m<<endl;\r\n}\r\n",
  "#include <iostream>\n#include <stdio.h>\nusing namespace std;\n\nint factorial(int n){\n return n == 0 ? 1 : n * factorial(n-1);\n}\n\nint main(){\n int n;\n while(cin>>n){\n  int r = factorial(n);\n  cout<<r<<endl;\n }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint main() {\r\n    int a,b;\r\n    while (cin>>a){\r\n        b=1;\r\n    while (a>1){\r\n        b=b*a;\r\n        --a;\r\n    }\r\n    cout<<b<<endl;\r\n}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint main() {\r\n    int a,b;\r\n    while (cin>>a){\r\n        b=1;\r\n    while (a>1){\r\n        b=b*a;\r\n        --a;\r\n    }\r\n    cout<<b<<endl;\r\n}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    int a,b;\r\n    while (cin>>a){\r\n        b=1;\r\n    while (a>1){\r\n        b=b*a;\r\n        --a;\r\n    }\r\n    cout<<b<<endl;\r\n}\r\n}\r\n",
  "#include <vector>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if ((n==1) or (n==0)) return 1;\r\n    else return factorial(n-1)*n;\r\n}\r\n\r\nint main (){\r\n    int n;\r\n    while (cin >> n)cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n==0 or n == 1) return 1;\r\n\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n     int fact =1;\r\n     for (int i=2; i<=n; i= 1+i) fact = fact*i;\r\n     return fact;\r\n}\r\n\r\n\r\n\r\nint main (){\r\n    int el;\r\n    cin >> el;\r\n    while (el!= -6){\r\n        int res = factorial (el);\r\n        cout << res << endl;\r\n        cin >>el;\r\n    }\r\n}\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n){\r\n    int fact=1;\r\n    for (int i=2; i<=n; i=1+i) fact=fact*i;\r\n    return fact;\r\n}\r\n\r\n\r\nint main (){\r\n    int el;\r\n    cin>>el;\r\n    while (el!=-6){\r\n        int res=factorial (el);\r\n        cout<<res<<endl;\r\n        cin>>el;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\n    int fact=1;\r\n    for(int i=2; i<=n; i=1+i) fact=fact*i;\r\n    return fact;\r\n}\r\n\r\n    int main(){\r\n        int el;\r\n        cin>>el;\r\n        while(el!=-6){\r\n                int res=factorial(el);\r\n                cout<<res<<endl;\r\n                cin>>el;\r\n        }\r\n    }\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n int fact = 1;\r\n for (int i=2; i<=n; i=1+i) fact = fact *i;\r\n return fact;}\r\n int main () {\r\n  int el;\r\n  cin >> el;\r\n  while (el != -6){\r\n     int res = factorial (el);\r\n     cout << res << endl;\r\n     cin >> el;}\r\n     }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n){\r\n   int fact=1;\r\n   for (int i=2; i<=n; i=1+i)fact=fact*i;\r\n   return fact;\r\n}\r\nint main (){\r\n    int el;\r\n    cin>>el;\r\n    while (el!=-6){\r\n        int res=factorial(el);\r\n        cout<<res<<endl;\r\n        cin>>el;\r\n    }\r\n}\r\n",
  "#include <stdio.h>\n\nint factorial(int n);\n\nint main() {\n\tint n;\n\twhile (scanf(\"%d\", &n) > 0) {\n    printf(\"%d\\n\", factorial(n));\n\t}\n\treturn 0;\n}\r\n\r\nint factorial(int n){\r\n    if(n<=0) return 0;\r\n    else if (n==1) return 1;\r\n    else if (n<=12) return n*factorial(n-1);\r\n}\r\n",
  "#include <stdio.h>\n\nint factorial(int n);\n\nint main() {\n\tint n;\n\twhile (scanf(\"%d\", &n) > 0) {\n    printf(\"%d\\n\", factorial(n));\n\t}\n\treturn 0;\n}\r\n\r\nint factorial(int n){\r\n    if(n<=0) return 0;\r\n    else if (n==1) return 1;\r\n    else if (n<=12) return n*factorial(n-1);\r\n}\r\n",
  "#include <stdio.h>\n\nint factorial(int n);\n\nint main() {\n\tint n;\n\twhile (scanf(\"%d\", &n) > 0) {\n    printf(\"%d\\n\", factorial(n));\n\t}\n\treturn 0;\n}\r\n\r\nint factorial(int n){\r\n    if(n<=0) return 0;\r\n    else if (n==1) return 1;\r\n    else if (n>1 && n<=12) return n*factorial(n-1);\r\n}\r\n",
  "#include <stdio.h>\n\nint factorial(int n);\n\nint main() {\n\tint n;\n\twhile (scanf(\"%d\", &n) > 0) {\n    printf(\"%d\\n\", factorial(n));\n\t}\n\treturn 0;\n}\r\n\r\nint factorial(int n){\r\n    if(n<=0) return 1;\r\n    else if (n==1) return 1;\r\n    else if (n>1 && n<=12) return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n == 0) n = 1;\n\telse {\n\t\tn = n * factorial(n - 1);\n\t}\n\treturn n;\n}\n\nint main() {\n\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n\tif ( n == 0) return 1;\n\telse return n * factorial (n - 1);\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n > 0) return n * factorial(n-1);\n\treturn 1;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n > 0) return n * factorial(n-1);\n\treturn 1;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\n\nint main() {\nint n;\nwhile (cin >> n) {\n    cout << factorial(n) << endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n){\t\t\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint main(){\r\n\tint n,m;\r\n\tcin>>n>>m;\r\n\tcout<<n-m<<endl;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint d=1;\r\n\tif(n==1 or n==0) return n;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin>>n){\r\n\t\tcout<<factorial(n)<<endl;\r\n\t}\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==1 or n==0) return n;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin>>n){\r\n\t\tcout<<factorial(n)<<endl;\r\n\t}\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==1 or n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin>>n){\r\n\t\tcout<<factorial(n)<<endl;\r\n\t}\r\n}\r\n",
  "\n\n\nint factorial(int n) {\n\tif (n < 10) return n;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tn = factorial(n);\n\tcout << n << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n\n}\n\n\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl; \n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\nint main(){\r\n\tint n;\r\n\tcin>> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1); \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n < 2) return 1;\n\treturn factorial(n-1) * n;\n}\n\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n\t\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return factorial(n - 1) * n;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0 or n == 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << \"El seu factorial es: \" <<factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else if(n == 1) return 1;\n    else return n*(factorial(n-1));\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return factorial(n - 1) * n;\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\tif (n > 1 ) return n * factorial(n-1);\r\n\telse return 1;\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return factorial(n-1); \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else return fatorial (n - 1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else return factorial (n - 1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n < 2) return 1;\n    else return n*factorial (n - 1);\n}\n",
  "\r\n# include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n\tif (n == 1) return 1;\r\n\telse return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\twhile (cin >> n)\r\n\t{\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n\t\r\n\treturn 0;\r\n}",
  "\r\n# include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n\tif ((n == 1) or (n == 1)) return 1;\r\n\telse return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\twhile (cin >> n)\r\n\t{\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n\t\r\n\treturn 0;\r\n}",
  "\r\n# include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\twhile (cin >> n)\r\n\t{\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n\treturn 0;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  return (n+factorial(n+1));\n  \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n   \n  if (n == 1 or n==0) return 1;\n  else {\n    int sum;\n    sum = n*(factorial(n-1)) ;     \n    return sum;\n  }\n}\n \nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n == 0 or n == 1) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main(){\n    int n;\n\n    while (cin >> n){\n        cout << factorial(n) << endl;\n\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n == 0) return 1;\n\t\n\telse return factorial(n - 1) * n;\n}\n\nint main() {\n\n\tint n;\n\t\n\twhile (cin>>n) {\n\t\n\t\tcout<<factorial(n)<<endl;\n\t}\n}\n",
  "\n \n\nint factorial(int n) {\n  int x = 1;\n  if (n == 0) return 1;\n  else for (int i = 1; i <= n; i++) {\n     x = x*i;\n  }\n  return x;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f = 1;\n    int i = 0;\n    while (i < n) {\n        i = i+1;\n        f = f*i;\n    }\n        return f;\n}\n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n      \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int m;\n    m=n*(factorial(n-1));\n    return m;\n}\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n * factorial(n-1);\n}\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tint x = factorial(n);\n\t\tcout << x << endl;\n\t}\n}\n",
  "//Factorial recursiu\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0 or n == 1) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\nint fac (int n){\n\n\tif (n < 2) return 1;\n\telse {\n\t\n\t\treturn n*fac(n-1);\n\t}\n}\n\nint main(){\n\n\tint n;\n\twhile (cin>>n){\n\tcout << fac(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n<1) return 1;\n    else return (n*factorial(n-1));\n}\nint main() {\n    int n;\n    while (cin >>n){\n    cout<<factorial(n)<<endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\nint fac (int n){\n\n\tif (n < 2) return 1;\n\telse {\n\t\n\t\treturn n*fac(n-1);\n\t}\n}\n\nint main(){\n\n\tint n;\n\twhile (cin>>n){\n\tcout << fac(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n<2) return 1;\n    else return (n*factorial(n-1));\n}\nint main() {\n    int n;\n    while (cin >>n){\n    cout<<factorial(n)<<endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return factorial(n - 1)*n;\n}\n\nint main(){\n\tint n;\n\twhile(cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "\n#include <iostream>\nusing namespace std;\nint fac (int n){\n\n\tif (n < 2) return 1;\n\telse return n*fac(n-1);\n\t\n}\n\nint main(){\n\n\tint n;\n\twhile (cin>>n){\n\tcout << fac(n) << endl;\n\t}\n}\n",
  "\n#include <iostream>\nusing namespace std;\nint fact (int n){\n\n\tif (n < 2) return 1;\n\telse return n*fact(n-1);\n\t\n}\n\nint main(){\n\n\tint n;\n\twhile (cin>>n){\n\tcout << fac(n) << endl;\n\t}\n}\n",
  "\n#include <iostream>\nusing namespace std;\nint fact (int n){\n\n\tif (n < 2) return 1;\n\telse return n*fact(n-1);\n\t\n}\n\nint main(){\n\n\tint n;\n\twhile (cin>>n){\n\tcout << fact(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main(){\n    int n;\n    while (cin >> n){\n         cout << factorial(n) << endl;\n    }\n}\n",
  "//FACTORIAL RECURSIU.\n\n#include <iostream>\nusing namespace std;\n\n//Pre: 0 <= n <= 12;\n//funcio recursiva para devolver el factorial de n.\nint factorial (int n) {\n\tif (n == 0) return 1;\n\treturn n*(factorial(n - 1));\n}\n\nint main()  {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif ( n == 0 ) return 1;\n\telse{\n\t\tn* factorial(n-1)\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif ( n == 0 ) return 1;\n\telse{\n\t\tn*factorial(n-1);\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif ( n == 0 ) return 1;\n\telse{\n\t\t return n*factorial(n-1);\n\t}\n}\n",
  "//P12509_factorialrecursiu.cc\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0 or n == 1) return 1;\r\n\treturn n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n\t\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n} \r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n\r\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n\r\nint factorial(int n){\r\n\tif (n == 0){\r\n\t\tn = 1;\r\n\t}else{\r\n\t\tn = n*factorial(n-1);\r\n\t}\r\n\treturn n;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n <= 1) return 1;\n    else {\n        return n * factorial(n-1);\n    }\n}\n\nint main() {\n    \n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) { \n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) { \n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n > 1) return n * factorial (n-1);\n\telse return 1;\n}\n\n\nint main () {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n    \tint x;\n    \twhile (cin >> x) cout << factorial(x) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n > 1){\n\t\treturn n*(factorial(n-1));\n\t}\n\telse return 1;\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0 or n == 1) return 1;\n\telse {\n\t\tint fact = n*factorial(n-1);\n\t\treturn fact; \n\t}\n\t\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n) {\r\n\tint x = 1;\r\n\tif (n == 0) return 1;\r\n\telse {\r\n\t\tint f = factorial(n - 1);\r\n\t\treturn n*f;\r\n\t}\r\n}\r\n\r\nint factorial2(int n) {\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n > 1) {\r\n\treturn n*factorial(n - 1);\r\n    }\r\n    else return 1;\r\n  \r\n}\r\n\r\nint main(){\r\n    \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x){\n\t\n\tif(x==0 or x==1){\n\t\treturn 1;\n\t}\n\telse return x*factorial(x-1);\n}\n\nint main(){\n\n\tint x;\n\tcin>>x;\n\tcout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\r\n#include <math.h>\r\nusing namespace std;\r\n\r\nint factorial(int k){\r\n        \r\n        if(k==0 or k==1) return 1;\r\n        else return k * factorial(k-1);\r\n        \r\n}\r\n\r\nint main(){\r\n        int x;\r\n        while(cin >> x) cout<<factorial(x)<<endl;\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin >> n)\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n ==0) return 1;\n    else return (factorial(n-1) * n);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\tif (n <= 2) return n;\r\n\treturn n * factorial(n-1);\r\n}\t\r\n\r\nint main() {\r\n\treturn 0;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n);\r\n\r\nint factorial(int n){\r\n    if (n<=1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while (cin >> n){\r\n        cout << factorial(n) <<endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n   if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}   \n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\t\r\n\tint x;\r\n\r\n\tif (n == 0) x = 1;\r\n\telse {\r\n\t\tx = n * factorial (n-1);\r\n\t}\r\n\treturn x;\r\n}\r\n\r\nint main () {\r\n\t\r\n\tint n, x;\r\n\tcin >> n;\r\n\t\r\n\tx = factorial (n);\r\n\tcout << x << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n==0)return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while(cin>>n){\n        cout<<factorial(n);\n        cout<<endl;\n    }\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n==0) return 1; //Instruccio de quiebre\n\treturn n*factorial(n-1); //Aqui esta fent una actualitzacio de n; n = n-1;\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return factorial(n-1) * n;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse if (n == 1) return 1;\r\n\telse return factorial(n*(n-1));\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return factorial((n-1)*n);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n == 0) return 1;\r\n\telse return factorial (n-1)*n;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n\r\n\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    if (n == 0) return 1;\n    \n    return n*factorial (n-1);\n}",
  "#include<iostream>\r\nusing namespace std ;\r\n\r\n\r\nint factorial(int n) {\r\n\tif (n==0) return 1 ; \r\n\telse {\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint n ; \r\n\twhile(cin>>n ){\r\n\t\t\tcout<<factorial(n)<<endl;\r\n\t} \r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact;\n    if( n == 0) fact = 1;\n    else {\n        fact = factorial(n-1)*n;\n    }\n    return fact;\n}\n\n\nint main() {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif(n == 0 or n == 1) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\r\n\twhile(cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n\t\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 1) return 1;\n  else{\n    return (n*factorial(n-1));\n  }\n}\n\nint main(){\n  int n;\n  cin >> n;\n  int resultat = factorial(n);\n  cout << resultat << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1) return 1;\n  else{\n    return (n*factorial(n-1));\n  }\n}\n\nint main(){\n  int n;\n  while (cin >> n){\n    int resultat = factorial(n);\n    cout << resultat << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n > 0) {\n\t\treturn n*factorial(n-1);\n\t}\n\telse return 1;\n}\n\t\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\t\n\tif (n==0) return 0;\n\telse if (n==1)return n;\n\telse return n*factorial(n-1);\n\n}\n\nint main(){\n\n\tint n;\n\twhile (cin >> n){\n\t\t\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n > 1) {\n\t\treturn n*factorial(n-1);\n\t}\n\telse return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\t\n\tif (n==0) return 1;\n\telse if (n==1)return n;\n\telse return n*factorial(n-1);\n\n}\n\nint main(){\n\n\tint n;\n\twhile (cin >> n){\n\t\t\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include<iostream>\n\nint factorial(int n){\n    int f;\n    f=n*factorial(n-1);\n    return f;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n > 1) return n*factorial(n-1);\n\telse return 1;\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f;\n    f=n*factorial(n-1);\n    return f;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tp = 1;\n\tif (n == 0) return 1;\n\telse {\n\t\twhile (n > 0) {\n\t\t\tp = p * n;\n\t\t\t--p;\n\t\t}\n\t\treturn p;\n\t}\n}\n\t\t\t\n\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\t\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tint p = 1;\n\tif (n == 0) return 1;\n\telse {\n\t\twhile (n > 0) {\n\t\t\tp = p * n;\n\t\t\t--p;\n\t\t}\n\t\treturn p;\n\t}\n}\n\t\t\t\n\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\t\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tint p = 1;\n\tif (n == 0) return 1;\n\telse {\n\t\twhile (n > 0) {\n\t\t\tp = p * n;\n\t\t\t--n;\n\t\t}\n\t\treturn p;\n\t}\n}\n\t\t\t\n\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\t\n",
  "#include <iostream>\nusing namespace std;\n\n\n\n\nint factorial(int n){\n  if (n == 0) return 1;\n  if (n == 1) return 1;\n  else return factorial(n-1)*n;\n}\n  \n\n\n\n\n\n\n\n\nint main() {\n  int n,s;\n  cin >> n;\n  s = factorial(n);\n  cout << s << endl;\n}\n    ",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial(int n){\n    if( n==0 ) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\r\n    if (n==1 or n==0) return 1;\r\n\r\n    if (n==2) return 2;\r\n\r\n    return n*factorial(n-1);\r\n\r\n}\r\n\r\nint main(){\r\n\r\n    int n;\r\n\r\n    while(cin>>n) cout<<factorial(n)<<endl;\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n < 2) factorial = 1;\n\telse {\n\t\tfacorial(n - 1);\n\t\tfactorial = factorial * n;\n\t}\n\treturn factorial;\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tfactorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n < 2) n = 1;\n\telse {\n\t\tn = n * factorial(n - 1);\n\t}\n\treturn n;\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n    int i = 0;\r\n    int fac = 1;\r\n    \r\n    while (i != n) {\r\n        i = i + 1;\r\n        fac = fac*i;\r\n    }\r\n    return fac;\r\n    \r\n    \r\n}\r\n\r\nint main() {\r\n    \r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    if(n == 1) return n;\r\n    return factorial(n-1)*n;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while (cin >> n){\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n  if (n == 0) return 1;\r\n  else {\r\n    return n * factorial (n - 1);\r\n  }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif(n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) { // iterative solution\nint f = 1;\nint i = 0;\nwhile (i < n) {\ni = i + 1;\nf = f*i;\n}\nreturn f;\n}\nint main(){\n    int en,ou;\n    while (cin>>en){\n        ou=factorial(en);\n        cout<<ou<<endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\tif (n== 0) return 1;\r\n\telse return n*factorial(n-1);\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) { \n  if (n == 0) return 1;\n  else return n * factorial(n - 1);\n}\n\nint main () {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n >= 1) {\n       return n * factorial (n - 1) ;\n    } else {\n        return 1;\n    }\n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n       \n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) { //recursive solution\r\nif(n == 0) return 1;\r\nelse return n*factorial(n -1);\r\n}\r\n\r\nint main(){\r\n\r\n    int n;\r\n    while(cin >> n){\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\rusing namespace std;\r\rint factorial(int n){\r    if (n<1) return 1;\r    else return n*factorial(n-1);\r}\r\rint main() {\r    int n;\r    while (cin >> n) {\r    cout << factorial(n) << endl;\r    }\r}\r    \r    \r",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n==0) return 1;\r\n    else {\r\n        int f=factorial(n-1);\r\n        return n*f;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\t if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\t\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n>1){\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\telse {\r\n\t\treturn 1;\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  while (cin >> n) {\r\n  cout << factorial(n) << endl;\r\n  }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\n\n int factorial(int n){\n   if(n==0)return 1;\n   else{\n     return n*factorial(n-1);\n   }\n }\n     \n\n\n  int main(){\n    int n;\n    cin >> n;\n    cout << factorial(n)<<endl;\n  }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n){\r\n \tif (n <= 1) return 1;\r\n \t\r\n \telse return n * factorial (n-1); \r\n \t\r\n }\r\n \r\n int main() {\r\n \tint n;\r\n \t\r\n \twhile (cin >> n){\r\n \t\tcout << factorial(n) << endl;\r\n \t}\r\n }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return factorial(n-1)*n;\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n <= 1) return n;\r\n\telse return factorial(n-1) * n;\r\n\t \r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\tif(n == 0) cout << \"1\" << endl;\r\n\t\telse cout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n <= 1) return n;\r\n\telse return factorial(n-1) * n;\r\n\t \r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n <= 1) return n;\r\n\telse return factorial(n-1) * n;\r\n\t \r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n <= 1) return n;\r\n\telse return factorial(n-1) * n;\r\n\t \r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    \n    int n;\n    while (cin >> n) {\n        cout << factorial(n) <<endl;\n    }\n}\n        ",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\nif (n <= 1) return 1;\nelse return (n*factorial(n-1));\n\n}\n\nint main () {\n\tint q;\n\twhile (cin >> q) cout << factorial (q) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n// n entre 0 i 12\r\n\r\nint factorial( int n ) {\r\n    if ( n == 0 or n == 1 ) return 1;\r\n    else return factorial(n-1) * n ;\r\n}\r\n\r\nint main() {\r\n    \r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n ){\n    if ( n <= 1) return 1;\n    else {\n        return n * factorial( n - 1 );\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n<2) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial (n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint operacio();\r\n\r\nint operacio (){\r\n\tchar simbol;\r\n\tcin >> simbol;\r\n\tif (simbol >= '0' and simbol <= '9') return simbol - '0';\r\n\telse{\r\n\t\tint x = operacio();\r\n\t\tint y = operacio();\r\n\r\n\t\tif (simbol == '+') return (x+y);\r\n\t\telse if (simbol == '-') return (x-y);\r\n\t\telse return (x*y);\r\n\t}\r\n}\r\nint main (){\r\n\tcout << operacio() <<endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n);\r\n\r\n int factorial(int n){\r\n    if (n <= 1) return 1;\r\n    else return n*factorial(n-1);\r\n }\r\n\r\nint main(){\r\n    int n;\r\n    while (cin >> n){\r\n        cout << factorial(n) <<endl;\r\n    }\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\n//////////////////\n\nint main(){\n\tint n;\n\tcin >> n ;\n\tcout << factorial(n)<<endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n    \tint x;\n    \twhile (cin >> x) cout << factorial(x) << endl;\n}\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tn=n*factorial(n-1);\r\n\treturn n;\r\n}\r\nint main(){\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==0) return n;\r\n\tn=n*factorial(n-1);\r\n\treturn n;\r\n}\r\nint main(){\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\tn=n*factorial(n-1);\r\n\treturn n;\r\n}\r\nint main(){\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif(n<1)return 1;\n\t\telse return n*factorial(n-1);\n}\n\nint main(){\n\n\tint a;\n\tcin>>a;\n\tcout<<factorial(a)<<endl;\n\t}\n",
  "#include<iostream>\r\nusing namespace std ;\r\n\r\n\r\n     int factorial(int n){\r\n     \tif(n<=1) return 1 ; \r\n     \telse {\r\n     \t\treturn n*factorial(n-1) ;\r\n\t\t }\r\n\t }\r\n\r\nint main(){\r\n\tint n ; \r\n\twhile(cin>>n ){\r\n\t\tcout<<factorial(n)<<endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n  int resultat = n;\n  if (n > 1) {\n    resultat = n * factorial (n-1);\n  }\n  if (n == 0) return 1;\n  else return resultat;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  int numero = factorial(n);\n  cout << numero << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n == 1) return 1;\n  else return n * factorial(n-1);\n}\n\n\nint main(){\n  int n;\n  cin >> n;\n  int fact = factorial(n);\n  cout << fact << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n <= 1) return 1;\n  else return (n * factorial(n-1));\n}\n\n\nint main(){\n  int n;\n  cin >> n;\n  int fact = factorial(n);\n  cout << fact << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1) return 1;\n  else return n*(factorial(n-1));\n\n}\n\nint main(){\n  int n;\n  while (cin >> n){\n    int resultat = factorial(n);\n    cout << resultat << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif ( n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\t\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif (n == 0) return 1;\r\n\telse{\r\n\t\tn = factorial(n-1)*n;\r\n\t}\r\n}\r\n\r\nint main(){\r\n\t\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\t\r\n\t\tint x = factorial(n);\r\n\t\tcout << x << endl;\r\n\t}\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif (n == 0) return 1;\r\n\telse{\r\n\t\tn = factorial(n-1)*n;\r\n\t}\r\n}\r\n\r\nint main(){\r\n\t\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\t\r\n\t\tint x = factorial(n);\r\n\t\tcout << x << endl;\r\n\t}\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif (n == 0) return 1;\r\n\telse n = n*factorial(n-1);\r\n\t\r\n}\r\n\r\nint main(){\r\n\t\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\t\r\n\t\tint x = factorial(n);\r\n\t\tcout << x << endl;\r\n\t}\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n\t\r\n}\r\n\r\nint main(){\r\n\t\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\t\r\n\t\tint x = factorial(n);\r\n\t\tcout << x << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial (n - 1);\r\n\t\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n == 1 or n == 0) return 1;\n\telse {\n\t\tn = n * factorial(n-1);\n\t\treturn n;\n\t}\n}\n\nint main() {\n\n\tint a;\n\twhile (cin >> a) {\n\t\tcout << factorial(a) << endl;\n\t}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n < 2) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n < 2) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n//Pre: Entra un n enter positiu\n//Post: Retorna n! (n factorial)\n\n//Obtenir primer\nint e=1, p=1;\nwhile (e<=n) {\n\t//Tractar element\n\tp*=e;\n\t//Obtenir segÃ¼ent\n\te++;\n}\n//Tractament final\nreturn (p);\n}\nint main () {\nint a;\ncin>>a;\ncout<<factorial(a)<<endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n//pre: n es un enter\n//pos: retorna el factorial de n\nint res=1;\nif (n<2){\n\treturn 1;\n}else{\n\t\treturn n*factorial(n-1);\n}\n\n}\nint main(){\n\n\n}\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n//Pre:n es un nombre enter positiu.\n//Post: retorna n!\nint res;\nif (n==0) res=1;\nelse res=n*factorial(n-1);\nreturn res;\n}\t\nint main(){\nint n;\ncin>>n;\nfactorial(n);\ncout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint res;\nif(n==0) res =1;\nelse res=n*factorial(n-1);\nreturn res;\n}\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n\t//Pre: n es un enter\n\t//Post: cal retornar n!\n\tint f;\n\tif(n==0){\n\t\tf=1;\n\t}\n\telse{\n\t\tf=n*factorial(n-1);\n\t}\nreturn f;\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tint f=factorial(n);\n\tcout<<f<<\" \";\t\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n > 0) return n*factorial(n-1);\r\n    else return 1;\r\n}\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint nombre_digits(int n) {\r\n    if(n < 10) return 1;\r\n    else return 1 + nombre_digits(n/10);\r\n}\r\nint main() {\r\n    int n ;\r\n    cin >> n;\r\n    cout << nombre_digits(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n    if(n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\n int factorial(int n)\r\n {\r\n     if (n==0) return 1;\r\n     return factorial (n-1)*n;\r\n }\r\n\r\n/*int main ()\r\n{\r\n cout<<factorial (4)<<endl;\r\n}*/\r\n\r\n\r\n",
  "#include<stdio.h>\n\nint factorial (int n){\n    if (n==0){\n        return 1;\n    } else {\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n\tint a;\n\twhile (scanf(\"%d\",&a)>0){\n\t\tprintf(\"%d\\n\",factorial(a));   \n\t}\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n > 1) return n * factorial(n - 1);\n\telse return 1;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==0)return 1;\r\n\telse return n=n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint x;\r\n\twhile(cin >> x){\r\n\tcout << factorial(x) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return factorial(n-1)*n;\r\n}\r\n\r\n\r\nint main()\r\n{\r\n\tint n = 20;\r\n\twhile (n != 0){\r\n\t\tcout << factorial(n) << endl;\r\n\t\t--n;\r\n\t}\r\n\t\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif(n>0) n=factorial(n-1)*n;\r\n\telse return 1;\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif(n>0) n=factorial(n-1)*n;\r\n\telse return 1;\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif(n<2) return 1;\r\n\treturn n = factorial(n-1)*n;\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n    }\n    \n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 1 or n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\treturn n*n-1;\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n){\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n  if(n == 0 or n == 1) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  while (cin >> n){\n    cout << factorial(n) << endl;\n  }\n}",
  "public class Main {\r\n\r\n\tpublic static int factorial(int n){\r\n\t\tif(n == 0) return 1;\r\n\t\treturn n*factorial(n - 1);\r\n\t}\r\n\r\n    public static void main(String[] args) {\r\n    }\r\n    \r\n}",
  "public class Main {\r\n\r\n\r\n\tpublic static int factorial(int n){\r\n\t\tif(n == 0) return 1;\r\n\t\treturn n*factorial(n - 1);\r\n\t}\r\n    \r\n}",
  "public static int factorial(int n){\r\n\tif(n == 0) return 1;\r\n\treturn n*factorial(n - 1);\r\n}",
  "public static int factorial(int n){\r\n\tif(n == 0) return 1;\r\n\treturn n*factorial(n - 1);\r\n}\r\n\r\npublic static void main(String[] args) {}",
  "public class Main{\r\n\t\r\n\tpublic static int factorial(int n){\r\n\t\tif(n == 0) return 1;\r\n\t\treturn n*factorial(n - 1);\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t}\r\n\t\r\n}",
  "public class Main{\r\n\t\r\n\tpublic static int factorial(int n){\r\n\t\tif(n == 0) return 1;\r\n\t\treturn n*factorial(n - 1);\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t}\r\n\t\r\n}",
  "\r\n\tpublic static int factorial(int n){\r\n\t\tif(n == 0) return 1;\r\n\t\treturn n*factorial(n - 1);\r\n\t}",
  "public class main{\r\n\tpublic static int factorial(int n){\r\n\t\tif(n == 0) return 1;\r\n\t\treturn n*factorial(n - 1);\r\n\t}\r\n}",
  "public class main{\r\n\tpublic static int factorial(int n){\r\n\t\tif(n == 0) return 1;\r\n\t\treturn n*factorial(n - 1);\r\n\t}\r\n}",
  "public class sub{\r\n\tpublic static int factorial(int n){\r\n\t\tif(n == 0) return 1;\r\n\t\treturn n*factorial(n - 1);\r\n\t}\r\n}",
  "class sub{\r\n\tpublic static int factorial(int n){\r\n\t\tif(n == 0) return 1;\r\n\t\treturn n*factorial(n - 1);\r\n\t}\r\n}",
  "class Solution {\r\n\r\n    public static int factorial(int n){\r\n\t\tif(n == 0) return 1;\r\n\t\treturn n*factorial(n - 1);\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}    \n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n// P78798\r\n\r\nint factorial (int n){\r\n    if(n == 0){\r\n        return 1;\r\n    } else{\r\n        return n * factorial(n-1);\r\n    }\r\n\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\treturn n* factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin>> n) cout << factorial(n);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int a) {return ( (a==1 || a==0) ? 1 : a*factorial(a-1) );}\n\nint main(){\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif ( n == 0) return 1;\n\treturn n*factorial(n-1);\n\n\n\n\n\nint main() {\n     int n;\n     while (cin >> n) cout << factorial(n) << endl;\n }\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif ( n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\n\n\n\n\nint main() {\n     int n;\n     while (cin >> n) cout << factorial(n) << endl;\n }\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int x) {\n\tif (n == 0) return 1;\n\treturn n*factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n*factorial(n - 1);\n}\n\nint main() {\n\tint x;\n\twhile (cin >> x) {\n\t\tcout << factorial(x) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 1){\n        return 1;\n    }\n    n = n * factorial(n-1);\n    return n;\n\t\n}\n\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 1){\n        return 1;\n    }\n    else {\n\tn = n * factorial(n-1);\n    return n;\n\t}\n}\n\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n\tint n;\n\twhile(cin >> n)\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif(n==1) return 1;\n\treturn n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif(n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint factorial(int n);\n\nint factorial(int n)\n{\n\t\tif ( n == 1 )\n\t\t\treturn 1;\n\t\treturn n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    while (n != 0){\r\n        return n * factorial(n - 1);\r\n    }\r\n    return 1;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while(cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n - 1)\n",
  "def factorial(n):\n    if n == 0 or n == 1:\n        return 1\n    else:\n        return n * factorial(n - 1)\n",
  "#include <iostream>\r\n#include <math.h>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif(n==0){\r\n\t\tn=1;\r\n\t\treturn n;\r\n\t}\r\n\telse return n*factorial(n-1);\r\n}\r\n\t\r\n",
  "#include<iostream>\r\nusing namespace std ;\r\n\r\nint factorial(int n){\r\n\tif ( n == 0) return 1 ; \r\n\telse return n * factorial (n-1);\r\n}\r\n\r\nint main (){\r\n\tint n ; \r\n\twhile ( cin >> n ){\r\n\t\tcout<<factorial(n)<<endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\r\n    if (n == 1) return 1;\r\n    else return n*factorial(n-1);\r\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\r\n    if (n < 1) return 1;\r\n    else return n*factorial(n-1);\r\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n    \n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n\t\r\n\tif (n == 1) return 1;\r\n\telse if (n == 0) return 0;\r\n\telse return n * factorial(n-1);\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\treturn n * factorial(n-1);\n}\n\nint main (){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n\t\r\n\tif (n == 1) return 1;\r\n\telse if (n == 0) return 1;\r\n\telse return n * factorial(n-1);\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int w) {\n\tif (w == 0) return 1;\n\telse return w*factorial(w-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif ( n == 0 ) return 1;\n\telse return n * factorial(n-1);\n}\nint main() {\n\tint x;\n\twhile(cin >> x) {\n\tcout << factorial(x) << endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\tif (n>=0 and n<=12)\n\t{\n\t\tif (n == 0) return 1;\n\t\telse return n * factorial(n - 1);\n\t}\n\treturn 0;\n}\n\nint main ()\n{\n\tint n;\n\tcin>>n;\n\t\n\tcout<<factorial(n)<<endl;\n}\n\n",
  "int factorial(int n)\n{\n  if(n == 0) return 1;\n  else return (n * factorial(n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n\t\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n);\n\t}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main(){\r\n    int x;\r\n    while (cin >> x){\r\n        if (0 <= x & x <= 12) cout << factorial(x) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n\r\n}\r\nint main (){\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\t\n\tif(n == 0) return 1;\n\telse return factorial(n-1) * n;\n}\n\n\n\nint main(){\n\tint n;\n\twhile(cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 1 or n == 0) return 1;\r\n    else return n*factorial(n - 1);    \r\n}\r\nint main() {\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n==0) return n;\n\telse return n*factorial (n-1);\n\n}\nint main (){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n==0) return 1;\n\telse return n*factorial (n-1);\n\n}\nint main (){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\telse return n * factorial(n-1);\n}\n\n\nint main(){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\treturn n * (factorial(n-1));\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    if (n == 1) return 1;\n    else return (n*factorial(n-1));\n}\n\nint main() {\n    int a;\n    while (cin >> a) cout << factorial(a) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial (n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial (int n) {\n    if ( n == 0) return 1;\n    else return n*(factorial (n-1)); \n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n) {\n     if (n == 0) return 1;\n     else n * factorial(n-1);\n }\n",
  "from jutge import read\r\n\r\ndef factorial (n) :\r\n    if n==0:\r\n        return 1\r\n    return n*factorial(n-1)\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int s = 1;\n    for (int i = n; i!= 0; --i) {\n        s = s*i;\n    }\n    return s;\n}\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int d = 1;\n    if (n != 0){\n        while ( n != 0){\n        d = d*n;\n        n--;\n    }\n    return d;\n    }\n    else d=1;\n    return d;\n}\n\nint main (){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int res = n*factorial(n - 1);\n        return res;\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int i = 1;\n    if (n == 0) return 1;\n    else  {\n        if (i < n) {\n            ++i;\n            return factorial(n-1)*n;\n        }\n        else return n;\n    }\n}\n\nint main () {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact (int n){\n    if (n == 0) return 1;\n    else return n*fact(n-1);\n\n}\nint main() {\n    int x;\n    while (cin >> x){\n        cout << fact (x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n\n}\nint main() {\n    int x;\n    while (cin >> x){\n        cout << factorial (x) << endl;\n    }\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n    \n    \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  else return n * factorial(n-1);\n}\n\nint main () {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n  if (n==0)\n  {\n    return 1;\n  }\n  return n*(factorial(n-1));\n}\n",
  "int factorial(int n){\r\n int t=1;\r\n for(int i=1; i<=n; i++){\r\n  t=t*i;   \r\n }\r\n return t;\r\n}",
  "#include <iostream>\nusing namespace std;\n int factorial(int n) {\n     if (n==0) return 1;\n     else return n*factorial(n-1);\n }\n int main() {\n     int x;\n     cin >> x;\n     cout << factorial(x) << endl;\n }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\tif (n > 1 ) return n * factorial(n-1);\r\n\telse return 1;\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse if (n == 1) return n;\n\treturn n * factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\t\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\t\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n)<<endl;\r\n\t\r\n\t\r\n}\r\n",
  "#include<iostream>\n\nusing namespace std;\n\n\nint factorial (int n) {\n\tint tot = 1;\n\tfor (int e = 1; e <= n; ++e) tot *= e;\n\treturn tot;\n}\n\n\nint main () {\n\tint a;\n\twhile (cin >> a) {\n\t\tcout << factorial(a) << endl;\n\t}\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n>1){\n        return n*factorial(n-1);\n    }\n    else{\n        return 1;\n    }\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n) {\n    if (n <= 1) return 1;\n    if (n == 2) return 2;\n    return n*factorial(n-1);\n }\n\nint main () {\n\tint n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact ( int n ){\n   if ( n == 0 ) return 1;\n   else return n*fact( n-1 );\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << fact ( n ) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   if ( n == 0 ) return 1;\n   else return n*factorial( n-1 );\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n <= 1) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int b = 1;\n    for (int i = 1; i != n+1; i++) {\n        b = b*i;\n    }\n    int factorial = b;\n    return factorial;\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int f=1;\n  for (int i=0;i<n;++i){\n    f=f*i\n  }return f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int f=1;\n  for (int i=0;i<n;++i){\n    f=f*i;\n  }return f;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) n = 1;\r\n\telse n = n*factorial(n-1);\r\n\treturn n;\r\n}\r\nint main() {\r\n\tint m;\r\n\twhile (cin >> m) {\r\n\t\tcout << factorial(m) << endl;\r\n\t}\r\n}\r\n",
  "// factorial.cpp: define el punto de entrada de la aplicaciÃ³n de consola.\r\n//\r\n\r\n#include \"stdafx.h\"\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\t\r\n\tif (n == 0) return 1;\r\n\telse {\r\n\t\tint aux = factorial(n - 1);\r\n\t\treturn (n)*(aux);\r\n\r\n\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\r\n}\r\n\r\n\r\n\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n\r\n",
  "// factorial.cpp: define el punto de entrada de la aplicaciÃ³n de consola.\r\n//\r\n\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\t\r\n\tif (n == 0) return 1;\r\n\telse {\r\n\t\tint aux = factorial(n - 1);\r\n\t\treturn (n)*(aux);\r\n\r\n\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\r\n}\r\n\r\n\r\n\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\nint suma = n;\ncin >> n;\nif (n==0) return 0;\nsuma = suma * factorial(n-1); \nreturn suma;\n}\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\nint suma = n;\nwhile (cin >> n){\nif (n==0) return 0;\nsuma = suma * factorial(n-1); \nreturn suma;\n}}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\nif (n==0) return 1;\nelse return n * factorial(n-1); \n}\nint main () {\n\tint n;\n\twhile (cin >> n) cout << factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==1) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==1) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==1) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin>>n;\n\tif (n<=12) cout<<factorial(n)<<endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\r\n    if (n==1 or n==0) return 1;\r\n\r\n    if (n==2) return 2;\r\n\r\n    return n*factorial(n-1);\r\n\r\n}\r\n\r\nint main(){\r\n\r\n    int n;\r\n\r\n    while(cin>>n) cout<<factorial(n)<<endl;\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\nint main (){\n\tint n;\n\tcin >> n;\n\tcout<<factorial(n)<<endl;\n}\n\t\n\n\t\n\t\n\t\t\n\t\n\t\n\t\n\n\t\t\n\t\n",
  "int factorial(int n){\r\n\tif (n <= 1) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n",
  "#include \"iostream\"\nusing namespace std;\n\nint factorial(int n){\n    if ( n <= 1 ) return 1;\n    else return n*(factorial(n-1));\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n -1);\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n\n\n    int a;\n\n    cin>>a;\n\n        cout<<factorial(a)<<endl;\n}\n\nint factorial( int n){\n\nif(n==0) return 0;\n\nelse return n*factorial(n-1);\n\n}\n\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n\n\n    int a;\n\n    cin>>a;\n\n        cout<<factorial(a)<<endl;\n}\n\nint factorial( int n){\n\nif(n>1) return n* factorial(n-1);\n\nelse return 1 ;\n\n}\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial( int n ) {\r\n\t\r\n\tif ( n == 0 ) return 1;\r\n\t\r\n\telse return n*factorial( n - 1 );\r\n\t\r\n}\r\n\r\nint main () {\r\n\t\r\n\tint n;\r\n\t\r\n\twhile( cin >> n ) {\r\n\t\r\n\t\tcout << factorial( n ) << endl;\r\n\t\t\r\n\t\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\nif(n<1) return 1;\r\nelse n =n*factorial(n-1);\r\nreturn n;\r\n}\r\nint main(){\r\n  int a;\r\n  while(cin>>a)\r\n  cout<<factorial(a)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\nint factorial(int n)\n{\n    if(n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    int f=1;\n    int i=0;\n    while(i<n) {\n        i = i + 1;\n        f = f*i;\n    }\n    return f;\n}\nint main () {\n    int n;\n    while(cin >> n) {\n    cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   if (n == 0) return 1;\n   return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    return 1;\n}\nint main () {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n<=1) return 1;\n\telse {\n\t\tint s= factorial (n-1);\n\t\treturn s*n;\n\t}\n}\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n==0 or n==1) return 1;\n    return n * factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n)\n        cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n\tif ((n == 0) or (n == 1)) return 1;\n\treturn (n * factorial(n - 1));\n }\n\n\n int main(){\n \tint n;\n \twhile (cin >> n){\n \t\tcout << factorial(n) << endl;\n \t}\n \t\n \t\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int N){\n    int i=0;\n    int f1=1;\n    while (i<N){\n        i++;\n        f1*=i;\n    }\n    return f1;\n}\nint main(){\n}\n",
  "\nint factorial( int n) {\nint i=0;\nint f1=1;\nwhile (i<n){\ni=i+1;\nf1 = f1*i;\n}\nreturn f1;\n}\n",
  "int factorial(int n){\n    if (n==0){\n    return 1;\n    }\n    else {\n    return n*factorial(n-1);\n        \n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return factorial(n - 1)*n;\n}\n\nint main(){\n    int i;\n    while (cin >> i){\n        cout << factorial(i) << endl;\n    }\n}\n        \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n-1);\n}\n\nint main () {\n}\n",
  "#include <cstdlib>\n#include <iostream>\nusing namespace std;\nint factorial( int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n - 1);\n}\nint main {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else {\n        int j = factorial (n-1);\n        return j * n;\n    }\n}\nint main () {\n    int a;\n    while (cin >> a) {\n        cout << factorial (a) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n    else {\n        int f = factorial(n - 1);\n        return n*f;\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint fact(int n){\n\n    if (n == 1) return 1;\n    \n    return n * fact(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << fact(x) << endl;\n    }   \n}\n\n\n\n    \n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint fact(int n){\n\n    if (n == 1) return 1;\n    \n    return n * fact(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << fact(x) << endl;\n    }   \n}\n\n\n\n    \n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n    \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\n    if (n == 1) return 1;\n    \n    return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   \n}\n\n\n\n    \n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\n    if (n == 1) return 1;\n    \n    return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   \n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\n    if (n == 1) return 1;\n    \n    return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n * factorial (n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0 ) return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n > 1) {\n        return n*factorial(n-1);\n    } else  {\n        return 1;\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==1 or n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    cout << factorial(3) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main (){\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n        \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint x;\n\twhile (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0 or n ==1) return 1;\n    else {\n        return n * factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else {\n        return n * factorial (n - 1);\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n* factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else {\n        return n * factorial (n - 1);\n    }\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n > 1) return n * factorial (n - 1);\n    else return 1;\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n > 1) return n * factorial (n - 1);\n    else return 1;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int x;\n    if (n<=1) x=1;\n    else{\n        x=n*factorial(n-1);\n    }\n    return x;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n\n    if (n==0) return 1;\n    return n*factorial(n-1);\n\n}\n\nint main () {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n    \n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\nint factorial(int n) {\n    \n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n    int n;\n    \n    while (cin >> n) cout << factorial(n) << endl;\n    \n    \n}\n\nint factorial(int n) {\n    \n    // PRE: n >= 0\n    // POST: Mostrar el factorial n!\n    \n    if (n == 0) return 1;\n    \n    return n*factorial(n - 1); \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return factorial(n-1)* n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n    \n}\n\nint main (){\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial( int n ) {\n\t\n\tif ( n>1 ) return n* factorial ( n-1 );\n\t\t\n\telse return 1;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n-1);\n}\n\n\n\nint main () {\n    int n,f;\n\n    while (cin >> n) {\n        f = factorial (n);\n        cout << f << endl;\n    }\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    return n*factorial(n-1);\n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn n*factorial (n-1);\n\t}\n}\nint main () {\n\tint x;\n\twhile (cin >> x) {\n\t\tcout << factorial (x) << endl;\n\t}\n}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n    if (n==0) return 1;\n    else return n*factorial (n-1);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   \n    if ((n == 0) or (n == 1)){\n        return 1;\n    }\n\n    else {\n        return n*factorial(n - 1);\n    }\n}\n\nint main (){\n    int m;\n    while (cin >> m){\n    cout << factorial(m) << endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main () {\n    int n;\n    while(cin >> n) {\n    cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int i=0, r=1;\n    while(i<n){\n        ++i;\n        r*=i;\n    }\n    return r;\n}\n\nint main(){\n\n    int x;\n    while(cin >> x){\n        int f=factorial(x);\n        cout << f << endl;\n    }\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n==0){\ncout<<1<<endl;\nreturn 1;\n}\nelse {\ncout<<n<<endl;\nint fact=n*factorial(n-1);\ncout<<fact;\nreturn fact;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n==0){\ncout<<1<<endl;\nreturn 1;\n}\nelse {\ncout<<n<<endl;\nint fact=n*factorial(n-1);\ncout<<fact;\nreturn fact;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n)\n{\n    if (n==1 or n==0) \n    {\n        return 1;\n    }\n    else\n    {\n        return n*factorial(n-1);\n    }\n}\nint main () {\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n==0){\ncout<<1<<endl;\nreturn 1;\n}\nelse {\ncout<<n<<endl;\nint fact=n*factorial(n-1);\ncout<<fact;\nreturn fact;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n==0){\nreturn 1;\n}\nelse {\nreturn n*factorial(n-1);\n}\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial ( int n ) {\n\n\tif ( n == 0 ) return 1;\n\n\treturn n * factorial ( n - 1 );\n}\n\nint main () {\n\t\n\tint n;\n\t\n\tcin >> n;\n\t\n\tcout << factorial ( n ) << endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n){\n    if (n > 1){\n        return n*factorial(n-1);\n    }\n    else return 1;\n\n\n}\nint main(){\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n}   \n    \n}\n\n    \n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    if(n==0)\n        return 1;\n    else return n* factorial(n-1);\n}\n    int main() {\n        int n;\n        while(cin>>n)\n            cout<<factorial(n)<<endl;\n    }\n            \n",
  "\n#include <iostream>\n\nusing namespace std;\nint factorial(int n){\n    if (n==1 or n==0) return 1;\n    else n*factorial(n-1\n  \n    \n}\n\n",
  "\n#include <iostream>\n\nusing namespace std;\nint factorial(int n){\n    if (n==1 or n==0) return 1;\n    else n*factorial(n-1);\n  \n    \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n == 0 or n == 1) return 1;\n\treturn n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "\n#include <iostream>\n\nusing namespace std;\nint factorial(int n){\n    if (n==1 or n==0) return 1;\n    else return n*factorial(n-1);\n  \n    \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint nombre_digits(int n){\n    \n    int s = 1;\n    if ((n == 0) or (n < 10)) return s;\n    else return (1 + nombre_digits(n/10));\n}\n\n\n\nint main (){\n    \n    int n;\n    cin >> n;\n    \n    cout << nombre_digits(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint nombre_digits(int n){\n    \n    int s = 1;\n    if (n < 10) return s;\n    else return (1 + nombre_digits(n/10));\n}\n\n\n\nint main (){\n    \n    int n;\n    cin >> n;\n    \n    cout << nombre_digits(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint nombre_digits(int n){\n    \n    \n    if (n < 10) return 1;\n    else return (1 + nombre_digits(n/10));\n}\n\n\n\nint main (){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){}\n",
  "#include <iostream>\nusing namespace std;\n\nint nombre_digits(int n){\n    \n    \n    if (n < 10) return 1;\n    else return 1 + nombre_digits(n/10);\n}\n\n\n\nint main (){\n    \n    int n;\n    cin >> n;\n    \n    cout << nombre_digits(n) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1){ return 1;}\n    return n*factorial(n-1)\n}\n\nint main(){\n\n    int x;\n    while(cin >> x){\n        int f=factorial(x);\n        cout << f << endl;\n    }\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint nombre_digits(int n){\n    \n    \n    if (n/10 < 1) return 1;\n    else return 1 + nombre_digits(n/10);\n}\n\n\n\nint main (){\n    \n    int n;\n    cin >> n;\n    \n    cout << nombre_digits(n) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1){ return 1;}\n    return n*factorial(n-1);\n}\n\nint main(){\n\n    int x;\n    while(cin >> x){\n        int f=factorial(x);\n        cout << f << endl;\n    }\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint nombre_digits(int n){\n    \n    \n    if (n/10 < 1) return 1;\n    else return 1 + nombre_digits(n/10);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n    \n    \n    \n    \n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n    \n}\n",
  "int factorial(int n) {\n\tif (n = 0) return 1;\n\telse if (n = 1) return 1;\n\telse return 1*factorial(n-1)\n}\n",
  "int factorial(int n) {\n\tif (n == 0) return 1;\n\telse if (n == 1) return 1;\n\telse return 1*factorial(n-1);\n}\n",
  "int factorial(int n) {\n\tif (n == 0) return 1;\n\telse if (n == 1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    int sum = 1;\n\n    for (int i = 1; i <= n; ++i) {\n        sum *= i;\n    }\n\n    return sum;\n}\n\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    return n*factorial(n-1);\n}\nint main() {}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main () {\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n\nint factorial(int n){\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\n",
  "#include<iostream>\n\nusing namespace std;\n\n\nint factorial(int n){\n    int F;\n    if (n == 0) return 1;\n    F = n * factorial(n-1);\n    return F;\n}\n\nint main () {\n    int n,a;\n    while ( cin >> n) {\n        a = factorial(n);\n        cout << a << endl;\n    }\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\nint main () {\n    int n;\n    cin >>  n;\n    cout << (factorial(n)) << endl;\n}",
  "int factorial(int n){\n\tif(n==0) return 1;\n\telse return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n\nint factorial(int n){\n    \n    if (n>1) {\n        return n * factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \n\n",
  "int factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nint factorial (int n);\nint factorial (int n){\n    if (n<2) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f;\n    if ((f==0) or (f==1)) cout<<1<<endl;\n    else n*factorial(n-1);}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f;\n    if ((f==0) or (f==1)) return 1\n    else return n*factorial(n-1);}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f;\n    if ((f==0) or (f==1)) return 1;\n    else return n*factorial(n-1);}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ((n==0) or (n==1)) return 1;\n    else return n*factorial(n-1);}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial (n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n)  {\n\tif (n<=1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "int factorial(int n){\r\n  if(n == 0) return 1;\r\n  else return n *  factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return n;\n    else return n * factorial(n - 1);\n}\n\nint main(){\n    int i;\n    cin >> i;\n    cout << factorial(i) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main(){\n    int i;\n    cin >> i;\n    cout << factorial(i) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1)return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n\t\t\t\n\t\t\t\n\t\n \n \n \n       \n      \n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n==1) return 1;\r\n    else{\r\n        int f=factorial(n-1);\r\n        return n*f;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n==0) return 1;\r\n    else{\r\n        int f=factorial(n-1);\r\n        return n*f;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\nif (n == 0) return 1;\nreturn n * factorial(n-1);\n}\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n      }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n == 0) return 1;\n\t\n\telse return factorial(n-1) *n;\n}\n\nint main() {\n\n\tint n;\n\t\n\twhile (cin >> n) {\n\t\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n    }\r\n    \r\nint main (){\r\n    int a;\r\n    cin>>a;\r\n    cout<<factorial(a)<<endl;\r\n    \r\n    }\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0) n=1;\n    else n=n*factorial(n-1);\n    \n    return n;\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout <<factorial(n) <<endl;\n    \n    \n    \n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)Â {\n\tif (n == 0) return 1;\n\treturn factorial(n-1)*n;\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn factorial(n-1)*n;\n\t\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tint f=1;\n\tif (n==0) {\n\t\treturn f\n\t}\n\treturn f*factorial (n-1)\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n==0) {\n\t\treturn 1;\n\t}\n\treturn n*factorial (n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n * factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n==0) {\n\t\treturn 1;\n\t}\n\treturn n*factorial(n); \n}\n\t\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n==0) {\n\t\treturn 1;\n\t}\n\treturn n*factorial(n-1); \n}\n\t\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else if (n==1) return 1;\n    else return n*(factorial(n-1));\n}\n\n\nint main(){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\r\n\r\n    if (n>1)\r\n        return n*factorial(n-1);\r\n    else return 1;\r\n\r\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "//\n//  main.cpp\n//  Factorial recursiu\n//\n//  Created by Alvaro AriÃ±o Cabau on 31/10/17.\n//  Copyright Â© 2017 Alvaro AriÃ±o Cabau. All rights reserved.\n//\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) {\n        return 1;\n    }\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        factorial(x);\n        cout << x << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n    \n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n > 1) return factorial(n - 1)*n;\r\n\treturn 1;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \n int factorial(int n){\n \tif(n==0 or n==1) return 1;\n \treturn n*factorial(n-1);\n }\n\n int main()\n {\n \t\n \tint n,z;\n \tcin>>n;\n \tz=factorial(n);\n \tcout<<z<<endl;\n \t\n \t\n }\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n\tif(n>1) {\r\n\t\tint s= n*factorial(n-1);\r\n\t    return s;\r\n\t}\r\n\treturn 1;\r\n\r\n\r\n} \r\n\r\n\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin>>n) cout<<factorial(n)<<endl;\r\n}\r\n\r\n\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n>1){\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\telse return 1;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial ( n);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    \n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if ( n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0){\n        return 1;\n    }else{\n        return factorial(n-1)*n;\n    }\n}\nint main(){\n    int n;\n    while(cin>>n){\n        cout<<factorial(n)<<endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n    int factorial (int n){\n\n        if (n==0) return 1;\n        else n=n*factorial(n-1);\n        \n    }\n    \n    int main (){\n        \n        int x;\n        \n        cin>>x;\n        \n        cout<<factorial(x)<<endl;\n    }\n",
  "#include <iostream>\nusing namespace std;\n\n    int factorial(int n){\n\n        if (n==0) return 1;\n        else n=n*factorial(n-1);\n        \n    }\n    \n    int main (){\n        \n        int x;\n        \n        cin>>x;\n        \n        cout<<factorial(x)<<endl;\n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nif (n>0) {\n    return n*factorial(n-1);\n        }\n\n    else {\n\n    return 1; \n    }\n}\n\nint main () {\nint n;\ncin >>n;\ncout<< factorial(n)<< endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n    int factorial(int n){\n\n        if (n==0) return 1;\n        else return n=n*factorial(n-1);\n        \n    }\n    \n    int main (){\n        \n        int x;\n        \n        cin>>x;\n        \n        cout<<factorial(x)<<endl;\n    }\n",
  "#include <iostream>\nusing namespace std;\nint main () {\n    int n;\n    cin >> n;\n    int i=0;\n    while (i <= n) {\n            cout << i << endl;\n        i=i+1;\n        }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n>1) {\n    return n*factorial(n-1);\n  }\n  else {\n    return 1;\n  }\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n   }\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0 or n==1) {\r\n        n = 1;\r\n        return n;\r\n    }\r\n    else {\r\n        n = n * factorial(n-1);\r\n        return n;\r\n    }\r\n}\r\n\r\nint main() {\r\n    int numero;\r\n    while (cin >> numero) {\r\n        cout << factorial(numero) << endl;\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint main() {}\r\nint factorial(int n){\r\n    int result=1;\r\n    for(int i=0;i<n;++i){\r\n            result = (result*i);\r\n\r\n\r\n    }\r\nreturn result;\r\n\r\n\r\n\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\nint main() {}\r\nint factorial(int n){\r\n    int result=1;\r\n    for(int i=1;i<=n;++i){\r\n            result = (result*i);\r\n\r\n\r\n    }\r\nreturn result;\r\n\r\n\r\n\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int a;\n    while(cin >> a){\n        cout << factorial(a) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n<=0) return 1;\n    else if(n==1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n > 1){\n        return n * factorial(n - 1);\n    }\n    else return 1;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n)\n{\n    if(n>1)return n*factorial(n);\n    else return 1;\n}\nint main()\n{\n    \n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n)\n{\n    if(n>1)return n*factorial(n-1);\n    else return 1;\n}\nint main()\n{\n    \n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if ( n <= 1) return 1;\n    \n    return (n*(factorial(n-1)));\n    \n    \n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        factorial(n);\n        int x = factorial(n);\n        cout << x << endl;\n    }\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "//P12509    \n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1 or n == 0) return 1;\n    else { \n        n = n*factorial(n-1);\n        return n;\n    }\n}\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial (n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n * factorial(n-1);\n}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n > 1) {\n        return n * factorial(n-1); \n    }\n    else return 1;\n    \n}\n\n\nint main (){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "ï»¿#include <iostream>\r\nusing namespace std;\r\n \r\nint factol(int n) {\r\n    if (n>1) {\r\n        return n*factol(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factol(n) << endl;\r\n}",
  "ï»¿#include <iostream>\r\nusing namespace std;\r\n \r\nint factol(int n) {\r\n    if (n>1) {\r\n        return n*factol(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factol(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return n;\n\telse return n * factorial(n-1);\n\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\t\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n-1);\n\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\t\n\t\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n<1) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1 or n == 0) {\r\n\t\treturn 1;\r\n\t}\r\n\telse {\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n\r\n\r\nint main() {\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n        \n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n <= 1) return 1;\r\n\tn = factorial(n-1)*n;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n <= 1) return 1;\r\n\telse return factorial(n-1)*n;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main(){\r\n    int num = 5;\r\n    cin >> num;\r\n    cout << factorial(num) << endl;\r\n    return 0;\r\n}\r\n\r\nint factorial(int n) {\r\n    return (n <= 1) ? 1 : n*factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n// n entre 0 i 12\r\n\r\nint factorial( int n ) {\r\n    if ( n == 0 or n == 1 ) return 1;\r\n    else return factorial(n-1) * n ;\r\n}\r\n\r\nint main() {\r\n    \r\n}",
  "ï»¿#include<iostream>\r\n \r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    static int i=0;\r\n    int sum=0;\r\n    if (n == 0)\r\n        return 1;\r\n    else\r\n    {\r\n        sum = (n * factorial(n - 1));\r\n        cout << i << endl;\r\n        i++;\r\n        sum =0;\r\n \r\n    }\r\n sum =0;\r\n \r\n}\r\nint main() {\r\n \r\n \r\n    int counter, n;\r\n \r\n    cin>>n;\r\n \r\n    cout << n <<\" \"<< factorial(n);\r\n    return 0;\r\n \r\n    }",
  "ï»¿#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif(n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0) return 1;\n\tint m;\n\tm = n * factorial(n-1);\n\treturn m;\n}\n int main(){\n\t int n;\n\t cin >> n;\n\t cout << factorial(n) << endl;\n }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif(n == 0) return 1;\r\n\telse return n*factorial(n -1); \r\n}\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\nif (n=1) return 1;\nelse return n*factorial(n-1);\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\nif (n==1) return 1;\nelse return n*factorial(n-1);\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==1) return 1;\n\telse return n*factorial(n-1);\n}\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n < 2) return 1;\n\treturn n * factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n < 2) return 1;\n\treturn n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 2) return 1;\n    return n * factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint f = 1; \r\n\tfor (int i = n; i > 0; --i) f= f*i;\r\n\treturn f; \r\n}\r\n\r\nint main () {\r\n\twhile(cin >> n) cout << factorial(n) << endl; \r\n}\r\n\t\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint f = 1; \r\n\tfor (int i = n; i > 0; --i) f= f*i;\r\n\treturn f; \r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile(cin >> n) cout << factorial(n) << endl; \r\n}\r\n\t\r\n",
  "#include <iostream>\nusing namespace std;\nint fact (int n) {\n\tif ( n == 0) return 1; \n\treturn n * fact(n-1);\n}\n\nint main () {\n\t int n;\n\t cin >> n;\n\t cout << fact(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n\tif ( n == 0) return 1; \n\treturn n * fact(n-1);\n}\n\nint main () {\n\t int n;\n\t cin >> n;\n\t cout << fact(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n\tif ( n == 0) return 1; \n\treturn n * factorial(n-1);\n}\n\nint main () {\n\t int n;\n\t cin >> n;\n\t cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n <= 0) return 1;\r\n\t else return n*factorial(n-1); \r\n\t \r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nvoid base2(int n){\n    if(n <= 1) cout << n;\n    else{\n        base2(n/2);\n        cout << n%2;\n        \n    }\n}\nvoid base8(int n){\n    if(n <= 7) cout << n;\n    else{\n        base8(n/8);\n        cout << n%8;\n    }\n}\nvoid base16(int n){\n\tint q;\n\tchar k;\n\tq = n/16;\n\tif (q != 0) base16(q);\n\tif ((n - 16 * q) >= 10) { //Si estÄ  entre 10 o 16 s'expressa entre A i F\n\t\tk = 'A' + (n%16) - 10;\n\t\tcout << k;\n\t}\n\telse cout << n - 16  * q;\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << n << \" = \";\n\t\tbase2(n);\n\t\tcout << \", \";\n\t\tbase8(n);\n\t\tcout << \", \";\n\t\tbase16(n);\n\t\tcout << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n > 1){\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\t\n\tif(n==0)return 1;\n\treturn n*factorial(n-1);\t\n\n\n}\n\nint main(){\n\n\tint n;\n\twhile(cin>>n){\n\t\tcout<<factorial(n)<<endl;\n\n\t}\n\n\n}\n",
  "ï»¿#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (0<=n<=12) return n+factorial(n-1);\n  else return 0;\n}",
  "ï»¿#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (0<=n and n<=12) return n+factorial(n-1);\n  else return 0;\n}",
  "ï»¿#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (0<=n and n<=12) return n*factorial(n-1);\n  else return 0;\n}",
  "ï»¿#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (0<n and n<=12) return n*factorial(n-1);\n  else return 0;\n}",
  "ï»¿#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (1<n and n<=12) return n*factorial(n-1);\n  else return 0;\n}",
  "ï»¿#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (1<n and n<=12) return n*factorial(n-1);\n  else return 1;\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nvoid llegir(vector<int> v) {\n    for(int i=0;i<int(v.size());++i) {\n        cin >>v[i];\n    }\n}\n\nvoid girar(vector<int> v) {\n    int n=v.size();\n    for (int i=0;i<n/2;++i) {\n        swap(v[i],v[n-i-1]);\n    }\n}\n\nvoid mostrar(const vector<int> v) {\n    for (int i=0;i<int(v.size());++i) {\n        if (i!=0) cout <<' ';\n        cout <<v[i];\n    }\n    cout <<endl;\n}\n\nint main() {\n    int n;\n    while (cin >>n) {\n        vector<int>v(n);\n        llegir(v);\n        girar(v);\n        mostrar(v);\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) n = 1;\n    else if (n > 1) n = n * factorial(n-1);\n    return n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n    \n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) n = 1;\r\n\telse n = n*factorial(n-1);\r\n\treturn n;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0)return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return (n* factorial(n-1));\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return (n*factorial(n-1));\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include<iostream>\n#include<cmath>\nusing namespace std;\n\nint factorial(int n) {\n    int resultat = 1;\n    while (n > 0) {\n        for (int i = n; i>0; --i) {\n            resultat = resultat*i;\n        }\n     return resultat;\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include<iostream>\n#include<cmath>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n>1) return n*factorial(n-1);\n    else return 1;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}  \n}\n\n\nint factorial(int n){\n\n\tif (n == 1 or n == 0) {\n\t\treturn 1;\n\t} else {\n\t\treturn n * factorial(n-1);\n\t}\n\n\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n\t\r\n}\r\n\r\nint main() {\r\n\t\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return (n*factorial(n-1));\n}\n\nint main(){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint fact=n;\n\tif(n>1) {\n\t\tfact = fact * factorial(n-1);\n\t}\n\telse return 1;\n\treturn fact;\n}\n\nint main() {\n\tint x;\n\tcin>>x;\n\tcout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n//Pre: n es un nombre enter positiu\t\n//Post: retorna n!\nint f = 1, i = 0;\nwhile (i < n) {\ni = i + 1;\nf = f * i;\n}\nreturn f;\n}\n\nint main() {\nint x;\ncin >> x;\ncout << factorial (x) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n//pre: Ã©s un nombre enter positiu\n//post: la funciÃ³ retorna el factorial de n\nint res;\n if(n==0){\n   res = 1;\n }else{\n   res = n*factorial(n-1);\n }\n\n return res;\n}\nint main(){\nint n = 0;\ncin >> n;\nint resultat = factorial(n);\ncout << resultat;\n}\n",
  "ï»¿#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int ans;\n  \n  if(n==0) ans=1;\n  else ans=n*factorial(n-1);\n  \n  return ans;\n}\n\nint main() {\n  cout<<factorial(1)<<endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\nint res;\nif(n==0){\nres=1;\n}else{\nres=n*factorial(n-1);\n}\nreturn res;\n}\n\nint main() {\nint n, r;\nwhile(cin>>n){\nr=factorial(n);\ncout<<r<<endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\t\n\tif (n == 0) {\n\t\tn = 1;\n\t}else{\n\t\tn = n * factorial (n-1);\n\t}\n\treturn n;\n}\n\nint main () {\n\t\n\tint n = 0;\n\tcin>>n;\n\tcout<<factorial (n)<<endl;\n}\n",
  "#include<iostream>\n\n\nint factorial(int n){\n//\n//\n\tint res;\n\tif (n==0) res=1;\n\telse res=n*factorial(n-1);\n\t\n\treturn res;\t\n}\n\n//int main(){\n//\tint n;\n//\tcin >> n;\n//\tcout << factorial(n);\n\n//}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\t//Pre: Es compleix 0<=n<=12\n\t//Post:Retorna el factorial de n\n\tint res;\n\tif(n==0 or n==1)res=n;\n\telse res=n*factorial(n-1);\n\treturn res;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\t//Pre: Es compleix 0<=n<=12\n\t//Post:Retorna el factorial de n\n\tint res;\n\tif(n==0 or n==1)res=n;\n\telse res=n*factorial(n-1);\n\treturn res;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\t//Pre: Es compleix 0<=n<=12\n\t//Post:Retorna el factorial de n\n\tint res;\n\tif(n==0 or n==1)res=1;\n\telse res=n*factorial(n-1);\n\treturn res;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint res;\n\nwhile(cin>>n){\n\n if(n==0){\n  res=1;\n }\n  \n else{\n  res=n*factorial(n-1);\n }\n\nreturn res;\n}\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint res;\n\nwhile(cin>>n){\n\n if(n==0){\n  res=1;\n }\n  \n else{\n  res=n*factorial(n-1);\n }\ncout<<res<<endl;\n}\nreturn res;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint res;\n\n if(n==0){\n  res=1;\n }\n  \n else{\n  res=n*factorial(n-1);\n }\n\ncout<<res<<endl;\n\nreturn res;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint res;\n\n if(n==0){\n  res=1;\n }\n  \n else{\n  res=n*factorial(n-1);\n }\n\nreturn res;\n}\n\n\n",
  "/*\nCalculo del factorial iterativo de un natural.\n*/\n#include <iostream>\nusing namespace std;\nint factorial(int n);\nint main(void){\n  int n;\n  while(cin >> n){\n    cout << factorial(n) << endl;\n  }\n}\nint factorial(int n){\n  int n_inicial;\n  n_inicial = n;\n  if(n == 0){\n    return 1;\n  }\n  else{\n    for(int i = 1; i < n_inicial; i++){\n      n = n * i;\n    }\n    return n;\n  }\n}\n",
  "int factorial (int n) {\n\tint e=0;\n\tif (n>0) {\n\t\te=factorial(n-1)*n;\n\t}\n\telse {\n\te=1;\n\t}\n\treturn e;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\nint f=1,i=0;\nwhile(i<n){++i; f=f*i;}\nreturn f;\n\n\n}\nint main(){\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n\n\n\n\n\n}\t\t\n\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\nint res;\nif(n==0)res=1;\nelse res=n*factorial(n-1);\nreturn res;\n\n\n}\nint main(){\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n\n\n\n\n\n}\t\t\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint num;\n\t\n\tif (n == 0){\n\t\tnum = 1;\n\t}else{\n\t\tnum = n*factorial(n-1);\n\t}\n\n\treturn num;\n}\n\nint main(){\n\tint num;\n\tcin>>num;\n\tcout<<factorial(num);\n}\n",
  "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint factorial(int n){\n\tint resultat = 0;\n\tif(n==0){\n\t\tresultat = 1;\n\t}else{\n\t\tresultat = n * factorial(n-1);\n\t}\n\treturn resultat;\n}\n\n\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n\tint res;\n\tif (n==0) res=1;\n\telse res=n*factorial(n-1);\n\treturn res;\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint res;\n\tif(n==0) res=1;\n\telse res=n*factorial(n-1);\nreturn res;\n\t}\n\nint main(){\n\tint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\nint res;\nif (n==0){\nres=1;}\nelse{\nres=n*factorial(n-1);}\nreturn res;}\n\nint main(){\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint suma = 1;\n\tint i = n;\n\twhile(i != 0) {\n\t\tsuma *= i;\n\t\t--i;\t\n\t}\t\n\treturn suma;\n}\n",
  "int factorial(int n) {\r\nint res;\r\nif (n == 0) res = 1 ;\r\nelse res = n*factorial(n-1);\r\nreturn res;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\t//Pre: n es un nombre enter positiu\r\n\t//Post: retorna n!\r\n\tint res;\r\n\tif (n == 0) res = 1;\r\n\telse res = n*factorial(n - 1);\r\n\treturn n;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\t//Pre: n es un nombre enter positiu\r\n\t//Post: retorna n!\r\n\tint res;\r\n\tif (n == 0) res = 1;\r\n\telse res = n*factorial(n - 1);\r\n\treturn res;\r\n}",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int res;\n    if (n==0){\n        \n        res = 1;\n    }\n    else {\n        \n        res = n*factorial(n-1);\n    }\n    return res;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nstruct Temps {\n\tint hora, minut, segon;\n};\n\nTemps suma_un_segon(Temps t){\n\tt.segon = t.segon + 1;\n\tif(t.segon > 59){\n\t\tt.segon = 0;\n\t\tt.minut = t.minut + 1;\n\t\tif(t.minut > 59 ) {\n\t\t\tt.minut = 0;\n\t\t\tt.hora = t.hora + 1;\n\t\t\tif(t.hora > 23){\n\t\t\t\tt.hora = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn t;\n}\n\n\nTemps resta_un_segon(Temps t){\n\tt.segon = t.segon - 1;\n\tif(t.segon < 0){\n\t\tt.segon = 59;\n\t\tt.minut = t.minut - 1;\n\t\tif(t.minut < 0 ) {\n\t\t\tt.minut = 59;\n\t\t\tt.hora = t.hora - 1;\n\t\t\tif(t.hora < 0){\n\t\t\t\tt.hora = 23;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn t;\n}\n\n\n\nvoid un_segon(const Temps& t, Temps& t1, Temps& t2){\n\tt1 = suma_un_segon(t);\n\tt2 = resta_un_segon(t);\n}\n\n\n\n\nint main(){\n\tint hora,minut,segon;\n\n\twhile(cin >> hora >> minut >> segon){\n\t\tTemps t = {hora,minut,segon};\n\t\tTemps t1;\n\t\tTemps t2;\n\n\t\tun_segon(t,t1,t2);\n\t\n\t\tcout << t1.hora <<\" \" << t1.minut << \" \" << t1.segon << endl;\n\t\tcout << t2.hora <<\" \" << t2.minut << \" \" << t2.segon << endl;\n\t}\n\n\t\n\n\n}\n",
  "ï»¿#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n  if(n==0 or n==1){\n    n=1;\n  }else{\n   n = n * factorial(n-1);\n  }\n  return n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include<iostream>\r\nusing namespace std; \r\n\r\nint factorial(int n){\r\n\tint res; \r\n\tif(n == 0){\r\n\t\tres = 1; \r\n\t}\r\n\telse res = n*factorial(n-1);\t\r\n\t\r\nreturn res; \r\n}\r\n\r\n",
  "#include<iostream>\n#include<string>\n#include<cmath>\n#include<vector>\n#include<queue>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\nint factorial(int n){\r\n\tint res;\r\n\t\tif(n==0)res=1;\r\n\t\telse res=n*factorial(n-1);\r\nreturn res ;\r\n}\r\n\r\nint main(){\r\n\r\n}\r\n",
  "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint res;\r\n\tif(n==1 or n==0) res = 1;\r\n\telse{\r\n\t\tres = n * factorial(n-1);\r\n\t}\r\n\t\r\n\treturn res;\r\n}\r\n\r\n\r\nint main(){\r\n\t\r\n\t\r\n\tint a = factorial(3);\r\n\tcout << a;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n) {\n     if (n <= 1) return n;\n     else return n*factorial(n -1);\n}\n\n int main() {\n     int n;\n     cin >> n;\n     cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n) {\n     if (n <= 1) return n;\n     else return n*factorial(n -1);\n}\n\n int main() {\n     int n;\n     while (cin >> n) {\n     cout << factorial(n) << endl;\n     }\n }\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n) {\n     if (n <= 1) return 1;\n     else return n*factorial(n -1);\n}\n\n int main() {\n     int n;\n     while (cin >> n) {\n     cout << factorial(n) << endl;\n     }\n }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial(n-1); \r\n}\r\n",
  "#include <iostream>\n#include <string>\n\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==1) return 1;\n    return factorial (n-1) * n;\n}\n\n// int main(){\n//     int n;\n//     cin >> n;\n//     cout << factorial(n) << endl;\n// }\n",
  "#include <iostream>\n#include <string>\n\nusing namespace std;\n\n\nint factorial(int n){\n    if (n<=1) return 1;\n    return factorial (n-1) * n;\n}\n\n// int main(){\n//     int n;\n//     cin >> n;\n//     cout << factorial(n) << endl;\n// }\n",
  "#include <iostream>\n#include <vector> \n\nusing namespace std;\n\nint factorial ( int n ) {\n\tif ( n == 0 ) return 1;\n\telse return factorial( n - 1 )*n;\n}\n\nint main ()\n{\n\tint n;\n\tcin >> n;\n\tcout << factorial( n ) << endl;\n\treturn 0;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorialrecursiu (int n) {\n\tif (n==1) return 1;\n\telse return n*factorialrecursiu(n-1);\n\t}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n==1) return 1;\n\telse return n*factorial(n-1);\n\t}\n",
  "\n\nint factorial(int n) {\n\tif (n==1) return 1;\n\telse return n*factorial(n-1);\n\t}\n",
  "\n\nint factorial(int n) {\n\tif (n<=1) return 1;\n\telse return n*factorial(n-1);\n\t}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n\tif (n == 0) return 1;\n\telse return factorial(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n==0) return 1;\n    else {\n        n=n*factorial(n-1);\n    }\n    return n;\n}    \n        \n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\nint factorial(int n){\n\tint res;\n\tif (n==0) res=1;\n\telse{\n\t\tres=n*factorial(n-1);\n\t}\nreturn res;\n}\n",
  "#include<iostream>\n#include<vector>\n#include<string>\nusing namespace std;\t\n\nint factorial(int n){\n\tint res=0;\n\t\n\tif(n==0) res=1;\n\telse{\n\t\tint i=0;\n\t\twhile(i<n){\n\t\ti = i+1;\n\t\tres = factorial(n-1)*i;\t\t\n\t\t}\n\t}\nreturn res;\n}\n\n\nint main(){\nint n;\ncin>>n;\n\ncout<<factorial(n)<<endl;\n\n}\n\n\n\n\n\n\n",
  "#include<iostream>\n#include<vector>\n#include<string>\nusing namespace std;\t\n\nint factorial(int n){\n\tint res;\n\t\n\tif(n==0) res=1;\n\telse res = n*factorial(n-1);\t\t\n\nreturn res;\n}\n\n\nint main(){\nint n;\ncin>>n;\n\ncout<<factorial(n)<<endl;\n\n}\n\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n\tif (n == 0) return 1;\n\n\telse {\n\n\t\tint f=factorial(n-1);  //f es a! <--> f es (n-1)!\n\n\t\treturn n*f;\n\t}\n\n}\n\nint main() {\n\n\tint n;\n\n\tcin >> n;\n\n\tcout << factorial(n) << endl;\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n != 0) return n * factorial(n - 1);\n    else return 1;\n}\n\nint main () {\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse {\n\t\treturn n*factorial(n-1);\n\t}\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "int factorial(int n) {\n    if(n<2) return 1;\n    else {\n        n=factorial(n-1)*n;\n    }\n    return n;\n}    \n    \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n = n * factorial(n - 1);    \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) {\n    return n*(factorial(n-1));\n    }\n    else return 1;\n}\n\nint main() {\n    int n;\n    \n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n            \n        \n        \n        \n            ",
  "#include <iostream>\r\n\r\nusing namespace std; \r\n\r\n int factorial(int n){\r\n \tif (n==1) return 1;\r\n \telse return n*(factorial(n-1));\r\n }\r\n \r\nint main(){\r\n\tint x;\r\n\tcin>>x;\r\n\tcout<<factorial(x)<<endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std; \r\n\r\n int factorial(int n){\r\n \tif (n==0) return 1;\r\n \telse return n*(factorial(n-1));\r\n }\r\n \r\nint main(){\r\n\tint x;\r\n\tcin>>x;\r\n\tcout<<factorial(x)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n    \n    if (n > 1) return n*factorial(n-1);\n    else return 1;\n    \n    \n}\n\n\n\n\nint main () {\n    \n    int n;\n    \n    \n    \n    while (cin >> n) cout << factorial(n) << endl;\n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n<2) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 1 or n == 0) return 1;\n    else {\n        int e = n*factorial(n-1) ;\n        return e;\n    }\n}\nint main() {\n    int n;\n    while( cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else {\n    return n*(factorial(n-1));\n    }\n}\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n > 1){\n        return n * factorial(n - 1);\n    }\n    else return 1;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0 or n==1){ \n\t\treturn 1;\n\t}\n\telse{\n\t\treturn n*factorial(n-1);\n\t}\n}\n\t\n\t\n\t\nint main (){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n} \n\t\n\t \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n== 0) return 1;\n    else return factorial(n-1) * n;\n}\n\nint main () {\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// funcio recursiva que retorna el factorial de n\n// Pre: 0 <= n <= 12\nint factorial(int n) {\n    if (n == 0) return 1; // cas base\n    else return factorial(n - 1)*n; // cas recursiu\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n>1){\r\n\t\treturn n*factorial (n-1);\r\n\t}\r\n\telse return 1;\r\n\t\r\n\t\r\n}\r\n\r\nint main (){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n\t\r\n\treturn 0;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n){\n     if (n == 0 ) return 1;\n     return n* factorial(n-1);\n }\n \n int main() {\n int n;\n cin >> n;\n cout << factorial(n) << endl;\n }\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "int factorial(int n){\n\tif (n < 2) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n > 1){ \n        return n*factorial(n-1);\n    }\n    else return 1;\n}\n\nint main(){\n    int a;\n    while(cin >> a){\n        cout << factorial(a) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return n;\n    else return n*factorial(n-1); \n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n-1); \n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1); \n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else if (n > 1)\n        return n * factorial(n - 1);\n    else\n        return n;\n}\n\nint main()\n{\n    while(true)\n    {\n        int n;\n        cin >> n;\n        cout << factorial(n) << endl;\n    }\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) {\n        return n*factorial(n-1)\n    }\n    \n    else return 1;\n    \n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n        \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) {\n        return n*factorial(n-1);\n    }\n    \n    else return 1;\n    \n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n        \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n    else {\n        int f = factorial(n - 1);\n        return n*f;\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if ((n == 0) or (n == 1)) {\r\n        n = 1;\r\n        return n;\r\n    }\r\n    else {\r\n        n = n*factorial(n-1);\r\n        return n;\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n; \r\n    while (cin >> n) {\r\n        cout << \"factorial(\" << n << \") â \" << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else{\n        return n * factorial(n-1);\n    }\n    \n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return (n * factorial(n-1));\n}\n\nint main() {}\n",
  "int factorial( int n) {\nint i=0;\nint f1=1;\nwhile (i<n){\ni=i+1;\nf1 = f1*i;\n}\nreturn f1;\n}\n",
  "def factorial(n):  # returns int\r\n\tif n == 0 or n == 1: return 1\r\n\telse:\r\n\t\treturn factorial(n-2) + factorial(n-1)\r\n",
  "def factorial(n):\r\n\tif n == 0 or n == 1: \r\n\t\treturn 1\r\n\telse:\r\n\t\treturn n * factorial(n-1)\r\n",
  "\ndef factorial(n):\n    if n == 1:\n        return n\n    else:\n        return n*factorial(n-1)\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1)\n        return n;\n    else\n        return n * factorial(n - 1);\n}",
  "\ndef factorial(n):\n    if n == 1:\n        return n\n    else:\n        return n*factorial(n-1)\n",
  "ï»¿#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1) return 1;\n  else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0){\n        return 1;\n    }else{\n        return factorial(n-1)*n;\n    }\n}\nint main(){\n    int n;\n    while(cin>>n){\n        cout<<factorial(n)<<endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial (n-1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    return 1;\r\n}\r\nint main () {\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n   }\n}\n\n",
  "#include <cstdlib>\n#include <iostream>\nusing namespace std;\n\nint main() {\n\n  // Pre: n=N y n>=0\n  // Post: Calculamos el factorial de n\n  int n;\n  int fact = 1;\n  int i = 2;\n  cin >> n;\n  while (i <= n) {\n    fact = fact*i;\n    i = i + 1;\n  }\n  cout << fact << endl;\n}\n\n\n",
  "#include <cstdlib>\n#include <iostream>\nusing namespace std;\n\nint main() {\n\n  // Pre: n=N y n>=0\n  // Post: Calculamos el factorial de n\n  int n;\n  int fact = 1;\n  int i = 2;\n  cin >> n;\n  while (i <= n) {\n    fact = fact*i;\n    i = i + 1;\n  }\n  cout << fact << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "ï»¿#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n    return 0;\n}\n\nint factorial(int n){\n if(n == 0){\n  return 1;   \n }else{\n  return factorial(n-1) * n;   \n }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0 or n == 1) return 1;\r\n\treturn n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n\r\n//g++ P12509.cpp -o P12509.exe && P12509.exe",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\treturn (n*factorial(n-1));\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include<iostream>\r\n#include<iomanip>\r\n#include<ctime>\r\n\r\nusing namespace std;\r\n\r\nlong double factIterativo( long double numero){\r\n long double resultado=1;\r\n long double i;\r\nfor(i=2 ;i <= numero;i++){\r\nresultado= resultado*i;\r\n}\r\nreturn resultado;\r\n}\r\n\r\n long double factRecursivo( long double numero2){\r\nif(numero2==1){\r\nreturn 1;\r\n}\r\nelse{\r\nreturn numero2*factRecursivo(numero2-1);\r\n}\r\n}\r\n\r\nint main(){\r\nlong double input;\r\ncout<<\"Ingrese un numero: \";\r\ncin>> input;\r\ncout<< setprecision(7);\r\n\r\nclock_t inicio1 = clock();\r\ncout<< \"\\n\\nEl factorial de \"<<fixed<< input <<\" es: \"<< factIterativo(input)<<endl;\r\ntime_t fin1 = clock();\r\nlong double tiempo1= difftime(fin1, inicio1)/ CLOCKS_PER_SEC*1000.0;\r\ncout<<\"\\nEl tiempo de ejecucion Iterativo es: \"<< tiempo1;\r\n\r\nclock_t inicio2 = clock();\r\ncout<< \"\\n\\nEl factorial de \"<<fixed<< input <<\" es: \"<< factRecursivo(input)<<endl;\r\ntime_t fin2 = clock();\r\nlong double tiempo2= difftime(fin2, inicio2)/ CLOCKS_PER_SEC*1000.0;\r\ncout<<\"\\nEl tiempo de ejecucion Recursivo es: \"<< tiempo2;\r\n\r\n\r\nreturn 0;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\nif (n>1){\r\n    return n*factorial(n-1);\r\n}\r\nelse{ return 1;}}\r\n\r\nint main() {\r\n    int n;\r\n    cin>> n;\r\n    cout << factorial (n)<< endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint f=1;\n\tif (n==0) return f;\n\telse f= n*factorial(n-1);\n\treturn f;\n}\n\nint main(){\n\tint a = 7;\n\tint b =factorial(a);\n\tcout<<b<<endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\treturn factorial(n-1)*n;\r\n} \r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n){\r\n\tcout << factorial(n) << endl;\r\n}\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tint result = 0;\r\n\tif(n == 0) return 1;\r\n\telse result = n * factorial(n-1);\r\n\t\r\n}\r\n\r\nint main(){\r\n\tint a;\r\n\tcin>>a;\r\n\tcout<<factorial(a)<<endl;\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif(n == 0) return 1;\r\n\telse{\r\n\t\treturn n * factorial(n-1);\r\n\t} \r\n\t\r\n}\r\n\r\nint main(){\r\n\tint a;\r\n\tcin>>a;\r\n\tcout<<factorial(a)<<endl;\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusign namespace std;\n\nint factorial(int n){\n\tif (n = 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n = 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if ( n == 1) return 1;\n    else return factorial(n-1)*n;\n    }\n\nint main() {\n    int a;\n    while(cin >> a)\n    cout << factorial(a) << endl ;\n    }\n",
  "#include <iostream>\r\n#include <vector>\r\n#include <string>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 0) return 0;\r\n\treturn ( n * factorial(n-1) )\r\n}\r\n",
  "#include <iostream>\r\n#include <vector>\r\n#include <string>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 0) return 0;\r\n\treturn ( n * factorial(n-1) );\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\treturn ( n * factorial(n-1) );\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==1) return n;\r\n\treturn (n * factorial(n-1));\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "def factorial(n):\r\n    if(n == 0 or n == 1):\r\n        return 1\r\n    else:\r\n        return n*factorial(n-1)\r\nprint(factorial(7))\r\n",
  "def factorial(n):\r\n    if(n == 0 or n == 1):\r\n        return 1\r\n    else:\r\n        return n*factorial(n-1)\r\nprint(factorial(7))\r\n",
  "def factorial(n):\r\n    if(n == 0 or n == 1):\r\n        return 1\r\n    else:\r\n        return n*factorial(n-1)\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << \"Factorial de \" << n << \" = \" << factorial(n);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "import java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static int factorial(int n) {\r\n        if (n==0) return 1;\r\n        return n*(factorial(n-1));\r\n    }\r\n\r\n    public static void main (String args[]) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        int a = scanner.nextInt();\r\n        System.out.println(factorial(a));\r\n    }\r\n}\r\n",
  "import java.util.Scanner;\r\n\r\npublic class program {\r\n    public static int factorial(int n) {\r\n        if (n==0) return 1;\r\n        return n*(factorial(n-1));\r\n    }\r\n\r\n    public static void main (String args[]) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        int a = scanner.nextInt();\r\n        System.out.println(factorial(a));\r\n    }\r\n}\r\n",
  "import java.util.Scanner;\r\n\r\npublic class program {\r\n    public static int factorial(int n) {\r\n        if (n==0) return 1;\r\n        return n*(factorial(n-1));\r\n    }\r\n\r\n    public static void main (String args[]) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        int a = scanner.nextInt();\r\n        System.out.println(factorial(a));\r\n    }\r\n}",
  "import java.util.Scanner;\r\n\r\nclass Main {\r\n    public static int factorial(int n) {\r\n        if (n==0) return 1;\r\n        return n*(factorial(n-1));\r\n    }\r\n\r\n    public static void main (String args[]) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        int a = scanner.nextInt();\r\n        System.out.println(factorial(a));\r\n    }\r\n}",
  "import java.util.Scanner;\r\n\r\nclass Solution {\r\n    public static int factorial(int n) {\r\n        if (n==0) return 1;\r\n        return n*(factorial(n-1));\r\n    }\r\n\r\n    public static void main (String args[]) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        int a = scanner.nextInt();\r\n        System.out.println(factorial(a));\r\n    }\r\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (x>0){\r\n\t\tn *= factorial(n - 1);\r\n\t}\r\n\r\n\telse {\r\n\t\tn = 1;\r\n\t}\r\n\treturn n;\r\n}\r\n\r\n\r\nint main() {\r\n\tint p; cin >> p;\r\n\tcout << factorial(p) << endl;\r\n\tsystem(\"pause\");\r\n\treturn 0;\r\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n>0){\r\n\t\tn *= factorial(n - 1);\r\n\t}\r\n\r\n\telse {\r\n\t\tn = 1;\r\n\t}\r\n\treturn n;\r\n}\r\n\r\n\r\nint main() {\r\n\tint p; cin >> p;\r\n\tcout << factorial(p) << endl;\r\n\t//system(\"pause\");\r\n\treturn 0;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n==1) return 1;\n\telse return factorial(n-1)*n;\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n==0) return 1;\n\telse return factorial(n-1)*n;\n}\n\nint main () {\n\tint n;\n\twhile(cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0) return 1;\n\telse return n*factorial(n-1);\n\t}\n\tint main()  {\n\tint n;\n\t cin >> n;\n\t cout << factorial (n) << endl;\n\t }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\nif (n==0) return 1;\nreturn n*factorial(n-1);\n}\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n==0) return 1;\n\treturn n*factorial(n-1);\n}\nint main (){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0) return 1;\n\tfactorial(n)=n * factorial(n-1)\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0) return 1;\n\treturn factorial(n)=n * factorial(n-1);\n}\n",
  "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint factorial( int n){\n\tif (n==0) return 1;\n\treturn n* factorial (n-1);\n}\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n)<< endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0) return 1;\n\treturn n * factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "//factorial d'un nombre\n#include <iostream>\n#include <vector>\n\nusing namespace std;\nint factorial(int n){\n  if (n == 0) return 1;\n  return n*factorial(n - 1);\n}\n\nint main () {\n int n;\n cin >> n; \n cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint f = 1;\n\tfor (int i = 1; i <= n; ++i) f = f*i;\n\treturn f;\n}\n\t\nint main () {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n * factorial(n-1);\n}\n\nint main () {\n}\n",
  "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  return n*factorial(n-1);\n  }\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  return factorial(n - 1)*n;\n}\n\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n\r\n\r\nint main() {\r\n\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    else if (n == 0) return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n\r\n\r\nint main() {\r\n\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int x){\r\n    if (x==1 or x==0) return 1;\r\n    return x*factorial(x-1);\r\n}\r\n\r\nint main(){\r\n    int a;\r\n    cin>>a;\r\n    cout<<factorial(a)<<endl;\r\n}\r\n\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    //cout << n << endl;\n    if (n == 1 or n == 0) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n){\n\tif(n==0) return 1;\n\treturn n*factorial(n-1);\n}\nint main() {\n  \n\n}",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\nint factorial(int n){\n\n    if (n==0) return 1;\n    return n*factorial(n-1);\n    \n}\nint main(){\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0 or n == 1) return 1;\n    return n*factorial(n - 1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n\n    return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "int factorial(int n) {\n    if (n == 0)\n        return 1;\n    return n * factorial(n - 1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n; \n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "# include <iostream>\r\nusing namespace std;\r\n\r\n// Retorna el factorial de n\r\n// Prec: n >= 0\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0) return 1;\n\telse{\n\t\treturn n*factorial(n-1);\n\t}\n\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n    return factorial(n-1)*n;\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int f=1;\n    for (int i=2; i<=n; i++){\n        f=f*i;\n    }\n    return f; \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    int f = factorial(n);\n    cout << f << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0 or n==1) return 1;\n    return n*factorial(n-1); \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1) return 1;\n  else return n*factorial(n-1);\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n <= 1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while(cin >> n){\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n//molt important, sobretot en Recursivitat documentar que fa la funciÃ³.\n//retorna el factorial de n\n//prec: n>=0\nint factorial(int n){\n    if(n==0) return 1;\n    return n * factorial(n-1); //La funciÃ³ es crida a si mateixa --> Recursivitat\n}\n\nint main() {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//molt important, sobretot en Recursivitat documentar que fa la funciÃ³.\n//retorna el factorial de n\n//prec: n>=0\nint factorial(int n){\n    if(n==0) return 1;\n    return n * factorial(n-1); //La funciÃ³ es crida a si mateixa --> Recursivitat\n}\n\nint main() {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int x){\n  if (x == 1) return 1;\n  else return x * factorial (x-1);\n;\n}\nint main(){\n  int x;\n  cin >> x;\n  cout << factorial (x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int x){\n  if (x == 0) return 1;\n  else return x * factorial (x-1);\n}\nint main(){\n  int x;\n  cin >> x;\n  cout << factorial (x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint f;\n\tif (n == 0) f = 1;\n\telse f = n * factorial(n-1);\n\treturn f;\n}\n",
  "#include <iostream>  //factorial RECURSIU\nusing namespace std;  //P12509\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n    \n}\n\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial( int n){\n if ( n == 1) return 1;\n else return n*factorial (n - 1);\n } \nint main (){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n }\n",
  "#include <iostream>\nusing namespace std;\nint factorial( int n){\n if ( n == 0) return 1;\n else return n*factorial (n - 1);\n } \nint main (){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n }\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: 0 <= n <= 12\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "//Pre:  0â¤ n â¤ 12.\n// Donat n, retorna n!\n\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    \n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    \n}\n\n\nint main (){\n    \n    int x;\n    while (cin >> x){\n    cout << factorial (x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n    if (x == 0) return  1;\n    else return x * factorial(x - 1) ;\n}\n\n\nint main () {\n    int c;\n    cin >> c;\n    cout << factorial(c) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n){\n\tif(n==0) return 1;\n\treturn n*factorial(n-1);\n}\nint main() {\n  \n\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "// Funció recursiva que donat un enter n més gran o igual que n i \r\n// més petit que o igual que 12, retorna el seu factorial. \r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n   int f=1;                     // variable del valor del factorial\r\n   int i=2;                     //variable auxiliar\r\n   while ( i<=n ){              //bucle per anar multiplicant el factorial per la variable auxiliar i sumar 1 a aquesta\r\n      f= f*i;\r\n      ++i;     \r\n   }\r\n   return f;\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n}\r\n",
  "// Funció recursiva que donat un enter n més gran o igual que n i \r\n// més petit que o igual que 12, retorna el seu factorial. \r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n   if ( n==0 ) return 1;                             // cas 0\r\n   else return n*factorial (n-1);                    // factorial de n és el mateix que el factorial de n-1 * n\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n}\r\n",
  "#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif(n==0) return 1;\r\n\treturn n*factorial(n-1);\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n>1){\r\n        return n*factorial(n-1)\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n   int n;\r\n   cin >> n;\r\n   cout << factorian (n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n>1){\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n   int n;\r\n   cin >> n;\r\n   cout << factorial (n) << endl;\r\n}\r\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\t\n\tif ((n==1 or n==0)){\n\t\treturn 1;\n\t}\n\treturn n * factorial (n-1);\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\n    if (n<=1) return 1;\n    else return n * factorial (n-1);\n\n}\n\nint main ()\n{\n\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint f(int n){\n    if (n<=1) return 1; \n    else {\n        return n*f(n-1);        \n    }\n}\nint main () {\n    int x;\n    cin >> x;\n    cout << f(x) << endl;         \n}\n",
  "int factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1) return 1; \n    else {\n        return n*factorial(n-1);        \n    }\n}\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;         \n}\n",
  "int factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2)  return 1;\n    return n*factorial(n-1);\n    \n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n = 0 or n = 1) return 1;  //Detectem el cas base\n    else retur n*factorial(n-1);\n}\n\n    \n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if  (n == 0) return 1;              //cas base\n    return n * factorial(n - 1);\n    \n}\n\nint main() {\n   \n   int n;\n   while (cin >> n) cout << factorial(n) << endl; \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n-1);\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 0 or n ==1) return 1;  //Detectem el cas base\n    else return n*factorial(n-1);\n}\n\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl; \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n<=1) return 1;\n    else return n * factorial (n-1);\n}\n\nint main () {\n    int c;\n    cin >> c ;\n    cout << factorial(c) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    if (0 <= n and n <= 12) cout << factorial(n) << endl;\n}\n",
  "//factorial recursiu\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif(n==0) return 1;\n\telse {\n\t\tint f=factorial(n-1);\n\t\treturn n*f;\n\t}\n}\n\t\t\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int x){\n    if(x == 1){\n        return x;\n    }\n    return (x * factorial(x - 1));\n\n}\n\nint main(){\n    int x;\n    cin>> x;\n    cout<< factorial(x)<< endl;\n}\n    \n    ",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int x){\n    if(x == 0){\n        return 1;\n    }\n    return (x * factorial(x - 1));\n\n}\n\nint main(){\n    int x;\n    cin>> x;\n    cout<< factorial(x)<< endl;\n}\n    \n    ",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tint f;\n\tif (n > 1 ) return n * factorial(n-1);\t\t\n\telse return 1;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n > 1 ) return n * factorial(n-1);\t\t\n\telse return 1;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n>1) return n*factorial(n-1);\n    else return 1;\n}\n\nint main() {\n    int n;\n    \n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tint r = 1;\n\tfor (int cont = 1; cont <= n; ++cont) {\n\t\tr = r * cont;\n\t}\n\treturn r;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "int factorial(int n){\n    if(n == 0){\n        return 1;\n    }else{\n        return n*factorial(n - 1);\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tint f=1;\n\tif (n==0) f=1;\n\telse f= n * factorial (n-1); \n\treturn f;\n}\n\nint main ()  {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while(cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\treturn n * factorial (n - 1);\n}\n\n\nint main () {\n    int n;\n    cin >> n;\n    int f = factorial (n);\n    cout << f << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) {\r\n        return 1;\r\n    } else {\r\n        int aux = 1;\r\n        for (int i = 1; i <= n; ++i) {\r\n            aux = aux * i;\r\n        }\r\n        return aux;\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while(cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial (int n){\n    if (n == 1 or n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial (int n){\n    if (n == 1 or n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\telse return n * factorial(n-1);\n}\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\nelse return n*factorial(n-1);    \n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout<< factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else {\n        int f=factorial(n-1);\n        return n*f;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial(n - 1);\n        return n * f;\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    int total = n*factorial(n-1);\n    return total;\n    \n    \n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n    \n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    int total = n*factorial(n-1);\n    return total;\n    \n    \n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n    \n    \n",
  "#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif (n == 0) return 1;\r\n\t\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main (){\r\n\t\r\n\t\r\n\t\r\n\tint n;\r\n\t\r\n\twhile (cin>>n){\r\n\t\t\r\n\t\tcout<<factorial(n)<<endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tint r = 0;\n\tr = factorial(n);\n\tcout << r << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\ndouble factorial(double x);\n\nint main()\n{\n    int n;\n    while (cin >> n)\n    cout << factorial(n) << endl;\n}\ndouble factorial(double x)\n{\n    double y = 1;\n    while (x > 0)\n    {\n        y *= x;\n        --x;\n    }\n    return y;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\nint factorial(int x);\n\nint main()\n{\n    int n;\n    while (cin >> n)\n    cout << factorial(n) << endl;\n}\nint factorial(int x)\n{\n    int y = 1;\n    while (x > 0)\n    {\n        y *= x;\n        --x;\n    }\n    return y;\n}\n",
  "#include <iostream>\nusing namespace std;\n\ndouble factorial (int n) {\n\tif (n==0) return 1;\n\telse {\n\t\tcout << n << \" hola\" << endl; \n\t\treturn n*factorial(n-1);\n\t}\n}\n\nint main(){\n\tdouble p;\n\tcin >> p;\n\tdouble f = factorial(p);\n\tcout << f << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\t\n\nint main(){\n\tint m;\n\tcin >> m;\n\tint f = factorial(m);\n\tcout << f << endl;\n}\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n == 1) return 1;\n    else return n * factorial(n-1);\n     \n}\n\nint main(){\n    int a;\n    while(cin>>a){\n        cout<<factorial(a)<<endl;\n    }\n    \n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n * factorial(n-1);\n     \n}\n\nint main(){\n    int a;\n    while(cin>>a){\n        cout<<factorial(a)<<endl;\n    }\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n > 1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\t\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\n\nint main () {\n\t\n\tint a;\n\tcin >> a;\n\t\n\tcout << factorial(a) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n   if(n < 0) return 0;\n   else if(n > 1) return n*factorial(n-1); \n   return 1; \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nint i= 0;\nint f = 1;\nwhile (i < n) {\n++i;\nf = f*i;\n}\nreturn f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    if (n == 0) {\n        return f;\n    }\n    else {\n        int f = factorial(n - 1);\n        return f * n;\n    }\n}\n\nint main () {\n    \n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    int f;\n    if (n == 0) {\n        return f;\n    }\n    else {\n        f = factorial(n - 1);\n        return f * n;\n    }\n}\n\nint main () {\n    \n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    if (n == 0) {\n        return 1;\n    }\n    else {\n        f = factorial(n - 1);\n        return f * n;\n    }\n}\n\nint main () {\n    \n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    if (n == 0) {\n        return 1;\n    }\n    else {\n        int f = factorial(n - 1);\n        return f * n;\n    }\n}\n\nint main () {\n    \n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else{\n        int f = factorial(n-1);\n        return f*n;\n    }\n        \n    }\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else {\n        int f = factorial (n - 1);\n        return f * n;\n    }\n}\nint main(){}\n",
  "#include<iostream>\nusing namespace std;\n\n int nombre_digits(int n) {\n    if (n<10)return 1;\n    else return 1 + nombre_digits(n/10);\n    }\n\n\nint main () {\n    int x;\n    cin>>x;\n    cout<<nombre_digits(x)<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\n int nombre_digits(int n) {\n    if (n<10)return 1;\n    else return 1 + nombre_digits(n/10);\n    }\n\n\nint main () {\n    int x;\n    cin>>x;\n    cout<<nombre_digits(x)<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\n int nombre_digits(int n) {\n    if (n<10)return 1;\n    else return 1 + nombre_digits(n/10);\n    }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    \n    int n;\n    \n    while (cin >> n){\n    \n    cout << factorial(n) << endl;\n    }\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n - 1);\n}\n\nint main () {}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint fact(int n){\n    \n    if(n < 0){\n        \n        return 0;\n        \n    }else{\n        \n        if(n > 1) return n*fact(n - 1);\n        \n    }\n    return 1;\n    \n}\n\n\nint main(){\n    \n    int n, res;\n    \n    cin >> n;\n    \n    res = fact(n);\n    \n    cout << res;\n    \n   \n}\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint fact(int n){\n    \n    if(n < 0){\n        \n        return 0;\n        \n    }else{\n        \n        if(n > 1) return n*fact(n - 1);\n        \n    }\n    return 1;\n    \n}\n\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint fact(int n){\n    \n    if(n < 0){\n        \n        return 0;\n        \n    }else{\n        \n        if(n > 1) return n*fact(n - 1);\n        \n    }\n    return 1;\n    \n}\n\n\nint main(){\n    \n    int n, res;\n    \n    cin >> n;\n    \n    res = fact(n);\n    \n    cout << res << endl;\n    \n   \n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    \n    if(n < 0){\n        \n        return 0;\n        \n    }else{\n        \n        if(n > 1) return n*fact(n - 1);\n        \n    }\n    return 1;\n    \n}\n\n\nint main(){\n    \n    int n, res;\n    \n    cin >> n;\n    \n    res = fact(n);\n    \n    cout << res << endl;\n    \n   \n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    \n    if(n < 0){\n        \n        return 0;\n        \n    }else{\n        \n        if(n > 1) return n*factorial(n - 1);\n        \n    }\n    return 1;\n    \n}\n\n\nint main(){\n    \n    int n, res;\n    \n    cin >> n;\n    \n    res = factorial(n);\n    \n    cout << res << endl;\n    \n   \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n != 0) {\n        return n * factorial(n-1);\n    } return 1;\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main(){\n    int n, resultat;\n    cin >> n;\n    resultat = factorial(n);\n    cout << resultat << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n){\n     if ( n == 0 ) return 1;\n     int m = factorial(n-1);\n     return n*m;\n }\n int main(){\n     int n;\n     cin >> n;\n     factorial(n);\n     cout << factorial(n) << endl;\n     \n     \n }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 or n == 1)\n        return 1;\n    else\n        return factorial(n-1) * n;\n}\nint main(){\n    int n;\n    while (cin >> n)\n        cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int x = 1;\n    \n    if (n == 0) x=1;\n    else {\n        while (n > 0) {\n            x=x*n;\n            --n;\n        }\n    }\n    return x;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n==0 or n==1) {\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n);\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\nint factorial (int n){\n\tif(n>1) return n * factorial(n-1);\n\telse return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f=1;\n    if (n==0) f=1;\n    else f=n*factorial(n-1);\n    \n    return f;\n    \n} \nint main (){\n    int a;\n    cin >> a;\n    cout << factorial(a);\n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "# include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    \n}\nint main (){\n    int x;\n    cin >> x;\n    x=factorial(x);\n    cout << x << endl;;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n<=0) {return 1;\n        \n    }\n    else return {(n*factorial(n-1));\n        \n    }\n    \n\n}\n\nint main ()\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nint factorial(int n){\n    int f=1;\n    for(int i=1; i<=n;++i){\n        f=f*i;\n    }\n    return f;\n}\nint main (){\n    int a;\n    while(cin >> a){\n        cout << factorial(a) << endl;\n    }\n}\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n == 0){\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n}\n}\n\n    \n\nint main (){\n    int a;\n    while(cin >> a){\n        cout << factorial(a) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int i = 0;\n    int f = 1;\n    while (i < n) {\n        i = i + 1;\n        f = f * i;\n    }\n    return f;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n   if (n == 0) return 1;\n   else return n*factorial(n-1);\n    \n}\n\nint main() {\n int n;   \n while (cin >> n) {\n    cout << factorial(n) << endl;\n }\n    \n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tfor (int i=n; i>=0; --i){\r\n\t\tif (n==0 || n==1) return 1;\r\n\t\telse return i*factorial(n-1);\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin>>n){\r\n\t\tcout<<factorial(n)<<endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) {\n        return n * factorial(n - 1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n <= 1)\n        return 1;\n    else  \n        return n*factorial(n);\n}\n\nint main(){\n    \n    int n;\n    cin >> n;\n    \n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n <= 1)\n        return 1;\n    else  \n        return n*factorial(n-1);\n}\n\nint main(){\n    \n    int n;\n    cin >> n;\n    \n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0){\n        return 1;\n    }else return \n        n*factorial(n - 1);\n}\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) <<endl;\n}\n",
  "//Factorial recursiu\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int f=1;\n    for(int i=1; i<=n; ++i){\n        f=f*i;\n    } return f;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    \n    if(n==0)return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin>>n;\n    n=factorial(n);\n    cout<<n<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n > 1) {\n        return n*factorial(n - 1);\n    }\n    else {\n        return 1;\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n == 0 or n == 1) return 1;\n    else {\n        return factorial(n-1) * n;\n    }\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n            \n            \n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int s= 1;\nif(n==0) return s = 1;\nelse {\nreturn s= n*factorial (n-1);\n}\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) {\n        return 1;\n    } else {\n        return n*factorial (n-1);\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int m=0;\n    while (n!=0) {\n        m=m*n;\n        --n;\n    }\n    return m;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int m=0;\n    while (n!=1) {\n        m=m*n;\n        --n;\n    }\n    return m;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int m=1;\n    while (n>0) {\n        m=m*n;\n        --n;\n    }\n    return m;\n}\n\nint main () {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    \n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n// \n// int factorial(int n) {\n//     int m=1;\n//     while (n>0) {\n//         m=m*n;\n//         --n;\n//     }\n//     return m;\n// }\n// \n\n\nint factorial(int n) {\n    if (n<2) return 1;\n    else return n*factorial(n-1){\n    }\n\nint main () {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n// \n// int factorial(int n) {\n//     int m=1;\n//     while (n>0) {\n//         m=m*n;\n//         --n;\n//     }\n//     return m;\n// }\n// \n\n\nint factorial(int n) {\n    if (n<2) return 1;\n    else return n*factorial(n-1)\n}\n\nint main () {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n// \n// int factorial(int n) {\n//     int m=1;\n//     while (n>0) {\n//         m=m*n;\n//         --n;\n//     }\n//     return m;\n// }\n// \n\n\nint factorial(int n) {\n    if (n<2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    \n    if (n == 0) return 1;\n    else return factorial(n-1)*n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n        int a;\n    a=1;\n    if (n==0 or n==1){\n        return 1;\n    }\n    else\n        while(n>1){            \n\n        a=a*n;\n        n=n-1;\n        }\n    return a;\n\n        }\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1; \n\telse return n * factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}   \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int x;\n    while (cin >> x) {\n    int f = factorial(x);\n    cout << f << endl;\n    }\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\nint factorial(int n){\n    int fac;\n    if(n==0)fac=1;\n    else fac=n*factorial(n-1);\n    return fac;\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n    if (x == 1 or x == 0) return 1;    \n    else {\n        return factorial(x-1)*x;\n    }\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n<2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif ( n == 0 ) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n ) {\n    int retvalue;\n    if ( n == 1 ) {\n        retvalue = 1;\n    } else {\n        retvalue = n*factorial(n-1);\n    } \n    return retvalue;\n}\n   \nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n       \n       \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n ) {\n    int retvalue;\n    if ( n == 1 or n == 0 ) {\n        retvalue = 1;\n    } else {\n        retvalue = n*factorial(n-1);\n    } \n    return retvalue;\n}\n   \nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n       \n       \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint aux = 1;\n\tint cont = 0;\n\twhile ( cont < n ) {\n\t\tcont = cont + 1;\n\t\taux = aux * cont;\n\t}\n\treturn aux;\n}\n\nint main() {\n\tint num;\n\twhile ( cin >> num ) {\n\t\tint fact = factorial( num );\n\t\tcout << fact << endl;\n\t}\n}\n",
  "//Factorial recursiu\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    \n    int y;\n    \n    if (n == 0) y = 1;\n    else y = n * factorial (n - 1);\n    \n    return y; \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n    \n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n > 1){\n        return n*factorial(n-1);\n    }else{\n        return 1;\n    }\n}\n\n\nint main (){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int a;\r\n    cin >> a;\r\n    \r\n    cout << factorial(a) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int x) {\n    if (x==0) return 1;\n    \n    else return x*factorial(x-1);\n   \n}\n \nint main() {\n    int n;\n    while (cin>>n) cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n);\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial (n-1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial (n) << endl;\r\n\t}\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n if (n == 0) return 1;\n     else return n*factorial(n-1);\n}\nint main ()\n{\n    int f;\n    cin >> f;\n    cout << factorial(f) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\n\tint f = factorial(n);\n\n\tcout << f << endl;\n\n\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial (n-1);\n        return n*f;\n    }    \n}\n\nint main() {\n    int n;\n    cin >> n;\n    int f = factorial (n);\n    cout << f << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return factorial (n - 1) * n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Calcula el facotrial d'un numero, si es diferent que zero multiplica el numero pel facotiral guardat fins que el factorial sigui igual a zero que tornara 1.\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n    cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n//Calcula el facotrial d'un numero, si es diferent que zero multiplica el numero pel facotiral guardat fins que el factorial sigui igual a zero que tornara 1.\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    int f=1;\n    if (n==1 or n==0) {\n        return f;\n    }\n    else {\n        n= n*factorial(n-1);\n        return n;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n > 1) return n * factorial(n-1);\n    else return 1;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }    \n}   \n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "\r\nint factorial(int n){\r\n    if(n > 1){\r\n        return n*factorial(n-1);\r\n    }\r\n    return 1;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\tint f=n*factorial(n-1);\n\treturn f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n  int x , resultat, y;\n  x=0;\n  y=n+1;\n  resultat=1;\n    while (n!=x){\n          y=y-1;\n          resultat=resultat*y;\n          x=x+1;\n    }\n  return resultat;\n\n}\n\n\nint main () {\n\nint x;\n\ncin >> x;\n\ncout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n}\n}\nint factorial(int n){\n    if (n>1) return factorial(n-1) * n;\n    else return 1;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\nif (n==0) n=1;\nelse n=n*factorial(n-1);\n\n  return n;\n\n}\n\n\nint main () {\n\nint x;\n\ncin >> x;\n\ncout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int f = 1;\n  if (n == 0) {\n    return 1;\n  } else {\n    f = n*factorial(n-1);\n    return f;\n  }\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n    \n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main (){\n    int x,f;\n    cin >> x;\n    f = factorial(x);\n    cout << f << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        n = n * factorial(n-1);\n        return n;\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n!=0) {\n        if (n==1) return 1;\n        else return n*factorial(n-1);\n    }\n    else return 1;\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    \n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    \n}\n\n\nint main() {\n    \n    int x;\n    \n    while (cin >> x) {\n        \n        cout << factorial(x) << endl;\n        \n    }\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n){\r\n     if (n == 0 ) return 1;\r\n     return n* factorial(n-1);\r\n }\r\n \r\n int main() {\r\n int n;\r\n cin >> n;\r\n cout << factorial(n) << endl;\r\n }\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin>>n;\n    int f=factorial(n);\n    cout<<f<<endl;\n}\n",
  "\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n#include <iostream>\nusing namespace std;int factorial(int x) {if (x == 1 or x == 0) return 1;else {return factorial(x-1)*x;}}int main() {int x;cin >> x;cout << factorial(x) << endl;}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*(factorial(n-1));\n}\n\nint main(){\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int g=1;\n    for (int i=1;i<=n; i++){\n        g=g*i;\n        \n    }\n    if (n>0) return g;\n    else if (n==0) return 0;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int b=1;\n    if (n == 0) return 1;\n    else {\n        for (int a=1; a <= n; ++a){\n        b=b*a;\n        }\n    }\n    return b;\n}\n        \n        \n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int g=1;\n    for (int i=1;i<=n; i++){\n        g=g*i;\n        \n    }\n    if (n>0) return g;\n    else if (n==0) return 0;\n    return 0;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int);\r\nint main () {\r\n\tint n;\r\n\tcin>>n;\r\n\tn = factorial (n);\r\n\tcout<<n<<endl;\r\n\t\r\n\t\r\n\t\r\n\treturn 0;\r\n}\r\nint factorial (int n){\r\n\tif (n==0){\r\n\t\tn = 1;\r\n\t}\r\n\telse{\r\n\t\tn = n*factorial (n-1);\r\n\t}\r\n\treturn n;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif ( n > 1 ) { return n*factorial (n-1); }\nelse { return 1 ;}\n}\nint main () {\nint n;\ncin >> n ;\ncout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\n\n\nusing namespace std;\r\n\r\n\n\nint factorial(int n){\n\r\nint x = 1;\r\n\n\r\nif (n == 0) return 1;\n\n\r\n\r\nelse{\n    \n\r\nfor(int i = 1; i <= n; ++i){\n \r\n   \n    \r\nx = x * i;\n \r\n   \r\n\n}\r\n\n}\r\n\nreturn x;\r\n\n}\n\n\r\n\r\nint main() {\r\n\r\n\n\nint d;\r\n\ncin >> d;\n\t\r\n\r\ncout<< factorial(d) << endl;\r\n\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    \n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main () {\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n\nint factorial(int n){\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\t\n\tif ( n == 0 ) return 1 ;\n\t\n\treturn (n * factorial (n - 1));\n}\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n        if (n == 0) return 1;\n        else return n * factorial(n-1);\n}\n        \n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <stdio.h>\r\n#include <math.h>\r\n\r\nint factorial(int n){\r\n\tint f;\r\n\tif (n < 2) return 1;\r\n\tf = n * factorial (n - 1);\r\n\treturn f;\r\n}\r\n\r\n\r\nint main (void){\r\n\tint x, s;\r\n\tscanf (\" %d\", &x);\r\n\ts = factorial(x);\r\n\tprintf (\"%d\", s);\r\n\treturn 0;\r\n}\r\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nint factorial(int n) {\n  if (n != 1) return n * factorial(n - 1);\n  else return 1;\n}\n\nint main() {\n\n  cout << factorial(3);\n\n}\n\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  else return n * factorial(n - 1);\n}\n\nint main() {\n\n  cout << factorial(0);\n  cout << factorial(1);\n  cout << factorial(2);\n  cout << factorial(3);\n\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial (n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int x) {\n    if (x==0) return 1;\n    else return x*factorial(x-1);\n   \n}\n \nint main() {\n    int n;\n    while (cin>>n) cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n==0){\n\t\tn=1;\n\t} else {\n\t\tn = n * factorial(n-1);\n\t} return n;\n}\n\nint main (){\n\tint n;\n\tcin >> n;\n\tint a = factorial(n);\n\tcout << a << endl;\n}\n",
  "//Factorial recursiu\n#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "from jutge import read\n\n\n\ndef factorial (n):\n    if (n == 1): return 1\n    if (n == 0): return 1\n    else: return n*factorial(n-1)\n\n\n\ndef main ():\n    x = read(int)\n    y = factorial(x)\n    print (y)\n\n\nmain ()\n",
  "from jutge import read\n\n\n\ndef factorial (n):\n    if (n == 1): return 1\n    if (n == 0): return 1\n    else: return n*factorial(n-1)\n\n\n\ndef main ():\n    x = read(int)\n    y = factorial(x)\n    print (y)\n\n\nmain ()\n",
  "#include <iostream>\nusing namespace std;\n\nint main(){\n\nint n, m;\n\n while (cin>>n){\nint sum = 0;\nint max1 = 0;\nint max2 = 0;\nint suma =0;\n    while(n>0){ \n        cin>>m;\n\n    sum = sum + m;\n    if(max1 < sum) max1 = sum;\n    suma = suma + m;\n    if(suma < 0) suma = 0;\n    max2=suma;\n        --n;\n    }\n    cout << max1 << \" \" << max2 << endl;\n }\n   \n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n > 1) {\n        return n*factorial(n-1);\n    }\n    else return 1;    \n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int a;\n    while(cin >> a) cout << factorial(a) << endl;\n}\n",
  "/******************************************************************************\n\nWelcome to GDB Online.\nGDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,\nC#, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.\nCode, Compile, Run and Debug online from anywhere in world.\n\n*******************************************************************************/\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<=0) return 1;\n    \n    else return (n*factorial(n-1));\n}\n\n\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==1 or n==0) return 1;\n    n=n-1;\n    return factorial(n)*(n+1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n \n int factorial(int n){\n\t if (n>1) {\n\t\t return n*factorial(n-1);\n\t }\n\t else return 1;\n\t \n }\n int main () {\n\t int n;\n\t cin >> n;\n\t cout << factorial(n) << endl;\n }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1;\n    else {\n      return n * factorial(n-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint res;\n\tif(n==0) {\n\t\tres=1;\n\t}else{\n\t\tres= n*factorial(n-1);\n}\nreturn res;\t\n}\n\n\nint main() {\n\tint n,m;\n\tcin>>n;\n\tm= factorial(n);\n\tcout<<m<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\nint f = 1, i = 0;\nwhile (i < n) {\ni = i+1;\nf = f*i;\ncout << f << endl;\n}\nreturn f;\n}\n\nint main(){\nint n = 0;\ncin >> n;\n\nfactorial (n);\n\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\nint f = 1, i = 0;\nwhile (i < n) {\ni = i+1;\nf = f*i;\n}\nreturn f;\n}\n\nint main(){\nint n = 0;\ncin >> n;\n\nfactorial (n);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nint f=1, i=0;\nwhile (i<n) {\n\ti=i+1;\n\tf=f*i;\n\t}\nreturn f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nint res;\nif(n==0) res=1;\nelse res=n*factorial(n-1);\nreturn res;\n}\n",
  " #include <iostream>\nusing namespace std;\n\n\n\n\nint factorial(int n) {\nint i=1, factorial=1;\nfor (i=1; i<n+1; i++) {\nfactorial*=i;\n}\ncout<<factorial<<endl;\nreturn factorial;\n}\nint main(){\nint n;\ncin>>n;\nfactorial(n);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\nint f;\nif (n==0) f=1;\nelse f=n*factorial(n-1);\nreturn f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint res;\nif(n==0) res=1;\nelse res=n*factorial(n-1);\nreturn res;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nint res;\nwhile (n>=0 and n<=0) {\n\tif (n==0) {\n\t\tres=1;\n\t}\n\telse {\n\t\tres=n*factorial (n-1);\n\t}\nreturn res;\n}\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nint res;\nwhile (n>=0 and n<=0) {\n\tif (n==0) {\n\t\tres=1;\n\t}\n\telse {\n\t\tres=n*factorial (n-1);\n\t}\n}\nreturn res;\ncout<<res<<endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nint res;\nwhile (n>=0 and n<=0) {\n\tif (n==0) {\n\t\tres=1;\n\t}\n\telse {\n\t\tres=n*factorial (n-1);\n\t}\nreturn res;\n}\ncout<<res<<endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\nint res;\n\t\tif (n==0) {\n\t\t\tres=1;\n\t\t}\n\t\telse {\n\t\tres=n*factorial (n-1);\n\t\t}\nreturn res;\n\t}\n\nint main() {\nint x;\ncin>>x;\ncout<<factorial(x)<<endl;\n}\n\n",
  "#include<iostream>\n\nusing namespace std;\nint factorial(int n){\n//pre: n Ã©s un nombre enter entre 0 i 12(ambdÃ³s inclosos).\n//post: fer factorial recursiu de n.\nint f=1,i=0;\n\twhile(i<n){\n\t//Invariant: f=i!\n\n\t\ti= i+1;\n\t\tf=f*i;\n\t}\nreturn f;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint fact;\nif(n == 0) fact = 1;\nelse fact = factorial(n-1)*n;\nreturn fact;\n}\n\nint main(){\n\nint e;\ncin>>e;\nint z;\nz = factorial(e);\ncout<<z<<endl;\n\n\n\n}\n",
  "from jutge import read\n\nfactorial(n):\n\tif n==0: return 1\n\treturn n*factorial(n-1)\n",
  "from jutge import read\n\ndef factorial(n):\n\tif n==0: return 1\n\treturn n*factorial(n-1)\n",
  "#include <iostream>\nusing namespace std;\n\n// Escriviu una funciÃ³ que retorni n! Resoleu aquest problema recursivament.\n\nint factorial(int n) {\n\t// Pre: n es un nombre enter positiu\n\t// Post: Retorna n!\n\n\tint res;\n\tif (n == 0) res = 1;\n\telse res = n * factorial(n-1);\n\treturn res;\n}",
  "#include <iostream>\n\nusing namespace std;\n\n\nint fact(int n)  {\n\t\n\tint res;\n\n\tif (n == 0) res = 1;\n\n\telse res = n * fact(n-1);\n\n\treturn res; \n\n\tcout<<res<<endl;\n}\n\n\nint main() {\n\n\tfact(3);\n\n\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint fact(int n)  {\n\t\n\tint res;\n\n\tif (n == 0) res = 1;\n\n\telse res = n * fact(n-1);\n\n\treturn res; \n\n\t\n}\n\n\nint main() {\n\n\tfact(3);\n\t\n\n\tcout<<res<<endl;\n\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint fact(int n)  {\n\t\n\tint res;\n\n\tif (n == 0) res = 1;\n\n\telse res = n * fact(n-1);\n\n\treturn res; \n\n\t\n}\n\n\nint main() {\n\n\tint z; \n\n\tz = fact(3);\n\n\tcout<<z<<endl;\n\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint fact(int n)  {\n\t\n\tint res;\n\n\tif (n == 0) res = 1;\n\n\telse res = n * fact(n-1);\n\n\treturn res; \n\n\t\n}\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint fact(int n)  {\n\t\n\tint res;\n\n\tif (n == 0){\n\n\t\tres = 1;\n\t} else{\n\t\t res = n * fact(n-1);\n\t}\n\n\treturn res; \n\t\n}\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint fact(int n)  {\n\t\n\tint res;\n\t\n\tif (0â¤ n â¤ 12){\n\t\n\t\tif (n == 0){\n\n\t\t\tres = 1;\n\t\t} else{\n\t\t\t res = n * fact(n-1);\n\t\t}\n\t}\n\treturn res; \n\t\n}\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n)  {\n\t\n\tint res;\n\t\n\t\n\t\n\tif (n == 0){\n\n\t\tres = 1;\n\t} else{\n\t\tres = n * factorial(n-1);\n\t}\n\t\n\treturn res; \n\t\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\nint res;\n\n\nif (n==0) res=1;\nelse res= n * factorial(n-1);\n\nreturn res;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint res;\nif(n==0) res=1;\nelse res =n*factorial(n-1);\nreturn res;\n}\n\nint main(){\nint x=0;\ncin>>x;\nint y=factorial(x);\ncout<<y<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint res;\nif (n==0) {\nres=1;\n}\nelse{\nres=n*factorial(n-1);}\nreturn res;\n}\n\nint main() {\nint a,fact;\ncin>>a;\nfact=factorial(a);\ncout<<fact<<endl;\n}",
  " #include <iostream>\nusing namespace std;\n\n\n\n\nint factorial(int n) {\n  int i;\n  if (n==0) {i=1;}\n  else {i=n*factorial(n-1);}\n  return i;\n}\nint main(){\nint x;\n cin>>x;\n cout<<factorial(x)<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n > 1) return n*factorial(n-1);\r\n\telse return 1;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1); \n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n//Pre: n es un nombre natural\n//Post: te da el factorial de n\n\tint res;\n\tif (n==0) res=1;\n\telse res= n*factorial(n-1);\n\treturn res;\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint total=0;\n\tif(n>1)  total= n*factorial(n-1);\n\telse total=1;\n\treturn total;\n}\n\n\nint main () {\nint x;\ncout<<\"introdueix el valor\"<<\" \";\ncin>>x;\ncout<<factorial(x)<<endl;\n}\n",
  "//P12509\n//Factorial recursiu\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n > 1){\n\t\tn = n * factorial (n-1);\n\t}\n\tif (n == 0 or n == 1) n = 1;\n\treturn n;\n}\n\nint main (){\n\tint n;\n\twhile (cin >> n){\n\t    cout << factorial (n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint res = 0;\n\tif (n==0) res = 1;\n\telse res = n*factorial(n-1);\n\treturn res;\n}\n\nint main () {\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n}\n\t\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\nint f;\r\n\r\nif (n==0) f=1;\r\nelse f= n*factorial(n-1);\r\nreturn f;\r\n}\r\n\r\nint main(){\r\nint n;\r\ncin>>n;\r\n\r\ncout<<factorial(n)<<endl;\t\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n   if(n < 0) return 0;\n   else if(n > 1) return n*factorial(n-1); /* Recursividad */\n   return 1; /* CondiciÃ³n de terminaciÃ³n, n == 1 */\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\nint r;\n\nif (n>=2){\nr=n*factorial(n-1);\n}\n\nelse {\nr= 1;\n}\nreturn n;\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    int r;\n    \n        if (n>=2) {\n            \n            r=n*factorial(n-1);\n        \n        }\n        \n        else {r=1;}\n\nreturn r;\n\n}\n\nint main() {\nint x;\ncin >> x;\ncout <<factorial(x) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int r=1;\n    while (n>=2) {\n        r=r*n;\n        n=n-1;\n        }\n        return r;\n     }\n     int main() {\n     int x;\n     while (cin >> x) {\n        cout << factorial(x)<< endl;\n        }\n    }\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if(n <= 1) return 1;\n  return factorial(n-1)*n;\n}\n\nint main(){\n}",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n < 2) return 1;\n    else return n *= factorial (n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}   \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 2)\n        return n;\n    else\n        return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\r\n     if (n<0)\r\n       return 0;\r\n     else if (n>0)\r\n       return n*factorial(n-1);\r\n\r\nreturn 1;\r\n       \r\n}\r\n\r\nint main () {\r\n    int n;\r\n     cin >> n;\r\n   \r\n     cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==1)\n       return n;\n    else\n      return n*(factorial(n-1));\n}\n\nint main () {\n   int n;\n      cin >> n;\n   cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n if(n==0)\n  return 1;\n else\n  return n*factorial(--n);\n}\n\nint main () {\n int n;\n   cin>>n;\n cout << factorial(n) << endl;\n}\n  \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n if(n==1)\n  return 1;\n else\n  return n*factorial(n-1);\n}\n\nint main () {\n int n;\n   cin>>n;\n cout << factorial(n) << endl;\n}\n  \n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0) return 1;\n\telse return factorial (n-1)*n;\n\t}\n\t\t\nint main(){\n\tint x;\n\t\n\tcin >> x;\n\t\n\tcout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\t\n\tif(n==0)return 0;\n\treturn n*factorial(n-1);\n\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\t\n\tif(n==0)return 1;\n\treturn n*factorial(n-1);\n\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int suma = 1;\n    while (n > 0){\n        suma = suma*n;\n        --n;\n        }\n    return suma;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n * factorial (n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nif (n == 0) return 1;\nelse return n*factorial(n-1);\n}\n\nint main() {\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n==0) return 1;\nelse return n*factorial(n-1);\n}\n\nint main(){\n\nint numero;\ncin>>numero;\nif ((numero>=0) and (numero<=12)){\ncout<<factorial(numero)<<endl;\n\n}\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n == 0) return 1;\nint result = n;\nif (n > 1){\n    n -= 1;\n    result *= factorial (n);\n}\nreturn result;\n}\n\nint main(){\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {  \n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n\t}\n\t\nint main(){\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n\t}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial( int n ){\n    if ( n == 0 ) return 0;\n    else if ( n == 1 ) return 1;\n    else return n * factorial( n - 1 );\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial( n ) << endl;\n} \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\n    if(n==1) return 1;\n    else  return n*factorial(n-1);\n    \n}\n\n\nint main (){\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial( int n ){\n    if ( n == 1 or n == 0 ) return 1;\n    else return n * factorial( n - 1 );\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial( n ) << endl;\n} \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\n    if(n==1) return 1;\n    else  return n*factorial(n-1);\n    \n}\n\n\nint main (){\n\n\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial (int n) {\n    if ( n == 1) return n;\n    else if ( n == 0) return 0;\n    else {\n           return ( n * factorial ( n-1));\n        }\n    }\nint main (){\n    }\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int x){\r\n\tint r=1;\r\n\twhile(x!=0){\r\n\t\tr=r*x;\r\n\t\tx=x-1;\r\n\t}\r\n\treturn r;\r\n}\r\nint main(){\r\n\tint x;\r\n\twhile(cin>>x){\r\n\t\tint r;\r\n\t\tr=factorial(x);\r\n\t\tcout<<r;\r\n\t}\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\n    if(n==1) return 1;\n    else  return n*factorial(n-1);\n    \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int tot = 1;\n    while (n != 0) {\n        tot *= n;\n        -- n;\n    }\n    return tot;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n   int r;\n   if (n == 0) r = 1;\n   else r = n * factorial(n - 1);\n   return r;\n   }\n   \nint main(){\n   int x;\n   cin>>x;\n   cout<<factorial(x)<<endl;\n   }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if(n == 0) return 1;\n    else total = n*factorial(n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n   int factorial (int n){\r\n       if ( n == 1 ) return n;\r\n       else \r\n       return n*factorial (n-1);\r\n       }\r\n   int main(){\r\n       int n;\r\n       cin>>n;\r\n       cout << factorial (n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n   int factorial (int n){\n       if ( n == 0 ) return 1;\n       else \n       return n*factorial (n-1);\n       }\n   int main(){\n       int n;\n       cin>>n;\n       cout << factorial (n) << endl;\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    if (n == 1) return 1;\n    return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) \n{\n\tif(n==1) return n;\n\treturn n*factorial(n-1);\n}\n\nint main()\n{\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) \n{\n\tif(n>1) return n*factorial(n-1);\n}\n\nint main()\n{\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\n    if(n<2) return 1;\n    else  return n*factorial(n-1);\n    \n}\n\nint main (){\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n}\n",
  "//============================================================================\n// Name        : ClasseP1.cpp\n// Author      : \n// Version     :\n// Copyright   : Your copyright notice\n// Description : Hello World in C++, Ansi-style\n//============================================================================\n\n#include <iostream>\nusing namespace std;\n\nint main() {\n    return 0;\n}\n\nint factorial(int n) {\n    return n == 1 ? n : n * factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n     if (n <= 1) return 1;\n     else return n * factorial(n-1);\n  \n}\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n < 0) return 0;\n    else if (n > 1) return n*factorial(n-1);\n    return 1;    \n}\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int i=1;\r\n    int k=1;\r\n    while ( n >= i ){\r\n          k = k * i;\r\n          ++i; \r\n    }\r\n    return k;\r\n}\r\n    \r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n}\r\n         \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int total = n;\n    int i = 1;\n    while ( n > i ){\n        total *= n-i;\n        ++i;\n    }\n    return total;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\nint res = 1;\nfor(int i=n; i>0; --i) {\nres *= i;\n}\nreturn res;\n\n}\n\nint main() {\n\nint n1;\ncin >> n1;\n\nint fact = factorial(n1);\ncout << \"Facotiral: \" << fact << \".\" << endl;\n\n} \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int i = 1;\n    while ( n != 0 ){\n        i = i*n;\n        --n;\n    }\n    return i;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0)\n\treturn 1;\n    else\n\treturn n * factorial (n-1);\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif(n==0) return 1;\nif(n==1) return 1;\nreturn n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int a = 1;\n    int b = 1;\n    while (a <= n) {\n        b = b*a;\n        ++a;\n    }\n    return b;\n}\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial (a) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int a) {\n    \n    if (a==1) return 1;\n    return a*(factorial(a-1));\n}\n    \n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int a) {\r\n    \r\n    if (a==1) return 1;\r\n    return a*(factorial(a-1));\r\n}\r\n    \r\n\r\n  \r\n\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int a) {\r\n    \r\n    if (a==0) return 1;\r\n    return a*(factorial(a-1));\r\n}\r\n    \r\n\r\n  \r\n\r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int a) {\n    \n    if (a==1) return 1;\n    return a*(factorial(a-1));\n}\n    \n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int a) {\r\n    \r\n    if (a==0) return 1;\r\n    return a*(factorial(a-1));\r\n}\r\n    \r\n\r\n  \r\n\r\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n    cin >> n;\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    int m=1;\r\n    if(n>1) m=m*factorial(--n);\r\n    return m;\r\n}    \r\n    \r\n                   \r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(--n);\n}    \n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}    \n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\nif (n==0) return 1;\nelse return n* factorial (n-1);\n}\n\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 2) return n;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    while(cin>> n)cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 2) return n;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin>> n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return n;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    while(cin>> n)cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 2) return n;\n    return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    while(cin>> n)cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    while(cin>> n)cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1)return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n    \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0)return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "int factorial(int n){\r\n    if(n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else {\r\n        return n*factorial(n - 1);\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial( n) << endl;\r\n}\r\n\r\n\r\n         \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n  \n\n           \n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    if (n >= 0 and n <= 12) {\n        \n        int r;\n        if (n = 0) r = 1;\n        else {\n        \n            r = n * factorial(n - 1);\n            return r;\n            \n        }\n        \n    }\n    \n}\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n-1) << endl;\n    \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    if (n >= 0 and n <= 12) {\n        \n        int r;\n        if (n == 0) r = 1;\n        else {\n        \n            r = n * factorial(n - 1);\n            return r;\n            \n        }\n        \n    }\n    \n}\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n-1) << endl;\n    \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n >= 0 and n <= 12) {\n        \n        int r;\n        if (n == 0) r = 1;\n        else r = n * factorial(n - 1);\n        return r;\n             \n    }\n    \n}\n\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    int r;\n    if (n >= 0 and n <= 12) {\n        \n        if (n == 0) r = 1;\n        else r = n * factorial(n - 1);\n\n    }\n    return r;\n    \n}\n\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n    int m = n;\n    while(n > 1) {\n            n -= 1;\n            m = m*n;\n    }\n    return m;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n    \n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int t = 1;\r\n    if(n > 99) {\r\n         t = n/100;\r\n         n = n%100;\r\n    }\r\n    if(n == 1) return t;\r\n    else {\r\n         t = t*n;\r\n         factorial(t*100+n-1);\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n}\r\n    \r\n\r\n\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n > 1) return n*factorial(n-1);\r\n    else if(n == 0) return 0;\r\n    else return 1;\r\n}\r\n\r\nint main() {\r\n    int n, i;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n    \r\n\r\n\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n > 1) return n*factorial(n-1);\r\n    else if(n == 0) return 0;\r\n    else return 1;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n    \r\n\r\n\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n > 1) return n*factorial(n-1);\r\n    return n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n    \r\n\r\n\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n > 1) return n*factorial(n-1);\r\n    return 1;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n    \r\n\r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact = 1;\n    for (int i = 1; i <= n; ++i){\n        fact *= i;\n    }\n    return fact;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    if ((n >= 0) and (n <= 12)) cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n//Prec:0<=n<=12\nif(n==0) return 1;\n\nelse return factorial (n-1)*n;\n}\n\n\n\nint main () {\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int i=1;\n    while(n>0){\n    i=i*n;\n    --n;\n    }\n    return i;\n}\nint main() {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return (n*factorial (n-1));\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int);\n\nint main(){\n    int numero;\n    cin >> numero;\n    \n    cout << factorial(numero) << endl;\n}\n\nint factorial (int n)\n{\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n        \n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n",
  "int factorial (int n) {\n    if (n==0) {\n        return 1;\n    } else {\n        return n*factorial (n-1);\n        }\n    }\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 0;\n    else if (n==1) return n; //cas base\n           \n    return n*factorial(n-1);\n\n}\n\n\nint main() {\n    \n    int num;\n    cin >> num;\n    \n    cout << factorial (num) << endl;\n\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n   \n    if (n==1) return n; //cas base\n           \n    return n*factorial(n-1);\n\n}\n\n\nint main() {\n    \n    int num;\n    cin >> num;\n    \n    cout << factorial (num) << endl;\n\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n   \n    if (n==1) return n; //cas base\n    else if (n==0) return 1; //el factorial de 0 per definicio val 1\n           \n    return n*factorial(n-1);\n\n}\n\n\nint main() {\n    \n    int num;\n    cin >> num;\n    \n    cout << factorial (num) << endl;\n\n}\n\n\n",
  "int factorial(int n){\n    if ( n != 0)\n        return n * factorial(n - 1);\n    else return 1;\n    }\n\n\n\n\n",
  "int factorial(int n){\n    if(n<=1) return 1;\n    else return n*factorial(n-1);\n}    \n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint res = 1;\r\n\tint aux;\r\n\r\n\tif (n == 1) res = 1;\r\n\telse res = n * factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n}\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint res = 1;\r\n\r\n\tif (n != 1) res = n * factorial(n-1);\r\n\r\n\treturn res;\r\n}\r\n\r\n\r\nint main() {\r\n}\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint res = 1;\r\n\r\n\tif (n != 1) res = n * factorial(n-1);\r\n\r\n\treturn res;\r\n}\r\n\r\n\r\nint main() {\r\n\tint test;\r\n\ttest = factorial(5);\r\n\tcout << test << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    }\n\nint main (){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    return n*factorial(n-1);\n    \n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n){\r\n    int f;    \r\n    if (n == 0){ \r\n        n = 1;              \r\n        return n;\r\n    }else{\r\n        f =n*factorial(n-1);\r\n        return f;\r\n    }\r\n}\r\nint main(){\r\n        int n,f;\r\n        cin>>n;\r\n        f = factorial(n);\r\n        cout<<f<<endl;\r\n}\r\n\r\n\r\n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( 1 >= n ) return 1;\n    else return n*factorial(n-1) ;\n    }\n    \nint main () {\n    int valor;\n    cin >> valor ;\n    cout << factorial (valor) << endl;\n    } \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1; // cas base\n    else return n*factorial(n-1); // recursivitat\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int suma = n;\n    if (n == 0) return 1;\n    else suma *= factorial(n-1);\n    return suma;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n)\n{\n    if(n > 1)\n        return n * factorial(n - 1);\n    return 1;\n}\n\nint main()\n{\n}\n        \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n      int factorial(int n){\r\n          if(n==0)return 1;\r\n          \r\n          else{\r\n               return (n * factorial (n-1));\r\n           }\r\n}\r\n       \r\n                   \r\n                   \r\n\n\n",
  " #include <iostream>\r\n using namespace std;\r\n \r\n int factorial(int n){\r\n     if ( n == 0) return 1;\r\n     else return n*factorial (n - 1);\r\n     return n;\r\n }\r\n\n\n",
  " #include <iostream>\r\n using namespace std;\r\n \r\n int factorial(int n){\r\n     if ( n = 0){\r\n            return 1;\r\n            }\r\n     else return ( n* factorial ( n-1));\r\n }\r\n \r\n\n\n",
  " #include <iostream>\r\n using namespace std;\r\n \r\n int factorial(int n){\r\n     if ( n == 0){\r\n            return 1;\r\n            }\r\n     else return ( n* factorial ( n-1));\r\n }\r\n \r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}    \nint main() {\n  \n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\nint main() {\n    cout << factorial(0) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else {\n        int i = 1, prod =1;\n        if (i <= n) {\n            prod *= i;\n            ++i;\n        }\n        return prod;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n\n\n",
  "int factorial(int n) {\n    if(n==0) return 1;\n    return(n*factorial(n-1));\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int aux = 1;\n    if (n == 0) return 1;\n    else {\n        aux = n*factorial(n-1);\n        return aux;\n    }\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    \r\n    if (n==0) return 1;\r\n    if (n>0 and n<=12) n=n*factorial (n-1);\r\n    return n;\r\n}\r\n        \r\n        \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n\n}\n\nint main(){\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int m = n;\n    if (n == 0) n = 1;\n    else for (int i=1; i < m; ++i) n = n*i;\n    return n;\n}\n    \nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n            \n    \n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "int factorial(int n){\r\n    int temp=1;\r\n    if(n<=1)return 1;\r\n    temp=n*factorial(n-1);\r\n    return temp;\r\n}\r\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n\tif(n==0)return 1;\n\telse return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n>1)\n\t\tn*=factorial(n-1);\n\treturn n;\n}\n\nint main(){\n\tint n;\n\twhile (cin>>n)\n\t\tcout<<factorial(n)<<endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 2) return 2;\n    else{\n        return n * factorial(n-1);\n    }\n}\n\nint main(){\n    int x;\n    cin>>x;\n    int y = factorial(x);\n    cout<<y<<endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else if(n == 2) return 2;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin>>x;\n    int y = factorial(x);\n    cout<<y<<endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\n    if (n == 0) {\n        return 1;\n    }\n    else if (n >= 2) {\n        n = n * factorial (n - 1);\n    }\n    return n;\n}\n\n\nint main () {\n     int x;\n     cin >> x;\n     cout << factorial (x) << endl;    \n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n=0) return n+1;\r\n    if (n<2) return n;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return (n * factorial(n - 1));\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0)return 1;\n    else return n*factorial(n-1);\n}\n\nint main (){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "int factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "int factorial(int n){\n    if (n==1 or n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1 or n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\nint factorial(int n)\n{\n    if ( n <= 0 )\n    {\n        return 1;\n    }\n    else \n    {\n        return n * factorial( n - 1 );\n    }\n}\nint main()\n{\n    int n;\n    cin>>n;\n        cout<<factorial(n)<<endl;\n\n}\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n\tint fact = 1;\n\tif (n == 0) return fact;\n\telse if (n > 1) fact = n * factorial(n - 1);\n\treturn fact;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    return factorial(n-1)*n;\r\n    \r\n}\r\n\r\nint main(){\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a) <<endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial (int n) {\n    \n    if ( n == 0 ) return 1;\n    return n * factorial ( n-1 );\n    \n}\nint main () {\n    int a;\n    cin >> a;\n    int s = factorial (a);\n    cout << s << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int r;\n    if (n == 0) r = 1;\n    else r = n*factorial(n-1);\n    return r;\n}\n\n\n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n * factorial(n-1);\r\n}\r\n    \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int r=1;\n  while (n>0) {\n    r=r*n;\n    n=n-1;\n  }\n  return r;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n        int fact = 1;\r\n        fact *= n;\r\n        return factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n        int fact = 1;\r\n        fact *= n;\r\n        if (n == 1) return fact;\r\n        return factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n        if (n == 0) return 1;\r\n        int fact = 1;\r\n        fact *= n;\r\n        if (n == 1) return fact;\r\n        return n * factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n        int a;\r\n        cin>> a;\r\n        \r\n        cout<< factorial(a) <<endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){}\n\n\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\nwhile (0 <= n){\n\tif (n == 0) return 1;\n\telse return n * factorial (n-1);\n\t}\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tint x = factorial (n);\n\tcout << x << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\n\tint res;\n\tif (n <= 1){\n\tres=1;\n\treturn res;\n\t}\n\telse\n\tres=n*factorial(n-1);\n\treturn res;\n\t\t\n\t}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tint fact = factorial (n);\n\tcout << fact << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0 or n==1)return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0 or n == 1)return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0)return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1)return 1;\n    return n = n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int producte=1;\n    for (int i=1; i<=n; ++i){\n        producte *= i;\n    }\n    return producte;\n}\n\nint main(){\n    int n;\n    while (cin >> n){\n        cout <<factorial(n)<<endl;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int x=1;\n    if(n==0) {\n        return 1;\n    }\n    else for (int i=1;n>i;++i) {\n        x=x*i;\n    }\n    return x;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) <<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main (){\n    int n;\n    while (cin >> n){\n        while ((0 >= n) and (n <= 12)){\n            cout << factorial(n) << endl;\n        }\n    }\n}\n        \n   \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "/*\n *  fact2.cc\n *  \n *\n *  Created by Antar Moratona Franco on 23/02/08.\n *  Copyright 2008 __MyCompanyName__. All rights reserved.\n *\n */\n\n#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\tint fact;\n\tif (n!=1) fact= n*factorial(n-1);\n\treturn fact;\n}\n\n\nint main () {\n\t\n}\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {    \r\n    int total=1;\r\n    if (n != 0){\r\n        total*=n;\r\n        --n;\r\n        if (n >= 1) total *= factorial(n);\r\n    return total;\r\n    }\r\n    else return 1;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\n\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n    int factorial(int n){\n    \n        if(n==0) return 1;\n        else return n*factorial(n-1);\n    }\n\nint main (){\n\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\n    int factorial(int n){\n        if(n==0) return 1;\n        return n*factorial(n-1);\n    }\n    \nint main(){\n\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 12) return 0;\n    if (1 < n ) n *= factorial(n-1);\n    return n;\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int i = n - 1;\n    if (n==0 or n==1) n=1;\n     while (i > 1) {\n        n *= i;\n        i -= 1;\n    }\n    return n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\nif (n=0) return 1;\nreturn n*factorial(n-1);\n}\n\nint main () {\n    \n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\nif (n==0) return 1;\nreturn n*factorial(n-1);\n}\n\nint main () {\n    \n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n\tif (n==0) {\n\t  return 1;\n\t}\n\telse {\n\t  return n*factorial(n-1);\n\t}\n}\nint main ( ) {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 0) return 0;\n    else if (n > 1) return n*factorial(n-1);\n    return 1;\n}\n\nint main() {\n    int m;\n    cin >> m;\n    cout << factorial(m) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n - 1);\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n    int factorial (int n) {\n        if (n == 0) return 1;\n        return (n * factorial (n - 1));\n    }\n    \n    int main() {\n        int n;\n        cin >> n;\n        cout << factorial (n) << endl;\n    }\n      \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n)\n{\n    if (n==0)\n    {\n    return 1;\n    }\n    else\n    {\n        return n*factorial(n-1);\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n     if (n == 0) {\n          return 1;\n     }\n     else {\n          n = n*factorial(n - 1);\n     }\n}\nint main () {\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n     if (n == 0) {\n          return 1;\n     }\n     else {\n          n = n*factorial(n - 1);\n     }\n}\nint main () {\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n     if (n == 0) return 1;\n     else n = n*factorial(n - 1);\n}\nint main () {\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n     if (n == 0) return 1;\n     else return n = n*factorial(n - 1);\n}\nint main () {\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\nif (n==0){return 1;}\r\nelse return n*factorial (n-1);}\r\n\r\nint main () {\r\n    \r\n}\r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\nint x;\nif (n == 0) x = 1; \nelse x = n*factorial (n - 1); \nreturn x;\n}\n\n\n\n\nint main (){\nint j;\ncin >> j;\ncout << factorial (j) <<endl;\n\n}\n\n\n",
  "int factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==1 or n==0) return 1;\n    else n=n*factorial(n-1);\n    return n;\n}\nint main(){\n    int a;\n    cin>>a;\n    cout<<factorial(a)<<endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n\tif(n==0)return 1;\n\telse{\n\t\treturn n*factorial(n-1);\n\t}\t\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n ) {\n    int x;\n    x = 1;\n    while (n>0) {\n       x=x*n;\n       --n;\n       }\n       return x;\n  }\n       \nint main () {\n    int n,z;\n    cin>>n;\n    z= factorial (n);\n    cout<< z <<endl;\n    }    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n) {\n        if (n!=0) {\n        return n*factorial(n-1);\n        }\n        else {\n        return 1;\n        }\n    } \n        \nint main ()  {\n        int n,z,y;\n        cin>>n;\n        z= n*factorial(n-1);\n        y= 1;\n         if (n!=0) {\n         cout << z <<endl;\n         }\n         else {\n         cout << y<<endl;\n         }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x){\n\tif (x == 0) return 1;\n\telse return x * factorial(x - 1);\n}\n\nint main(){\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\nint r=1;\nif (n==0){\n    return 1;\n}else{\n   r=n*factorial (n-1); \n    }\n    return r;\n}\nint main (){\nint x;\ncin >>x;\ncout<< factorial (x)<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\t\r\n\t\r\nint main (){\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\t\r\n\t\r\nint main (){\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n==1 or n==0) return 1;\n    else return n*factorial(n-1);\n}\n    \n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n < 2) return 1;\n  else return n*factorial(n-1);\n}\nint main(){\n    int x;\n    cin >> x;\n    \n    cout << factorial (x) << endl;  \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int f){\n if(f==0){ \n  return f;\n }\n else {\n  return f*factorial(f-1);\n } \n}\nint main(){}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n if(n==0){ \n  return n;\n } else {\n    return n*factorial(n-1);\n   }  \n}\nint main(){\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n if(n==0){ \n  return n;\n } else {\n    return n*factorial(n-1);\n   }  \n}\nint main(){}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n if(n==0){ \n  return 1;\n } else {\n    return n*factorial(n-1);\n   }  \n}\nint main(){}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==0) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n    }\nint main(){\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0)  return 1;\n        else return n*(factorial(n-1));\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n    }\n        \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n    }    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  \n  if(n==0) return 1;\n  return n * factorial(n-1);\n  }\n  \n int main(){\n \n int n;\n cin>>n;\n factorial(n);\n\n } \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    if (n==0) return 1; \n    return n*factorial (n-1);\n}\n\nint main () {\n    \n  int k;\n  cin >> k; \n    \n    cout << factorial (k) << endl;\n}\n\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int r;\n    if ( n == 0) r = 1;\n    else r = n * factorial( n-1);\n    return r;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n       \n   \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return  n* factorial(n-1); \n}\n        \n        \n    \nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n        \n            \n        \n\n\n",
  "int factorial (int n){\n    if (n==0)return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n  for (int i=n; i>0; --i){ \n    n *= factorial(n-1);\n  }\n  return n;\n}\n\nint main() {\n  int n1;\n  cin >> n1;\n  int fact = factorial(n1);\n  cout << \"Factorial: \" << fact << \".\" << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  n *= factorial(n-1);\n  return n;\n}\n\nint main() {\n  int n1;\n  cin >> n1;\n  int fact = factorial(n1);\n  cout << \"Factorial: \" << fact << \".\" << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  n *= factorial(n-1);\n  return n;\n}\n\nint main() {\n  int n1;\n  cin >> n1;\n  int fact = factorial(n1);\n  cout << \"Factorial: \" << fact << \".\" << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  return n * factorial(n-1);\n}\n\nint main() {\n  int n1;\n  cin >> n1;\n  int fact = factorial(n1);\n  cout << \"Factorial: \" << fact << \".\" << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n==0) return 1;\nreturn n*factorial(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    cout<<n<<endl;\n    if (n>=0 and n>=12){\n        if (n==0 or n==1) return 1;\n        else return n*factorial(n-1);\n    } else return 2;\n}\n\nint main(){\n    int n;\n    cin>>n;\n    factorial(n);\n}    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1) return 1;\n        else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}    \n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    int r;\n    if (n == 0 ) r = 1;\n    else r = n*factorial(n-1);\n    return r;\n}\n\nint main() {\n    int a;\n    cin >> a;\n    int f = factorial(a);\n    cout << f << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) {\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n        \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n        \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n        if (n == 1) return n;\n        else {\n            n = n * factorial (n-1);\n        }\n    }\n    \n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n    \n           \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n        if (n <= 1) return n;\r\n        else {\r\n            n = n * factorial (n-1);\r\n        }\r\n    }\r\n    \r\n\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n}\r\n\r\n    \r\n           \r\n\r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 1) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial (x) << endl;\r\n}\r\n    \r\n        \n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial (x) << endl;\r\n}\r\n    \r\n        \n\n",
  "#include <iostream>\nusing namespace std;\n  int factorial(int n) {\n  int f=1;\n  while (n>1){\n  f*=n;\n  --n;\n  }\n  return f;\n  }\n  \n  int main() {\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n  }\n\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial (n - 1);\n\n}\n\nint main() {\n\tint x;\n\tcin>> x;\n\tcout<< factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n//Retorna n!\n//Pre: 0 <= n <= 12\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n//Retorna n!\n//Pre: 0 <= n <= 12\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n//Retorna n!\n//Pre: 0 <= n <= 12\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n//Retorna n!\n//Pre: 0 <= n <= 12\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n   if ((n>=0) && (n<=12))\r\n    {\r\n    if(n<2) return 1;\r\n    return n*factorial(n-1);\r\n    }\r\n    return 0;\r\n}\r\nint main(){\r\n    int a,b;\r\n    cin>>a;\r\n    b=factorial(a);\r\n    cout<<b<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n){\r\n    int tmp;\r\n     if (n > 1) tmp = n*(factorial (n - 1));\r\n     else tmp = n;\r\n    return tmp;\r\n}\r\n\r\n int main(){\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n){\r\n    int tmp;\r\n     if (n == 0) return 1;\r\n     else if (n > 1) tmp = n*(factorial (n - 1));\r\n     else tmp = n;\r\n     return tmp;\r\n}\r\n\r\n int main(){\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n\n\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1){\n        return 1;\n    }else{\n        return n*factorial(n-1);\n    }\n}\n\nint main(){\nint x;\ncin>>x;\nint f=factorial (x);\ncout<<f<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n * factorial (n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n\t\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0){\n        return 1;\n    }else{\n        return n*factorial (n-1);\n    }\n}\nint main (){\n    int n;\n    cin>>n;\n    cout<<factorial(n);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\t\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n - 1); \n\n}\n\nint main() {\t\n\n\tint n;\n\tcin >> n;\n\n\tcout << factorial(n) << endl;\n}\n\n\n\n",
  "#include<iostream>\nusing namespace std; \nint factorial(int n){\n  if (n<2)return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) <<endl;\n}\t\n\n\n",
  "// PROGRAMA FACT2\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1) return 1;\n    else return (n*factorial(n-1));\n    }\n    \nint main(){\n    int n;\n    while(cin >> n){\n        if((n>=0) and (n<=12)){\n            cout << \" factorial(\" << n << \") = \" << factorial(n) << endl;\n        }\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    int producte=1;\n    producte*=n*factorial(n-1);\n    return producte;\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 1) return 1;\n    else return n * factorial (n-1);\n    }\n    \nint main () {\n     int n;\n     cin >> n;\n     cout << factorial (n) << endl;\n     }    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n <= 1) return 1;\n    else return n * factorial (n-1);\n    }\n    \nint main () {\n     int n;\n     cin >> n;\n     cout << factorial (n) << endl;\n     }    \n\n\n",
  "int factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return factorial(n-1);\r\n}\n\n",
  "int factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n * factorial(n-1);\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0) return 1;\n    if (n==1) return 1;\n    n=n*factorial(n-1);\n    return n;\n    }\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n    }\n    \n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    int r;\n    if (n == 0) r=1;\n    else r = n * factorial(n-1);\n    return r;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n){\nif (n==0) return 1;\nelse return n*factorial (n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1;\n    else return n * factorial (n-1);\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "int factorial(int n) {\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial (int n){\r\n    if (n == 1) return 1;\r\n    return n*factorial (n - 1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\n \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial (int n){\r\n    if (n == 0) return 0;\r\n    if (n == 1) return 1;\r\n    return n*factorial (n - 1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n} \r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial (int n){\n    if (n <= 1) return 1;\n    return n*factorial (n - 1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n} \n\n\n\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\n\nusing namespace std;\n\nint factorial(int n){\n\n\tif(n==1)return 1;\n\telse return n*factorial(n-1);\n\n}\n\nint main(){\n\n\t\n\n}\n\n\n\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\n\nusing namespace std;\n\nint factorial(int n){\n\n\tif(n==2)return 2;\n\telse return n*factorial(n-1);\n\n}\n\nint main(){\n\n\tint n;\n\tcin >> n;\n\tcout << factorial(n)<<endl;\n\n}\n\n\n\n",
  "#include <iostream>\n#include <cmath>\n#include <string>\n\nusing namespace std;\n\nint factorial(int n)\n{\n\tif(n<2)\n\t\treturn 1;\n\telse\n\t\treturn n*factorial(n-1);\n}\n\nint main(){\n\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\n}\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n >= 0 and n <= 12) {\r\n\t\tif (n == 0) return 1;\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n >= 0 and n <= 12) {\r\n\t\tif (n == 0) return 1;\r\n\t\telse return n * factorial(n - 1);\r\n\t}\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\t\tif (n == 0) return 1;\r\n\t\treturn n * factorial(n - 1);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n*factorial(n - 1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 1 ) return 1;\n    else return n * factorial(n-1);\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int fac;\n    if (n == 1) fac = 1;\n    else fac = n*factorial(n-1);\n    return fac;\n}\n\nint main() {}\n    \n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    else {\n        return n * factorial (n-1);\n    \n    \n    }\n\n\n\n} \n\nint main () {\n\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return n+1;\n    else if (n<2) return n;\n    else return n* factorial(n-1);\n    }\nint main () {\n    int n;\n    cin >>n;\n    cout <<factorial(n)<<endl;\n    }\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    else if (n<=2) return n;\r\n    else return n* factorial(n-1);\r\n    }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int x){\r\n\tint r=1;\r\n\tint aux=x;\r\n\twhile (x!=0){\r\n\t\tr=r*x;\r\n\t\tx=x-1;\r\n\t}\r\n\treturn r;\r\n}\r\n\r\nint main(){\r\n\tint x;\r\n\twhile (cin>>x){\r\n\t\tint r;\r\n\t\tr=factorial(x);\r\n\t\tcout<<r<<endl;\r\n\t}\r\n}\r\n\t\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int x){\r\n\tint r=1;\r\n\tint aux=x;\r\n\twhile ((x!=0)and(x<=12)){\r\n\t\tr=r*x;\r\n\t\tx=x-1;\r\n\t}\r\n\treturn r;\r\n}\r\n\r\nint main(){\r\n\tint x;\r\n\twhile (cin>>x){\r\n\t\tint r;\r\n\t\tr=factorial(x);\r\n\t\tcout<<r<<endl;\r\n\t}\r\n}\r\n\t\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int x){\r\n\tint r;\r\n\tif (x==0){\r\n\t\tr=1;\r\n\t}\r\n\telse{\r\n\t\tr=x*factorial(x-1);\r\n\t}\r\n\treturn r;\r\n}\r\n\r\nint main(){\r\n\tint x;\r\n\tint r;\r\n\tcin>>x;\t\r\n\tr=factorial(x);\r\n\tcout<<r<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n < 2) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 0;\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n){\n\n    while(n>0){\n        \n        n*=n-1;\n  \n    }   \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\t\n\tint factorial(int n) {\n\t\tif (n == 0) return 1;\n\t\treturn n* factorial(n-1);\n \t}\n\n\tint main () {\n\t\tint n;\n\t\tcin >> n;\n\t\tint suma = factorial(n);\n\t\tcout << suma << endl;\n\t}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 1) return n;\r\n    else return n *= factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else {\n        n=factorial(n-1)*n;\n    }\n    return n;\n    \n}\n\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial (n-1);\n}\n\nint main () {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n if (n==0) return 0;\r\n else if (n==1) return 1;\r\n else return n*factorial(n-1);\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n if (n>1) return n*factorial (n-1);\r\n else return 1;\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n} \n     \n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int num;\n    while ( cin >> num) {\n        cout << factorial(num) << endl;\n    }\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\nif (n==0) return 1;\nelse return n*factorial(n-1);\n}\nint main(){\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n){\r\n if (n==0) return 1;\r\n else return n*factorial(n-1);\r\n}\r\nint main()\r\n{\r\n\r\n\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0)return 1;\n    if (n==1)return 1;\n    return (factorial(n-1)*n);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    n = n*factorial(n-1);\r\n    return n;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    if (n==0)\n    return 1;\n    else {\n    return n*factorial(n-1);\n    }\n}\nint main(){\n    int n;\n    cin>>n;\n    int s=factorial (n);\n    cout<<s<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0)return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main(){\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n\n\n",
  "int factorial (int n){\n    if (n==0) return 1;\n    return n*factorial (n-1);\n}\n\n\n",
  "int factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n} \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   if (n==0) //cas_Base\n   return 1;\n   else (n>=1 and n<=12);\n   n=n*factorial(n-1);\n   return n;\n   }\n\nint main(){\n   int n;\n   cin >> n;\n   cout << factorial(n) << endl;\n} \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   if (n==0) //cas_Base\n   return 1;\n   else (n>=1 and n<=12);\n   n=n*factorial(n-1);\n   return n;\n   }\n\nint main(){\n   int n;\n   cin >> n;\n   cout << factorial(n) << endl;\n} \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(--n);\n}\n\nint main() {\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int p = 1;\n    for ( int i = 0; i < n; ++i) {\n     p = p * (n - i);\n    }\n    return p; \n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl; \n    \n}\n\n\n",
  "int factorial(int n) {\n    if (n==0)return 1;\n    else return n*factorial(n-1);\n}\n#include <iostream>\nusing namespace std;\nint main () {\n    int x;\n    while (cin >> x)cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    int r;\n    if (n == 0) r = 1;\n    else r = n*factorial(n-1);\n    return r;\n}\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return (n*(factorial(n-1)));\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 0;\n    if (n == 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact_aux(int n, int m) {\n    if (n < 2) return m;\n    else return fact_aux(n - 1, n*m);\n}\n\nint factorial(int n) {\n    return fact_aux(n, 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else if (n == 1) return 1;\n    else if (n == 2) return 2;\n    return n*factorial(n-1);\n}\n\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n -1);\n}\n\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\n#include <cmath>\n#include <string>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return factorial(n-1)*n;\n}\n     \n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) n = 1;\n    else if (n==1) n=1;\n    else {\n        n *=factorial(n-1);\n    }\n    return n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout <<factorial(n) << endl;\n}\n\n    \n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\n    if(n==0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//funcion que calcula recursivamente un factorial\r\n\r\nint factorial(int n){\r\n\r\n\tint c=1;\r\n\r\n\twhile (n!=0) {\r\n\r\n\t\tc*=n;\r\n\t\t--n;\r\n\t}\r\n\r\n\treturn c;\r\n\r\n\r\n}\r\n\r\n\r\n\r\nint main () {  //funcion principal del programa\r\n\r\nint a;\r\n\r\ncin>>a;\r\n\r\nint b=factorial (a);\r\n\r\ncout<<b<<endl;\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//funcion que calcula recursivamente un factorial\r\n\r\nint factorial(int n){\r\n\t\r\n\tint c;\r\n\t\r\n\tif(n==0) {\r\n\t\treturn 1;\r\n\t}else{\r\n\t\tc=n*factorial (n-1);\r\n\t\treturn c;\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\nint main () {  //funcion principal del programa\r\n\r\nint a;\r\n\r\ncin>>a;\r\n\r\nint b=factorial (a);\r\n\r\ncout<<b<<endl;\r\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int f;\n    \n    if (n == 0){\n        n = 1;\n        return n;\n    }else{\n        f =  n*factorial(n-1);\n        return f;\n    }\n}\n\nint main(){\n    int n,f;\n    cin >> n;\n    f = factorial(n);\n    cout<<f<<endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\n    if (n==0) return 1;\n    \n    else return n * factorial (n-1);\n    \n    }\n    \nint main(){\n    \n    int n;\n\n    cin >> n;\n    \n    cout << factorial (n) << endl;\n    \n    }\n\n    \n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial (int n){\r\n    if (n==0) return 1;\r\n    else return n*factorial (n-1);\r\n}\r\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\n    if (n == 1){\n    \n        return 1;\n    }\n    \n    else return n * factorial(n-1);\n    \n    }\n   \n int main(){\n \n int x;\n \n cin >> x;\n \n cout << factorial(x) <<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        for (int i = n - 1; i >= 1; --i) {\n            n = n*i;\n        }\n        return n;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial( int n ){\n    return n * factorial ( n - 1 );\n}\n\nint main (){\n}\n\n\n",
  "int factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial( int n ){\n    if (n <= 1) return n;\n    return n * factorial ( n - 1 );\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial ( n ) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial( int n ){\n    if (n <= 1) return 1;\n    return n * factorial ( n - 1 );\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial ( n ) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif ( n == 0 ) return 1;\n\telse{\n\t\t return n * factorial(n-1);\n\t}\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tint a = factorial(n);\n\tcout << a << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0) return 1;\n  else return n * factorial(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n\tif (n==0) {\n\t\treturn 1;\n\t}else{\n\t\treturn n*factorial(n-1);\n\t}\n}\n\n#include <iostream>\nusing namespace std;\nint main () {\n\tint x=7;\n\tfactorial(x);\ncout<<x<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int r;    \n    if (n == 0) r = 1;\n    else r = n*factorial(n-1);\n    return r;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\treturn n *factorial (n -1);\n}\n\nint main () {\n\tint x;\n\tcin >> x;\n\tcout << factorial (x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return 1;    \n    else return n*factorial(n-1);    \n}\n\nint main() {\n    int x;   \n    cin >> x;   \n    cout << factorial(x) << endl;    \n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int f = 1;\r\n    while(n > 1)  {        \r\n        f *= n;\r\n        --n;\r\n    }\r\n    return f;\r\n}\r\n\r\n\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n  int factorial(int n) {\r\n        int r;\r\n        if (n==0) r=1;\r\n        else r=n*factorial(n-1);\r\n        return r;\r\n    }\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n - 1) * n;\n    \n}\n\nint main () {\n\n    int m, prod;\n    cin >> m;\n    \n    prod = factorial(m);\n    cout << prod << endl;\n    \n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    \n    return n*factorial(n-1);\n}\n\nint main() {\n    for (int i = 0; i <= 12; ++i) {\n        cout << \"El factorial de \" << i << \" es \" << factorial(i) << endl;\n    }\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    \n    return n*factorial(n - 1);\n}\n\n\nint main() {\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    \n    return n*factorial(n - 1);\n}\n\n\nint main() {\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    \n    return n*factorial(n - 1);\n}\n\n\nint main() {\n    for (int i = 1; i <= 12; ++i) {\n        cout << \"Factorial de: \" << factorial(i) << endl;\n    }\n}\n\n\n",
  "//Resoleu aquest problema recursivament retorni factorial.\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int N=1;\n    if (n!=0){\n        N=n*factorial(n-1);\n    } else {\n        N=1;\n    }\n    return N;\n}\n\nint main () {\n\n    int n,m;\n    cin>>n;\n    m= factorial(n);\n    cout<<m<<endl;\n\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    \r\n    if (n==0) return 1;\r\n    return n*factorial (n-1);\r\n}\r\n\r\nint main (){}\r\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if( n==1 ) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if( n==0 ) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\n    if (n==0){\n        return 1;\n    }\n    else if(n>=1 and n<=12){\n        return (n*factorial(n-1));\n    }\n    else{ return 0;\n    }\n\n}\n\nint main(){\n\n    int x;\n    \n    cin>>x;\n    \n    cout<<factorial(x)<<endl;\n    \n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n>0) return n*factorial (n-1);\n    return 1;\n}    \n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n>0) return n*factorial (n-1);\n    return 1;\n}    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) \n        return 1;\n    else\n        return n * factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) \n        return 1;\n    else\n        return n * factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n < 0) return 0;\n\telse if (n > 1) return n * factorial(n - 1);\n\treturn 1;\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0)\n        return 1;\n    else \n        return n*factorial(n-1);\n}\n       \n        \n\n\n\n\n",
  "int factorial (int n) {\n    if (n <= 1) return 1;\n    else return n*factorial (n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n\n    int sum=n;\n    --n;\n    while ( n > 0 ) {\n    sum *= n;\n    --n;\n}\nreturn sum; \n}\n   \nint main () {\n\n    int x;\n    cin >> x;\n    cout << factorial (x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n    if ( n > 0 )return n*factorial(n-1);\n    else return 1;\n \n}\n   \nint main () {\n\n    int x;\n    cin >> x;\n    cout << factorial (x) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n}\r\n\n\n",
  "int factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n-1);\n}\n\n\n",
  "int factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==1) return 1;\n    else return n * factorial(n-1);\n}\n        \n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n * factorial(n-1);\n}\n        \n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==1) return 1;\n    else return (n*factorial(n-1));\n}\n\nint main() {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "int factorial(int n) {\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n>1) return n*factorial (n-1);\n    return 1;\n}\n\nint main(){\n    cout << \"introdueix un natural: \";\n    int natural;\n    cin >> natural;\n    cout << \"El factorial de \" << natural << \" es \" << factorial(natural) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int t;\n    t = n -1;\n    if (t <= 0) return 1;\n    else{\n        n = n - 2;\n        return (n + 2) * t * factorial(n);\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n-1);\n}\n\n\n",
  "int factorial(int n){\r\n    int prod=1;\r\n    if(n>=1){\r\n             prod=prod*n;\r\n             --n;\r\n             }\r\n    factorial(n);\r\n}\r\n\r\n\n\n",
  "int factorial(int n){\r\n    int prod=1;\r\n    if(n>=1){\r\n             prod=prod*n;\r\n             --n;\r\n             factorial(n);\r\n             }\r\n    \r\n}\r\n\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int p=1;\r\n    int i=1;\r\n    if(n==0){\r\n             p=0;\r\n             }\r\n    else if(n>i){\r\n         p=p*i;\r\n         ++i;\r\n         factorial(n);\r\n         }\r\n    else{\r\n         p=p*n;\r\n         }\r\n         return p;\r\n}\r\nint main(){\r\n    \r\n    int n;\r\n    while(cin>>n){\r\n    cout<<factorial(n)<<endl;\r\n}\r\n}\r\n\n\n",
  " #include<iostream>\r\n using namespace std;\r\n      \r\nint factorial(int n){\r\n    int p=1;\r\n    if(n!=1){\r\n                \r\n                p=n*factorial(n-1) ;\r\n                --n;\r\n               }\r\n    else{\r\n               p=p*n;\r\n               }\r\n               return p;\r\n               } \r\n                  \r\n\r\n    \r\n int main(){\r\n     int n;\r\n\r\n     while(cin>>n){\r\n                   cout<<factorial(n)<<endl;\r\n                   }\r\n                   }\r\n\n\n",
  " #include<iostream>\r\n using namespace std;\r\n      \r\nint factorial(int n){\r\n    int p=1;\r\n    if(n!=1){\r\n                \r\n                p=n*factorial(n-1) ;\r\n                --n;\r\n               }\r\n    else{\r\n               p=p*n;\r\n               }\r\n               return p;\r\n               } \r\n                  \r\n\r\n    \r\n int main(){\r\n     int n;\r\n\r\n     while(cin>>n){\r\n                   cout<<factorial(n)<<endl;\r\n                   }\r\n                   }\r\n\n\n",
  " #include<iostream>\r\n using namespace std;\r\n      \r\nint factorial(int n){\r\n\r\n     if (n<0)\r\n       return 0;\r\n     else if (n>0)\r\n       return n*factorial(n-1);\r\n\r\nreturn 1;\r\n       \r\n}\r\n\r\n    \r\n int main(){\r\n     int n;\r\n\r\n     while(cin>>n){\r\n                   cout<<factorial(n)<<endl;\r\n                   }\r\n                   }\r\n\n\n",
  "int factorial (int n){\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if (n=0) return 1;\n    n=n*factorial(n-1);\n    return n;\n    }\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 0;\n    if (n == 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 or n > 12) return 0;\n    if (n == 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n  if (n<=1) return 1;\n  \n  else return n*factorial(n-1);\n  \n}\n\nint main() {\n\n  int n;\n  \n  while (cin >> n) {\n  \n    cout << factorial(n) << endl;\n    \n  }\n  \n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int x;\n    if (n == 0) x = 1;\n    else if (n > 0) x = n*factorial(n-1);\n    return x;\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n    }\n\n\n",
  "int factorial(int n)\n{\n\tif(n>0) \n\t{\n\t\tint fact = n*factorial(n-1);\n\t\treturn fact;\n\t}\n\telse return 1;\n}\n\n\n\n\n",
  "int factorial(int n){\r\n    if (n<2) n=1;\r\n    else { n*= factorial (n-1);\r\n    }\r\n    return n;\r\n}\r\n\n\n",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial(int n){\n    if ((n== 0) or (n==1)){\n        return(1);\n    }\n    else return (n*factorial(n-1));\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "\r\n//Exercici 4.1:  Factorial recursiu\r\n#include <iostream>\r\n#include <string>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    \r\n    if (n==0) return 0;\r\n    else{\r\n         if (n==1) return 1;\r\n         else return n * factorial(n-1);\r\n         \r\n    }\r\n}\r\n\r\nint main(){\r\n    \r\n    int n;\r\n    while(cin>>n) cout << factorial(n) << endl;\r\n}\r\n    \r\n       \r\n\n\n",
  "\r\n//Exercici 4.1:  Factorial recursiu\r\n#include <iostream>\r\n#include <string>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    \r\n    if (n==0) cerr << \"factorial de 0?\";\r\n    else{\r\n         if (n==1) return 1;\r\n         else return n * factorial(n-1);\r\n         \r\n    }\r\n}\r\n\n\n",
  "\r\n//Exercici 4.1:  Factorial recursiu\r\n#include <iostream>\r\n#include <string>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    \r\n    if (n==0) return 0;\r\n    else{\r\n         if (n==1) return 1;\r\n         else return n * factorial(n-1);\r\n         \r\n    }\r\n}\r\n\n\n",
  "\r\n//Exercici 4.1:  Factorial recursiu\r\n#include <iostream>\r\n#include <string>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    \r\n    if (n==0) return 1;\r\n    else return n * factorial(n-1);\r\n   \r\n}\r\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n\tif(n==0) return 1;\n\telse return n*factorial(n-1);\n}\nint main(){\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    int x = factorial(n);\n    cout << x << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n > 0) return n*factorial(n-1);\r\n    else return 1;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif(n==0) return 1;\nelse return n*factorial(n-1);\n}\nint main() {\n\n\nint x;\ncin >> x;\ncout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0)\r\n        return 1;\r\n    else {\r\n       return n*factorial(n-1);\r\n        }\r\n    }\r\n\r\nint main(){\r\n\tint N;\r\ncin>>N;\r\ncout<< \"!\"<< N <<\"=\"<<factorial(N)<<endl;\r\n}\r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n * factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    \n    else return n*factorial(n-1);\n    }\n\nint main(){\n\nint x;\ncin>>x;\n\ncout<<factorial(x)<<endl;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if(n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res = 1;\n    if (n > 0) {\n        res = factorial (n - 1);  \n    }\n    return res;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res = 1;\n    if (n > 0) {\n        res = res * factorial (n - 1);  \n    }\n    return res;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res;\n    if (n == 0) res = 1;\n    if (n > 0) {\n        res = n * factorial(n - 1);  \n    }\n    return res;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    double res = factorial(n);\n    cout << res << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}    \r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;    \r\n}\r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n==0) {\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\nint main() {\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int x){\n\n    if ( x==1 ) return 1;\n    else return x*factorial(x-1);\n    \n}\n\nint main(){\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n    \n        \n\n\n",
  "int factorial(int x){\n\n    if ( x==1 ) return 1;\n    else return x*factorial(x-1);\n    \n}\n\n    \n        \n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int x){\n\n    if ( x==0 or x==1 )return 1; \n    else return x*factorial(x-1);\n    \n}\n\nint main(){\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n    \n        \n\n\n",
  "int factorial (int n) {\n    if (n==0) return 1;\n    return factorial (n-1)*n;\n\n\n\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n if (n==0){\n return 1;\n }\n return n*factorial(n-1);\n }\n \n int main () {\n  int y;\n  cin >> y; \n  int b = factorial(y);\n  cout << b << endl;\n }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n if (n==0){\n return 1;\n }\n return n*factorial(n-1);\n }\n \n int main () {\n  int y;\n  cin >> y; \n  int b = factorial(y);\n  cout << b << endl;\n }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n   if (n <= 1)\n       return 1;\n   else\n       return n*factorial(n-1);\n}\n\nint main() {\n   int x;\n   cin >> x;\n   cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n > 1) {\n        n = n * factorial(n -1);\n        return n;\n    }\n    return 1;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "int factorial (int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n* (factorial(n-1));\n}\n\nint main(){\n   int n;\n   cin >> n;\n   int k = factorial(n);\n   cout << k << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nif (n==0) return 1;\nreturn n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n>1) return n*factorial(n-1);\n    else return 1;\n}\n\nint main(){\n    int x;\n    cin >> x;\n    int s = factorial(x);\n    cout << s << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    int s = 1;\n    if (n > 0 and n <= 12){\n        while (n != 0){\n            s*= n;\n            --n;\n        }\n        return s;\n    }\n    return false;\n}\n\nint main(){\n/*    int a;\n    cin >> a;\n    a = factorial(a);\n    cout << a << endl;\n*/\n}   \n\n\n",
  "# include <iostream>\n# include <cmath>\nusing namespace std;\n\nint factorial (int n) {\n\n    int f=1;\n    while (n > 1) {\n    f = f*n;\n    n = n-1;\n    }\n    return f;\n}\n\nint main () {\n\n    int m;\n    while (cin >> m) {\n        cout << m << \" ! = \" << factorial(m) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1; //caso base\n    else return n*factorial (n-1); //caso recursivo\n}\n\nint main(){\n/*  int a;\n    cin >> a;\n    a = factorial(a);\n    cout << a << endl;\n*/\n}   \n\n\n",
  "    int factorial(int n){\r\n    \r\nint a;\r\na=n;\r\nif (a=0){\r\n n=n+1;        \r\nreturn n;}\r\n\r\nelse {\r\nwhile (a>1) {\r\n    a=a-1;\r\n    n=n*a;}\r\n    return n;} \r\n    \r\n}\r\n \r\n\n\n",
  "int factorial(int n){  \r\nint a;\r\na=n;\r\nif (a==0){\r\n n=n+1;        \r\n}\r\n\r\nelse {\r\nwhile (a>1) {\r\n    a=a-1;\r\n    n=n*a;}\r\n    } \r\n    return n;\r\n}\r\n\n\n",
  "int factorial(int n){\n\tif (n > 1) return n*factorial (n-1);\n\telse return 1;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) {return 1;}\n\telse if (n>0) {return n=n*factorial(n-1);}\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n=1) return n;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0) return n+1;\r\n    else if (n<2) return n;\r\n    else return n*factorial(n-1);\r\n}\r\nint main() {\r\n    int x;\r\n    cin >>x;\r\n    int y = factorial(x);\r\n    cout << y <<endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n < 2) return 1;\n    else return n = n*factorial(n-1);\n}\n\nint main() {\n    int m;\n    cin >> m;\n    cout << factorial(m) << endl;\n}\n\n    \n    \n    \n    \n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n < 2) return 1;\n    else return n *= factorial (n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}   \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 1 or n == 0) return 1;\n    else return n*factorial(n-1);\n\n}\n\nint main() {\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial  (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    }\n    \nint main(){\n}\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    //Prec: Es té 0 <= n <= 12;\n    if(n == 0) return 1;\n    else return n * factorial(n - 1);        \n    \n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n)<< endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "# include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n<=1){\n        return 1;\n    }\n    else {\n        return n*factorial (n-1);\n    }\n}\n\nint main (){\n    int x,w;\n    \n    cin>>x;\n    w=factorial (x);\n    cout<<w<<endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int total = 1;\r\n    if(n == 0) return 1;\r\n    else total = n * factorial(n-1);\r\n    return total;     \r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\n\r\n\n\n",
  "int factorial(int n) {\nint t;\nt=1;\n\nif ((n!=0)and (n>0)){\nt=n*factorial(n-1);\n}\nreturn n;\n}\n\n\n",
  "int factorial(int n) {\n\n    int t=1;\n\n    if(n!=0 and n>0){\n\n        t=n*factorial(n-1);\n\n    }\nreturn t;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n} \n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n int factorial(int n){\r\n     \r\n     if(n==0) return 1;\r\n     else return (n*factorial(n-1));\r\n     \r\n           \r\n           }\r\n   \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if ( n == 1 ) return 1;\n    return (n*factorial(n - 1));\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if ( n == 1 ) return 1;\n    else return (n*factorial(n - 1));\n    }\n\n\n",
  "int factorial(int n){\r\n   int k;\r\n   if (n=1) return 1;\r\n   else return (n*factorial(n-1));\r\n}\r\n   \r\n\n\n",
  "int factorial(int n){\r\n   if (n=1) return 1;\r\n   else return (n*factorial(n-1));\r\n}\r\n   \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n > 0) return n*factorial(n-1);\n    return 1;\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n==0 or n==1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1 or n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n",
  "int factorial(int n){\n    if (n == 0){\n        return 1;\n    }\n    else{\n       return n*factorial(n-1);\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact;\n    if (n==0 or n==1) fact = 1;\n    else{\n        fact = n * factorial(n-1);\n    \n    }\n    return fact;\n                  \n    \n\n\n\n\n\n\n}\n\n\n\nint main(){\n\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n\n\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n*factorial(n-1);\n    return 1;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial(int n){\n     if (n == 0)     return 1;\n     return     n * factorial (n - 1);\n     \n}\n\nint main(){\n\n     int n;\n     cin >> n;\n     cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n == 1)   return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\n\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==1) return 1;\n    else return n*factorial(n-1);\n}\nint main(){\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==1) return 1;\n    return n*factorial(n-1);\n}\nint main(){\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if(n == 0)  return 1;\n    if (n == 1) return 1;\n    return n*factorial(n-1);\n}\nint main(){\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n==1) return 1;\r\n    else{\r\n        return n*factorial(n-1);\r\n    }\r\n    \r\n}\r\nint main(){\r\n    int num;\r\n    cin >> num;\r\n    cout << factorial(num) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n==0) return 1;\r\n    if(n==1) return 1;\r\n    else{\r\n        return n*factorial(n-1);\r\n    }\r\n    \r\n}\r\nint main(){\r\n    int num;\r\n    cin >> num;\r\n    cout << factorial(num) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n)\r\n{\r\n\r\nint s;\r\n\r\ns=n;\r\n\r\nwhile(s>0)\r\n  {\r\n  \r\n  n=n*s;\r\n  \r\n  s=n-1;\r\n  \r\n  }\r\n\r\nreturn n;\r\n\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n)\r\n{\r\n\r\nint s;\r\n\r\ns=n;\r\n\r\nwhile(s>0)\r\n  {\r\n  \r\n  n=n*s;\r\n  \r\n  s=s-1;\r\n  \r\n  }\r\n\r\nreturn n;\r\n\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n)\r\n{\r\nint s;\r\n\r\ns=n-1;\r\n\r\nwhile(s>0)\r\n  {\r\n\r\n  n=n*s;\r\n    s=s-1;\r\n\r\n  \r\n  }\r\n\r\nreturn n;\r\n\r\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n)\r\n{\r\nint s;\r\n\r\ns=n-1;\r\n\r\nif(n==0)\r\n  \r\n{return 1;}\r\n\r\nelse{\r\n\r\n\r\nwhile(s>0)\r\n  {\r\n\r\n  n=n*s;\r\n    s=s-1;\r\n\r\n  \r\n  }\r\n\r\nreturn n;\r\n\r\n}}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n<=1) {\n\t\treturn 1;\n\t}\n\telse {\n\treturn n*factorial (n-1);\n\t}\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(--n);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int a;\n    if (n == 0) a = 1;\n    else {\n        a = factorial(n - 1);\n        a *= n;   \n        \n    }\n    return a;\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n);\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 0;\n    if (n != 1) return n*factorial(n-1);\n    else return 1;\n}\n\nint main () {\n\n    cout << factorial(12) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\nint j=n;\n\tif(n==0) return 1;\n\telse return factorial(n-1)*n;\n}\n\nint main(){\n\nint x;\ncin>>x;\n\nint c=factorial(x);\n\ncout<<c<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint f;\nif (n==0) return 1;\nelse {\n    f= n*factorial(n-1); \n    return f;\n}\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    int k=1;\n    for (int i=1; i<=n; ++i) {\n        k=k*i;\n    }\n    return k;\n}\nint main () {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total=1;\n    while ( n >= 1) {\n        total *= n;\n        n = n -1;\n    }\n    return total;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    int res = 1;\n    if (n != 1) res *= factorial(n-1);\n    return res *= n;\n}  \n\nint main() {\n    int a;\n    cin >> a;\n    cout <<factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n *= factorial(n-1);\n}  \n\nint main() {\n    int a;\n    cin >> a;\n    cout <<factorial(a) << endl;\n}\n\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int y=1;\n    for (int x=1; x<=n; ++x){\n        y=y*x;\n    }\n    return y;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) <<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n ) {\n    if ( n == 0 ) return 1;\n    return n*factorial( n - 1 );\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0 ) return 1;\n    else return n *= factorial(n);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1 ) return 1;\n    else return n *= factorial(n);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1 ) return 1;\n    else return n *= factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n     if (n != 1) n=n*factorial(n-1);\n     else  return 1;\n     return n;\n  \n}\n\n\n",
  "//Exercici 4.1: Factorial. FACT2\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n//Calcula el factorial de un número\r\nint factorial(int n) {\r\n    if(n == 0) return 0;\r\n    else if(n > 1) return n*factorial(n - 1);\r\n    else return 1;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while(cin >> n) cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 1) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n   if(n > 0) return n*factorial(n-1); /* Recursividad */\r\nreturn 1;\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n}\r\n\n\n",
  "\n\nint factorial(int n){\n\tif(n == 1)\treturn 1;\n\treturn n*factorial(n-1);\n}\n\n\n",
  "\n\nint factorial(int n){\n\tif(n != 1)\t\treturn n*factorial(n-1);\n}\n\n\n",
  "\n\nint factorial(int n){\n\tif(n != 1)\treturn n*factorial(n-1);\n\telse\t\treturn 1;\n}\n\n\n",
  "\n\nint factorial(int n){\n\tif(n == 0)\treturn 1;\n\treturn n*factorial(n-1);\n}\n\n\n",
  "int factorial(int n) {\n    \n    int nfac=n;\n    if (n==0) n=1;\n    else {\n        if (n==1) return n;\n        else {\n            nfac=n*factorial(n-1);\n        }\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tint fact;\n\tif(n<2)\n\t\tfact=1;\n\telse\n\t\tfact=n*factorial(n-1);\n\treturn fact;\n}\nint main(){\n\tint nombre;\n\tcin >> nombre;\n\tif ( nombre >= 0 or nombre <=12)\n\t\tcout << factorial(nombre) << endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  int r;\n    \n    if (n==0) return 1;\n    else r=n*factorial(n-1);\n    return r;\n}\n\nint main(){\n\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n        \nif(n > 1)return n * factorial(n-1);\nreturn n;\n\n}\n\nint main (){\n\nint n;\ncin >> n;\n\n    cout << factorial(n) << endl;\n}\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\nif(n == 0)return 1;        \nelse return n * factorial(n-1);\n\n}\n\nint main (){\n\nint n;\ncin >> n;\n\n    cout << factorial(n) << endl;\n}\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main (){\n    int n;\n    cin>>n;\n    n=factorial(n);\n    cout<<n<<endl;\n    int a;\n    cin>>a;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nif (n==0) return 1;\nreturn n*factorial(n-1);\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n == 0) return 1;\n    if (n == 1) return 1;\n    if (n > 2) return n*factorial (n-1);\n} \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    int f;\n    if (n==0)\n        f=1;\n    else f= n*factorial(n-1);\n    return f;\n    }\n    \n        \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int f;\n    if (n==0) f=1;\n    else {\n        f=factorial(n-1);\n        f=f*n;\n    }\n    return f;\n}\n        \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        n = n * factorial(n - 1);\n        return n;\n    }\n}\n\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n)  {\n      if (n<=1)  return 1;\n      else   return n*factorial(n-1);\n}\n\n\n",
  "int factorial(int n) {\r\n    if (n == 1) return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n)  {\n      if (n<=1)  return 1;\n      else   return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(--n);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    factorial (n);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>0 and n<=12) {\n        if (n == 0) return 1;\n        else return n*factorial(--n);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    factorial (n);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(--n);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    factorial (n);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n//    cout <<n<<endl;\n    if (n == 0) return 1;\n    else return n*factorial(--n);\n    \n}\n\nint main() {\n    int n;\n    cin >> n;\n    factorial (n);\n    cout<<n<<\" \"<<\"adios\"<<endl;;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(--n);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    factorial (n);\n    cout<<n<<endl;;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(--n);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    factorial (n);\n    cout<<n<<endl;;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial (n-1);\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 1) return 1;\r\n    else return n*factorial (n-1);\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n}\r\n\n\n",
  "int factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\n    if (n == 0) return 1;\n    \n    return (n * factorial(n-1));\n\n}\n\nint main() {\n\nint n;\n\ncin >> n;\n\ncout << factorial(n);\n\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tint cont=n;\r\n\tif (n==0) return 1;\r\n\telse if (n>1) return n*factorial(n-1);\r\n\treturn 1;\r\n}\r\nint main(){\r\n\tint y;\r\n\tcin >>y;\r\n\tcout <<factorial(y)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tif (n==0) return 1;\r\n\telse if (n>1) return n*factorial(n-1);\r\n\treturn 1;\r\n}\r\nint main(){\r\n\tint y;\r\n\tcin >>y;\r\n\tcout <<factorial(y)<<endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){;\n    int fact = 1;\n    if (n != 1){\n        fact *= factorial(n-1);\n    }\n    return fact;\n}\nint main (){\n}    \n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int fact = 1;\n    if (n != 1){\n        fact *= factorial(n-1);\n    }\n    return fact;\n}\nint main (){\n}    \n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int fact = 1;\n    if (n == 0) return 1;\n    else fact *= factorial(n-1);\n    return fact;\n}\nint main (){\n}    \n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int fact = 1;\n    if (n == 0) return 1;\n    else fact *= n*factorial(n-1);\n    return fact;\n}\nint main (){\n}    \n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int fact = 1;\n    if (n == 0) return 1;\n    else fact *= n*factorial(n-1);\n    return fact;\n}\nint main (){\n}    \n\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0)return 1;\n    else if(n==1) return 1;\n    else return n*(n-1)*factorial(n-2);\n}\n\nint main(){\n    int num;\n    cin>>num;\n    cout<<factorial(num);\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if (n == 0) return 1;\n    else{\n        total = n * (n-1);\n        for (int i = (n-2) ; i != 0 ; --i){\n            total *=i;                                            \n        }\n    return total;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if (n == 0 or n== 1) return 1;\n    else{\n        total = n * (n-1);\n        for (int i = (n-2) ; i != 0 ; --i){\n            total *=i;                                            \n        }\n    return total;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n    \n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n>=0 and n<=12){\n        for (int i=(n-1); i>0; --i){\n            n=n*i;\n        }\n    }\n    return n;\n}\n\nint main (){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tint fact = 1;\n\tif (n == 1) return 1;\n\tfact = n * factorial (n-1);\n\treturn fact;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 1) return n;\r\n    n *= factorial(n-1);\r\n    return n;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif(n == 1) return 1;\n\telse return n + factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\r\n    if(n==1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main() {\n    int n;\r\n    cin >> n;\n    cout << factorial(n) << endl;\r\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n   if(n < 0) return 0;\n   else if(n > 1) return n*factorial(n-1);\n   return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) return n;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\n\n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\t--n;\n\tif (n != 0) return factorial(n)*n;\n\treturn 1;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout <<\tfactorial(n) << endl;\n\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\n           \n           if(n==1)return 1;\n           return n*factorial(n-1);\n           }\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1 or n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    int fact = n;\n    if (n == 0) fact = 1;\n    else fact = n * factorial (n-1);\n    return fact;\n}\n\nint main (){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n==0) return 1;\r\n    else return n * factorial (n-1);\r\n}\r\n\r\n\r\n\r\nint main () {\r\n    int x;\r\n    cin >> x;\r\n    int z = factorial (x);\r\n    cout << z << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else n* factorial(n-1);\n}\n\n\nint main() {\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else n * factorial(n-1);\n}\n\n\nint main() {\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\n\nint main() {\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n\tif (n==0){\n\t\treturn 1;}\n\telse {return n*factorial(n-1);}}\nint main (){\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main (){\r\nint n;\r\nwhile(cin >> n)cout << factorial(n)<< endl;\r\n}\r\n\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n     int total = 1;\r\n     if (n != 1){\r\n          factorial(n-1);\r\n          total *= factorial(n);\r\n     }\r\n     return total;\r\n}\r\n\r\nint main (){\r\n\r\n     int n;\r\n     cin >> n;\r\n     cout << factorial(n) << endl;\r\n     \r\n}        \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    else return n*factorial(n/10);\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n/10);\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return n;\n    else {\n        return n*factorial (n-1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else {\n        return n*factorial (n-1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    else {\n        return n*factorial (n-1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial (int n){\n        if (n == 0) return 1;\n        return n*factorial(n-1);\n        \n    }\n    \nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;    \n\n\n}\n\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int x){\r\n\tint r;\r\n\tif ( x == 0){\r\n\t\tr=1;\r\n\t}\r\n\telse{\r\n\t\tr= x*factorial (x-1);\r\n\t}\r\n\treturn r;\r\n}\r\n\r\nint main (){\r\n\tint x;\r\n\twhile(cin >> x){\r\n\t\tint r;\r\n\t\tr = factorial (x);\r\n\t\tcout << r << endl;\r\n\t}\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n   int factorial(int n)\r\n   {\r\n       int cosa=1;\r\n       while(n>0)\r\n       {\r\n                cosa*=n;\r\n                n--;\r\n                return cosa;}\r\n                }\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n   int factorial(int n)\r\n   {\r\n       int cosa=1;\r\n       while(n>0)\r\n       {\r\n                cosa*=n;\r\n                //cout<<cosa<<endl;\r\n                n--;\r\n                }\r\n                return cosa;\r\n                }\r\n                int main()\r\n                {int hola;\r\n                         cin>>hola;\r\n                         cout<<factorial(hola)<<endl;\r\n                         }\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    int x = 1;\n\n    if (n == 0) return 1;\n\n    x = x * n * factorial(n-1);\n\n    return x;\n}\n\nint main() {\n\nint a;\ncin >> a;\ncout << factorial(a)<<endl;\n\n}\n\n\n",
  "# include <iostream>\n# include <cmath>\n\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 1 or n == 0) return 1;\r\n    else{\r\n        return (n * factorial (n-1));\r\n    }\r\n}\r\n\r\nint main(){\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}            \r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}        \n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial ( int n ) {\n    if ( n <= 0 ) return 1;\n    else return n * factorial ( n - 1 );\n}\nint main ( ) {\n    int n;\n    cin >> n;\n    cout << factorial( n ) << endl;\n}\n\n\n",
  "# include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if ( n == 0 ) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main ( ) {   \r\n}\r\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if(n<=0 or n>12) return 1;\n    if(n==1) return 1;\n    return(n*factorial(n-1));\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n\n}\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if ( n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);    \r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if(n == 0) return 1;\n    else total = n*factorial(n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact=1;\n    while (n!=0){\n        fact=fact*factorial(n-1);\n        --n;\n    }\n    return fact;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact=1;\n    if (n==0) return fact;\n    else {\n        fact=fact*factorial(n-1);\n        --n;\n    }\n    return fact;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact=1;\n    if (n==0) return fact;\n    else fact=n*factorial(n-1);\n    return fact;\n}\n\nint main(){\n    int n;\n    cin>>n;\n    int p=factorial(n);\n    cout<<p<<endl;\n}\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n\tif(n==0) return 1;\n\telse{\n\t\treturn n*factorial(n-1);\n\t}\n\t}\n\t\t\n\t\t\nint main(){\nint n;\ncin>>n;\n\ncout<<factorial(n)<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x)<<endl;\n    }    \n                                                                             \n                                                                                \n                                                \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}    \n    \nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}    \n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n){\n\n  if (n<=1){\n  \n    return 1;\n    \n   } else {\n    \n    return n*factorial(n-1);\n     \n      }\n   }    \n  \nint main(){\n  \n  int n;\n  \n  cin>>n;\n  \n  cout<<factorial(n)<<endl;\n  \n  \n }\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n == 0) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn n * factorial(n-1);\n\t}\n\n}\n\nint main() {\n\n\tint n;\n\tcin >> n;\n\tint x = factorial(n);\n\tcout << x << endl;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif(n==0) return 1;\n\telse {\n\t\treturn n*factorial(n-1);\n\t}\n\n}\n\nint main() {\n\n\tint n1;\n\tcin >> n1;\n\tint fact = factorial(n1);\n\tcout << \"Factorial: \" << fact << endl;\n\n}\n\n\n",
  "int factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0) return 1;\n\telse return n*factorial(n-1);\n\n}\n\nint main(){\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n\n\n\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n);\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\nint factorial (int n) {\n    if (n == 1) return (n);\n        else return (n * factorial (n -1));\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n);\n\nint main () {\n    int n;\n    cin >> n;\n    if ((n > 0) && (n <= 12)) cout << factorial (n) << endl;\n}\nint factorial (int n) {\n    if (n == 1) return (n);\n        else return (n * factorial (n -1));\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0) return 1;\n    else return n* factorial(n-1);\n    }\nint main() {    \n    int n;\n    cin >> n;\n    cout <<factorial(n) <<endl;\n    }\n\n\n",
  "#include<iostream>\nusing namespace std;\n    int factorial(int n) {\n        int h;\n        if(n==0) n=1;\n\n        else {\n         h= n*factorial(n-1);\n       }\n       return h;\n   }\n            \nint main() {\n    \n    int n;\n    cin>>n;\n    int s=factorial(n);\n    cout<<s<<endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n    int factorial(int n) {\n        int h;\n        if(n==0) h=1;\n\n        else {\n         h= n*factorial(n-1);\n       }\n       return h;\n   }\n            \nint main() {\n    \n    int n;\n    cin>>n;\n    int s=factorial(n);\n    cout<<s<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (0 <= n and n <= 12) return 0;\n    return n*factorial (n - 1);\n    cout << n*factorial (13) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n = 0) return 0;\n    return n*factorial (n - 1);\n    cout << n*factorial (13) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n <= 0 and n <= 12) return 0;\n    return n*factorial (n - 1);\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (0 < n) return 0;\n    return n*factorial (n - 1);\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 0;\n    return n*factorial (n - 1);\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (0 < n) return 0;\n    return n*factorial (n - 1);\n    cout << factorial (n) << endl;\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){ \n    if (0 <= n and n <= 12){\n        for (int i = 1; i <= n; ++i){\n            n = n*i;\n        }\n    }\n    return n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){ \n    int y = n;\n    if (n == 0) n = 1;\n    else while (y > 1){\n        --y;\n        n = n*y;\n    }\n    return n;\n    \n}\n\nint main(){\n    int n;\n    while (cin >> n){\n        if (0 <= n and n <= 12) cout << factorial(n) << endl;\n    }\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    int r;\r\n    if (n == 0) r=1;\r\n    else r = n * factorial(n-1);\r\n    return r;\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else return (n*(factorial(n-1)));\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*(factorial(n-1));\n}\n\n\n",
  "int factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif(n > 0) return n * factorial(n - 1);\t\n\treturn 1;\n}\n\t\nint main() {\n\tint n;\t\n\tcin >> n;\t\n\tcout << factorial(n) << endl;\n}\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n   cin >> n;\r\n    if ( n == 0 )return 1;\r\n    else\r\n      return  n * factorial( n - 1);\r\n}\r\n\r\n    \r\nint main(){\r\nint n;\r\ncin >> n;\r\ncout << factorial(n);\r\n  \r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if ( n == 0 )return 1;\n    \n    return  n * factorial( n - 1);\n}\n\nint main(){\nint n;\ncin >> n;\ncout << factorial(n)<<endl;\n  \n}\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\r\n\tif(n==0) return 0;\r\n\tif(n==1) return 1;\r\n\r\n\tn=n*factorial(n-1);   \r\n\r\n\t\r\n\r\n\treturn n;\r\n}\r\n\r\n\r\nint main(){\r\n\r\n\tint m;\r\n\tcin>>m;\r\n\r\n\tcout<<factorial(m)<<endl;\r\n\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\r\n\tif(n==0) return 0;\r\n\telse if(n==1) return 1;\r\n\r\n\tn=n*factorial(n-1);   \r\n\r\n\t\r\n\r\n\treturn n;\r\n}\r\n\r\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\n\nint factorial(int n){\n\n\tif(n==0) return 0;\n\telse if(n==1) return 1;\n\n\tn=n*factorial(n-1);   \n\n\t\n\n\treturn n;\n}\n\n\nint main(){\n\nint n;\ncin>>n;\n\ncout<<factorial(n)<<endl;\n}\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\n\nint factorial(int n){\n\n\tif(n==0) return 1;\n\tif(n==1) return 1;\n\n\tn=n*factorial(n-1);   \n\n\t\n\n\treturn n;\n}\n\n\nint main(){\n\nint n;\n\ncin>>n;\n\ncout<<factorial(n)<<endl;\n\n}\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n\tif (n==0) return 1;\r\n\r\n\r\n\treturn n*factorial(n-1);\r\n}\r\n\n\n",
  "/*#include <iostream>\nusing namespace std;*/\n\nint factorial(int n){\n\n  if (n==0)return 1;\n  \n  else return (n*factorial(n-1));\n  \n}\n\n/*int main() {\n  \n  while (cin >>n){\n    cout << \"fact(\" << n << \") =\" << fact(n) << endl;\n  \n }*/\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int k = n;\n    int fac = 1;\n    while (k > 1) {\n         fac *= n;\n         --n;\n         --k;\n   }\n   return fac;\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n    }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 0;\n    else return (n*factorial(n-1));\n    }\n    \nint main(){\n    int n;\n    while (cin>>n){\n        cout<<factorial(n)<<endl;\n        }\n        }\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return (n*factorial(n-1));\n    }\n    \nint main(){\n    int n;\n    while (cin>>n){\n        cout<<factorial(n)<<endl;\n        }\n        }\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n  if (n == 0) return 1;\r\n  return n * factorial(n-1);\r\n}\r\n\n\n",
  "int factorial(int n) {\r\n    if(n == 0)\r\n        return 1;\r\n    else\r\n        return factorial(n-1)*n;\r\n}\r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\nif ( n == 0 ) return 1;\r\nreturn n = n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\nint a;\r\ncin >>a;\r\ncout << factorial(a)<< endl;\r\n} \r\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main(){\r\n    int n;\r\n    cout<<factorial(n)<<endl;\r\n}\r\n\r\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n*factorial (n - 1);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n    \n\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main () {\n    int p;\n    cin >> p;\n    cout << factorial(p) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n==0) return 1;\n    return n*factorial (n-1);\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n    int factorial (int n) {\n    if(n==0) \n       return 1;\n       return n*factorial(n-1);\n    }\n\n\nint main() {\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n}\n\n\n",
  "int factorial(int n) {\nif(n==0) return 1;\nreturn n*factorial(n-1);\n}\n\n\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(--n) * n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n - 1) * n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "int factorial(int n){\r\n    if(n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    int fact = 1;\n    for (int x = 1; x<=n; ++x) {\n        fact *= x;\n    }\n    return fact;\n\n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    cout << n << \"! es \" << factorial(n) << \".\" << endl;\n\n}\n\n\n",
  "#include <iostream>\n\n\nusing namespace std;\nint factorial(int n) {\n     int fac;\n     if (n == 0) fac = 1;\n     else\n     fac = n*factorial (n-1);\n  return fac;\n}\n     \n         \n   \n\nint main (){\n    int x;\n    cin >> x;\n    \n    cout << factorial(x)<<endl;\n}\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int f;\r\n    if (n==0) f = 1;\r\n    else f = n * factorial (n-1);\r\n    return f;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x; \r\n    cout << factorial(x);\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n   int fact;\n   if (n == 0) fact = 1;\n   else fact = n * factorial(n-1);\n   return fact;\n       \n    \n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1)\n        return n * factorial(n-1);\n    return 1;\n}\n\nint main () {\n    cout << factorial(5) << endl;\n}\n\n\n",
  "int factorial (int n){\r\n    if (n == 0) return 1;\r\n    else return factorial (n-1) * n;\r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n    if (n == 0) return 1;\n    else return n*factorial(n - 1); \n}\n\nint main () {\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\n\n\nusing namespace std;\nint factorial(int n) {\n     int fac;\n     if (n == 0) fac = 1;\n     else\n     fac = n*factorial (n-1);\n  return fac;\n}\n     \n         \n   \n\nint main (){\n    int x;\n    cin >> x;\n    \n    cout << factorial(x)<<endl;\n}\n\n\n\n",
  "#include<iostream>\nusing namespace std; \n\nint factorial(int n){\nif (n == 0) return 1; \nelse return ( n * factorial(n-1));\n}\n\nint main() {\nint n;\ncin >> n;\n\ncout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) { \n    if (n == 0 or n == 1) return 1;\n    else return (n * factorial(n-1));\n}\n\n/*int main() {\n    int n; \n    cin >> n; \n    int m = factorial(n);\n    cout << m << endl;\n}*/\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n<=0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int res = 1;\r\n    if(n == 0) return 1;\r\n    else res = n*factorial(n-1);\r\n    return res;\r\n    \r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n\r\n}\r\n\n\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return factorial(n-1);    \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl << endl;   \r\n    }    \r\n}\r\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n * factorial(n - 1);\n}\n\nint main() {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n * factorial(n-1);\n    else return 1;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int fact;\n    if (n == 0) return 1;\n    else fact = n * factorial(n - 1);\n    return fact;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else return n*factorial (n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial (n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int total = 1;\n    if (n != 1) total *= factorial(n-1);\n    return total;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\n    if (n == 0 or n==1) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint  factorial(int  n){\n    if(n==0)return 1;\n    return(n*factorial(n-1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int fac;\n    if (n < 2) {\n    fac = 1;\n    }\n    else {\n    fac = n * factorial (n-1);\n    }\n    return fac;\n}\n    \n    \nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n} \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        factorial(n);\n    }\n} \n\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n==0){\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn n*factorial (n-1);\n\t}\n}\n\nint main (){\n\tint f,n;\n\tcin>>n;\n\tcout<<factorial (n)<<endl;\n}\n\t\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n==0){\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn n*factorial (n-1);\n\t}\n}\n\nint main (){\n\tint n;\n\tcin>>n;\n\tcout<<factorial (n)<<endl;\n}\n\t\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n > 0)return n * factorial(n-1);\n    else return n;\n}\nint main(){}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n > 0)return n * factorial(n-1);\n    else return 1;\n}\nint main(){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n        \n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1) return 1;\n    else {\n        return factorial(n-1)*n;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n            \n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==2) return 2;\n    else {\n        return factorial(n-1)*n;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n            \n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1) return 1;\n    else {\n        return (n*factorial(n-1));\n    }\n   \n}\n\n            \n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;    \n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "int factorial(int n){\r\n    int prod=1;\r\n    prod=prod*(n*factorial(n-1));\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) \n{\n\tif (n < 2) return 1;\n\telse return factorial(n-1)*n;\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tint y = factorial(x);\n\tcout << y << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\tif (n==1) return 1;\n\telse return (n*factorial(n-1));\n}\nint main () {\n\tint n;\n\tcin>> n;\n\tcout <<factorial (n) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tint fact = 1;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tfact = fact*i;\n\t}\n\treturn fact;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return n;\n    else return (factorial(n - 1) * n);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n <= 1) return 1;\n  else return n*factorial(n-1);\n}\n  \nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==1) return 1;\n\treturn (n*factorial(n-1));\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    \r\n    suma = suma + n;\r\n    \r\n    factorial (n-1);\r\n\r\n    return suma;\r\n    \r\n}\r\n\r\nint main(){\r\n\r\n    int n;\r\n    \r\n    cin << n;\r\n    \r\n    cout << factorial(n) << endl;    \r\n    \r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    \r\n    int suma;\r\n    \r\n    suma = suma + n;\r\n    \r\n    factorial (n-1);\r\n\r\n    return suma;\r\n    \r\n}\r\n\r\nint main(){\r\n\r\n    int n;\r\n    \r\n    cin >> n;\r\n    \r\n    cout << factorial(n) << endl;    \r\n    \r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    \r\n    int suma;\r\n    \r\n    while (n>1){\r\n    \r\n        suma = suma + n;\r\n    \r\n        factorial (n-1);\r\n        \r\n    }\r\n\r\n    return suma;\r\n    \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1 or n == 0) return 1;\n\telse return factorial(n-1)*n;\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tint res = factorial(x);\n\tcout << res << endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif ( n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\t\t",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    int a;\r\n    a = n;\r\n    if (a == 0) return n;\r\n    else {\r\n        n = n * a\r\n        factorial(a-1)\r\n    }\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    int a;\r\n    a = n;\r\n    if (a == 0) return n;\r\n    else {\r\n        n = n * a;\r\n        factorial(a-1);\r\n    }\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    int a;\r\n    a = n;\r\n    if (a == 0) return a;\r\n    else {\r\n        n = n * a;\r\n        factorial(a-1);\r\n    }\r\n}\r\n",
  "//FunciÃ³ factorial recursiu\n#include <iostream>\nusing namespace std;   \t\t \n\nint factorial(int n){\n\tif(n==0 or n==1) return 1;\n\telse return n*factorial(n-1);\t\t\t \n}\n\nint main(){\t \n\t int n;\n\t cin>>n;\t  \n\t cout<<factorial(n)<<endl;\t\n}\t\t\n",
  "#include <iostream>\nusing namespace std;\nint main(){\n  cout << \"Bon dia a tothom!\" << endl;\n  return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n<=1)\n    return 1;\n  else\n    return n*factorial(n-1);\n}\n\nint main() {\n  int res = factorial(8);\n  cout << res << endl;\n  return 0;\n} ",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n<=1) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int c,d;\r\n    while (cin>> c){\r\n          d=factorial(c);\r\n          cout << d << endl;\r\n    }\r\n}\r\n    \r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 1) { //pas base\n\t\treturn n;\n\t}\n\telse {\n\t\treturn factorial(n-1)*n; \n\t\n\t}\n\t\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0) { //pas base\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn n*factorial(n-1); \n\t\n\t}\n\t\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\r\n\tint resul=f;\r\n\tint f;\r\n\tif(n==0)return 1;\r\n\telse{\r\n\t\t\r\n\t\treturn n*factorial(n-1);\r\n\t\t\r\n\t\t\t\n\t\t}\n\t}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\r\n\tif(n==0)return 1;\r\n\telse{\r\n\t\t\r\n\t\treturn n*factorial(n-1);\r\n\t\t\r\n\t\t\t\n\t\t}\n\t}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\r\n\tif(n==0)return 1;\r\n\telse{\r\n\t\t\r\n\t\treturn n*factorial(n-1);\r\n\t\t\r\n\t\t\t\n\t\t}\n\t}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n   if(n < 0) return 0;\n   else if(n > 1) return n*factorial(n-1);\n   return 1;\n}\n\nint main(){\n  int n;\n  while(cin >> n){\n    cout << factorial(n) << endl;\n  }\n}",
  "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\nusing namespace std; \n\nint factorial (int n) {\n\tif (n==0) return 1;\n\telse return n*factorial (n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n    \tcout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n    \tcout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0 or n==1) return 1;\n\treturn factorial(n-1)*n;\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1 or n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n > 0) return factorial(n - 1) * n;\n\telse return 1;\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tint a;\n\ta = factorial(n);\n\tcout << a << endl;\n}\n",
  "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n < 2) return 1;\n\treturn (factorial(n-1)) * n;\n}\n\t\t\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n\tif (n==1) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin>> n;\n\tcout <<factorial(n) <<endl;\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n\tif (n<2) return n;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin>> n;\n\tcout <<factorial(n) <<endl;\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n\tif (n<2) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin>> n;\n\tcout <<factorial(n) <<endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n\tint sum=n;\n\t\tif (n>1) {\n\t\tsum = sum * factorial(n-1);\n\t}\n\t\treturn sum;\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n\tint sum=n;\n\tif (n==0) return 1;\n\tif (n>1) {\n\t\tsum = sum * factorial(n-1);\n\t}\n\t\treturn sum;\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\tint sum= n * factorial (n-1);\n\treturn sum;\n}\n\t\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n\t\n\t\t}\n",
  "#include <iostream>\n#include <vector>\n#include <cmath>\n\nusing namespace std;\n\nint posicio (double x, const vector <double>&v, int esq, int dre) {\n    int mig = (esq+dre)/2;\n    if (esq == dre) return x;\n    if (esq > dre) return 1;\n    if (v[mig] == x) return mig;\n    if (x > v[mig]) return posicio (x,v,mig+1,dre);\n    else return posicio (x,v,esq, mig+1);\n    \n}",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial (int n) {\n  if (n<=1)\n   return 1;\n  else\n     return n * factorial(n-1);\n} \nint main () {\n  int n;\n while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif ( n == 0) {\n\t return 1;\n\t }\n\t else {\n\t return n * factorial (n-1);\n\t }\n}",
  "#include <iostream> \n#include <string> \n#include <cmath> \nusing namespace std;\n\nint factorial(int n){\n    if (n<=1) return 1;\n    \n    else  return n*factorial(n-1);\n   \n}\n\nint main() { \n   int n;\n   cin >> n;\n   cout << factorial (n) <<endl;\n}\n\n           \n    \n\n\n\n\n\n     \n\n            \n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\nif ( n == 1 ) return  1 ;\nelse return n * factorial (n-1);\n}\n\nint main () {\n\tint x;\n\n\tcin >> x;\n\tcout << factorial (x) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n)\n{\nif (n == 0) { return 1;}\nelse {return (n* factorial(n-1));}\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\nif ( n == 1 ) return  1 ;\nelse return n * factorial (n-1);\n}\n\nint main () {\n\tint x;\n\n\tcin >> x;\n\tcout << factorial (x) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\nif ( n == 1 ) return  1;\nelse return n * factorial (n-1);\n}\n\nint main () {\n\tint x;\n\n\tcin >> x;\n\tcout << factorial (x) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\nif ( n == 1 ) return  1;\nelse if (n == 0) return 0;\nelse return n * factorial (n-1);\n}\n\nint main () {\n\tint x;\n\n\tcin >> x;\n\tcout << factorial (x) << endl;\n}",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return 1;\n\telse return n*factorial (n - 1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return 1;\n\telse return n*factorial (n - 1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tif (n == 0) cout << 0 << endl;\n\telse cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return 1;\n\telse if (n == 0) return 0;\n\telse return n*factorial (n - 1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tint f=1;\n\tfor (int i=n; i>1; --i)\n\tf=f*i;\n\treturn f;\n}\nint main() {\n\n\tint x;\n\tcin >> x;\n\tcout << factorial(x-1)*x << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\nif ( n == 1 ) return  1;\nelse if (n == 0) return 1;\nelse return n * factorial (n-1);\n}\n\nint main () {\n\tint x;\n\n\tcin >> x;\n\tcout << factorial (x) << endl;\n}",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return 1;\n\telse if (n == 0) return 1;\n\telse return n*factorial (n - 1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n==0 or n==1) return 1;\n\telse return factorial(n-1)*n;\n}\nint main() {\n\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int i = n;\n    int f = 1;\n    while (i > 0){\n        f = f*i;\n        i = i-1;\n    }\n    return f;\n}\n\nint main(){\n    //cout.setf(ios::fixed);\n    //cout.precision(6);\n\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}",
  "#include<iostream>\n\nusing namespace std;\n\n\n\nint factorial(int n) {\n    if ( <= 1 )\n        return 1;\n    else\n        return n * factorial(n-1)\n}\n\n\n       \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n\t\n\tint o;\n\t\n\tif ( n <= 1 ) {o =1;}\n\telse o=n*factorial(n-1);\n\t\n\t\t\n\treturn o;\n}\t\n\nint main() {\n\n\tint n;\n\tcin>> n;\n\tint o=factorial(n);\n\tcout<< o << endl;\n\n}\n\n\t",
  "#include<iostream>\n\nusing namespace std;\n\n\n\nint factorial (int n) {\n    if (n <= 1 )\n        return 1;\n    else\n        return n * factorial(n-1);\n}\n\nint main () {\n}\n\n       \n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n)\n    if (n==0)\n        return 1\n    else return n * factorial(n-1)\n\n\nint main() {\n    \n    int x;\n\n\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n<=1)\n        return 1\n    else return n * factorial(n-1)\n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n<=1)\n        return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1)\n        return 1;\n    else\n        return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n    ",
  "#include<iostream>\n\nusing namespace std;\n\nint n;\n\nint factorial (int n){\n    if(n=0) \n        return 1;\n    else \n        return factorial(n-1)*n;\n}\n\nint main(){\n\n}",
  "#include<iostream>\n\nusing namespace std;\n\nint n;\n\nint factorial (int n){\n    if(n==0) \n        return 1;\n    else \n        return factorial(n-1)*n;\n}\n\nint main(){\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1)\n        return 1;\n    else\n        return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n    ",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif ( n == 0) return 1;\n\telse return n*factorial (n-1) ;\n\t\n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}",
  "#include<iostream>\nusing namespace std;\n\nint fact(int n){\n\tif (n==0) return 1;\n\telse return n*fact(n-1); \n}\n\nint main () {\n\nint n;\ncin >> n;\ncout << fact(n) << endl;\n}",
  "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\n\nint fact (int n) {\n\tif (n==0) return 1;\n\telse return n*fact (n-1);\n}\n\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << fact (n) << endl;\n\n}",
  "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\n\nint fact (int n) {\n\tif (n==0) return 1;\n\telse return n*fact (n-1);\n}\n\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << fact(n) << endl;\n\n}",
  "#include<iostream>\nusing namespace std;\n\nint fact(int n){\n\tif (n==0) return 1;\n\telse return n*fact(n-1); \n}\n\nint main () {\n\nint n;\ncin >> n;\ncout << fact(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\telse return n*factorial(n-1); \n}\n\nint main () {\n\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}",
  "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\telse return n*factorial (n-1);\n}\n\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n\n}",
  "#include <iostream>\nusing namespace std;\n\n\n\nint fact (int n){\nif (n == 0) return 1;\nelse return n*fact(n-1);\n}\n\n\n\n\n\n\n\n\n\nint main () {\nint n:\ncin>> n;\ncout>> fact(n) >> endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint fact (int n){\nif (n == 0) return 1;\nelse return n*fact(n-1);\n}\n\n\n\n\n\n\n\n\n\nint main () {\nint n:\ncin>> n;\ncout>> fact(n) >> endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial (int n){\nif (n == 0) return 1;\nelse return n*factorial(n-1);\n}\n\n\n\n\n\n\n\n\n\nint main() {\nint n;\ncin>> n;\nfactorial(n);\ncout<< factorial (n)<< endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint a;\nint factorial(int n) {\n\tif (n==0) return 1;\n\tif (n>2) {\n\t\ta=a*(n-1);\n\t\tfactorial(n-1);\n\t\t}\n\treturn a;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\ta=n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint a;\nint factorial(int n) {\n\tif (a==0) a=n;\n\tif (n==0) return 1;\n\tif (n>2) {\n\t\ta=a*(n-1);\n\t\tfactorial(n-1);\n\t\t}\n\treturn a;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint a=0;\nint factorial(int n) {\n\tif (a==0) a=n;\n\tif (n==0) return 1;\n\tif (n>2) {\n\t\ta=a*(n-1);\n\t\tfactorial(n-1);\n\t\t}\n\treturn a;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\tif (n>2) {\n\t\tn=n*factorial(n-1);\n\t\t}\n\treturn n;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\tif(n==0){return 0;}\n\telse {return (n*factorial(n-1));}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if(n==0){return 1;}\n    else {return (n*factorial(n-1));}\n}",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse if (n == 1) return 1;\n\telse n = n * factorial(n-1);\n\treturn n;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint factorial(int a){\n        if (a<=1) return 1;\n        else \n        return a*factorial(a-1);\n} \n\nint main(){\n        int n,m;\n        cin>>n;\n        m=factorial(n);\n        cout<<m;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n  if (n==1) return 1;\n  else return n*factorial(n-1);\n}\n\nint main(){\n  int a;\n  cin>>a;\n  cout<<factorial(a)<<endl;\n}",
  "int factorial(int n){\n  if(n==0) return 1;\n  return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n<=1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\n\n}\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if(n<=1) return 1;\n    return factorial(n-1)*n;\n}\n\nint main() {\n    \n}",
  "int factorial (int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int r=0;    \r\n    if (n==1) return 1;\r\n    r=n*factorial(n-1);\r\n    return (r);\r\n}\r\n    \r\n\r\nint main(){\r\n\r\n    int m;\r\n    \r\n    while(cin>>m) cout<< factorial(m);\r\n}\r\n",
  "#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int r=0;    \r\n    if (n<2) return 1;\r\n    r=n*factorial(n-1);\r\n    return (r);\r\n}\r\n    \r\n\r\nint main(){\r\n\r\n    int m;\r\n    \r\n    while(cin>>m) cout<< factorial(m);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nlong factorial(long n){\r\n  if (n==0) return 1;\r\n  return n*factorial(n-1);\r\n}\r\nint main(){\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n)<<endl;\r\n};",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n==0) return 1;\r\n  return n*factorial(n-1);\r\n};",
  "int factorial (int n) {\r\n    if(n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n  if (n<=1) return 1;\n  else return n*factorial(n-1);\n}\n\nint main(){\n  int a;\n  cin>>a;\n  cout<<factorial(a)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\n",
  "#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\nint factorial(int a){\nif (a==0) {return 1;}\nreturn factorial(a-1)*a;\n}\nint main() {\ncout << factorial(6);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0 or n == 1) return 1;\n\tif(n>0)\treturn n * factorial(n-1);\n\treturn 1;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int p = 1;\n    while (n > 1) {\n        p *= n;\n        --n;\n        }\n    return p;\n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n<=1) return 1;\n    return n * factorial(n-1);\n}\n\n\nint main(){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n    \n",
  "int factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include<iostream>\n#include<cmath>\nusing namespace std;\n\nint factorial(int n) {\n    int f=1;\n    if(n==0) f=1;\n    else {\n        for(int i=1;i<=n;++i) f*=i;\n    }\n    return f;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n   if (n==1) return n;\n   else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >>n;\n    if(n == 0) cout << \"0\" << endl;\n    else cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n   if (n==2) return n;\n   else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >>n;\n    if(n <= 1) cout << n << endl;\n    else cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n   if (n==0) return 1;\n   else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >>n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial (int n){\n    if (n==1) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\treturn n * factorial(n-1);\n}\n\nint main (){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) return 1;\n\treturn n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n==0) {\n        return 1;\n        }\n    return (n*factorial(n - 1));\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n){\n    int i=1;\n    for (int f=1;f<=n;++f){\n        i*=f;\n    }\n    return i;\n}\n\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  int fact = 1;\n  for (int i = 1; i <= n; i++) {\n    fact = fact * i;\n  }\n  return fact;\n}\n",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint result = 1;\r\n\tfor (n; n > 0; --n) {\r\n\t\tresult = result * n\r\n\t}\r\n\treturn result;\r\n}",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint result = 1;\r\n\tfor (n; n > 0; --n) {\r\n\t\tresult = result * n;\r\n\t}\r\n\treturn result;\r\n}",
  "int factorial (int n) {\n    if (n==1) return 1;\n    return n*factorial(n-1); \n}",
  "int factorial (int n) {\n    if (n==1) return 1;\n    else return n*factorial(n-1); \n}",
  "int factorial (int n) {\n    if (n < 0) return 0;\n    else if (n > 1) return n*factorial(n-1); \n    return 1;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\nif(n<=0){ return n=1;}\n\nreturn factorial(n-1)*(n-2);\n}\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n\nif(n<=1){ return n=1;}\n\nelse {return factorial(n-1)*(n-2);};\n}\n\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n\nif(n<=1){ return n=1;}\n\nelse {return n*factorial(n-1);\n}\n}\n",
  "int factorial (int n){\n\tif (n<2) return 1;\n\treturn n*factorial(n-1);\n}\n\n",
  "int fact(int n) {\n    \n    while (n > 0){\n        \n        n *= fact(n - 1);\n    }\n    \n    return n;\n    \n}\n",
  "int fact(int n) {\n    \n    while(n > 0) {\n        \n        n *= fact(n - 1);\n    }\n    \n    return n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f;\n    if (f=1) return 1;\n    else return f=n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f;\n    if (f==1) return 1;\n    else return f=n*factorial(n-1);\n}\n",
  "int mcd(int a, int b) {\n    if (b == 0) return a;\n    else return mcd(b, a%b) ;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n ) {\n    if ( n==0 ) return 1;\n    else {\n        n *= factorial ( n - 1 );\n        return n;\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "int mcd(int a, int b) {\n    if (b == 0) return a;\n    else return mcd(b, a%b) ;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f;\n    if (f==1) return f=1;\n    else return f=n*factorial(n-1);\n}\n",
  "int mcd(int a, int b) {\n    if (b == 0) return a;\n    else return mcd(b, a%b);\n}\n\n\n",
  "int factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return (n * factorial (n-1));\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint fac(int a){\n    if (a>1) return a*fac(a-1);\n    else return a;\n}\n\n\nint main() {\n\tint a;\n    cin >> a;\n    cout << fac(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint fac(int a){\n    if (a>1) return a*fac(a-1);\n    else return a;\n}\n\n\nint main() {\n\t\n}\n",
  "/*  int mcd(int a,int b) {\n    if (b==0) {return a;}\n    else return mcd(b,a%b);\n      \n} \n\nint nombre_digits(int n) {\n    if (n<10) {return 1;}\n    else {return 1 + nombre_digits(n/10);}\n}\n*/\n\n\n\nint factorial (int n) {\n    if (n==1) return 1;\n    else return n * factorial (n-1);\n}\n#include <iostream>\nusing namespace std;\n\nint main(){\n    int a,b;\n    \n    while (cin >> a) {\n        cout << factorial (a) << endl;\n        }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "/*  int mcd(int a,int b) {\n    if (b==0) {return a;}\n    else return mcd(b,a%b);\n      \n} \n\nint nombre_digits(int n) {\n    if (n<10) {return 1;}\n    else {return 1 + nombre_digits(n/10);}\n}\n*/\n\nint factorial (int n) {\n    if (n==1) return 1;\n    else return n * factorial (n-1);\n}\n\n\n\n/*\n#include <iostream>\nusing namespace std;\n\nint main(){\n    int a,b;\n    \n    while (cin >> a) {\n        cout << factorial (a) << endl;\n        }\n}\n*/\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n<2) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int a){\n    if (a>1) return a*factorial(a-1);\n    else return a;\n}\n\n\nint main() {\n\tint a;\n    cin >> a;\n    cout << factorial(a);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int a){\n    if (a>1) return a*factorial(a-1);\n    else return a;\n}\n\n\nint main() {\n\tint a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "int factorial (int n) {\n    if (n <= 1) return 1;\n    else \n        return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n > 1) {\n        return n * factorial(n - 1);\n    } else {\n        return n;\n    }\n}\nint main() { }\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n > 1) {\n        return n * factorial(n - 1);\n    } else {\n        return 1;\n    }\n}\nint main() { }\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;    \n        else return n * factorial(n-1);\n}\n",
  "#include <cstdlib>\n#include <iostream>\n#include <string>\n#include <math.h>\n\nusing namespace std;\n\nint factorial (int n) {\n\n\tif ( n == 0 ) { \n\t\t\treturn 1;\n\t} else {\n\t\t\treturn n * factorial ( n - 1);\n\t}\n\n}\n\nint main()\n{\n    int a;\n    cin >> a;\n\n\tcout << factorial(a) << endl;\n\n    return 0;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n < 2) return 1;\n\telse return n*factorial(n-1);\n\t}\n\t\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\t\n",
  "//Factorial recursivo\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n==0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial ( int n ) {\n  int resultat = 1;\n  while ( n > 1 ) {\n    resultat = resultat * n;\n    --n;\n  }\n  return resultat;\n}\n\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n < 2) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int i){\n\tint f;\n\tif (i < 2) f = 1;\n\telse f = i * factorial(i-1);\n\treturn f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\ndouble factorial(int i){\n\tdouble f;\n\tif (i < 2) f = 1;\n\telse f = i * factorial(i-1);\n\treturn f;\n}\n\nint main()\n{\n\tdouble n, e, f; //n <= 20;\n\tdouble i;\n\t\n\twhile (cin >> n){\n\t\tf = 1;\n\t\te = 1;\n\t\tfor (i = 1; i < n; i++){\n\t\t\te = e + (1/(f*i));\n\t\t\tf = f * i;\n\t\t}\n\t\tcout.setf(ios::fixed);\n\t\tcout.precision(0);\n\t\tcout << \"Amb \" << n << \" terme(s) \";\n\t\tcout.setf(ios::fixed);\n\t\tcout.precision(10);\n\t\tcout << \"s'obte \" << e << \".\" << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint main()\n{\n\tdouble n, e, f; //n <= 20;\n\tdouble i;\n\t\n\twhile (cin >> n){\n\t\tf = 1;\n\t\te = 1;\n\t\tfor (i = 1; i < n; i++){\n\t\t\te = e + (1/(f*i));\n\t\t\tf = f * i;\n\t\t}\n\t\tcout.setf(ios::fixed);\n\t\tcout.precision(0);\n\t\tcout << \"Amb \" << n << \" terme(s) \";\n\t\tcout.setf(ios::fixed);\n\t\tcout.precision(10);\n\t\tif (n == 0) cout << \"s'obte \" << n << endl;\n\t\telse cout << \"s'obte \" << e << \".\" << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\nint factorial(int n) {\n    if(n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\nint factorial(int n) {\n    if(n == 1) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "int factorial(int n) {\n    if(n == 1) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  // caso fin de la recursividad\n   if (n == 1) return 1;\n  // caso recursivo\n   return n*factorial(n-1);\n  \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    // caso fin de la recursividad\n    if ( n == 0) return 1;// Para comtemplar el caso de 0, el caso \n                          // de fin de recur. será el indicado.\n    // caso recursivo\n    return n*factorial(n - 1)}\n",
  "int factorial(int n) {\n    if(n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\n",
  "int factorial(int n) {\n    //caso fin de la recursividad. El return devuelve el final y sale de la función\n    if (n == 0) return 1;\n    //caso recursivo\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    // caso fin de la recursividad\n    if ( n == 0) return 1;// Para comtemplar el caso de 0, el caso \n                          // de fin de recur. será el indicado.\n    // caso recursivo\n    return n*factorial(n - 1);}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  // caso fin de la recursividad\n   if (n == 1) return 1;\n  // caso recursivo\n   return n*factorial(n-1);\n  \n}\nint main (){\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    // caso fin de la recursividad\n    if ( n == 0) return 1;// Para comtemplar el caso de 0, el caso \n                          // de fin de recur. será el indicado.\n    // caso recursivo\n    return n*factorial(n - 1);}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  // caso fin de la recursividad\n   if (n == 0) return 1;\n  // caso recursivo\n   return n*factorial(n-1);\n  \n}\nint main (){\n}",
  "int factorial(int n){\n    //caso fin de la recursividad\n    if (n == 0) return 1;\n    //caso recursivo\n    return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    //caso fin de la recursividad\n    \n    if (n <= 1) return 1;    \n    \n    //caso recursivo\n    \n    return n * factorial(n - 1);\n\n}\n\nint main() {\n\n    int n;\n    while (cin >> n) {\n    \n        cout << factorial(n) << endl;\n    \n    }\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return n; \n    else return n*factorial(n - 1);\n}\n\nint main () {\n    int n; \n    cin >> n; \n    int m = factorial(n);\n    cout << m << endl; \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1; \n    else return n*factorial(n - 1);\n}\n\nint main () {\n    int n; \n    cin >> n; \n    int m = factorial(n);\n    cout << m << endl; \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n*factorial (n-1);\n    }\n    \nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    }\n    \n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint fact (int a) {\r\n    if (a==0) { return 1; \r\n}else{\r\n      return a* fact (a-1);\r\n      }\r\n}\r\nint main()\r\n{\r\n    int a;\r\n    cin >> a;\r\n    cout << fact (a) << endl;\r\n\r\n\r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int a) {\r\n    if(a==0) { return 1;\r\n    \r\n    } else{ \r\n            \r\n            return a * factorial ( a-1);\r\n            \r\n            }\r\n            \r\n} \r\n\r\n   \r\nint main()\r\n{\r\n    int a;\r\ncin >> a;\r\ncout << factorial (a) <<endl;\r\n    \r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int a) {\r\n    if (a==0) { return 1; \r\n} else { \r\n       return a*factorial (a-1);\r\n       }\r\n}\r\nint main()\r\n{\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial (a) << endl;\r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n\r\n\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n    int  factorial (int n){\r\n    if (n == 0) { \r\n          return 1;\r\n    }else{\r\n    return n*factorial (n-1);\r\n}}\r\n\r\nint main()\r\n{\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial (a)<< endl;\r\n    \r\n    \r\n    \r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0){ return 1;\r\n    }else{\r\n      return n*factorial(n-1);\r\n      }\r\n    }\r\n\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n    \r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n\r\nint factorial (int a) {\r\n    if (a==0) { return 1;\r\n} else {\r\n       return a*factorial (a - 1);\r\n       }\r\n       }\r\n\r\n\r\n\r\nint main()\r\n{\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial (a) << endl;\r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int n){\r\n          if (0<n<12){\r\n                      return 0;}\r\n                      else{\r\n                            return n*factorial (n-1);\r\n                            }\r\n                            }\r\n          \r\n      \r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout <<factorial (n)<< endl;\r\n   \r\n    \r\n    \r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int n){\r\n          if (n==0){\r\n                      return 1;}\r\n                      else{\r\n                            return n*factorial (n-1);\r\n                            }\r\n                            }\r\n          \r\n      \r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout <<factorial (n)<< endl;\r\n   \r\n    \r\n    \r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint fact (int a) {\r\n    if (a==0) {return 1;\r\n    } else {\r\n           return a*fact(a-1);\r\n           }\r\n           }\r\nint main()\r\n{   int a;\r\n    cin >>a;\r\n    cout << fact (a)<<endl;\r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int n) {\r\n    if (n==0) { return 1; \r\n}else{\r\n      return n*factorial (n-1);\r\n      }\r\n      \r\n}\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n    \r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int n) {\r\n    if (n==0) { return 1;\r\n    }else{\r\n          return n*factorial (n-1);\r\n          }\r\n          }\r\nint main()\r\n\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n)<< endl;\r\n\r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial ( int a ){\r\n    \r\n    \r\n    \r\n    if   (a==0) {  return 1 ; }\r\n    \r\n   else { return a * factorial ( a - 1 );}\r\n}\r\n\r\n\r\nint main(int argc, char *argv[])\r\n\r\n{int a ;\r\n\r\ncin >> a;\r\n\r\ncout << factorial ( a ) << endl;\r\n\r\n\r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\r\nif (n == 0) { return  1; } else { return  n * factorial (n-1); }\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    \r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a);\r\n    \r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial (int a) {\r\n    if (a==0) {return 1;\r\n    } else {\r\n           return a*factorial(a-1);\r\n           }\r\n           }\r\nint main()\r\n{   int a;\r\n    cin >>a;\r\n    cout << factorial (a)<<endl;\r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\r\nif(n == 0) {\r\n           return 1;\r\n           }else{\r\n                 return n*  factorial(n-1);\r\n                 \r\n           }\r\n} \r\n                              \r\nint main() {\r\n    int a;\r\n    cin>> a;\r\n    cout << factorial (a); \r\n    \r\n\r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n    if (n==1) return 1;\n    return n * factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n * factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "/*  int mcd(int a,int b) {\n    if (b==0) {return a;}\n    else return mcd(b,a%b);\n      \n} \n\nint nombre_digits(int n) {\n    if (n<10) {return 1;}\n    else {return 1 + nombre_digits(n/10);}\n}\n*/\n\nint factorial (int n) {\n    if (n==1 or n==0) return 1;\n    else return n * factorial (n-1);\n}\n\n/*\nint suma_digits(int n) {\n    if (n<10) return n;\n    else return n % 10 + suma_digits(n/10);\n}\n\nbool es_multiple_3(int n) {\n    if (n<10) return (n==3 or n==6 or n==9);\n    else return es_multiple_3(suma_digits(n));\n}\n\nint reduccio_digits(int n)  {\n    if (n<10) return n;\n    else return reduccio_digits(suma_digits(n));\n}\n\n#include <iostream>\nusing namespace std;\n\nvoid pinta(int n,char a) {\n    int j;\n    for(j=1;j<=n;++j) {\n            cout << \"*\";\n        }\n    cout << endl;\n}\nvoid barres(int n)  {\n    if (n==1) pinta(1,'*');\n    else {\n        barres(n-1);        \n        barres(n-1);  \n        pinta(n,'*');  \n    }\n        \n}\n*/\n#include <iostream>\nusing namespace std;\n/*\nint operacions(char a,char b,char c) {\n    if ( int(c) <= int('9') and int(c) >= int('0') ) return opera (a,b,c);\n    else return opera()\n} \n\nint opera(char oper,int x,int y) {\n    if (oper == '+') return x + y;\n    else if (oper == '-') return x - y;\n    else if (oper == '*') return x * y;\n}\n\nvoid calcula()\n\nint main(){\n    int a,b,c;\n    char d = \"H\";\n    while (cin >> a >> b >> c) {\n        cout << opera(a,b,c) << endl;\n        }\n}\n*/\n",
  "#include <iostream>\nusing namespace std;\n// FUncio que retorna !n recursivament.\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    }\n    \n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial (int n) {\n if (n == 1) {\n   return 1;\n }\n else return (n*factorial(n-1));\n}\n\n\nint main() {\n int n;\n cin >> n;\n cout << factorial(n) << endl;\n}",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial (int n) {\n if (n == 0) {\n   return 1;\n }\n else return n*factorial(n-1);\n}\n\n\nint main() {\n int n;\n cin >> n;\n cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int a){\n    if (a>1) return a*factorial(a-1);\n    else return 1;\n}\n\n\nint main() {\n\tint a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return (n * factorial (n-1));\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "int factorial(int n) { // recursive solution\n// Pre: n >= 0\n// Post: returns n!\nif (n == 0) return 1;\nelse return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\tif(n == 0) return 1;\n\telse\n\t\treturn factorial(n-1) * n;\n\t}\n\tint main()\n\t{\n\t\tint a;\n\t\tcin >> a;\n\t\tcout << factorial(a)<< endl;\n\t}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n < 2) return 1;\n\treturn n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint main() {\n\tint n;\n\tcin >> n;\n\tint res = 0;\n\tif ( n >= 0 and n <= 12 ){\n\t\twhile ( n > 0 ) {\n\t\tres = res + n;\n\t\t--n;\n\t\t}\n\t}\n\tcout << res << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint res = 0;\n\tif ( n >= 0 and n <= 12 ){\n\t\twhile ( n > 0 ) {\n\t\tres = res + n;\n\t\t--n;\n\t\t}\n\t}\n\treturn res;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==1) return 1;\n\telse return (n*factorial(n-1));\n}\n\nint main() {\n\tint nombre;\n\tcin >> nombre;\n\tint resultat = factorial(nombre);\n\tcout << resultat << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n<=1) return 1;\n\telse return (n*factorial(n-1));\n}\n\nint main() {\n\tint nombre;\n\tcin >> nombre;\n\tint resultat = factorial(nombre);\n\tcout << resultat << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint res = 1;\n\tif ( n >= 0 and n <= 12 ){\n\t\twhile ( n > 0 ) {\n\t\tres = res * n;\n\t\t--n;\n\t\t}\n\t}\n\treturn res;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "int factorial(int n) { // recursive solution\n// Pre: n >= 0\n// Post: returns n!\nif (n == 0) return 1;\nelse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial ( int n ) {\n        if ( n < 2 ) return 1;\n        else return n*factorial(n-1);\n\n}\n\nint main () {\n       int n;\n       cin >> n;\n       cout << factorial(n) << endl;\n\n\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {}\n",
  "\n\nint factorial(int n) {\n    if (n == 2) return n;\n    return n*factorial(n-1);\n}\n",
  "\n\nint factorial(int n) {\n    if (n == 2) return 2;\n    return (n*factorial(n-1));\n}\n",
  "\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return (n*factorial(n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint i=1;\nint compt=1;\nwhile(i<=n){\n    compt=compt*i;\n    i++;\n}\nreturn compt;\ncompt=0;\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n    while (n >= 0) {\n          if (n > 0) return n * factorial(n - 1); \n          else return 1;\n    }\n}\n\n\nint main () {\n    int a;\n    while(cin >> a)\n    cout << factorial(a) << endl;\n}\n          \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\nif ( n==0 ) return 1;\nif ( n== 1 ) return 1;\nreturn n* factorial ( n-1);\n    \n}\n\nint main() {\n}",
  "#include <iostream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n* factorial (n-1);\n    }\n    \n    \n    \n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0 or n == 1) return 1;\n\telse n = n * factorial(n-1);\n\treturn n;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  return n * factorial(n - 1);\n}\n\nint main(){\n  int x;\n  cin >> x;\n  cout << factorial (x) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin>>n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0 or n == 1) return 1;\n\treturn n * factorial(n-1);\n\t\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "int factorial(int n);\n    //Pre: n>=0\n    //Post: return n!\n    \n    if(n == 0){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1)\n    }\n}\n",
  "int factorial(int n);\n    //Pre: n>=0\n    //Post: return n!\n    \n    if(n == 0){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n}\n",
  "int factorial(int n);\n    //Pre: n>=0\n    //Post: return n!\n    \n    if(n == 0){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n}\n",
  "int factorial(int n){\n    //Pre: n>=0\n    //Post: return n!\n    \n    if(n == 0){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n//caso fin de la recursividad\nif(n == 0) return 1;\n//caso recursivo\nreturn n*factorial(n - 1);\n}\n\nint main(){\nint x;\ncin >> x;\ncout << \"El factorial de \" << x << \" es \" << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\nint main () {\n    int n;\n    cin >> n;\n    int f = 1;\n    int i = 0;\n    while (i < n) {\n        i = i + 1;\n        f = f*i;\n    }\n    cout << f << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n, int d) {\n    d = 0 + d;\n    if (d < n) {\n        cout << d << \", \";\n        return factorial(n, d + 1);\n    }\n    return n;\n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n, 0) << endl;\n}\n    \n",
  "int factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n    }\n",
  "// P12509_ca: Factorial recursiu\n// Albert Carrion Diaz\n\n//Pre: Rebem n\n//Post: Retornem !n\n\nint factorial(int n) {\n    if (n <= 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "int factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\n    \n",
  "int factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\n \n",
  "int factorial(int n) {\n    if (n <=1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n<=1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n <= 1) return 1;\nelse return n*factorial (n-1);\n}\n\nint main() {\n  int n;\n  while (cin >> n) cout << factorial (n) << endl;\n\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0){\n    return 1;\n    }\n    else{\n    return n*(factorial(n - 1));\n    }\n}        \n\n\nint main () {\n\n    int n;\n    cin >> n;\n    int factorial(n);\n    \n    cout << factorial << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n\n",
  "ELF\u0001\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0003\u0000\u0001\u0000\u0000\u0000\u0004\b4\u0000\u0000\u0000,\u0019\u0000\u0000\u0000\u0000\u0000\u00004\u0000 \u0000\t\u0000(\u0000*\u0000'\u0000\u0006\u0000\u0000\u00004\u0000\u0000\u00004\u0004\b4\u0004\b \u0001\u0000\u0000 \u0001\u0000\u0000\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0003\u0000\u0000\u0000T\u0001\u0000\u0000T\u0004\bT\u0004\b\u0013\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0004\b\\\n\u0000\u0000\\\n\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0001\u0000\u0000\u0000ð\u000e\u0000\u0000ð\u0004\bð\u0004\bD\u0001\u0000\u0000\u0002\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0002\u0000\u0000\u0000\b\u000f\u0000\u0000\b\u0004\b\b\u0004\bè\u0000\u0000\u0000è\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000h\u0001\u0000\u0000h\u0004\bh\u0004\b\\\u0000\u0000\u0000\\\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Påtd \t\u0000\u0000 \u0004\b \u0004\b<\u0000\u0000\u0000<\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Qåtd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000Råtdð\u000e\u0000\u0000ð\u0004\bð\u0004\b\u0010\u0001\u0000\u0000\u0010\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000/lib/ld-linux.so.2\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000GNU\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000SuSESuSE\u0000\u0000\u0000\u0000\u0001\u0000\n\u0002\u0004\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0003\u0000\u0000\u0000GNU\u0000t}L²\u001b`néµ_ë@_Hus\r\u0003\u0000\u0000\u0000\u0010\u0000\u0000\u0000\t\u0000\u0000\u0000\u000f\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u000e\u0000\u0000\u0000\r\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0005\u0000\u0000\u0000\b\u0000\u0000\u0000\u0003\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0001#\u001c \f\u0000\u0000\u0000\r\u0000\u0000\u0000\u000e\u0000\u0000\u0000s\u0007\u0002­KãÀ(EÕL\u0015\fC\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u00003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u001f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000k\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u001c\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000Ó\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000K\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000@ \u0004\b\u0000\u0000\u0000\u0011\u0000\u001b\u0000\u0000\u0001\u0000\u0000\u001c\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u0011\u0000»\u0000\u0000\u0000H\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000W\u0000\u0000\u0000à \u0004\b\u0000\u0000\u0000\u0011\u0000\u001b\u0000\u0000libstdc++.so.6\u0000__gmon_start__\u0000_Jv_RegisterClasses\u0000_ZSt16__throw_bad_castv\u0000_ZNSo3putEc\u0000_ZSt4cout\u0000_ZNSolsEi\u0000_ZNSt8ios_base4InitC1Ev\u0000_ZSt3cin\u0000_ZNSo5flushEv\u0000_ZNKSt5ctypeIcE13_M_widen_initEv\u0000_ZNSt8ios_base4InitD1Ev\u0000_ZNSirsERi\u0000libm.so.6\u0000libgcc_s.so.1\u0000libc.so.6\u0000_IO_stdin_used\u0000__cxa_atexit\u0000__libc_start_main\u0000GLIBC_2.0\u0000GLIBC_2.1.3\u0000GLIBCXX_3.4.11\u0000GLIBCXX_3.4\u0000\u0000\u0000\u0000\u0002\u0000\u0003\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0002\u0000\u0005\u0000\u0002\u0000\u0002\u0000\u0002\u0000\u0002\u0000\u0001\u0000\u0002\u0000\u0002\u0000\u0001\u0000\u0002\u0000ö\u0000\u0000\u0000\u0010\u0000\u0000\u00000\u0000\u0000\u0000\u0010ii\r\u0000\u0000\u0005\u0000.\u0001\u0000\u0000\u0010\u0000\u0000\u0000s\u001fi\t\u0000\u0000\u0003\u00008\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000aø\u0002\u0000\u0000\u0004\u0000D\u0001\u0000\u0000\u0010\u0000\u0000\u0000t)\b\u0000\u0000\u0002\u0000S\u0001\u0000\u0000\u0000\u0000\u0000\u0000ð\u0004\b\u0006\u0004\u0000\u0000@ \u0004\b\u0005\f\u0000\u0000à \u0004\b\u0005\u000f\u0000\u0000\u0000 \u0004\b\u0007\u0001\u0000\u0000\u0004 \u0004\b\u0007\u0002\u0000\u0000\b \u0004\b\u0007\u0003\u0000\u0000\f \u0004\b\u0007\u0004\u0000\u0000\u0010 \u0004\b\u0007\u0006\u0000\u0000\u0014 \u0004\b\u0007\u0007\u0000\u0000\u0018 \u0004\b\u0007\b\u0000\u0000\u001c \u0004\b\u0007\u000e\u0000\u0000  \u0004\b\u0007\t\u0000\u0000$ \u0004\b\u0007\n\u0000\u0000( \u0004\b\u0007\u000b\u0000\u0000UåSì\u0004è\u0000\u0000\u0000\u0000[ÃP\u001a\u0000\u0000üÿÿÿÒt\u0005èN\u0000\u0000\u0000èa\u0001\u0000\u0000è\f\u0003\u0000\u0000X[ÉÃÿ5ø\u0004\bÿ%ü\u0004\b\u0000\u0000\u0000\u0000ÿ%\u0000 \u0004\bh\u0000\u0000\u0000\u0000éàÿÿÿÿ%\u0004 \u0004\bh\b\u0000\u0000\u0000éÐÿÿÿÿ%\b \u0004\bh\u0010\u0000\u0000\u0000éÀÿÿÿÿ%\f \u0004\bh\u0018\u0000\u0000\u0000é°ÿÿÿÿ%\u0010 \u0004\bh \u0000\u0000\u0000é ÿÿÿÿ%\u0014 \u0004\bh(\u0000\u0000\u0000éÿÿÿÿ%\u0018 \u0004\bh0\u0000\u0000\u0000éÿÿÿÿ%\u001c \u0004\bh8\u0000\u0000\u0000épÿÿÿÿ%  \u0004\bh@\u0000\u0000\u0000é`ÿÿÿÿ%$ \u0004\bhH\u0000\u0000\u0000éPÿÿÿÿ%( \u0004\bhP\u0000\u0000\u0000é@ÿÿÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00001í^áäðPTRhÀ\u0004\bhP\u0004\bQVhp\u0004\bèÿÿÿôUåSì\u0004=l¡\u0004\b\u0000u?¡p¡\u0004\b»\u0000\u0004\bëü\u0004\bÁû\u0002ë\u00019Øs\u001e¶\u0000\u0000\u0000\u0000À\u0001£p¡\u0004\bÿ\u0014ü\u0004\b¡p¡\u0004\b9ØrèÆ\u0005l¡\u0004\b\u0001Ä\u0004[]Ãt&\u0000¼'\u0000\u0000\u0000\u0000Uåì\u0018¡\u0004\u0004\bÀt\u0012¸\u0000\u0000\u0000\u0000Àt\tÇ\u0004$\u0004\u0004\bÿÐÉÃU¸\u0001\u0000\u0000\u0000åU\bÒt\t\u000f¯Âê\u0001uø]Ã¶\u0000\u0000\u0000\u0000UåäðVSì(D$\u001cD$\u0004Ç\u0004$@ \u0004\bèÙþÿÿD$\u001cº\u0001\u0000\u0000\u0000Àt\ft&\u0000\u000f¯Ðè\u0001uøT$\u0004Ç\u0004$à \u0004\bè þÿÿÃ\u0000@ôt\u0003|ötK~\u001c\u0000t+\u000f¶F'\u000f¾À\u001c$D$\u0004èþÿÿ\u0004$èpþÿÿÄ(1À[^ì]Ãt&\u00004$è\u0018þÿÿ\u0006ÇD$\u0004\n\u0000\u0000\u00004$ÿP\u0018ë¿èáýÿÿö¼'\u0000\u0000\u0000\u0000Uåì\u0018Ç\u0004$t¡\u0004\bèöýÿÿÇD$\b0 \u0004\bÇD$\u0004t¡\u0004\bÇ\u0004$H\u0004\bèýÿÿÉÃUWVSèi\u0000\u0000\u0000Ã\u0017\u0000\u0000ì\u001cl$0»üþÿÿè'ýÿÿüþÿÿ)ÇÁÿ\u0002ÿt)1ö¶\u0000\u0000\u0000\u0000D$8,$D$\bD$4D$\u0004ÿ³üþÿÿÆ\u00019þrßÄ\u001c[^_]Ãë\róÃ\u001c$ÃUåSì\u0004¡ô\u0004\bøÿt\u0013»ô\u0004\bfë\u0004ÿÐ\u0003øÿuôÄ\u0004[]ÃUåSì\u0004è\u0000\u0000\u0000\u0000[Ãì\u0016\u0000\u0000è¬ýÿÿY[ÉÃ\u0003\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0001\u001b\u0003;8\u0000\u0000\u0000\u0006\u0000\u0000\u00000þÿÿT\u0000\u0000\u0000Pþÿÿt\u0000\u0000\u0000\u0000ÿÿÿ´\u0000\u0000\u00000ÿÿÿÔ\u0000\u0000\u0000 ÿÿÿ\u0010\u0001\u0000\u0000¢ÿÿÿ$\u0001\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001zR\u0000\u0001|\b\u0001\u001b\f\u0004\u0004\u0001\u0000\u0000\u001c\u0000\u0000\u0000\u001c\u0000\u0000\u0000Ôýÿÿ\u001a\u0000\u0000\u0000\u0000A\u000e\bG\u0002\r\u0005QÅ\f\u0004\u0004\u0000\u0000<\u0000\u0000\u0000<\u0000\u0000\u0000Ôýÿÿ§\u0000\u0000\u0000\u0000A\u000e\bB\u0002\r\u0005W\u0010\u0003\bu\u0000\tð\u001a\tø\"\u0010\u0006\bu\u0000\tð\u001a\tü\"\u0002d\nÃAÆB\r\u0004AÅ\u000e\u0004F\u000b\u0000\u001c\u0000\u0000\u0000|\u0000\u0000\u0000Dþÿÿ0\u0000\u0000\u0000\u0000A\u000e\bB\u0002\r\u0005lÅ\f\u0004\u0004\u0000\u00008\u0000\u0000\u0000\u0000\u0000\u0000Tþÿÿa\u0000\u0000\u0000\u0000A\u000e\bA\u000e\fA\u000e\u0010A\u000e\u0014\u0005\u0004\u0003\u0002N\u000e0\u0002J\u000e\u0014AÃ\u000e\u0010AÆ\u000e\fAÇ\u000e\bAÅ\u000e\u0004\u0010\u0000\u0000\u0000Ø\u0000\u0000\u0000þÿÿ\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000ì\u0000\u0000\u0000vþÿÿ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ÿÿÿÿ \u0004\b\u0000\u0000\u0000\u0000ÿÿÿÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000Þ\u0000\u0000\u0000\u0001\u0000\u0000\u0000è\u0000\u0000\u0000\u0001\u0000\u0000\u0000ö\u0000\u0000\u0000\f\u0000\u0000\u0000\u0004\b\r\u0000\u0000\u0000ü\u0004\b\u0004\u0000\u0000\u0000Ä\u0004\bõþÿo\u0018\u0004\b\u0005\u0000\u0000\u0000H\u0004\b\u0006\u0000\u0000\u0000H\u0004\b\n\u0000\u0000\u0000_\u0001\u0000\u0000\u000b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000ô\u0004\b\u0002\u0000\u0000\u0000X\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0017\u0000\u0000\u0000@\u0004\b\u0011\u0000\u0000\u0000(\u0004\b\u0012\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0013\u0000\u0000\u0000\b\u0000\u0000\u0000þÿÿoÈ\u0004\bÿÿÿo\u0002\u0000\u0000\u0000ðÿÿo¨\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Þ\u0004\bî\u0004\bþ\u0004\b\u000e\u0004\b\u001e\u0004\b.\u0004\b>\u0004\bN\u0004\b^\u0004\bn\u0004\b~\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ospwg\u0000GCC: (SUSE Linux) 4.5.1 20101208 [gcc-4_5-branch revision 167585]\u0000\u0000\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0004\b\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0002\u0000õ\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000P\u0004\br\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000!\u0000\u0000\u0000\u0002\u0000k\u0000\u0000\u0000\u0000\u0000\u0000r\u0000\u0000\u0000_IO_stdin_used\u0000\u0000\u0000\u0000\u00006\u0000\u0000\u0000\u0002\u0000õ\u0000\u0000\u0000/\u0001\u0000\u0000E\u0000\u0000\u0000__libc_csu_init\u0000¿\u0000\u0000\u0000__libc_csu_fini\u0000\u0000\u0000\u0000\u0000g\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0000\u0000\u0004\b²\u0004\b../sysdeps/i386/elf/start.S\u0000/usr/src/packages/BUILD/glibc-2.11.3/csu\u0000GNU AS 2.21\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0014\u0000\u0000\u0000\u0004\u0001)\u0000\u0000\u0000\u0001û\u0000\u0000\u0000\u0000\u0000\u0000\u0000´\u0004\b´\u0004\b[\u0000\u0000\u0000\u0002\u0001\b¢\u0000\u0000\u0000\u0002\u0002\u0007_\u0000\u0000\u0000\u0002\u0004\u0007\u0000\u0000\u0000\u0002\u0004\u0007\u0000\u0000\u0000\u0002\u0001\u0006¤\u0000\u0000\u0000\u0002\u0002\u0005r\u0000\u0000\u0000\u0003\u0004\u0005int\u0000\u0002\b\u0005°\u0000\u0000\u0000\u0002\b\u0007\u0000\u0000\u0000\u0002\u0004\u0005µ\u0000\u0000\u0000\u0002\u0001\u0006«\u0000\u0000\u0000\u0004|\u0000\u0000\u0000\u0001\u0019\u0000\u0000\u0000\u0001\u0005\u0003\u001c\u0004\b\u0005O\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0002\u0000V\u0000\u0000\u0000\u0004\u0001)\u0000\u0000\u0000\u0001÷\u0000\u0000\u0000\u0000\u0000\u0000\u0000P\u0004\bÂ\u0004\b\u0000\u0000\u0000\u0002\u0004\u0005int\u0000\u0003È\u0000\u0000\u0000\u0002Ó7\u0000\u0000\u0000\u0004\u0004\u0007\u0000\u0000\u0000\u0004\u0004\u0005µ\u0000\u0000\u0000\u0005\u0001ç\u0000\u0000\u0000\u0001i\u0001P\u0004\b±\u0004\b\u0000\u0000\u0000\u0000§\u0000\u0000\u0000\u0006â\u0000\u0000\u0000\u0001i%\u0000\u0000\u0000\u0002\u0000\u0006#\u0001\u0000\u0000\u0001i§\u0000\u0000\u0000\u0002\u0004\u0006Ã\u0000\u0000\u0000\u0001i§\u0000\u0000\u0000\u0002\b\u0007¾\u0000\u0000\u0000\u0001zº\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\ti\u0000\u0001{,\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n\u0004­\u0000\u0000\u0000\n\u0004³\u0000\u0000\u0000\u0004\u0001\u0006«\u0000\u0000\u0000\u000b,\u0000\u0000\u0000\f\u0001\u0013\u0001\u0000\u0000\u0001\u0001À\u0004\bÂ\u0004\b\u0002t\u0004\rô\u0000\u0000\u0000Þ\u0000\u0000\u0000\u000e\u0000\u000f\u0001ô\u0000\u0000\u0000\u0010%\u0000\u0000\u0000\u0010§\u0000\u0000\u0000\u0010§\u0000\u0000\u0000\u0000\n\u0004Þ\u0000\u0000\u0000\u0011Ï\u0000\u0000\u0000\u0001;Ó\u0000\u0000\u0000\u0001\u0001\u0011\u0002\u0001\u0000\u0000\u0001=Ó\u0000\u0000\u0000\u0001\u0001\u0011Ï\u0000\u0000\u0000\u0001;Ó\u0000\u0000\u0000\u0001\u0001\u0011\u0002\u0001\u0000\u0000\u0001=Ó\u0000\u0000\u0000\u0001\u0001\u0000\u0001\u0011\u0000\u0010\u0006\u0011\u0001\u0012\u0001\u0003\b\u001b\b%\b\u0013\u0005\u0000\u0000\u0000\u0001\u0011\u0001%\u000e\u0013\u000b\u0003\u000e\u001b\u000e\u0011\u0001\u0012\u0001\u0010\u0006\u0000\u0000\u0002$\u0000\u000b\u000b>\u000b\u0003\u000e\u0000\u0000\u0003$\u0000\u000b\u000b>\u000b\u0003\b\u0000\u0000\u00044\u0000\u0003\u000e:\u000b;\u000bI\u0013?\f\u0002\n\u0000\u0000\u0005&\u0000I\u0013\u0000\u0000\u0000\u0001\u0011\u0001%\u000e\u0013\u000b\u0003\u000e\u001b\u000e\u0011\u0001\u0012\u0001\u0010\u0006\u0000\u0000\u0002$\u0000\u000b\u000b>\u000b\u0003\b\u0000\u0000\u0003\u0016\u0000\u0003\u000e:\u000b;\u000bI\u0013\u0000\u0000\u0004$\u0000\u000b\u000b>\u000b\u0003\u000e\u0000\u0000\u0005.\u0001?\f\u0003\u000e:\u000b;\u000b'\f\u0011\u0001\u0012\u0001@\u0006\u0001\u0013\u0000\u0000\u0006\u0005\u0000\u0003\u000e:\u000b;\u000bI\u0013\u0002\n\u0000\u0000\u00074\u0000\u0003\u000e:\u000b;\u000bI\u0013\u0000\u0000\b\u000b\u0001U\u0006\u0000\u0000\t4\u0000\u0003\b:\u000b;\u000bI\u0013\u0002\u0006\u0000\u0000\n\u000f\u0000\u000b\u000bI\u0013\u0000\u0000\u000b&\u0000I\u0013\u0000\u0000\f.\u0000?\f\u0003\u000e:\u000b;\u000b'\f\u0011\u0001\u0012\u0001@\n\u0000\u0000\r\u0001\u0001I\u0013\u0001\u0013\u0000\u0000\u000e!\u0000\u0000\u0000\u000f\u0015\u0001'\f\u0001\u0013\u0000\u0000\u0010\u0005\u0000I\u0013\u0000\u0000\u00114\u0000\u0003\u000e:\u000b;\u000bI\u0013?\f<\f\u0000\u0000\u0000W\u0000\u0000\u0000\u0002\u00002\u0000\u0000\u0000\u0001\u0001û\u000e\r\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001../sysdeps/i386/elf\u0000\u0000start.S\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002\u0004\b\u0003À\u0000\u00013!4=%\"\u0003\u0018 YZ!\"\\[\u0002\u0001\u0000\u0001\u0001#\u0000\u0000\u0000\u0002\u0000\u001d\u0000\u0000\u0000\u0001\u0001û\u000e\r\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000init.c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000V\u0000\u0000\u0000\u0001\u0001û\u000e\r\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0001/usr/lib/gcc/i586-suse-linux/4.5/include\u0000\u0000elf-init.c\u0000\u0000\u0000\u0000stddef.h\u0000\u0001\u0000\u0000\u0000\u0000\u0005\u0002P\u0004\b\u0003é\u0000\u0001\b \u0003\u0010JdZ­\u0000\u0002\u0004\u0002\u0006J\u0000\u0002\u0004\u0002\u0006\u0000\u0002\u0004\u0002\bv\bm\u001a\u0002\u0002\u0000\u0001\u0001/usr/src/packages/BUILD/glibc-2.11.3/csu\u0000GNU C 4.5.1 20101208 [gcc-4_5-branch revision 167585]\u0000short unsigned int\u0000short int\u0000_IO_stdin_used\u0000long long unsigned int\u0000unsigned char\u0000long long int\u0000size\u0000envp\u0000size_t\u0000__init_array_start\u0000argc\u0000__libc_csu_init\u0000elf-init.c\u0000__init_array_end\u0000__libc_csu_fini\u0000argv\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000t\u0004\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0002\u0000t\b\u0002\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0002\u0000t\f\u0003\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0002\u0000t\u0010\u0004\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0002\u0000t\u0014\u0012\u0000\u0000\u0000\\\u0000\u0000\u0000\u0002\u0000t0\\\u0000\u0000\u0000]\u0000\u0000\u0000\u0002\u0000t\u0014]\u0000\u0000\u0000^\u0000\u0000\u0000\u0002\u0000t\u0010^\u0000\u0000\u0000_\u0000\u0000\u0000\u0002\u0000t\f_\u0000\u0000\u0000`\u0000\u0000\u0000\u0002\u0000t\b`\u0000\u0000\u0000a\u0000\u0000\u0000\u0002\u0000t\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000!\u0000\u0000\u00002\u0000\u0000\u0000\u0002\u00000U\u0000\u0000\u0000Y\u0000\u0000\u0000\u0001\u0000V\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000e\u0000\u0000\u0000\u0002\u0000k\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0002\u0000õ\u0000\u0000\u0000/\u0001\u0000\u0000,\u0000\u0000\u0000size_t\u0000\u0000\u0000\u0000\u0000\u0016\u0000\u0000\u0000\u001c\u0000\u0000\u0000!\u0000\u0000\u0000Y\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000.symtab\u0000.strtab\u0000.shstrtab\u0000.interp\u0000.note.ABI-tag\u0000.note.SuSE\u0000.note.gnu.build-id\u0000.gnu.hash\u0000.dynsym\u0000.dynstr\u0000.gnu.version\u0000.gnu.version_r\u0000.rel.dyn\u0000.rel.plt\u0000.init\u0000.text\u0000.fini\u0000.rodata\u0000.eh_frame_hdr\u0000.eh_frame\u0000.ctors\u0000.dtors\u0000.jcr\u0000.dynamic\u0000.got\u0000.got.plt\u0000.data\u0000.bss\u0000.comment.SUSE.OPTs\u0000.comment\u0000.debug_aranges\u0000.debug_pubnames\u0000.debug_info\u0000.debug_abbrev\u0000.debug_line\u0000.debug_str\u0000.debug_loc\u0000.debug_pubtypes\u0000.debug_ranges\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000T\u0004\bT\u0001\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000h\u0004\bh\u0001\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u00001\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\b\u0001\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000 \u0004\b \u0001\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000S\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0002\u0000\u0000\u0000Ä\u0004\bÄ\u0001\u0000\u0000T\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000O\u0000\u0000\u0000öÿÿo\u0002\u0000\u0000\u0000\u0018\u0004\b\u0018\u0002\u0000\u00000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000Y\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0002\u0000\u0000\u0000H\u0004\bH\u0002\u0000\u0000\u0000\u0001\u0000\u0000\b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000a\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000H\u0004\bH\u0003\u0000\u0000_\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000i\u0000\u0000\u0000ÿÿÿo\u0002\u0000\u0000\u0000¨\u0004\b¨\u0004\u0000\u0000 \u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000v\u0000\u0000\u0000þÿÿo\u0002\u0000\u0000\u0000È\u0004\bÈ\u0004\u0000\u0000`\u0000\u0000\u0000\b\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000(\u0004\b(\u0005\u0000\u0000\u0018\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0002\u0000\u0000\u0000@\u0004\b@\u0005\u0000\u0000X\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u000e\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\b\u0005\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000È\u0004\bÈ\u0005\u0000\u0000À\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0004\b\u0006\u0000\u0000l\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000£\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000ü\u0004\bü\b\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000©\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0018\u0004\b\u0018\t\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000±\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000 \u0004\b \t\u0000\u0000<\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000¿\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\\\u0004\b\\\t\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000É\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000ð\u0004\bð\u000e\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ð\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000ü\u0004\bü\u000e\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000×\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0004\u0004\b\u0004\u000f\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0003\u0000\u0000\u0000\b\u0004\b\b\u000f\u0000\u0000è\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\b\u0000\u0000\u0000å\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000ð\u0004\bð\u000f\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000ê\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000ô\u0004\bô\u000f\u0000\u00008\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000ó\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000, \u0004\b,\u0010\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000ù\u0000\u0000\u0000\b\u0000\u0000\u0000\u0003\u0000\u0000\u0000@ \u0004\b4\u0010\u0000\u00008\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000þ\u0000\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u00004\u0010\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u0000:\u0010\u0000\u0000B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u001a\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0010\u0000\u0000_\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001f\u0011\u0000\u0000$\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000C\u0013\u0000\u0000*\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000S\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000m\u0014\u0000\u0000\u0010\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000_\u0001\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u0000}\u0015\u0000\u0000(\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000j\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¥\u0016\u0000\u0000«\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000u\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000P\u0017\u0000\u0000/\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¼\u001f\u0000\u0000à\u0005\u0000\u0000)\u0000\u0000\u0000?\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\t\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000T\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000\u0000\u0000\u0000\u0000h\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0003\u0000\u0000\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0004\u0000\u0000\u0000\u0000\u0000Ä\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0018\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0006\u0000\u0000\u0000\u0000\u0000H\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000H\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\b\u0000\u0000\u0000\u0000\u0000¨\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\t\u0000\u0000\u0000\u0000\u0000È\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\n\u0000\u0000\u0000\u0000\u0000(\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000b\u0000\u0000\u0000\u0000\u0000@\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\f\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\r\u0000\u0000\u0000\u0000\u0000È\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000e\u0000\u0000\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u000f\u0000\u0000\u0000\u0000\u0000ü\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0018\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0011\u0000\u0000\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0012\u0000\u0000\u0000\u0000\u0000\\\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0013\u0000\u0000\u0000\u0000\u0000ð\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0014\u0000\u0000\u0000\u0000\u0000ü\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0004\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0016\u0000\u0000\u0000\u0000\u0000\b\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0017\u0000\u0000\u0000\u0000\u0000ð\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0018\u0000\u0000\u0000\u0000\u0000ô\u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u0019\u0000\u0000\u0000\u0000\u0000, \u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u001a\u0000\u0000\u0000\u0000\u0000@ \u0004\b\u0000\u0000\u0000\u0000\u0003\u0000\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001d\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000!\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000#\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000&\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\u001e\u0000\u0000\u0000ð\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0014\u0000,\u0000\u0000\u0000ü\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0015\u0000:\u0000\u0000\u0000\u0004\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0016\u0000G\u0000\u0000\u0000À\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\u000f\u0000]\u0000\u0000\u0000l¡\u0004\b\u0001\u0000\u0000\u0000\u0001\u0000\u001b\u0000l\u0000\u0000\u0000p¡\u0004\b\u0004\u0000\u0000\u0000\u0001\u0000\u001b\u0000z\u0000\u0000\u0000 \u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\u000f\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\u0000\u0000\u0000ø\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0014\u0000\u0000\u0000\u0000X\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0013\u0000¡\u0000\u0000\u0000\u0004\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0016\u0000­\u0000\u0000\u0000Ð\u0004\b\u0000\u0000\u0000\u0000\u0002\u0000\u000f\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿÃ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿÐ\u0000\u0000\u0000 \u0004\b0\u0000\u0000\u0000\u0002\u0000\u000f\u0000é\u0000\u0000\u0000t¡\u0004\b\u0001\u0000\u0000\u0000\u0001\u0000\u001b\u0000ø\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\u0003\u0001\u0000\u0000ô\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0019\u0000\u0019\u0001\u0000\u0000ð\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000*\u0001\u0000\u0000ð\u0004\b\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000=\u0001\u0000\u0000\b\u0004\b\u0000\u0000\u0000\u0000\u0001\u0000\u0017\u0000F\u0001\u0000\u0000, \u0004\b\u0000\u0000\u0000\u0000 \u0000\u001a\u0000Q\u0001\u0000\u0000@ \u0004\b\u0000\u0000\u0000\u0011\u0000\u001b\u0000g\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000~\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0001\u0000\u0000À\u0004\b\u0002\u0000\u0000\u0000\u0012\u0000\u000f\u0000¨\u0001\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u000f\u0000¯\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000Ô\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000ã\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000÷\u0001\u0000\u0000\u0018\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u0011\u0000þ\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000/\u0002\u0000\u0000ü\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u0010\u00005\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000Z\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000w\u0002\u0000\u0000P\u0004\b\u001a\u0000\u0000\u0000\u0012\u0000\u000f\u0000\u0002\u0000\u0000H\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000ª\u0002\u0000\u0000\u001c\u0004\b\u0004\u0000\u0000\u0000\u0011\u0000\u0011\u0000¹\u0002\u0000\u0000, \u0004\b\u0000\u0000\u0000\u0000\u0010\u0000\u001a\u0000Æ\u0002\u0000\u0000à \u0004\b\u0000\u0000\u0000\u0011\u0000\u001b\u0000Ý\u0002\u0000\u00000 \u0004\b\u0000\u0000\u0000\u0000\u0011\u0002\u001a\u0000ê\u0002\u0000\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0011\u0002\u0015\u0000÷\u0002\u0000\u0000P\u0004\ba\u0000\u0000\u0000\u0012\u0000\u000f\u0000\u0007\u0003\u0000\u00004 \u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿ\u0013\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000.\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000F\u0003\u0000\u0000x¡\u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿK\u0003\u0000\u00004 \u0004\b\u0000\u0000\u0000\u0000\u0010\u0000ñÿR\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000k\u0003\u0000\u0000Â\u0004\b\u0000\u0000\u0000\u0000\u0012\u0002\u000f\u0000\u0003\u0000\u0000p\u0004\b§\u0000\u0000\u0000\u0012\u0000\u000f\u0000\u0003\u0000\u0000\u0004\b\u0000\u0000\u0000\u0000\u0012\u0000\r\u0000\u0000init.c\u0000initfini.c\u0000crtstuff.c\u0000__CTOR_LIST__\u0000__DTOR_LIST__\u0000__JCR_LIST__\u0000__do_global_dtors_aux\u0000completed.5522\u0000dtor_idx.5524\u0000frame_dummy\u0000__CTOR_END__\u0000__FRAME_END__\u0000__JCR_END__\u0000__do_global_ctors_aux\u0000factorial.cc\u0000_GLOBAL__I__Z9factoriali\u0000_ZStL8__ioinit\u0000elf-init.c\u0000_GLOBAL_OFFSET_TABLE_\u0000__init_array_end\u0000__init_array_start\u0000_DYNAMIC\u0000data_start\u0000_ZSt3cin@@GLIBCXX_3.4\u0000_ZNSolsEi@@GLIBCXX_3.4\u0000__cxa_atexit@@GLIBC_2.1.3\u0000__libc_csu_fini\u0000_start\u0000_ZSt16__throw_bad_castv@@GLIBCXX_3.4\u0000__gmon_start__\u0000_Jv_RegisterClasses\u0000_fp_hw\u0000_ZNKSt5ctypeIcE13_M_widen_initEv@@GLIBCXX_3.4.11\u0000_fini\u0000_ZNSt8ios_base4InitC1Ev@@GLIBCXX_3.4\u0000__libc_start_main@@GLIBC_2.0\u0000_Z9factoriali\u0000_ZNSt8ios_base4InitD1Ev@@GLIBCXX_3.4\u0000_IO_stdin_used\u0000__data_start\u0000_ZSt4cout@@GLIBCXX_3.4\u0000__dso_handle\u0000__DTOR_END__\u0000__libc_csu_init\u0000__bss_start\u0000_ZNSo5flushEv@@GLIBCXX_3.4\u0000_ZNSirsERi@@GLIBCXX_3.4\u0000_end\u0000_edata\u0000_ZNSo3putEc@@GLIBCXX_3.4\u0000__i686.get_pc_thunk.bx\u0000main\u0000_init\u0000",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    factorial(n);\n    cout << factorial(n) << endl;\n}        \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main () {\n    int n;\n    cin>> n;\n    cout << factorial (n) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int N) {\n\tif (N == 0) return 1;\n\telse return N * factorial (N-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}    \n    \n",
  "# include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n<2) return 2;\n    return n*factorial(n-1);\n}\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n<2) return 1;\n    return n*factorial(n-1);\n}\n",
  "int factorial (int n) {\n\n\tif (n == 0) return 1;\n\tif (n == 1) return 1;\n\n\telse return factorial (n-1);\n\n}\n",
  "int factorial (int n) {\n\n\twhile (n > 0) {\n\n\t\tn *= factorial (n-1);\n\t}\n\n\treturn n;\n\n}\n",
  "int factorial (int n) {\n\n\twhile (n > 1) {\n\n\t\tn *= factorial (n-1);\n\t}\n\n\treturn n;\n\n}\n",
  "int factorial (int n) {\n\n\tif (n == 1) return 1;\n\n\tn *= factorial (n-1);\n\n\treturn n;\n\n}\n",
  "int factorial (int n) {\n\n\tif (n == 1) return 1;\n\n\telse n *= factorial (n-1);\n\n\treturn n;\n\n}\n",
  "int factorial (int n) {\n\n\tif (n < 2) return 1;\n\n\treturn n * factorial (n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n <= 1) return 1;\n    return (n)*factorial(n-1);\n}\n\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n < 2) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    (if n==1) return 1;\n    if n==0) return 0;\n    else return n*factorial(n-1);\n    \n} \n\nint main() {\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==1) return 1;\n    if (n==0) return 0;\n    else return n*factorial(n-1);\n    \n} \n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==1) return 1;\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    \n} \n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial( int n ) {\n    if ( n == 0 or n == 1 ) return 1;\n    int cont = 1;\n    int b = 1;\n    while ( cont <= n ) {\n        b = b * cont;\n        ++cont;\n    }\nreturn b;\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial (a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int m = 1;\n    for (int i = 1; i <= n; ++i){\n        m = m * i;\n    }\n    return m;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n == 0) {\n        n = 1;\n        return n;\n    }\n    else return n*factorial(n-1);\n }\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int f=n;\n    if (f==1 or f==0) return 1;\n    return f*factorial(f-1);\n  \n}\n\nint main () {\n    int penis;\n    cin >> penis;\n    cout << factorial (penis) << endl;\n}\n    \n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n\tif(n<2) {\n\t\treturn 1;\n\t} else {\n\t\treturn n*factorial(n-1);\n\t}\n}\nint main() {\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\nif (n == 0) return 1;\nreturn n * factorial(n-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    int i = 1;\n    int res = 0;\n    res = res + 1/ i;\n    if (i == n) return i;\n    return factorial(i + 1);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    int i = 1;\n    int res = 0;\n    res = res + 1/ i;\n    if (i == n) return i;\n    return factorial(i + 1);\n}\n\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 2) return 1;\n    return factorial(n - 1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    return factorial(n - 1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n < 2) return 1;\n\treturn factorial(n-1) * n;\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint main (){\n    int factorial (int n){\n    if (n<2) return1;\n        return factorial (n-1)*n;\n    }\n    fact(3)\n    if (n<2){\n        return fact (n-1)*n;\n    }\n    fact (2);\n    if (n<2){\n        return fact (n-1)*n ;\n    }\n    fact (1)\n    if (n<1){\n        return 1;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\nint main (){\n    int factorial (int n){\n    if (n<2) return1;\n        return factorial (n-1)*n;\n    }\n    fact(3)\n    if (n<2){\n        return fact (n-1)*n;\n    }\n    fact (2);\n    if (n<2){\n        return fact (n-1)*n ;\n    }\n    fact (1)\n    if (n<1){\n        return 1;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(n) {\n    if (n <= 1= return 1;\n    else return n*factorial(n-1)\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(n) {\n    if (n<=1)return 1;\n    else return n*factorial(n-1)\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<=1)return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint n;\n\nint factorial(int i) {\n    if (i == 0) return 1;\n    return i*factorial(i-1);\n}\n\nint main() {\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n   if (n == 0) return 1;\n   return n * (factorial (n-1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl ;\n    \n}\n        \n    \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n== 0) return 1;\n    return n*(factorial (n-1));\n}\n  \nint main() {\n        int n;\n        cin >> n; \n        cout << factorial(n) << endl;\n    }\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    else return n*factorial(n - 1);\n}\nint main(){\n    int a;\n    while (cin >> a){\n        cout << factorial(a)<<endl;\n    }\n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if ( n == 0 ) return 1;\n  return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint suma_digits(int n) {\n    int compt = 1;\n    while (n >= 10) {\n        n /= 10;\n        ++compt;\n    }\n    return compt;\n}\n\nbool es_creixent(int n) {\n    int z=n%10;\n    int y=(n/10)%10;\n    \n    if (z>=y and y!=0) return es_creixent(n/10);\n    if (z>=y and y==0) return true;    \n    else return false;\n}\n\n\nint main() {\n    int x;\n    cin >> x;\n    if (es_creixent(x)) cout << \"Yes\" << endl;\n    else cout << \"No\" << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nbool es_creixent(int n) {\n    int z=n%10;\n    int y=(n/10)%10;\n    \n    if (z>=y and y!=0) return es_creixent(n/10);\n    if (z>=y and y==0) return true;    \n    else return false;\n}\n\n\nint main() {\n    int x;\n    cin >> x;\n    if (es_creixent(x)) cout << \"Yes\" << endl;\n    else cout << \"No\" << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nbool es_creixent(int n) {\n    int z=n%10;\n    int y=(n/10)%10;\n    \n    if (z<y) return false;\n    if (z>=y and y!=0) return es_creixent(n/10);\n    else return true;    \n}\n\n\nint main() {\n    int x;\n    cin >> x;\n    if (es_creixent(x)) cout << \"Yes\" << endl;\n    else cout << \"No\" << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n   if (n < 0) return 0;\n   else if (n > 1)  return n*factorial(n-1);\n   return 1;\n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial ( n ) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n== 0) return 1;\n    else return n*(factorial (n-1));\n}\n  \nint main() {\n        int n;\n        cin >> n; \n        cout << factorial(n) << endl;\n    }\n",
  "int factorial(int n)\n{\n    if(n == 1) return n;\n    else return n * factorial(n-1);\n}",
  "int factorial(int n)\n{\n    if(n == 1) return n;\n    else return n * factorial(n-1);\n}",
  "int factorial(int n)\n{\n    if(n == 1) return 1;\n    else return n * factorial(n-1);\n}",
  "# include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n\t}\n\t\nint main () {\n\tint a;\n\tcin >> a;\n\t\n\tcout << factorial(a) << endl;\n\t\n\t}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {    \n    if (n > 1) return n * factorial(n - 1);\n    else return (1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}    ",
  "#include <iostream>\n#include <iomanip>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial (n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n} \n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n<=1) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "int factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\n#include <string>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <sstream>\r\n#include <cmath>\r\n\r\nusing namespace std ;\r\n\r\n#define PI 3.14159265358979323846\r\n\r\nint factorial(int n)\r\n{\r\n    int factor=1;\r\n    while (n>1)\r\n    {\r\n    factor=factor*n;\r\n    n--;\r\n    }\r\n    return factor;\r\n}\r\nint main () \r\n{          \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n\t\n",
  "int factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return (n*factorial(n-1));\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint main (){\n    int factorial (int n){\n    if (n<2) return1;\n        return factorial (n-1)*n;\n    }\n}\n \n",
  "#include <iostream>\nusing namespace std;  \nint factorial (int n){\n      if (n<2){ return 1;\n          return factorial (n-1)*n;\n      }\n}\nint main () {\n\tint n;\t\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n\n \n",
  "#include <iostream>\nusing namespace std;  \nint factorial (int n){\n      if (n<2){ return 1;\n          return factorial (n-1)*n;\n      }\n}\n\n \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return n;\n    else return factorial(n - 1)*n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl; \n\t\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return n;\n    else return factorial(n - 1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return n;\n    else return factorial(n - 1)*n;\n}\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n*(factorial (n-1));\n}\n\nint main(){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n*(factorial (n-1));\n}\n",
  "#include<iostream>\nusing namespace std;\n//S'HA DE CONTEMPLAR QUE 0! =1!!!\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f = 1;\n    for (int i = n; i > 1; --i)\n        f = f*i;\n    return f;\n\n}//factorial\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}//main\n",
  "#include <iostream>\nusing namespace std;\n\n// Factoriales recursivos\nint factorial (int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n    \n}\nint main () {\n    int f;\n    cin >> f;\n    cout << factorial(f) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\telse return n*factorial (n-1);\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n  int suma=1;\n  if(n==0) return 1;\n  else suma= n*factorial(n-1);\n  return suma;\n}\n\nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "int factorial (int n) {\n\tint i = 0;\n\tint f = 0;\n\twhile (i < n) {\n\t\ti = i + 1;\n\t\tf = f * i;\n\t}\n\treturn f;\n}\n",
  "int factorial (int n) {\n\tint f = 1;\n\tint i = 0;\n\twhile (f < n) {\n\t\ti = i + 1;\n\t\tf = f * i;\n\t}\n\treturn f;\n}\n",
  "int factorial (int n) {\n\tint f = 1;\n\tint i = 0;\n\twhile (i < n) {\n\t\ti = i + 1;\n\t\tf = f * i;\n\t}\n\treturn f;\n}\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if(n==0) return 1;\n    else return n * factorial (n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n <= 1) return 1;\n\treturn n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial (n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tint fact;\n\tfact = factorial (n);\n\tcout << fact << endl;\n }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n);\n\nint main (){\n    int f, n;\n    cin >> n;\n    f = factorial(n);\n    cout << f << endl;\n}\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return factorial(n - 1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << n << \" en factorial es: \" << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if(n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main () {\r\nint n;\r\ncin >> n;\r\ncout << factorial (n) <<endl;\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n > 1) {\n\t\treturn  n*factorial(n-1);\n\t}\n\telse return 1;\n}\n\nint main() {\nint x;\ncin >> x;\ncout << factorial(x) << endl;\n}\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    if (n == 0) return 1;\n    else return n * factorial (n - 1);\n}\n\nint main () {\n\nint n;\ncin >> n;\ncout << factorial (n) << endl;\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n < 0) {return 0;}\r\n    else if ( n > 1 ) {return n*factorial(n-1);\r\n    return 1;}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int re = 1;\n    for(int i = 1; i <= n; i++){\n        re *= i;\n    }\n    return re;\n}\n\nint main () {\n\tint n;\n    \n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return n;\n    else return n*factorial(n-1); \n}\n\nint main () {\n    cout << factorial(5);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1); \n}\n\nint main () {\n    cout << factorial(5);\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif ( n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\t\t\t\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int f;\n    cin >> f;\n    cout << factorial(f) << endl;\n}\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif ( n = 0) return 1;\r\n\telse {\r\n\t\treturn factorial(n)*factorial(n-1);\r\n\t}\r\n}\r\nint main() {\r\n\t\r\n}\r\n\r\n",
  "int factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial (n-1);\n}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tint j = 1;\n\tif ( n > 0 ) {\n\tfor (int i = 1; i <= n; ++i) {\n\t\tj = j * i;\n\t}\n\t}\n\tif ( n == 0 ) j = 0;\n\treturn j;\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tint k = factorial(x);\n\tcout << k << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tint j = 1;\n\tif ( n > 0 ) {\n\tfor (int i = 1; i <= n; ++i) {\n\t\tj = j * i;\n\t}\n\t}\n\tif ( n == 0 ) j = 1;\n\treturn j;\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tint k = factorial(x);\n\tcout << k << endl;\n}",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif ( n == 0) return 1;\r\n\telse {\r\n\t\treturn factorial(n)*factorial(n-1);\r\n\t}\r\n}\r\nint main() {\r\n\t\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    \n    cout.setf(ios::fixed);\n    cout.precision(4);\n   \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl; \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n\treturn n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n\tcin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include \"utils.PRO2\"\n\nint factorial(int n)\n{\n    if (n < 2) return 1;\n    else return n * factorial(n-1);\n}\n\nint main()\n{\n    int n = readint();\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n < 2) return 1;\n    else return n * factorial(n-1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\treturn n*factorial (n-1);\n\t}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n\t}\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif ( n == 0) return 1;\r\n\telse if (n > 1) {\r\n\t\treturn factorial(n)*factorial(n-1);\r\n\t}\r\n}\r\nint main() {\r\n\t\r\n}\r\n\r\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif ( n == 0) return 1;\r\n\telse {\r\n\t\tn*factorial(n-1);\r\n\t}\r\n}\r\nint main() {\r\n\t\r\n}\r\n\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1 ;\n    else return n*factorial(n-1);\n\n}\n\nint main() {\n    int n;\n    cin >> n;\n    int fact = factorial (n);\n    cout << fact << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n - 1);\n}\n \n",
  "#include<iostream>\nusing namespace std;\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n - 1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n} \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n    \n        \n        \n\n    \n   \n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif ( n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\nint main() {\r\n\t\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n    if(n == 0) return 1;\r\n    else return n*factorial(n - 1)\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n    if(n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse if (n == 1) return 1;\n\telse return (n*factorial(n-1));\n}\n",
  "// factorials\n# include <iostream> \nusing namespace std;\n//ara comenÃ§a el procediment\nint factorial (int n){\n\tint f=1;\n\tfor (int i =0; i<n;++i)f= f*i;\n\treturn f;\n}\nint main(){\n\tint n;\n\twhile (cin>>n) factorial(n);\n}\n",
  "// factorials\n# include <iostream> \nusing namespace std;\n//ara comenÃ§a el procediment\nint factorial (int n){ \n\tint f=1;\n\tfor (int i =0; i<n;++i)f= f*i;\n\treturn f;\n}\nint main(){\n\tint n;\n\twhile (cin>>n) factorial(n);\n}\n",
  "// factorials\n# include <iostream> \nusing namespace std;\n//ara comenÃ§a el procediment\nint factorial (int n){ \n\tint f=1;\n\tfor (int i =0; 0<n;++i)f= f*i;\n\treturn f;\n}\nint main(){\n\tint n;\n\twhile (cin>>n) factorial(n);\n}\n",
  "// factorials\n# include <iostream> \nusing namespace std;\n//ara comenÃ§a el procediment\nint factorial (int n){\n\tint f=1;\n\tfor (int i =0; 12<n ;++i)f= f*i;\n\treturn f;\n}\nint main(){\n\tint n;\n\twhile (cin>>n) factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int acum = 1;\n    if (n == 0) return acum;\n    else {\n        while (n > 0) {\n            acum *= n;\n            --n;\n        }\n        return acum;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\nif (n > 1) return (n*factorial(n-1));\nif (n == 0) n = 1;\nreturn n;\n}\n\nint main () {\nint n;\ncin>>n;\nfactorial (n);\ncout<<n<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else return n * factorial(n-1);\n}\n\nint main(){\n  int n;\n  cin >>n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n - 1);  \n}\n\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial (n);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}",
  "int factorial(int n) {\n    if (n = 1) return 1;\n    else return factorial(n - 1)*n;\n}",
  "int factorial(int n) {\n    if (n == 1) return 1;\n    else return factorial(n - 1)*n;\n}",
  "int factorial(int n) {\n    if (n == 2) return 2;\n    else return factorial(n - 1)*n;\n}",
  "int factorial(int n) {\n    if (n <= 1) return 1;\n    if (n == 2) return 2;\n    else return factorial(n - 1)*n;\n}",
  "int factorial(int n) {\n    if (n <= 1) return 1;\n    else return factorial(n - 1)*n;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n<=1) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n    \r\n    \r\n    \r\nint main(){\r\n    int n;\r\n    while (cin >> n){\r\n          cout << factorial(n) << endl;\r\n          }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nvoid factorial(int n){\n\tif (n == 1) return n;\n\telse {\n\t\twhile (n > 1) {\n\t\t\tint acum = 1;\n\t\t\tacum = acum*n;\n\t\t\t--n;\n\t\t}\n\t}\n}\n\t\t\n",
  "#include<iostream>\nusing namespace std;\n\nvoid factorial(int n){\n\tint acum = 1;\n\t\twhile (n > 1) {\n\t\t\tacum = acum*n;\n\t\t\t--n;\n\t\t}\n\t}\n\t\t\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 1) return n;\n\telse {\n\tint acum = 1;\n\t\twhile (n > 1) {\n\t\t\tacum = acum*n;\n\t\t\t--n;\n\t\t}\n\t\treturn acum;\n\t}\n}\n\n\t\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return n;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else if (n == 1) return n;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\nif (n == 1) return n;\nelse return n*factorial (n - 1);\n}\nint main(){\nint n;\ncin >> n;\ncout << factorial (n);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int x){ \n\tint n=1;\n\tfor(int  i=1; i<=x; ++i) n=n*i;\n\treturn n;\n}\n\tint main() {\n\tint x;\n\tcin>>x; \n\tcout<<factorial(x)<<endl;\n}\t\n",
  "//FunciÃ³ Factorial(treball)\n #include <iostream>\n using namespace std; \n int factorial (int x){\n\t int n=1;\n for (int i=1; i<=x; ++i) n=n*i;\n\t return n; \n}\nint main(){\n\tint x;\n\tcin>>x;\n\tcout<<factorial(x)<<endl; }\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int x){\n\tint n=1;\n\tfor(int i=1 ; i<=x ; ++i) n=n*i;\n\treturn n;\n}\nint main () {\n\tint n; \n\tcin >> n;\n\tcout << factorial(n)<< endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int x) {\n\tint f=1;\n\tfor (int i=1;i<=x;++i)f=f*i;\n\treturn f;\n}\nint main () {\n\tint x;\n\tcin>>x;\n\tcout<<factorial(x)<<endl;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n <= 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n\t",
  "#include <iostream>\nusing namespace std;\n\t//procediment comenÃ§a\nint factorial (int n) {\n\t\tint f = 1;\n\t\tfor ( int i = 1; i <= n; ++i) f= f * i;\n\t\treturn f;\n}\nint main () {\n\tint n;\n\twhile ( cin >> n) cout << factorial(n) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std; // ara comenÃ§a el procediment\nint factorial (int n) {\n\tint f=1;\n\tfor (int i=1; i<=n; ++i) f=f*i;\n\treturn f;\n}\nint main () {\n\tint n;\n\twhile (cin>>n) cout<<factorial(n)<<endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int x) {\n\tint f=1;\n\tfor (int i=1;i<=x;++i)f=f*i;\n\treturn f;\n}\nint main () {\n\tint x;\n\tcin>>x;\n\tcout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int x){ \n\tint n=1;\n\tfor(int  i=1; i<=x; ++i) n=n*i;\n\treturn n;\n}\n\tint main() {\n\tint x;\n\tcin>>x; \n\tcout<<factorial(x)<<endl;\n}\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n > 0) return factorial (n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n > 0) return factorial (n-1)*n;\n\telse return 0;\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n > 0) return factorial (n-1)*n;\n\telse return 1;\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n - 1)*n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n                \n                    \n            \n        ",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(intx){\n\tint main (){\n\t\tint x;\n\t\tcin>>x;\n\t\tcout<< factorial(x)<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif(n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcout << \"numero entre 0 i 12\" << endl;\t\n\tcin >>\tn;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include<iostream>\nusing namespace std;\n\n\nint numdigits(int n) {\n\tif(n/10 == 0) return 1;\n\telse return 1+numdigits(n/10);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << numdigits(n) << endl;\n}\n\n",
  "#include <iostream>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint factorial( int n ) {\n\tif ( n == 1 ) return n;\n\treturn n * factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint factorial( int n ) {\n\tif ( n == 2 or n == 1 ) return n;\n\treturn n * factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial( int n ) {\n\tif ( n == 0 ) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "//\n//  primers.cc\n//  \n//\n//  Created by Cristian Caballero on 06/02/12.\n//  Copyright (c) 2012 __MyCompanyName__. All rights reserved.\n//\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    int res = factorial(n);\n    cout << res << endl;\n}",
  "/*\n * Escriviu una funciÃ³\nint factorial(int n);\n\nque retorni n!.\n\nResoleu aquest problema recursivament.\n\nPrecondiciÃ³\n\nEs compleix 0â¤ n â¤ 12.\n\nObservaciÃ³ NomÃ©s cal enviar el procediment demanat; el programa principal serÃ  ignorat. \n*/\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  \n  //Pre: entra 0 <= n <= 12.\n  //Post: return n!\n  \n  if (n == 0) return 0;\n  else return n*factorial(n-1); //cada cop entra per fer n-1 fins que arribi al 0.\n}",
  "/*\n * Escriviu una funciÃ³\nint factorial(int n);\n\nque retorni n!.\n\nResoleu aquest problema recursivament.\n\nPrecondiciÃ³\n\nEs compleix 0â¤ n â¤ 12.\n\nObservaciÃ³ NomÃ©s cal enviar el procediment demanat; el programa principal serÃ  ignorat. \n*/\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  \n  //Pre: entra 0 <= n <= 12.\n  //Post: return n!\n  \n  if (n == 0) return 1;\n  else return n*factorial(n-1); //cada cop entra per fer n-1 fins que arribi al 0.\n}",
  "#include <iostream>\nusing namespace std;\n\nvoid escriuhexa(int aux) {\n    if (aux < 10) cout << aux;\n    else cout << char('A' + (aux - 10));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    while (n > 15) {;\n        escriuhexa(n%16);\n        n /= 16;\n    }\n    escriuhexa(n);\n    cout << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nvoid escriuhexa(int aux) {\n    if (aux < 10) cout << aux;\n    else cout << char('A' + (aux - 10));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    while (n > 15) {;\n        escriuhexa(n%16);\n        n /= 16;\n    }\n    escriuhexa(n);\n    cout << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n} \nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\nif (n==1) return 1;\r\nelse return n*factorial(n-1);}\r\n\r\nint main () {\r\nint n;\r\ncin >> n;\r\ncout << factorial(n) << endl;\r\n}",
  "#include <iostream> \r\nusing namespace std; \r\n\r\nint factorial (int n) {\r\n\r\nif n==1 return 1;\r\nelse return n*factorial (n-1);  \r\n}\r\n",
  "# include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\tif (n==1) return 1;\n\telse return n * factorial (n-1)\n}\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n{\nn=12\n12* factorial (11) =\n= 11* factorial (10) =\n= 10* factorial (9) =\n= 9* factorial (8) =\n= 8* factorial (7) =\n= 7* factorial (6) =\n= 6* factorial (5) =\n= 5* factorial (4) =\n= 4* factorial (3) =\n= 3* factorial (2) =\n= 2* factorial (1) =\n= 1.\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\t\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n\t\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\nif (n==1) return 1;\r\nelse return n*factorial(n-1);\r\n}\r\n\r\ng",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\nif n==1 return 1;\r\nreturn n*factorial (n-1);\r\n}\r\nint main () {\r\nint n;\r\ncin >> n;\r\ncout << factorial (n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n//factorial iteratiu\r\n\r\nint factorial (int n) {\r\n\tint total=n;\r\n\t\r\n\tif(n==0) return 1;\r\n\r\n\t\r\n\twhile (n>1){\r\n\t\tn = n-1;\r\n\t\ttotal = total * n;\r\n\t\t\r\n\t}\r\n\treturn total;\r\n\r\n}\r\n\r\nint main (){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n\t\r\n}",
  "# include <iostream>\nusing namespace std;\n\nint factorial (int n) {\nif (n==1) return 1;\nelse return n*factorial (n-1);\n}\nint main () {\nint n;\ncin >>n;\ncout << factorial (n) << endl;\n}\n",
  "# include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\tif (n==1) return 1;\n\telse return n * factorial (n-1)\n}\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n\n\nn=12\n12* factorial (11) =\n= 11* factorial (10) =\n= 10* factorial (9) =\n= 9* factorial (8) =\n= 8* factorial (7) =\n= 7* factorial (6) =\n= 6* factorial (5) =\n= 5* factorial (4) =\n= 4* factorial (3) =\n= 3* factorial (2) =\n= 2* factorial (1) =\n= 1.\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n     if (n==1) return 1;\n     else return n*factorial (n-1);\n}\nint main (){\n     int n;\n     cin >> n;\n     cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\nif (n==1) return 1;\r\nreturn n*factorial (n-1);\r\n}\r\nint main () {\r\nint n;\r\ncin >> n;\r\ncout << factorial (n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n\tif (n==1) return 1;\n\telse return n*factorial (n-1);\n}\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n\t\tif (n==1) return 1;\n\t\telse return n*factorial(n-1);\n}\n\nint main(){\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\nif (n==1) return 1;\r\nelse return n*factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\t\tif (n==1) return 1;\n\t\telse return n*factorial(n-1);\n\t}\n\nint main (){\n\t\tint n;\n\t\tcin >>n;\n\t\tcout<<factorial(n)<< endl;\n\t}\n\t \t \n\t\t\n\t \n\t \n",
  "# include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\nwhile (n>1){\n\tn= n-1;\n\ttotal= total*n;\n\t\n}\nreturn total;\n\n}\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n\n\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==1) return 1;\n\telse return n*factorial (n-1);\n}\n\nint main (){\n\tint n;\n\t\n\tcin >> n; \n\t\n\tcout << factorial (n) << endl;\n\t\n}\n\n\n\n\t\n\t\n",
  "#include <iostream> \r\nusing namespace std; \r\n\r\nint factorial (int n) {\r\n\r\nif n==1 return 1;\r\nif else return n*factorial (n-1);  \r\n}\r\n",
  "# include <iostream>\nusing namespace std;\n\nint factorial (int n) {\nif (n==1) return 1;\nif (n==0) return 1;\nelse return n*factorial (n-1);\n}\nint main () {\nint n;\ncin >>n;\ncout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==1 or n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\t\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n\t\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\nif (n==1 or n==0) return 1;\r\nelse return n*factorial(n-1);\r\n}",
  "# include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\tint total=n;\n\t\n\tif (n==0) return 1;\n\nwhile (n>1){\n\tn= n-1;\n\ttotal= total*n;\n\t\n}\nreturn total;\n\n}\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n     if (n==0) return 1;\n     else return n*factorial (n-1);\n}\n\nint main (){\n     int n;\n     cin >> n;\n     cout << factorial (n) << endl;\n} \n",
  "# include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==1 or n==0) return 1;\n\telse return n*factorial (n-1);\n}\n\nint main (){\n\tint n;\n\t\n\tcin >> n; \n\t\n\tcout << factorial (n) << endl;\n\t\n}\n\n\n\n\t\n\t\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n\t\tif (n==0) return 1;\n\t\telse return n*factorial(n-1);\n}\n\nint main(){\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\t\tif (n==1 or 0) return 1;\n\t\telse return n*factorial(n-1);\n\t}\n\nint main (){\n\t\tint n;\n\t\tcin >>n;\n\t\tcout<<factorial(n)<< endl;\n\t}\n\t \t \n\t\t\n\t \n\t \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n     if (n==0) return 1;\n     else return n*factorial (n-1);\n}\nint main (){\n     int n;\n     cin >> n;\n     cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n\tif (n==1) return 1;\n\telse return n*factorial (n-1);\n}\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n) {\r\nif (n==1 or n==0) return 1;\r\nreturn n*factorial (n-1);\r\n}\r\nint main () {\r\nint n;\r\ncin >> n;\r\ncout << factorial (n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\t\tif (n==1 or n==0) return 1;\n\t\telse return n*factorial(n-1);\n\t}\n\nint main (){\n\t\tint n;\n\t\tcin >>n;\n\t\tcout<<factorial(n)<< endl;\n\t}\n\t \t \n\t\t\n\t \n\t \n",
  "#include <iostream> \r\nusing namespace std; \r\n\r\nint factorial (int n) {\r\n\r\nif (n==1) return 1;\r\nif else (n>1) return n*factorial (n-1);  \r\n}\r\n",
  "# include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\tif (n==1) return 1;\n\telse return n*factorial (n-1)\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n\tif (n==1) return 1;\n\telse return n*factorial (n-1);\n}\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n\n",
  "# include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\tif (n==1) return 1;\n\telse return n*factorial (n-1)\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n) {\n\tif (n==1 or n==0) return 1;\n\telse return n*factorial (n-1);\n}\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n\n",
  "# include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\tif (n==1) return 1;\n\tif (n==0) return 1;\n\telse return n*factorial (n-1);\n\t\n}\n\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n\n}\n",
  "int factorial (int n) {\r\n    if(n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n <= 1) return n;\n    else return n*factorial(n-1);\n}\n\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int factorial = 1;\n    for (int i = 1; i <= n; ++i) {\n        factorial *= i;\n    }\n    return factorial;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std; \n\nint factorial (int n) {\n\n    if (n == 0) return 1;\n    else return n*factorial (n - 1);\n}\n\nint main() {\n\n    int n;\n    cin >> n;  \n    cout << factorial(n) << endl; \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int acum = 1;\n    if (n == 0) return acum;\n    else {\n        while (n > 0) {\n            acum *= n;\n            --n;\n        }\n        return acum;\n    }\n}\n",
  "#include \"utils.PRO2\"\n\nint factorial(int n) {\n\n\tif (n < 2) return 1;\n\telse return n*factorial(n-1);\n\n}\n\nint main() {\n\n\tint n = readint();\n\tcout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n < 2) return 1;\n\telse return n*factorial(n-1);\n\n}\n\nint main() {\n\n\tint n = readint();\n\tcout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n < 2) return 1;\n\telse return n*factorial(n-1);\n\n}\n\nint main() {\n\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\n}\n",
  "#include <cstdlib>\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n  if (n == 0) return 0;\r\n  else return n*factorial(n - 1);\r\n}\r\n\r\n\r\nint main() {\r\n\r\n\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n  if (n == 0) return 1;\r\n  else return n*factorial(n - 1);\r\n}\r\n\r\n\r\nint main() {\r\n\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n < 2) return 1;\n    else return n*factorial (n-1);\n}\n\nint main () {\n    int num;\n    cin >> num;\n    cout << factorial (num) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() \n{\n\tint n;\n\tcin >> n;\n\tint k = factorial(n);\n\tcout << k << endl;\n}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() \n{\n\tint n;\n\tcin >> n;\n\tint k = factorial(n);\n\tcout << k << endl;\n}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n \r\nint factorial (int n) {\r\n\tif (n <= 1) return n;\r\n\telse return (n * factoral(n-1));\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n <= 1) return n;\r\n\telse return (n * factorial(n-1));\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n <= 2) return n;\r\n\telse return (n * factorial(n-1));\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n <= 0) return n;\r\n\telse return (n * factorial(n-1));\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n <= 0) return n;\r\n\telse return n * factorial(n-1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n <= 0) return n;\r\n\telse return  factorial(n-1) * n;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n > 2 ) return (n * factorial(n-1));\r\n\telse return n\r\n}\r\n\r\n/*int factorial (int n) {\r\nif (n <= 1) return n;\r\nelse return (n * factorial(n-1));\r\n}*/",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n > 2 ) return (n * factorial(n-1));\r\n\telse return n;\r\n}\r\n\r\n/*int factorial (int n) {\r\nif (n <= 1) return n;\r\nelse return (n * factorial(n-1));\r\n}*/",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\nif (n <= 1) return 1;\r\nelse return (n * factorial(n-1));\r\n}\r\n\r\n/*int factorial (int n) {\r\nif (n <= 1) return n;\r\nelse return (n * factorial(n-1));\r\n}*/",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\nreturn 1;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main(){\n  int n;\n  cin >> n;\n  int f=factorial(n);\n  cout << f << endl;\n}",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n\tif (n != 1) return n*factorial(n-1);\n\telse return 1;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n\tif (n != 1) return n*factorial(n-1);\n\telse return 1;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tif (n >= 0 and n <= 12)cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n\tif (n > 1) return n*factorial(n-1);\n\telse return 1;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tif (n >= 0 and n <= 12)cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std; // ara comenÃ§a el procediment\nint factorial (int n) {\n\tint f=1;\n\tfor (int i=1; i<=n; ++i) f=f*i;\n\treturn f;\n}\nint main () {\n\tint n;\n\twhile (cin>>n) cout<<factorial(n)<<endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    \n    if (n == 1) return n;\n    \n    else {return n * factorial(n-1);}\n}\n\nint main(){\n    \n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "int factorial(int n) {\r\n\r\nif(n==0) return 1;\r\nelse return n*factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n  if( n == 0) return 1;\n  else return factorial(n-1) * n;\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\t\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return n;\n\telse if (n == 0) return n;\n\telse return factorial (n-1) * n;\n}\n\nint main(){\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n<2) return 1;\n\telse return n * factorial (n-1);\n}\n\nint main(){\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0 or n == 1) return 1;\n\telse return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif(n<2) return 1;\n    \telse {\n    \t\treturn n * factorial(n-1);\n\t}\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif(n==1) return 1;\n    \telse {\n    \t\treturn (n * factorial(n-1));\n\t}\n}\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\nif(n<0) return 0;\nelse if(n>1) return n*factorial(n-1);\n\n}",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\nif(n<0) return 0;\nelse if(n>1) return n*factorial(n-1);\nreturn 1;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n == 0) return 1;\r\n  else return factorial(n-1) * y;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n == 0) return 1;\r\n  else return factorial(n-1) * n;\r\n}\r\n",
  "\n\nint factorial (int n) {\n\tint act = 1;\n\twhile (cin >> n) {\n\t\t if (n >= 1) {\n\t\t \tact = act * n;\n\t\t \t--n;\n\t\t}\n\t\treturn act;\n\t}\n}\n\n\n\n",
  "\n\nint factorial (int n) {\n\tint act = 1;\n\tif (n >= 1) {\n\t\tact = act * n;\n\t \t--n;\n\t}\n\treturn act;\n}\n\n\n\n",
  "\n\nint factorial (int n) {\n\tint act = 1;\n\twhile (n >= 1) {\n\t\tact = act * n;\n\t \t--n;\n\t}\n\treturn act;\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\t\t\n\nint factorial (int n) {\n\tint act = 1;\n\twhile (n >= 1) {\n\t\tact = act * n;\n\t \t--n;\n\t}\n\treturn act;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: 0 <= n <= 12\n//Post: la funcio retorna el valor de n!\nint factorial(int n) {\n    int k = 1;\n    for (int i = 1; i <= n; ++i) {\n        k = k*i;\n    }\n    return k;\n}",
  "#include <iostream>\nusing namespace std;\t\t\n\nint factorial (int n) {\n\tif (n == 1) return 1;\n\telse return factorial (n-1) * n;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\t\t\n\nint factorial (int n) {\n\tif (n == 1) return 1;\n\telse return factorial ((n-1) * n);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\t\t\n\nint factorial (int n) {\n\tif (n == 1) return 1;\n\telse return ((n-1) * n);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\t\t\n\nint factorial (int n) {\n\tif (n == 1) return 1;\n\treturn ((n-1) * n);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\t\t\n\nint factorial (int n) {\n\tif (n == 1) return 1;\n\treturn factorial (n-1) * n;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n\n",
  "int factorial (int n) {\n\tif (n == 1) {\n\t\treturn 1;\n\t}\n\treturn (n-1) * n;\n}\n\n\n",
  "int factorial (int n) {\n\tif (n == 1) return 1;\n\treturn factorial ((n-1) * n);\n}\n\n\n",
  "int factorial (int n) {\n\tif (n == 1) return 1;\n\treturn factorial (n * (n-1));\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) return n;\n\treturn factorial (n-1) * n;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial (int n){\n\tif (n <= 1) return n;\n\telse return factorial(n - 1)*n;\n}\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\t\n\t\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial (int n){\n\tif (n <= 1) return n;\n\telse return factorial(n - 1)*n;\n}\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\t\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int f;\n    if (n == 0) f = 0;\n    else if (n == 1) f = 1;\n    else f = n * factorial(n-1);\n    return f;\n    \n}\n\nint main(){\n    int n;\n    cin >> n;\n    n = factorial(n);\n    cout << n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int f;\n    if (n < 2) f = 1;\n    else f = n * factorial(n-1);\n    return f;\n    \n}\n\nint main(){\n    int n;\n    cin >> n;\n    n = factorial(n);\n    cout << n;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int a){\nif(a <= 2) return a;\nelse return factorial(a-1) * a;\n}\nint main(){\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\t\n\tint x = 1;\n\t\n\tfor (int i = 2; i <= n; ++i) x *= i;\n\t\n\treturn x;\n\t\n}\n\nint main(){\n\t\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==1) return n;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==2) return n;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==2) return n;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==1 or n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0 or n == 1)\n\t\treturn 1;\n\telse\n\t\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout <<factorial(n)<<endl;\n}\t\t\t\t\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int);\n\nint main (){\nint n;\ncin >> n;\n\nfactorial (n);\n}\n\nint factorial (int n){\nint fact;\nif (fact!=0) fact = n*factorial(n-1);\nelse fact=1;\n\nreturn fact;\n\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int);\n\nint main (){\nint n;\ncin >> n;\n\nfactorial (n);\n}\n\nint factorial (int n){\nint fact = n*factorial (n-1);\nif (fact!=0) fact = n*factorial(n-1);\nelse fact=1;\n\nreturn fact;\n\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int);\n\nint main (){\nint n;\ncin >> n;\n\nfactorial (n);\n}\n\nint factorial (int n){\nint fact;\nif (n!=0) fact = n*factorial(n-1);\nelse fact=1;\n\nreturn fact;\n\n}",
  "# include <iostream>\r\n# include <stdlib.h>\r\n\r\nint factorial (int n){\r\n    if (n==0 or n==1) return 1;\r\n    return n * factorial (n-1);\r\n    \r\n}\r\n\r\n\r\nusing namespace std;\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n    \r\n\r\n\r\nsystem (\"PAUSE\");    \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nvoid factorial (int n) {\nint fact =1;\nwhile(n>1) {\n  fact=fact*n;\n  n=n-1;\n}\n cout << fact; \n}\nint main(void) { \nint n;\ncin >> n;\nfactorial(n);\n cout << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nvoid factorial (int n) {\ndouble fact =1;\n\nwhile(n>1) {\n  fact=fact*n;\n  n=n-1;\n}\n cout << fact; \n}\nint main(void) { \nint n;\ncin >> n;\nfactorial(n);\n cout << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0){\n        return 1;\n    }else{\n        return factorial(n-1)*n;\n    }\n}\n\n\n\n\n\n\n\n\n\nint main(){\n    cout<<factorial(5)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n==0) return 1;\n    else return factorial(n-1);\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\nif (n== 0) {\nreturn 1;\n}\nelse {\nreturn n*factorial(n-1);\n}\n}\n\nint main(){\nint n;\ncin>>n;\ncout << factorial(n);\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) {\n        return 1;\n    } else {\n        return factorial(n-1)*n;\n    }\n}\n\nint main() {\n    int num;\n    while (cin >> num) {\n        cout << factorial(num) << endl;\n    }\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint fact (int n) {\nif (n==0) {\nreturn 1;\n    } else {\n        int f = fact(n-1);\n        return n*f;      \n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\ncout << fact(n) << endl;\n    \n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\nif ((n==0)or(n>=12)) {\nreturn 1;\n    } else {\n        int f = factorial(n-1);\n        return n*f;      \n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\ncout << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\nif ((n==0)or(n>12)) {\nreturn 1;\n    } else {\n        int f = factorial(n-1);\n        return n*f;      \n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\ncout << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n<=1) return 1;    \n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while (cin >> n){\n    cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int a){\n    cin >> a;\n    int f = 1;\n    for (int i = 0; i < a; i++) {\n        \n        f = f*(a-i);\n        \n    }\n   \n   \n   return f;\n    \n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n    \n    \n    \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==1){\n        return 1;\n    }\n    return factorial (n-1)*n;\n};\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial (n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==1){\n        return 1;\n    }\n    return n*factorial(n-1);\n};\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial (n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0){\n        return 1;\n    }\n    return n*factorial(n-1);\n};\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial (n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\nif (n == 0) return 1;\nreturn factorial(n-1)*n;}\n\n\nint main (){\nint n;\ncin>>n;\ncout<<factorial(n)<<endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint crear(int n){\r\n    int prod = 1;\r\n\tif(n==0){}\r\n\tprod = prod * crear(n-1);\r\n\tcout << prod << endl;\r\n\treturn 0;\r\n}\r\n\r\nint main(){\r\n    int a;\r\n\tcin >> a;\r\n\tcrear(a);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int a;\r\n\tcin >> a;\r\n\tcout << factorial(a) << endl;\r\n}",
  "#include <iostream>\nusing namespace std ;\n\nint fact (int a) {\n\twhile(a>=12) {\n\t\ta=a-1;\n\t\t}\n\t\treturn a;\n\t\t}\nint main () {\n\tint n;\n\tcin >> n;\n\tcout<< fact(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif(n<2)\n\t\treturn 1;\n\telse\n\t\treturn n * factorial(n-1);\n}\n\n\nint main() {\n\tint x;\n\tcin >> x;\n\t\n\tcout << factorial (x) << endl;\n}\n",
  "\n// Prec: n>=0.\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\n",
  "\n// Prec: n>=0.\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\n",
  "\n// Prec: n>=0.\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\n",
  "#include <iostream>\r\n#include <string>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\ndouble factorial (double n){\r\n\r\ndouble res = 0;\r\n    while(n>0){\r\n           res = 1/n + res;\r\n           n--;\r\n           } \r\n    return res;\r\n    }\r\n\r\nint main(){\r\ndouble a;\r\ncin >> a;\r\ncout << factorial (a) << endl;\r\n\r\nsystem(\"PAUSE\");\r\nreturn 0;\r\n}\r\n",
  "#include <iostream>\r\n#include <string>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\ndouble factorial (double n){\r\n\r\ndouble res = 0;\r\n    while(n>0){\r\n           res = 1/n + res;\r\n           n--;\r\n           } \r\n    return res;\r\n    }\r\n\r\nint main(){\r\ndouble a;\r\ncin >> a;\r\ncout << factorial (a) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n - 1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) <<endl;\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n\r\nint factorial( int n)\r\n{\r\n    int resultat = 1;\r\n    for (int i=n; i>=1; i--)\r\n    {\r\n        resultat = resultat * i;\r\n    }\r\n    return resultat;\r\n}\r\n        \r\n\r\nint main()\r\n{\r\n    for (int n=1; n<=15; n++)\r\n    {\r\n      cout << \"El factorial de \" << n << \"=\" << factorial(n) << endl;\r\n      }\r\n    system(\"pause\");\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n\r\nint factorial( int n)\r\n{\r\n    int resultat = 1;\r\n    for (int i=n; i>=1; i--)\r\n    {\r\n        resultat = resultat * i;\r\n    }\r\n    return resultat;\r\n}\r\n        \r\n\r\nint main()\r\n{\r\n    for (int n=1; n<=15; n++)\r\n    {\r\n      cout << \"El factorial de \" << n << \"=\" << factorial(n) << endl;\r\n      }\r\n\r\n}\r\n",
  "int factorial(int n) {\n    if (n <= º) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n < 2) return 1;\r\n    else return (n * factorial(n-1));\r\n}\r\nint main(){\r\n    int n;\r\n    while (cin >> n){\r\n        cout << \"El factorial de \" << n << \" es: \" << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "int factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial (int n){\n    if(n==1) return 1;\n    else return n*factorial(n-1);\n    }\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1; // 0 i 1 casos base = 1;\n\telse return n*factorial(n-1); //fins que no arribes al cas base\n\t\t\t\t\t\t\t\t//no es calcula res \n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial (int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n    }\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1; // 0 i 1 casos base = 1;\n\telse return n*factorial(n-1); //fins que no arribes al cas base\n\t\t\t\t\t\t\t\t//no es calcula res \n//torna el primer nombre (n)i el multiplica pel factorial n-1.\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1 ) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1; \n    else return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\nint main() {\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\nint main() {\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factrec (int n) {\n    if (n <= 1) return 1;\n    return n * factrec(n-1); \n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factrec(n) << endl;\n    }\n}\n",
  "<?php\nfunction factorial($n) {\n\tif ($n == 2) return 2;\n\telse {\n\t\treturn $n*factorial($n-1);\n\t}\n}\n/*\n$line = readline();\nlist($s1,$s2,$s3) = explode(' ', $line);\n$word = $s1 +$s2 + $s3;\necho $word.'\n';*/\n\n?>",
  "<?php\nfunction factorial($n) {\n\tif ($n == 0) return 0;\n\telseif($n == 1) return 1;\n\telse {\n\t\treturn $n*factorial($n-1);\n\t}\n}\n/*\n$line = readline();\nlist($s1,$s2,$s3) = explode(' ', $line);\n$word = $s1 +$s2 + $s3;\necho $word.'\n';*/\n\n?>",
  "<?php\nfunction factorial($n) {\n\tif ($n < 2) return 1;\n\telse {\n\t\treturn $n*factorial($n-1);\n\t}\n}\n/*\n$line = readline();\nlist($s1,$s2,$s3) = explode(' ', $line);\n$word = $s1 +$s2 + $s3;\necho $word.'\n';*/\n\n?>",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0)return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 0)return 1;\r\n    return factorial(n)+factorial(n-1);\r\n}\r\nint main(){\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0 or n == 1) return 1;\n  else return factorial(n - 1)*n;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factoria(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0 or n == 1) return 1;\n  else return factorial(n - 1)*n;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n    if (n < 0) return 0;\n    else if (n > 1) return n*factorial(n-1);\n    return 1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n <= 1) return n;\n\treturn n * factorial(n-1);\t\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n <= 1) return n;\n\telse return n * factorial(n-1);\t\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tif (n == 0) cout << \"1\" << endl;\n\t\telse cout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) return n;\n\tif (n == 0) return 1;\n\telse return n * factorial(n-1);\t\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\t cout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\n#include <cmath>\n#include <string>\n\nusing namespace std;\nint factorial (int n);\nint main () {\n\tint n;\n\tcin>>n;\n\tcout<<factorial (n);\n\t\t\n\t}\nint factorial (int n){\n\tif (n<2)\treturn 1;\n\telse return factorial (n-1)*n;\n\t\n\t\n\t\n\t}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n > 0) return n*factorial(n-1);\r\n\treturn 0;\r\n}\r\n\r\n\r\nint main() {\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n > 0) return n*factorial(n-1);\r\n\treturn 1;\r\n}\r\n\r\n\r\nint main() {\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    int solucio = factorial(n);\n    cout << solucio << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial ( int n ) {\n    if ( n == 0 ) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0 or n == 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n)\r\n{\r\n  if(n<2)\r\n    return 1;\r\n  else\r\n    return n * factorial(n-1);\r\n}\r\nint main(){\r\nint n;\r\ncin >> n;\r\ncout << factorial(n) << endl;\r\n}\r\n",
  "# include <iostream>\r\nusing namespace std;\r\nint factorial(int n) \r\n{\r\n     if (n==0) return 1;\r\n     else return n*factorial(n-1);\r\n  \r\n}\r\n\r\nint main() \r\n{\r\n     int n;\r\n     while (cin>>n)\r\n     {\r\n\r\n         cout<<factorial(n)<<endl;\r\n     }\r\n     /* Scaffolding code for testing purposes */ \r\n     cin.ignore(256, '\\n');\r\n     cout << \"Press ENTER to continue...\" << endl;\r\n     cin.get();\r\n     /* End Scaffolding */     \r\n  \r\n}\r\n\r\n\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0 or n == 1) return 1;\r\n    return factorial(n-1) * n;    \r\n}\r\n\r\nint main() {}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 1) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n\r\n",
  "#include<iostream>\n#include<string>\n#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<algorithm>\n\n//Factorial Recursiu\n//WIP\n//48-57\nusing namespace std;\n\nint factorial (int n){\n       if (n != 0){\n           return n * factorial(n -1);\n       } else return 1;\n}\n\nint main (){\n   int a;\n   cin >> a;\n   cout << factorial(a) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n < 2) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n\r\n",
  "#include<iostream>\n#include<string>\n#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<algorithm>\n\n//Factorial Recursiu\n//WIP\n//48-57\nusing namespace std;\n\nint factorial (int n){\n       if (n != 0){\n           return n * factorial(n -1);\n       } else return 1;\n}\n\nint main (){\n   int a;\n   cin >> a;\n   cout << factorial(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif ( n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\n#include <cmath>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint fact (int x) {\n\tif (x==0){\n\t\treturn 1;\n\t}else{\n\t\treturn x*fact(x-1);\n\t}\n}\n\nint main () {\n\tint x;\n\tcin>>x;\n\tcout<<fact(x)<<endl;\n\t}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1 or n > 12) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1) return 1;\n    return factorial(n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int f = 1;\n  int i = n;\n  while(i != 0) {\n    f = f*i;\n    --i;\n  }\n  return f;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if(n < 2) return 1;\n    else return n*factorial(n-1);\n}\n \nint main() {\n    int num;\n        while (cin >> num) {\n            cout << factorial(num) << endl;\n        }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int f = 1;\n  int i = n;\n  while(i != 0) {\n    f = f*i;\n    --i;\n  }\n  return f;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <stdio.h>\n\nint factorial (int n){\n\tif(n==1) return n;\n\telse return n*factorial(n-1);\n}\n\nint main (void){\n\tint num;\n\tscanf(\"%d\",&num);\n\tprintf(\"%d\\n\",factorial(num));\n\treturn 0;\n}\n",
  "int factorial (int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial (n-1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n < 2) return 1;\r\n    return factorial(n-1) * n;\r\n}\r\n",
  "#include <iostream>\n#include <cmath>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0){\n\t\treturn 1;\n\t}else{\n\t\treturn n*factorial(n-1);\n\t}\n}\n\nint main () {\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n\t}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int fact = 1;\n  if (n == 0) fact = 1;\n  else fact = factorial(n-1)*n;\n  return fact;\n}\n\n\n      ",
  "#include <iostream>\nusing namespace std;\n     \nint factorial(int n) {\n    if(n < 2) return 1;\n    else return n*factorial(n-1);\n}\n     \nint main() {\n    int num;\n    while (cin >> num) {\n        cout << factorial(num) << endl;\n    }\n}\n",
  "#include <iostream>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n  if(n==0)return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n/* Retorna a! */\nint fact (int a) {\n    if (a==0){\n        return 1;\n    } else{\n        return a*fact (a-1);\n    }\n}\n\nint main() {\n   int x;\n   cin >> x;\n   cout << fact(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n==0) { return 1; }\r\n\telse { return n*factorial(n-1); }\r\n}\r\n\r\nint main() { \r\n\tcout << factorial(5) << endl; \r\n}",
  "#include <iostream>\nusing namespace std;\n\n/* retorna a! */\nint fact (int a) {\n\tif (a == 0) {\n\treturn 1;\n\t} else  { \n\t\treturn a * fact (a-1); \n}\n}\n\nint main() {\n\t\n\tint x; \n\tcin >> x;\n\t\n\tcout << fact(x) << endl;\n\t\n\t}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(<=1)return 1;\n\telse{\n\t\tif(n<factorial(n-1)){\n\t\t\tn=n*n;\n\t\t}\n\t}\n}\n\t\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n<=1)return 1;\n\telse return factorial(n-1)*n;\n}\n\t\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n > 1) return factorial(n-1)*n;\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial (n) << endl;\n\t}\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n==0)\r\n       return 1;\r\n    else{\r\n        int x=1;\r\n        for (int i=1; i<=n; ++i)\r\n            x=x*i;\r\n        return x;\r\n    }\r\n}\r\n\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return factorial(n-1)*n;\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial (n) << endl;\n\t}\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial(n-1);\t\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "int factorial (int n) {\n    if (n==0) return 1;\n    return factorial(n-1)*n ;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n/*\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n*/\n",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 10) return n;\n    return n%10*factorial(n/10);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) return n;\n\tif (n == 0) return 1;\n\telse return n * factorial(n-1);\t\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\t cout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint fact (int n,int a) {\r\n    if (a=0){\r\n              return n;\r\n              } else {\r\n                     a--;\r\n                     fact (n*(n-1));\r\n                     }\r\n}\r\n\r\nint main()\r\n{\r\n \r\nint n,a;\r\ncin>>n;\r\na=n;\r\nfact (n,a);\r\ncout<<n<<endl;   \r\n    \r\n    \r\n}\r\n",
  "#include<iostream>\n#include<vector>\nusing namespace std;\n\nint main() {\nint n;\nwhile (cin >> n ){\n\n\tvector<int> u(n);\n\tfor (int i = 0; i < n; ++i){\n\t\tcin >> u[i];\n\t}\n\tfor (int j = n-1; j >= 0; --j){\n\t\tif (j == 0) cout << u[j];\t\n\t\telse cout << u[j] << \" \";\t\n\t\t\t}\n\t\tcout << endl;\n\t\t}\n}\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;  \r\n}\r\n",
  "#include<iostream>\nusing namespace std;\nint factorial (int n){\n\tif (n== 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main(){\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n   if (n > -1 and n < 2) return 1;\n   else return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n<=1 ) return 1;\n\telse return factorial(n-1)*n;\n}\n\nint main(){\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if ( n == 0) return 1;\n    return ( n*factorial (n-1));\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if(n==0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\nint main (){\r\n    int n;\r\n    cin >>n;\r\n    cout <<factorial(n)\r\n    <<endl;\r\n  \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    if (n == 1) return n;\n    return n*factorial(n - 1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n   \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n}\n    \nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else{\n   while (n >= 1){\n       return n * factorial (n-1);\n   }\n   }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin>>n;\n    cout <<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n\t\n\tif (n>1) return(n * factorial (n-1));\n\telse return 1;\n}\nint main () {\n\nint n;\ncin>>n;\ncout << factorial (n)<<endl; \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1); \r\n\r\n}\r\n\r\nint main() {\r\nint n;\r\ncin >> n;\r\ncout << factorial(n) << endl;\r\n}\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial ( int n){\r\n    if (n<1) return 1;\r\n    else return (factorial (n-1))*n;\r\n}\r\n\r\n",
  "#include <cstdlib>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial ( int n){\r\n    if (n<1) return n;\r\n    else return factorial (n-1);\r\n}\r\n\r\nint main(int argc, char *argv[])\r\n{\r\n    int n;\r\n    cin>>n;\r\n    factorial (n);\r\n    system(\"PAUSE\");\r\n    return EXIT_SUCCESS;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n    if (x == 0) return 1;\n    else return x*factorial(x-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n<=1) return 1;\r\n               else return (factorial (n-1))*n;\r\n                     \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0){\n        return 1;\n    }\n    else{\n        return factorial(n-1)*n;\n    }\n}\n        \nint main(){\n    int n;\n    cin >>n;\n    cout <<factorial(n) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif ( n == 0 ) return 1;\n\treturn n*(factorial(n-1));\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif ( n == 1 ) return 1;\n\treturn n*(factorial(n-1));\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif ( n == 1 ) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "# include <iostream>\nusing namespace std;\nint factorial (int n){\n    if ( n <= 1) return 1;\n    else return n*factorial(n-1)\n\n}\nint main (){\n    \n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint fact (int n) {\r\n\r\nint i;\r\n\r\nif(n <= 1) {\r\n     return 1;\r\n     } \r\n     i= n * fact(n - 1);\r\n     return i;\r\n\r\n}\r\n\r\nint main() {\r\n \r\nint n;\r\ncin>>n;\r\nfact (n);\r\ncout<<n<<endl;   \r\n    \r\n   int a;\r\n   cin>>a; \r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    int x = 1;\r\n    for (int i=1; i>n; ++i) {\r\n        x = x*i;\r\n        }\r\n        return x;\r\n} \r\n\r\nint main () {\r\n    int n; \r\n    cin >> n;\r\n    cout << factorial (n);\r\n}\r\n        \r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n >= 0){\r\n       if (n <= 2) return n;\r\n          return n*factorial(n-1);\r\n}         \r\n          else{\r\n          if (n >= -2) return n;\r\n          return n*factorial(n+1);\r\n          }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\nif(n < 2) return 1;\r\nelse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n/* Retorna a! */\nint factorial (int a) {\n    if (a==0){\n        return 1;\n    } else{\n        return a*factorial (a-1);\n    }\n}\n\nint main() {\n   int x;\n   cin >> x;\n   cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n/* retorna a! */\nint factorial (int a) {\n\tif (a == 0) {\n\treturn 1;\n\t} else  { \n\t\treturn a * fact (a-1); \n}\n}\n\nint main() {\n\t\n\tint x; \n\tcin >> x;\n\t\n\tcout << fact(x) << endl;\n\t\n\t}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\tif (n == 0) {\n\treturn 1;\n\t} else  { \n\t\treturn n * factorial (n-1); \n}\n}\n\nint main() {\n\n\t\n\t}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) {\n\t\treturn 1;\n\t} else {\n\t\treturn factorial (n-1) * n;\n\t}\n}\n\nint main() {\n\tcout << factorial (5) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) {\n\t\treturn 1;\n\t} else {\n\t\treturn n * factorial (n-1);\n\t}\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial (x) << endl;\n}\n",
  "#include<iostream>\nusing namespace std; \n\nint main() {\n    if (n <=1) return 1;\n    else return n+factorial(n-1);\n}\n",
  "#include<iostream>\nusing namespace std; \n\nint factorial(int n) {\n    if (n <=1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "int factorial (int n) {\n    if (n==1) return 1;\n    return factorial(n-1)*n ;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n == 0 or n > 12) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 0 or n == 1 ) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n* factorial(n-1);\n}\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n>0) return n*factorial(n-1);\n\telse return 1;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << \"El factorial de \" << n << \" es \" << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int f = 1;\n    if (n != 0) {\n\tfor (int cont = 1; cont <= n; ++cont) {\n\t    f = f * cont;\n\t}\n    }\n    return f;\n}\n\nint main () {\n    \n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n    \n}",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    int fact=1;\n    for(int i=1; i<= n; ++i){\n        fact = fact * i;\n    }\n    return fact;\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n==1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "\r\n#include <iostream>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int a)\r\n{\r\n    if (a == 0) return 1;\r\n    else return a * factorial(a-1);\r\n}      \r\n\r\nint main()\r\n{\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) {\n\t\treturn 1;\n\t} else {\n\t\treturn n * factorial (n-1);\n\t}\n}\n\nint main() {\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 1) {\n\t\treturn 1;\n\t} else {\n\t\treturn n * factorial (n-1);\n\t}\n}\n\nint main() {\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n ) {\n\tif (n == 1) {\n\t\treturn 1;\n\t} else {\n\t\treturn n * factorial (n-1);\n\t}\n}\n\nint main() {\n\t\n}\n",
  "# include <iostream>\nusing namespace std;\nint factorial (int n){\n    if ( n <= 1) return 1;\n    else return n*factorial(n-1);\n\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n)\n{\n    if(n <=0)\n        return 1;\n    else return n*factorial(n-1);\n}\n\nint main()\n{\n    int e ;\n    cin  >> e;\n    cout << factorial(e);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    return n * factorial (n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*(factorial(n-1));\n}\n\nint main( ) {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int m = 1;\n  return factorial(n*n - 1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "int factorial(int n){\r\n\tif(n<2){return 1;}\r\n\treturn n*factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n  int f = 1;\n  int i = 0;\n  while (i < n) {\n    ++i;\n    f = f*1;\t\n  }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return;\n    else return n*factorial(n-1);\n}\n\nint main() {\n \n \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n == 0) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "\n#include <iostream>\n\nusing namespace std;\n\ninf factorial (int n)\n{\n    if(n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main()\n{\n\ncout << \"Bon dia a tothom!\" << endl;\n\nreturn 0;\n} \n",
  "\n#include <iostream>\n\nusing namespace std;\n\nint factorial (int n)\n{\n    if(n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main()\n{\n\ncout << \"Bon dia a tothom!\" << endl;\n\nreturn 0;\n} \n",
  "def factorial(n):\n\tif(n==0): \n\t\tret=1\n\n\telse:\n\t\tret=n*fact(n-1)\n\n\treturn ret\n\ndef main():\n\tn = input()\n\tprint(fact(n))\n\nmain()\n\n",
  "#include <iostream>\n\n\nusing namespace std;\n\n\n// Donat un enter n, retorna el seu factorial n!.\nint factorial(int n){\n    if (n == 0) return 1; \n    return n*factorial(n - 1);\n}\n\n\nint main(void){\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int a) {\n  \n  if (a < 1) return 0;\n  else return fact(a-1);\n  \n}\nint main() {\n}",
  "#include <iostream>\nusing namespace std;\n\nint fact(int a) {\n  \n  if (a <= 1) return 1;\n  else return fact(a-1);\n  \n}\nint main() {\n}",
  "#include <iostream>\nusing namespace std;\n\nint fact(int a) {\n  \n  if (a <= 1) return 1;\n  else return a*fact(a-1);\n  \n}\nint main() {\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  \n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n  \n}\nint main() {\n  return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\nint main() {\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n - 1);\n}\n",
  "#crear funcions\ndef fact (a):\n    resultat = 1\n    for b in range(a):\n        resultat = (b+1)*int(resultat)\n    return(resultat)\n\n\n#input\nnumero = int(input())\n\n#cridar funciÃ³\nprint(fact(numero))\n",
  "#crear funcions\ndef factorial (a):\n    resultat = 1\n    for b in range(a):\n        resultat = (b+1)*int(resultat)\n    return(resultat)\n\n\n#input\nnumero = int(input())\n\n#cridar funciÃ³\nprint(factorial(numero))\n",
  "include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\nint res;\n\nif (n==0) res = 1;\n\nelse res = n * factorial (n-1);\nreturn res;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\nint res;\n\nif (n==0) res = 1;\n\nelse res = n * factorial (n-1);\nreturn res;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "def factorial(n):\r\n    if n == 0 or n == 1:\r\n        return 1\r\n    else:\r\n        return (n * factorial(n-1))\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\nint res;\r\nif(n==0) res=1;\r\nelse res=n*factorial(n-1);\r\nreturn res;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif ( n == 1 or n == 0 ) return 1 ;\n\telse {\n\treturn n*factorial (n-1) ;\n\t}\n}\n\nint main () {\n\tint n ;\n\twhile ( cin >> n ) {\n\t\tcout << \"factorial(\"<< n << \")\" << \" --> \" <<factorial(n) << endl ;\n\t}\n}",
  "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0){\n\t\treturn 1;\n\t}else{\n\t\treturn n*factorial(n-1);\n\t}\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "int factorial(int n){\n\tint result;\n\tif(n=0){return result=0;}\n\tif(n=1){return result=1;}\n\telse return n*factorial(n-1);\n\t\n}",
  "int factorial(int n){\n\tint result;\n\tif(n=0){return result=0;}\n\tif(n=1){return result=1;}\n\telse return result=n*factorial(n-1);\n\t\n}",
  "int factorial(int n){\n\tint result;\n\tif(n=0){ result=0;}\n\tif(n=1){result=1;}\n\telse { result=n*factorial(n-1);}\n\treturn result;\n\t\n}",
  "int factorial(int n){\n\tint result;\n\tif(n=0){ result=1;}\n\n\telse { result=n*factorial(n-1);}\n\treturn result;\n\t\n}",
  "int factorial(int n){\n\t\n\tif(n=0){ return 1;}\n\n\telse { return n*factorial(n-1);}\n\t\n\t\n}",
  "int factorial(int n){\n\t\n\tif(n==0){ return 1;}\n\n\telse { return n*factorial(n-1);}\n\t\n\t\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return factorial(n-1)*n;\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0 or n == 1)\n        return 1;\n    else {\n        int calcul_factorial = factorial(n-1);\n        return n*calcul_factorial;\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*(factorial(n-1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) {\n        return 1;\n    } else {\n        return factorial(n-1) * n;\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int result;\n    if (n == 0 or n == 1) {\n        result = 1;\n    } else {\n        result = factorial(n-1) * n;\n    }\n    return result;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 1) n = 1;\n    \n    else n = n * ( factorial(n - 1) );\n\n    return n;\n}\n\nint main(){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n    \n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1 ) n = 1;\n    \n    else n = n * ( factorial(n - 1) );\n\n    return n;\n}\n\nint main(){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n    \n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial(n-1);\n        return f*n;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int x = 0;\n    if (n == 0) x = 1;\n    else {\n        int f = factorial(n-1);\n        x = f*n;\n    }\n    return x;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0 or n == 1)\n        return 1;\n    else {\n        int calcul_factorial = factorial(n-1);\n        return n*calcul_factorial;\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res = 1;\n    while ( n > 0 ) {\n        res *= n;\n        --n;\n    }\n    return res;\n}\n\nint main() {\n    \n    int n;\n    while (cin >> n) {\n    cout << factorial(n) << endl;\n    }\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\nif(n==0){\n  return 1;\n}\nelse return n*factorial(n-1);\n\n}\n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial(int n) {\n    int x = 0;\n    if (n == 0) return 1;\n    else if(n > 0) x = n * factorial(n - 1);\n    \n    return x;\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n        \n    \n    \n    \n",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial(int n) {\n    int x = 0;\n    if (n == 0) x = 1;\n    else if(n > 0) x = n * factorial(n - 1);\n    \n    return x;\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    int fact;\n    \n    if (n <= 1) {\n        \n        fact = 1;\n    }\n    \n    else {\n        \n       fact = n * factorial(n - 1);\n        \n    }\n    \n    return fact;\n\n}\n    \n\n\n\nint main(){\n    \nint n;\n\n    while (cin >> n){\n\n    cout << factorial(n) << endl;\n    }\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int calcul_factorial = 0;\n    if (n == 1 or n == 0)\n        calcul_factorial = 1;\n    else {\n        calcul_factorial = n*factorial(n-1);\n    }\n    return calcul_factorial;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial(int n) {\n    int x = 0;\n    if (n == 0) x = 1;\n    else x = n * factorial(n - 1);\n    \n    return x;\n}\n\nint main () {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\nint tot;\n\nif (n==0) tot=1;\n\nelse tot = (n * factorial(n-1));\n\n\n\nreturn tot;\n}\n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res = 1;\n    if( n == 0 ) res = 1;\n    else res = n * factorial(n-1);\n    return res;\n}\n\nint main() {\n    \n    int n;\n    while (cin >> n) {\n    cout << factorial(n) << endl;\n    }\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fac;\n    if (n > 1) fac = n * factorial(n - 1);\n    else fac = 1;\n    return fac;\n    \n}\n\nint main() {\n    int n;\n    cin >> n;\n        cout << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int t = 1;\n    for(int i = 1; i <= n; ++i) {\n        t = t * i;\n    }\n    \n    return t;\n    \n}\n\nint main() {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return factorial(n-1) * n;\n}\n\n\nint main(){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return factorial(n-1) * n;\n}\n",
  "#include <iotream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n<2) return n;\r\n\telse{\r\n\t\treturn (n*factorial(n-1)); \r\n\t} \r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tint d = factorial (n);\r\n\tcout << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n<2) return n;\r\n\telse{\r\n\t\treturn (n*factorial(n-1)); \r\n\t} \r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tint d = factorial (n);\r\n\tcout << d << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n<2) return 1;\r\n\telse{\r\n\t\treturn (n*factorial(n-1)); \r\n\t} \r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tint d = factorial (n);\r\n\tcout << d << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else{\n        return n*factorial(n-1);\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n){\r\n\tint a = n;\r\n\tif (a-1!=0) return (a * factorial (a-1));\r\n\telse return a;\r\n\r\n}\r\nint main () {\r\n\tint a;\r\n\t\r\n\ta = factorial (a);\r\n\tcout<<a<<endl;\r\n\t\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n){\r\n\tint a = n;\r\n\tif (a-1!=0) return (a * factorial (a-1));\r\n\telse return a;\r\n\r\n}\r\nint main () {\r\n\tint a;\r\n\tcin>>a;\r\n\ta = factorial (a);\r\n\tcout<<a<<endl;\r\n\t\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n){\r\n\tint a = n;\r\n\tif (a-1!=0) return (a * factorial (a-1));\r\n\telse return a;\r\n\r\n}\r\nint main () {\r\n\tint a;\r\n\tcin>>a;\r\n\ta = factorial (a);\r\n\tcout<<a<<endl;\r\n\t\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n){\r\n\t\r\n\tif (n-1!=0) return (n * factorial (n-1));\r\n\telse return n;\r\n\r\n}\r\nint main () {\r\n\tint a;\r\n\tcin>>a;\r\n\ta = factorial (a);\r\n\tcout<<a<<endl;\r\n\t\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial (int n){\r\n\t\r\n\tif (n!=0) n = n * factorial (n-1);\r\n\telse n=1;\r\n\t\r\n\t\treturn n;\r\n\r\n}\r\nint main () {\r\n\tint a;\r\n\tcin>>a;\r\n\ta = factorial (a);\r\n\tcout<<a<<endl;\r\n\t\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n\t\r\n}\r\nint main(){\r\n\tint n;\r\n\twhile(cin >> n){\r\n\t\tcout << factorial(n) <<endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n// n >= 0\n//return n!\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial(n - 1);\n        //f es (n - 1)\n        return n*f;\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n>1){\n        return n*factorial(n-1)\n    }\n    else{\n        return 1\n    }\n    \n\nint main(){\n    int n;\n    factorial(n);\n    cout<<n<<endl;\n}\n    \n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n>1){\n        return n*factorial(n-1);\n    }\n    else{\n        return 1;\n    }\n}\n    \n\nint main(){\n    int n;\n    factorial(n);\n    cout<<n<<endl;\n}\n    \n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n>1){\n        return n*factorial(n-1);\n    }\n    else{\n        return 1;\n    }\n}\n    \n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n);<<endl;\n}\n    \n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n>1){\n        return n*factorial(n-1);\n    }\n    else{\n        return 1;\n    }\n}\n    \n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\nint factorial (int n) {\n    if ( n == 0 ) {\n        n = 1;\n    }\n    else {\n        n= n*factorial(n-1);\n    }\n    return n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n < 2) n = 1;\n    else {\n        n = n * factorial(n - 1);\n    }\n    return n;\n\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    // cout << \"Abans if recursivitat: \" << n << endl;\n    if (n == 0) return 1;\n    // cout << \"Abans recursivitat: \" << n << endl;\n    return n * factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n - 1);\n    \n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n\tint res;\r\n\tif (n==0 or n==1) {\r\n\t\tres=1;\r\n\t}\r\n\telse res = factorial (n-1)*n;\r\n\treturn res;\r\n}\r\nint main () {\r\n\tint n;\r\n\tcin>>n;\r\n\tcout << factorial (n)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n >= 2) n = n*factorial(n-1);\n    return n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 0;\n    else if (n >= 2) n = n*factorial(n-1);\n    return n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else if (n >= 2) n = n*factorial(n-1);\n    return n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n    \n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\nint mul;\n\nif(n==0) mul=1;\nelse mul=n*factorial(n-1);\n\t\nreturn mul;\n}\n\nint main(){\nint n,f;\ncin>>n;\nf=factorial(n);\ncout<<f<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tint f=1;\n\tfor( int i=1; i<=n ; i++){\n\t\tf *= i;\n\t }\n\treturn f;\n\t\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int res; \n    if (n==0)\n        res=1;\n    else{\n        res=factorial(n-1)*(n);\n        }\n    return res;\n}\n\nint main() {\n    int n,b;\n    cin>>n;\n    b=factorial(n);\n    cout<< b <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\nif (n<=1) return 1; \nelse{\n\treturn n*factorial(n-1);\n}\n\n\n}\n\nint main(){\nint x;\ncin>>x;\nint w= factorial(x);\ncout<<w<<endl;\n}\n",
  "#inlcude <iostream>\r\nusing namespace std;\r\n\r\n     int factorial(int n);\r\n     int t=1;\r\nif (n==0){\r\n         t=1;\r\n    return  t;\r\n}\r\nelse {\r\n        for(int i=1;i<=n;++i){\r\n\r\n            t=t*i;\r\n        }\r\n\r\n    return t;\r\n}\r\n\r\nint main(){}\r\n",
  "#inlcude <iostream>\r\nusing namespace std;\r\n\r\n     int factorial(int n){\r\n     int t=1;\r\nif (n==0){\r\n         t=1;\r\n    return  t;\r\n}\r\nelse {\r\n        for(int i=1;i<=n;++i){\r\n\r\n            t=t*i;\r\n        }\r\n\r\n    return t;\r\n}\r\n     }\r\nint main(){}\r\n",
  "#inlcude <iostream>\r\nusing namespace std;\r\n\r\n     int factorial(int n){\r\n     int t=1;\r\nif (n==0){\r\n         t=1;\r\n\r\n}\r\nelse {\r\n        for(int i=1;i<=n;++i){\r\n\r\n            t=t*i;\r\n        }\r\n\r\n\r\n}\r\nreturn t;\r\n     }\r\nint main(){}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n     int factorial(int n){\r\n     int t=1;\r\nif (n==0){\r\n         t=1;\r\n\r\n}\r\nelse {\r\n        for(int i=1;i<=n;++i){\r\n\r\n            t=t*i;\r\n        }\r\n\r\n\r\n}\r\nreturn t;\r\n     }\r\nint main(){}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n -1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int num)\r\n{\r\n    int x, i=1;\r\n    x = num;\r\n    while (i<num)\r\n    {\r\n        x = x*i;\r\n        i++;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n   int n, d;\r\n   cin >> n;\r\n   d = factorial(n);\r\n   cout << d << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif ( n == 0 ) return 1;\n\telse return n*factorial(n-1);\n\t\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main () {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    int i;\r\n    i=n-1;\r\n    while(i>0){\r\n        n=n*i;\r\n        i--;\r\n    }\r\n    return(n);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}\r\n",
  "// Example program\r\n#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if(n!=0){\r\n        int i;\r\n        i=n-1;\r\n        while(i>0){\r\n            n=n*i;\r\n            i--;\r\n        }\r\n        return(n);\r\n    }\r\n    else{\r\n        return(1);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n);\r\n}\r\n",
  "// Example program\r\n#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if(n!=0){\r\n        n=n*factorial(n-1);\r\n        return(n);\r\n    }\r\n    else{\r\n        return(1);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\r\nint factorial(int x);\r\nint main(){\r\n  int a;\r\n  std::cin >> a;\r\n  std::cout << factorial(a) << std::endl;\r\n}\r\nint factorial(int x){\r\n  if(x == 1 || x == 0) return 1;\r\n  else return factorial(x - 1) * x;\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0){\n\t\treturn 1;\n\t}\n\telse{\n\t\treturn n*factorial(n-1);\n\t}\n}\n\n\nint main(){\n\tint a;\n\twhile (cin >> a){\n\t\tcout << factorial(a) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t} \n}\n",
  "#include <iostream>\n#include <vector>\n#include <math.h>\nusing namespace std;\nint factorial(int n){\n\t if(n==0){return 1;}\n\t else{return n*factorial(n-1);}\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0){\n\t\treturn 1;\n\t} else {\n\t\treturn n * factorial(n-1);\n\t}\n}\nint main(){\n\tint a;\n\twhile(cin >> a){\n\t\tcout << factorial(a) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0){\n\t\treturn 1;\n\t}\n\treturn n*factorial(n-1);\n}\n\nint main(){\n\tint a;\n\twhile (cin >> a){\n\t\tcout << factorial(a) << endl;\n\t}\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n\t\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) {\n\t\treturn 1;\n\t} else {\n\t\treturn n * factorial(n-1);\n\t}\n}\n\n\nint main () {\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) {\n\t\treturn 1;\n\t} else {\n\t\treturn n * factorial(n-1);\n\t}\n}\n\n\nint main () {\n\tint a;\n\twhile (cin >> a) {\n\t\tcout << factorial(a) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    //n >= 0;\n    /*\n    int f = 1;\n    for (int i = 1; i <= n; i++){\n        f = f*i;\n    }\n    return f;\n    */\n    if (n == 0) return 1;\n    else return n*fact(n-1);\n}\n\nint main(){\n\tint n, f;\n\tcin >> n;\n\tf = n;\n\tif (n == 0){\n\t\tcout << \"0\" << endl;\n\t}else{\n\twhile (f>0){\n\t\tn = n*f;\n\t\tf = f-1;\n\t}\n\tcout << n << endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    //n >= 0;\n    /*\n    int f = 1;\n    for (int i = 1; i <= n; i++){\n        f = f*i;\n    }\n    return f;\n    */\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n\tint n, f;\n\tcin >> n;\n\tf = n;\n\tif (n == 0){\n\t\tcout << \"0\" << endl;\n\t}else{\n\twhile (f>0){\n\t\tn = n*f;\n\t\tf = f-1;\n\t}\n\tcout << n << endl;\n}\n}\n",
  "#include <iostream>\n#include <vector>\n#include <string>\n\nusing namespace std;\n\nint factorial(int n){\n    if ( n== 0) return 1;\n    return n * factorial(n-1);\n  }\n\nint main (){\n  int n;\n  cin>> n;\n  cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n == 0 or n == 1) return 1;\n    return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return factorial (n-1) * n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}",
  "\r\ndef factorial(n):\r\n    if n==0: return (1)\r\n    else:\r\n        return(n*factorial(n-1))\r\n\r\n\r\n",
  "from jutge import read\r\ndef factorial(n):\r\n    if n==0: return (1)\r\n    else:\r\n        return(n*factorial(n-1))\r\n\r\n\r\n\r\n\r\nn = read(int)\r\nwhile n is not None: \r\n  print(factorial(n))\r\n  n = read(int)\r\n",
  "from jutge import read\r\ndef factorial(n):\r\n    if n==0: return (1)\r\n    else:\r\n        return(n*factorial(n-1))\r\n\r\n\r\n\r\n\r\nn = read(int)\r\nwhile n is not None: \r\n  print(factorial(n))\r\n  n = read(int)\r\n",
  "def factorial(n):\n    \r\n\tif n == 0:\n        \r\n\t\treturn(1)\n   \r\n\telse:\n        \r\n\t\treturn(n*factorial(n-1))\n        \n\n    \n    ",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    if(n>0){\n        return n*factorial(n-1);\n    }\n\n}\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n// Recursion\n// P12509 - Factorial recursiu\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0 or n == 1) return 1;\n\treturn n * factorial(n - 1);\n\t\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\treturn factorial(n-1) * n;\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n    \nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n\t\t\n\tif ( n == 0) return 1;\n\t\t\n\telse return n * factorial (n-1);\n\t\t\n}\n\t\nint main() {\n\t\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n",
  "//Escriviu una funciÃ³ que retorni n!.\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// retorna n!, suposant n>=0.\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n -1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n < 2) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif ( n == 0 ) return 1;\n\telse return n*factorial ( n - 1 );\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 1 or n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while(cin>>n){\n        cout<<factorial(n)<<endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\n\t\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n\t\n}\n\t\nint main () {\n\t\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int x = 1;\n  int i = 1;\n  while (x =! n){\n    i = i * x;\n    ++x;\n  }\n  return i;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int x = 1;\n  int i = 1;\n  while (x =! n){\n    i = i * x;\n    ++x;\n  }\n  cout << i << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n<=1){\n    return 1;\n  }\n  else {\n    return (n * factorial(n - 1))\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n<=1){\n    return 1;\n  }\n  else {\n    return (n * factorial(n - 1));\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n// retorna n!, suposant n >= 0\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n * factorial(n - 1);\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return (n*factorial(n-1));\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\t\n",
  "#include <iostream> \n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n   int n;\n   cin >> n;\n   cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return(1);\n    else return(n * factorial(n-1));\n    }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0) return 1;\n\treturn n * factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0) return 1;\n\treturn n * factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\treturn n * (factorial(n - 1));\n\t}\n\n\nint main(){\n\tint x;\n\tcin >> x;\n\t\n\tcout << factorial(x) << endl;\n\t}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int resultat = 1;\n  while (n > 1) {\n    resultat *= n;\n\t--n;\n  }\n  return resultat;\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n// funciÃ³ recursiva per a calcular un factorial (Ã©s a dir, sense iteracions)\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n * factorial(n - 1);\n}\n\nint main () {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nint factorial (int n){\n\tif ( n <= 1) return 1;\n\telse return n*factorial (n - 1);\n}\n\nint main ()  {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n) {\n\tint f = n;\n\tif (n == 0) return 1;\n\tf = f * factorial(n - 1);\n\treturn f;\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0) return 1;\n\treturn n*factorial(n-1);\t\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tfactorial(n);\n\t\n\t\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (factorial == 0) {\n        return 1;\n    }\n    else n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0) {\n    return 1;\n  }else{\n    return n * factorial(n-1);\n  }\n}\n\nint main(){\n  int n ;\n  cin >> n;\n  cout << factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 2) return 2;\n    else return factorial(n - 1) * n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n        \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 2) return 2;\n    else if(n <= 1) return 1;\n    else return factorial(n - 1) * n;\n}\n\nint main() {\n    int n;\n    while(cin >> n) cout << factorial(n) << endl;\n        \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <string>\nusing namespace std;\n \nint factorial(int n) {\nif (n>1) {\n    return n*factorian(n-1)\n}\nelse {\n    return 1;\n}\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\n#include <string>\nusing namespace std;\n \nint factorial(int n) {\nif (n>1) {\n    return n*factorial(n-1);\n}\nelse {\n    return 1;\n}\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int rn;\n    while (cin >> rn) cout << factorial(rn) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl; \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n < 1) return 1;\n    else return n * factorial (n-1);\n}\n\nint main () {\n    int x;\n    cin >> x;\n    while (x != -1) {\n        cout << factorial (x) << endl;\n        cin >> x;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n){\n    if (n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int rn;\n    cin >> rn;\n    cout << factorial(rn) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int rn;\n    cin >> rn;\n    cout << factorial(rn) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n = n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int x){\n    if (x == 0) return 1;\n    else return x*fact(x-1);\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << fact(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x){\n    if (x == 0) return 1;\n    else return x*facttorial(x-1);\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x){\n    if (x == 0) return 1;\n    else return x*factorial(x-1);\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        n = 1;\n    }\n    else { \n    n = n * factorial(n-1);\n    }\n    \n    return n;\n}\nint main() {\n    int a;\n    while (cin >> a) {\n        cout << factorial(a) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\nint main () {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) {\n        return 1;\n    }\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int num;\n    cin >> num;\n    if (num <= 12) {\n        cout << factorial(num) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint f = 1;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tf = f*i;\n}\n\treturn f;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int total=1;\n    int i =0;\n    int p = n;\n    while ( p>i){\n        total = total*p;\n        p = p-1;\n    }\n    n = n-1;\n    if (n>0) factorial(n);\n    cout << total << endl;\n        \n        \n\n}\nint main () {\n    int x;\n    cin >> x;\n    factorial(x);\n}\n    \n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int total=1;\n    int i =0;\n    int p = n;\n    while ( p>i){\n        total = total*p;\n        p = p-1;\n    }\n    n = n-1;\n    if (n>0) factorial(n);\n    cout << total << endl;\n        \n        \n\n}\nint main () {\n    int x;\n    cin >> x;\n    factorial(x);\n}\n    \n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int total=1;\n    int i =0;\n    int p = n;\n    while ( p>i){\n        total = total*p;\n        p = p-1;\n    }\n    n = n-1;\n    if (n>0) factorial(n);\n        \n        \n\n}\nint main () {\n    int x;\n    cin >> x;\n    factorial(x);\n}\n    \n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int total=1;\n    int i =0;\n    int p = n;\n    while ( p>i){\n        total = total*p;\n        p = p-1;\n    }\n    n = n-1;\n    if (n>0) factorial(n);\n    return(total);\n        \n        \n\n}\nint main () {\n    int x;\n    cin >> x;\n    factorial(x);\n}\n    \n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n != 0) return n*factorial(n-1);\r\n\telse return 1;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int x){\n\tif (x == 0) return 1;\n\telse return x*fact(x - 1);\n}\n\nint main() {\n\tint n;\n    while (cin >> n) {\n        cout << fact(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int x){\n\tif (x == 0) return 1;\n\telse return x * fact(x - 1);\n}\nint main() {\n\tint n;\n    while (cin >> n) {\n        cout << fact(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int x){\n\tif (x == 0) return 1;\n\telse return x * fact(x - 1);\n}\nint main() {\n\tint n;\n    cin >> n;\n    cout << fact(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\nint main() {\n\tint n;\n    while (cin >> n) {\n      cout << factorial (n) << endl;\n    }\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int facto = 1;\r\n    if (facto != 0 or facto != 1){\r\n        for (int c = 1; c <= n; c++) facto *= c;\r\n    }\r\n    return facto;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    while (cin >> n){\r\n        cout << factorial(n) << endl;\r\n    }\r\n\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return (n * factorial(n-1));\t\n}\n\nint main() {\n\tint n;\n\twhile(cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    \n    else {\n        return factorial (n-1) * n;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return factorial (n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return factorial (n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\t\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n - 1);\n}\nint main()  {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n < 2) return 1;\n    else return factorial (n-1) * n;\n        \n    }\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return factorial(n-1) * n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0 or n == 1) return 1;\n\telse return factorial(n-1) * n;\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)  {\n\tif (n == 0 or n == 1) return 1;\n\telse return factorial(n-1)*n;\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n  if(n==0) {\n    return 1;\n  }\n  else {\n    return n*factorial(n-1);\n  }\n}\nint main() {\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse {\n\t\treturn n * factorial (n -1);\n\t}\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n\r\n}\r\n\r\nint main() {\r\n\tint h;\r\n\tcin >> h;\r\n\tcout << factorial(h) <<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if ( n == 0 ) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) <<endl;\n}\n    \n    \n    \n    \n    \n    \n    \n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n//Retorna el factorial del nombre\n//Prec: 0 <= n <= 12 \nint factorial (int n){\n\tif (n == 0 or n == 1) return 1; \n\tint fact = n;\n\tif (n > 1) fact = fact * (factorial (n-1)); \n\treturn fact;\n}\n\n\nint main (){\n\tint n;\n\tcin >> n;\n\tcout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {return 1;}\n    else {\n        int f = factorial(n - 1);\n        return n*f;\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n    \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nbool es_creixent(int n);\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\t if(es_creixent(n)) cout << \"true\" << endl;\r\n\t\t else cout << \"false\" << endl;\r\n\t\t\r\n\t}\r\n\t\r\n}\r\nbool es_creixent(int n) {\r\n\tint x = 9;\r\n    while (n > 0) {\r\n       int next = n%10;\r\n        if (next > x) return false;\r\n        x = next;\r\n         n /= 10;\r\n        }\r\n        return true;\r\n    }   \r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n\r\nint factorial(int n){\r\n     if (n == 0) return 1;\r\n     else return n*factorial(n-1);\r\n}\r\n\r\n",
  "int factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n - 1);\n}\n\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\n\tif (n==0) return 1;\n\telse return n * factorial(n-1);\n\n}\n\nint main(){\n\tint n;\n\n\tcin >> n;\n\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int x;\n  while (cin >> x) {\n    cout << factorial(x) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) { \nif (n == 0) return 1;\nelse return n*factorial(n - 1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\tif(n<=1) return 1;\n\tint f=1;\n\tfor(int i =2; i<=n; ++i){\n\t\tf=f*i;\n\t}\n\treturn f;\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n\t\t\n\t\t\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial (int n){\n\tif(n<=1) return 1;\n\tint f=1;\n\tfor(int i =2; i<=n; ++i){\n\t\tf=f*i;\n\t}\n\treturn f;\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n\t\t\n\t\t\n",
  "#include <iostream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n\tif (n<=1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main(){\n\tint x;\n\tcin>>x;\n\tcout << factorial(x) << endl;\n}\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\t\n\t\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n > 1) {\n        return n*factorial(n - 1);\n    }\n    else {\n        return 1;\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n  cin>>n;\n  int s = 1;\n  for (int i = 1; i<=n; ++i){\n    s = s * i;\n  }\n  return s;\n}\nint main(){\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n\n\n}\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n  cin>>n;\n  int s = 1;\n  for (int i = 1; i<=n; ++i){\n    s = s * i;\n  }\n  return s;\n}\nint main(){\n  int n;\n  while (cin>>n){\n    cout<<factorial(n)<<endl;\n  }\n}\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n  int s = 1;\n  for (int i = 1; i<=n; ++i){\n    s = s * i;\n  }\n  return s;\n}\nint main(){\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int f;\n    if (n==0) return 1;\n    else{\n        f = factorial(n-1);\n        //n! = n(n-1)!\n    }\n    return n*f;\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//Funcio que retorna el factorial de n recursivament\r\n//Preciondicio: n >= 0\r\nint factorial(int n){\r\n\r\n\t//Cas base: n = 0\r\n\tif(n == 0) return 1;\r\n\r\n\t//Cas recursiu\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\r\n\r\n\tint n;\r\n\r\n\twhile(cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}",
  "#include<iostream>\nusing namespace std;\n\nint fact(int x) {\n    if (x==0) return 1;\n    else return x*fact(x-1);\n}\n\nint main() {\n    cout << fact(4) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n = 0) return 1;\n    else return n*factorial(n - 1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n = 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif (n<=1) return 1;\r\n\telse return n*factorial (n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout <<factorial(n) << endl;\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint fact(int x) {\n    if (x==0) return 1;\n    else return x*(fact(x-1));\n}\n\nint main() {\n    cout << fact(4) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint fact(int x) {\n    if (x==0) return 1;\n    else {\n        int f=fact(x-1);\n        return x*f;\n    }\n}\n\nint main() {\n    cout << fact(4) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint fact(int x) {\n    if (x==0) return 1;\n    else {\n        int f=fact(x-1);\n        return x*f;\n    }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint fact(int x) {\n    if (x==0) return 1;\n    else {\n        int f=fact(x-1);\n        return x*f;\n    }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int x) {\n    if (x==0) return 1;\n    else {\n        int f=factorial(x-1);\n        return x*f;\n    }\n}\n",
  "//\n//  main.cpp\n//  factorial\n//\n//  Created by Jordi Pitarch Blasco on 04/11/2019.\n//  Copyright Â© 2019 Jordi Pitarch Blasco. All rights reserved.\n//\n\n#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nint factorial(int n){\n\tif (n <= 1) return 1;\n\telse return factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n <= 1) return 1;\n\telse return n* factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n//Pre:\r\n//Post:\r\nint fact(int x) {\r\n    if (x == 0) return 1;\r\n    else {\r\n        int f = x*fact(x-1);\r\n        cout << x << endl;\r\n        return f;\r\n    }\r\n}\r\n\r\nint main() {\r\n    cout << fact(4) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\tif (n==0) return 1;\n\telse return n* factorial (n-1);\n}\nint main(){\n\tint n;\n\tcin >> n;\n\tfactorial (n);\n\tcout << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "int factorial(int n) {\r\n\tif (n == 0 or n == 1) return 0;\r\n\telse return n * factorial(n - 1);\r\n}",
  "int factorial(int n) {\r\n\tif (n == 0 or n == 1) return 1;\r\n\telse return n * factorial(n - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint fact_recursiu(int n) {\n\tif (n<=1) return 1;\n\telse {\n\t\treturn n*fact_recursiu(n-1);\n\t\t}\n\t}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << fact_recursiu(n);\n\tcout << endl;\n\t}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n<=1) return 1;\n\telse {\n\t\treturn n*factorial(n-1);\n\t\t}\n\t}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n);\n\tcout << endl;\n\t}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n=0) return 1;\r\n\telse return n*factorial(n-1);\r\n\t\r\n}\r\nint main (){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n\t\r\n}\r\nint main (){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: n >= 0;\n//Post: retorna n!\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\t\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int x) {\n\tif (x <= 1) return 1;\n\treturn x*fact(x-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << fact(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(double x) {\n\tif (x <= 1) return 1;\n\treturn x*fact(x-1);\n}\n\nint main(){\n\tdouble n;\n\tcin >> n;\n\tcout << int(fact(n)) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "// (c) FIBerHub, https://fiberhub.tk\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    \n    if(n == 0){\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main (){\n    \n    int n;\n    cin>>n;\n    cout<<factorial(n) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   if (n <= 1) return 1;\n  else return n*factorial(n-1);\n }\nint main (){\n   \n int x;\n while (cin >> x){\n  cout << factorial(x) << endl;\n  }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n   if (n <= 1) return 1;\n  else return n*factorial(n-1);\n }\nint main (){\n   \n int x;\n while (cin >> x){\n  cout << factorial(x) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int c;\n  cin >> n;\n for (int i = 1;i <= n;++i) c = c*i;\n  return c;\n }\nint main (){\n   \n int x;\n while (cin >> x){\n  cout << factorial(x) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 2) return 2;\n\treturn n * factorial(n-1);\n}\n\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 2) return 2;\n\treturn n * factorial(n-1);\n}\n\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n == 0) return 1;\n\tif(n == 2) return 2;\n\treturn n * factorial(n-1);\n}\n\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream> \nusing namespace std; \n\nint factorial(int n) {\n    int k = 1;\n    if (n == 1 or n == 0) return 1;\n    else k = factorial (n-1);\n    return k*n;\n}\n\nint main () {\n    cout << factorial(1) << endl << factorial(2) << endl << factorial(3) << factorial (4) << endl;\n\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\tint valor;\r\n\tif (n <= 1) valor = 1;\r\n\telse valor = n * factorial (n-1);\r\n\treturn valor;\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n\t} \r\n}\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    \n    if (n == 0) return 1;\n    \n    else return n*factorial(n-1);\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n - 1);\n}\n\nint main() {\n\tint numero;\n\tcin >> numero;\n\tcout << factorial(numero) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    int f = 1;\n    for (int i = 2; i <= n; ++i)\n    {\n        f = f*i;\n    }\n    return f;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <cstdlib>\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n-1);\n}\nint main () {\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n}\n\n\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n//cas base 1\n        if( n == 0) return 1;\n        else {\n            \n            \n            return n*factorial(n-1);\n        }\n    \n    \n\n\n\n}\n\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0 or n == 1) return 1;\n    else{\n        return factorial(n - 1) * n;\n    }\n}\n\nint main(){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return (n*factorial(n-1));\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\n    if (n == 0) return 1;\n    \n    else {\n        \n        return factorial (n - 1) * n;\n    }\n}\n\n    \nint main() {\n    int n;\n    \n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial (n-1);\n}\n\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial (x) << endl;\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) { \n    recursive solutionif(n == 0) return 1;\n    else return n*factorial(n -1);\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) { \n    if(n == 0) return 1;\n    else return n*factorial(n -1);\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n    \n",
  "#include <iostream>\r\nusing namespace std;\r\n//Pre:\r\n//Post:\r\nint factorial(int x) {\r\n    if (x == 0) return 1;\r\n    else {\r\n        int f = x*factorial(x-1);\r\n        return f;\r\n    }\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\twhile (cin >> x) {\r\n\t\tcout << factorial(x) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n    \n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if(n>1){\n        return n*factorial(n-1);  \n    }\n    else{\n        return 1;\n    }\n    \n}\n\nint main () {\n    \n    int n;\n    \n    cin >> n;\n    factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "//factorial recursiu\n#include <iostream>\nusing namespace std;\n\n\n//Pre condiciÃ³ n >= 0\n//Returns n!\nint factorial(int n) {\n\tint fact;\n\tif (n == 0) fact = 1;\n\telse fact = n*factorial(n - 1);\n\t\n\treturn fact;\n\t \n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else{\n        return n*factorial(n-1);\n    }\n}\n\nint main (){\n    int n;\n    while (cin >> n);\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    if (n <= 1) return 1;\n    else return n * factorial (n-1);\n}\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial (x) << endl;\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n    if (x == 0) return 1;\r\n    else return x * factorial(x -1);\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n -1);\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main () {\n    int num;\n    cin >> num;\n    factorial (num);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n -1);\r\n}\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0){\n        return 1;\n    }\n    else {\n        int s = 1;\n        for (int i = n; i > 0; --i){\n            s = s * i;\n        }\n        return s;\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    int factor = 1;\n    if (n<=1) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main () {\n\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n<=1) return 1;\n    else return factorial(n-1)*n;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint m = n, z = 1;\r\n\tif (n != 0) {\r\n\t\tfor (int i = 1; i < m; ++i) {\r\n\t\t\tn = n * i;\r\n\t\t}\r\n\t\treturn n;\r\n\t}\r\n\telse return z;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n)\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact = 1;\n    \n    if ( n == 0) fact = 1;\n    \n    else {\n        fact = n * factorial(n-1);\n    }\n    \n    return fact;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f = 0;\n    if (n == 0) f = 1;\n    else {\n        f = n*factorial(n-1);\n    }\n    return f;\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif(n==0) return 1;\n\telse return n*factorial(n-1);\n\t}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial(n-1);\n        return n*f;\n    }\n}\n    \nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n    \n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return (factorial(n-1) * n);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) {\n        return 1;\n    }\n    else {\n    else return n*factorial(n-1);\n}\n}\n\nint main () {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n    \n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) {\n        return 1;\n    }\n    else {\n    return n*factorial(n-1);\n}\n}\n\nint main () {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n    \n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  else return n * factorial(n - 1);\n}\n  \nint main() {\n  int c;\n  while (cin >> c) {\n  cout << factorial(c) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int a=1;\n    if (n==0 or n==1) return 1;\n    else {\n        for (int i = n; i != 0; --i) {\n            a = a*i;\n        }\n    }\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse {int t = 1;\n\tfor (int i = 1; i <= n; ++i){\n\t\tt *= i;\n\t}\n\treturn t;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int a=1;\n    if (n==0 or n==1) return 1;\n    else {\n        a = n*factorial(n-1);\n        return a;\n    }\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int t = 1;\n    if (n == 0) return 1;\n    else {\n        for (int i = 1; i <= n; ++i) {\n            t = t*i;\n        }\n        return t;\n    }\n}\n\nint main () {\n    int n;\n    \n    cin >> n;\n    cout << factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial(n-1);\n        return n*f;\n    }\n}\n\nint main() {\n    int n; \n    cin >> n;\n    \n    cout << factorial(n) << endl;   \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int m;\n    while (cin >> m) cout << factorial(m) << endl;\n    \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n    if (x == 1) return 1;\n    else return x*factorial(x-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    \n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial (n - 1);\n        //n es (n -1) por hipotesis de induccion\n        return n * f;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else { \n          int f = factorial(n-1);\n          return n*f;\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else { \n          return n*(factorial(n-1));\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if(n == 0) return 1;\n\n    else return n*factorial(n-1);\n\n}\n\n\nint main() {\n\n    int x;\n\n    cin>> x;\n    \n    cout<< factorial(x)<<endl;\n\n}\n",
  "\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\n    if ( n <= 1 ) return 1;\n    \n    else return n*factorial(n-1);\n}\n\nint main() {\n\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n          \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) cout << 1 << endl;\n    int b = 1;\n    else {\n        for (int i = 1; i <= n; ++i) {\n        b = i * b;\n        }\n    cout << b << endl;\n    }\n}\nint main() {\n    int c;\n    cin >> c;\n    cout << factorial(c);\n}\n        \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else {\n        int f = factorial(n-1);\n        // n-1 por H.I    \n        return n*f;\n    }   \n}\n\nint main () {\n    \n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        cout << 1 << endl;\n    }\n    int b = 1;\n    else {\n        for (int i = 1; i <= n; ++i) {\n        b = i * b;\n        }\n    cout << b << endl;\n    }\n}\nint main() {\n    int c;\n    cin >> c;\n    cout << factorial(c);\n}\n        \n",
  "#include <iostream>\r\nusing namespace std;\r\n//Pre: 0 <= n <= 12\r\n//Post: Escribir el factorial de n.\r\nint fact(int x) {\r\n\tint b;\r\n    if (x == 0) b = 1; \r\n\telse b = x*fact(x-1);\r\n\treturn b;\r\n\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\twhile (cin >> x) {\r\n\t\tcout << fact(x) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n//Pre: 0 <= n <= 12\r\n//Post: Escribir el factorial de n.\r\nint fact(int x) {\r\n\tint b;\r\n\tif (x == 0) b = 1; \r\n\telse b = x*fact(x-1);\r\n\treturn b;\r\n\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\twhile (cin >> x) {\r\n\t\tcout << fact(x) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    int b = 1;\n    else {\n        for (int i = 1; i <= n; ++i) {\n        b = i * b;\n        }\n    return b;\n    }\n}\nint main() {\n    int c;\n    cin >> c;\n    cout << factorial(c);\n}\n        \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int b = 1;\n    if (n == 0) return 1;\n    else {\n        for (int i = 1; i <= n; ++i) {\n        b = i * b;\n        }\n    return b;\n    }\n}\nint main() {\n    int c;\n    cin >> c;\n    cout << factorial(c);\n}\n        \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int m = 1;\n    int a = n;\n    if (n <= 1) return m;\n    else {\n        for (int i = 1; i <= n; ++i) {\n            m = m * a;\n            a = a - 1;\n    }\n    return m;\n  }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tint fact;\n    if (n <= 1) fact = n;\n    else fact = n * factorial(n - 1);\n\treturn fact;\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tint fact;\n    if (n <= 1) fact = 1;\n    else fact = n * factorial(n - 1);\n\treturn fact;\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n// caso base es para n <= 1\n// a partir de ahi aplicamos recursion\n// si n <= 1 \nint factorial(int n) {\n\tint fact;\n    if (n <= 1) fact = 1;\n    else fact = n * factorial(n - 1);\n\treturn fact;\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n//Pre: 0 <= n <= 12\r\n//Post: Escribir el factorial de n.\r\nint factorial(int x) {\r\n\tint fact;\r\n\tif (x <= 1) fact = 1; \r\n\telse fact = x * factorial(x-1);\r\n\treturn fact;\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\twhile (cin >> x) {\r\n\t\tcout << factorial(x) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tint fact = 1;\n\tif (n > 1) {\n\t\tfact = n*factorial(n-1);\n\t}\n\treturn fact;\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint fact = 1;\n\tif (n > 1) fact = factorial (n - 1) * n;\n\treturn fact;\n}\n\n\nint main() {\n\tint x;\n\twhile (cin >> x) {\n\t\tif ((x >= 0) and (x <= 12))\n\t\tcout << factorial(x) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1)*n;\n}\n    \nint main () {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "// Pre: Es compleix 0â¤ n â¤ 12. Entra un enter n.\n// Post: Surt el factorial de n.\n\n\n\n#include <iostream>\nusing namespace std;\n\n// Pre: Es compleix 0â¤ n â¤ 12. Entra un enter n.\n// Post: Surt el factorial de n.\n// Factorial recursiu.\nint factorial(int n) {\n\t//caso base n es 0 o 1\n\tint fact = 1; \n\tif (n > 1) {\n\t\tfact = n * factorial(n - 1); \n\t}\n\treturn fact;\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n    \n}\nint main (){\n    int a;\n    while (cin>>a){\n        \n        cout<<factorial(a)<<endl;\n    }\n    \n    \n    \n    \n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n==1) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n <= 0) return 1;\n    else return n*factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return1;\n    else return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return1;\n    else return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return;\n    else return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint resultado;\n\tif (n <= 1) resultado = 1;\n\telse resultado = n * factorial(n - 1);\n\treturn resultado;\n}\n\nint main () {\n\tint numero;\n\twhile (cin >> numero) cout << factorial(numero) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: numeros naturales >= 0\n//Post: numeros naturales > 0\n//Que: calculo del factorial del valor puesto\nint factorial(int n) {\n   int fact;\n   if (n <= 1) fact = 1;\n   else fact = n * factorial(n - 1);\n   return fact;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        n = 1;\n    }\n    else {\n        n = n * factorial(n-1);\n    }\n    return n;\n}\nint main () {\n    int n;\n    cin >> n;\n    factorial(n);\n    \n    cout << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1) return 1;\n    return factorial(n-1)*n;\n}\n\nint main(){\n \n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return factorial(n-1)*n;\n}\n\nint main(){\n \n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n - 1); \n}\nint main() {\n    \n    int n;\n    cin >> n;\n    cout << \"factorial(\" << n << \") â \" << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int s = 1;\n    if (n == 0) s = 1;\n    else {\n        s = (n*factorial(n-1));\n        --n;\n    }\n    return s;\n}\n\n\nint main () {\n    \n    int n;\n    while (cin >> n) {\n    \n        n = factorial(n);\n        cout << n << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nif ( n <= 1 ) return 1;\nelse return n*(factorial(n-1));\nn = n -1;\n}\n\nint main () {\nint x;\ncin >> x;\ncout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nif ( n == 0 ) return 1;\nelse return n*(factorial(n-1));\nn = n -1;\n}\n\nint main () {\nint x;\ncin >> x;\ncout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n * factorial(n-1);\n}\nint main() {\n    int x;\n    while(cin>>x) {\n        cout<<factorial(x)<<endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n);\r\nint main(){\r\n    int n;\r\n    while (cin >> n){\r\n        cout << factorial(n) << endl;\r\n}\r\n}\r\nint factorial(int n){\r\n    if (n>1) return factorial(n-1) * n;\r\n    else return 1;\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n=<1) return 1;\n    else return n*factorial(n-1);\n}\n    \n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n    \n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n == 1 or n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main(){\n\tint n;\n\twhile (cin >> n)\n\t\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n// n >= 0\n//return n!\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        int f = factorial(n - 1);\n        //f es (n - 1)\n        return n*f;\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if( n <= 1) return 1;\n    else return n * factorial(n -1);\n}\nint main(){\n    int x; \n    cin >> x; \n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else if (n >= 2) n = n*factorial(n-1);\n    return n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//P12509\r\n//pre: un natural n, 0<=n<=12.\r\n//post: retornar n!\r\n\r\nint factorial (int n) {\r\n\tif (n <= 1) return 1;\r\n\treturn n*factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}   \n}\n\n\nint factorial(int n){\n\tint resultat = 1;\n\twhile (n > 0){\n\t\tresultat = resultat*n;\n\t\t--n;\n\t\tfactorial(n);\n\t}\n\treturn resultat; \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}   \n}\n\n\nint factorial(int n){\n\tif(n <= 1) return 1;\n\telse return n*factorial(n-1); \t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return n * factorial (n - 1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl; \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>=1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n* factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\t\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return 1;\n\telse return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main () {\n\nint f;\ncin >> f;\n\ncout << factorial(f) << endl;\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial(n-1); \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <=1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n>1){\r\n  \treturn n*factorial(n-1);\r\n  }\r\n  else {\r\n  \treturn 1;\r\n  }\r\n}\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int x){\n\tif (x <= 0) return 1;\n\treturn x * fact(x-1);\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << fact(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint fact(int x){\n\tif (x <= 0) return 1;\n\treturn x * fact(x-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int x) {\n\tif (x <= 0) return 1;\n\treturn x * fact(x-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int x) {\n\tif (x <= 0) return 1;\n\telse return x * fact(x-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int x) {\n\tif (x <= 0) return 1;\n\treturn x * fact(x-1);\n}\n\nint main (){\n\tint n;\n\tcin >> n;\n\tcout << fact(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 0) return 1;\n\treturn n * factorial(n-1);\n}\n\nint main (){\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n -1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "//int factorial(int n);\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n\t//caso base\r\n\tif (n <= 1) return 1;\r\n\r\n\telse {\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n}\r\n\r\n/*\r\n\r\nint main() {\r\n\r\n\tint n;\r\n\tcin >> n;\r\n\r\n\tcout << factorial(n) << endl;\r\n\r\n\treturn 0;\r\n}\r\n\r\n*/",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n){\r\n    int factorial=1;\r\n    int cont=0;\r\n    while (cont<=n){\r\n        factorial=factorial*cont;\r\n        cont++;\r\n    return factorial;\r\n    }\r\n}\r\nint main()\r\n{\r\n\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n){\r\n    int factorial=1;\r\n    int cont=1;\r\n    while (cont<=n){\r\n        factorial=factorial*cont;\r\n        cont++;\r\n    return factorial;\r\n    }\r\n}\r\nint main()\r\n{\r\n\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint factorial(int n){\r\n    int factorial=1;\r\n    int cont=1;\r\n    while (cont<=n){\r\n        factorial=factorial*cont;\r\n        cont++;\r\n    }\r\n    return factorial;\r\n}\r\nint main()\r\n{\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n){\n    if( n == 0 or n == 1) return 1; \n    else{\n        n *= factorial(n -1);\n        return n; \n    }\n}\n\nint main(){\n    int x; \n    while(cin >> x){\n        cout << factorial(x)  << endl; \n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    return factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int x){\n    if( x == 0 or x == 1) return 1; \n    else return x*factorial(x-1);\n}\n\nint main(){\n    int x; \n    while(cin >> x){\n        cout << factorial(x) << endl; \n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n  if (n == 0) return 1;\n  else return n*factorial (n-1);\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int x){\n    if( x == 0 or x == 1) return 1; \n    else return x*factorial(x-1); \n}\n\nint main(){\n    int x; \n    while(cin >> x){\n        cout << factorial(x) << endl; \n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\t//cas base\n\tif(n == 0) return 1; \n\telse return n*factorial(n-1); \n}\n\n\nint main() {\n    int valor;\n    while (cin >> valor) {\n        cout << factorial(valor) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else {\n        return n*factorial(n);\n    }\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n<=1) return 1;\r\n\telse return n*factorial(n-1);\t\r\n}\r\n\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(cin>>n){\r\n\t\tcout<<factorial(n)<<endl;\r\n\t}\r\n\t\r\n}\r\n",
  "#include<iostream>\n\nint factorial(int n){\nint res;\nif(n==0) res=1;\nelse res=n*factorial(n-1);\nreturn res;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int res;\n    if(n==0){\n        res = 1;\n    }else{\n        res = n * factorial(n-1);\n    }\n    return res;\n}\n\nint main(){\n    cout << factorial(4)<< endl;\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n==0) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main(){\r\n  int n;\r\n  cin>>n;\r\n  cout<<\"facotrial(\"<<n<<\")-->\"<<factorial(n)<<endl;\r\n\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n==0) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main(){\r\n  int n;\r\n  cin>>n;\r\n  cout<<\"facotrial(\"<<n<<\")-->\"<<factorial(n)<<endl;\r\n\r\n}\r\n",
  "int factorial(int n){\nint f=1, i=0;\nwhile(i<n){\ni++;\nf=f*i;\n}\nreturn f;\n}\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n) {\n\tif (n == 0) return 1; \n\telse return n*factorial(n -1); \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return factorial (n-1)*n;\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n//\tn == 0 ? return 1 : return factorial(n - 1);\r\n\tif(n == 0) return 1;\r\n\telse return n * factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tstd::cin >> n;\r\n\tstd::cout << factorial(n) << endl;\r\n\t\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n\tn == 0 ? n = 1 : n = n * factorial(n - 1);\r\n\treturn n;\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse {\n\t\treturn n*factorial(n - 1);\n\t}\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n\t\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "//factorial recursiu\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n <= 1){\r\n    return 1;\r\n  } else {\r\n    return (n * factorial(n-1));\r\n  }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n// Pre: n és un nombre enter positiu\r\n// Post: retorna n!\r\nint res ;\r\nif (n==0) res=1 ;\r\nelse res = n*factorial (n-1);\r\nreturn res ;\r\n}\r\n\r\nint main (){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout<<\tfactorial (n)<<endl;\r\n\r\n}\r\n",
  "//  La recursivitat pot substituir un bucle en el disseny dun\r\n//  programa. Alguns algorismes recursius es poden\r\n//  reescriure com algorismes iteratius.\r\n//  Generalment les solucions recursives són més simples\r\n//  que (o tan simples com) les solucions iteratives.\r\n\r\n\r\n\r\n//  Identificar el -cas bàsic- (també anomenat cas directe) i\r\n//  determinar com sha de resoldre. El cas bàsic és aquell\r\n//  cas en el qual el programa es pot resoldre directament\r\n//  sense necessitat de fer una crida recursiva. De casos\r\n//  bàsics pot haver-ne més dun.\r\n\r\n\r\n//  Determinar com es resol el cas recursiu en termes del\r\n//  casos bàsics (els quals ja hem resolt en el pas anterior).\r\n//  De casos recursius pot haver-ne més dun.\r\n\r\n//DE NUMERO A BINARI:\r\n\r\n\r\n\r\nvoid base2 (int n ) {\r\n// Pre: n és un nombre enter positiu\r\n// Post: escriu la representació binària de n.\r\nint r e s ;\r\nif ( n == 0) r e s = 0 ;\r\nelse if ( n == 1) r e s = 1 ;\r\nelse {\r\nbase2 ( n / 2 ) ;\r\nr e s = n%2;\r\n}\r\ncout << r e s ;\r\n}\r\n\r\n\r\n\r\n//Fibonacci:\r\n\r\nunsigned int f i b (unsigned int n ) {\r\n// Pre: n és un nombre enter positiu\r\n// Post: retorna el nombre de fibonacci dordre n.\r\nunsigned int r e s ;\r\nif ( n == 0 or n == 1) r e s = 1 ;\r\nelse r e s = f i b ( n-1) + f i b ( n-2);\r\nreturn r e s ;\r\n}\r\n//COMPTE!! La implementació recursiva (aquesta versió) és\r\n//força més costosa que la iterativa.\r\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nstring genera_resposta (const vector<int>& secret, const vector<int>& intent) {\n\t//Pre: secret i intent son vectors d'enters d'enters\n\t//Post: retorna la resposta amb de l'intent respecte al codi secret\n\tstring resposta=\"\";\n\tfor (unsigned int i=0; i<intent.size(); ++i){\n\t\t\tbool trobat=false;\n\t\t\tunsigned int j=0;\n\t\t\twhile (j<secret.size() and not trobat) {\n\t\t\t\t\tif (secret[j]==intent[i]) trobat=true;\n\t\t\t\t\telse ++j;\n\t\t\t}\n\t\t\tif (trobat){\n\t\t\t\tif (i==j) resposta+='X';\n\t\t\t\telse      resposta+='O';\n\t\t\t}\n\t\t\telse resposta+='-';\n\t}\n\treturn resposta;\n}\n\nint main() {\n\tvector<int> sec, inte;\n\tsec.push_back(1);\n\tsec.push_back(3);\n\tsec.push_back(4);\n\tsec.push_back(7);\n\tinte.push_back(1);\n\tinte.push_back(7);\n\tinte.push_back(5);\n\tinte.push_back(2);\n\tcout<<\"secret :\"<<endl;\n\tfor (unsigned int i=0; i<sec.size(); ++i) cout<<sec[i];\n\tcout<<endl;\n\tcout<<\"intent :\"<<endl;\n\tfor (unsigned int j=0; j<inte.size(); ++j) cout<<inte[j];\n\tcout<<endl;\n\tcout<<genera_resposta(sec,inte)<<endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\n",
  "//ALGORISMES ORDENACIÓ\r\n\r\n\r\n\r\n\r\n//Estable. Les claus iguals no es reordenen.\r\n//No requereix espai extra. Opera amb el vector, sense\r\n//requerir un vector auxiliar.\r\n//En el pitjor cas fa O(n log n) comparacions de claus.\r\n//En el pitjor cas fa O(n) intercanvis.\r\n//Adaptatiu. Accelera a O(n) quan les dades estan gairebé\r\n//ordenades o quan hi ha unes poques claus úniques.\r\n\r\n\r\n\r\n\r\n//No hi ha cap algorisme que compleixi totes aquestes propietats.\r\n//La tria de lalgorisme dordenació dependrà del\r\n//problema que sestigui ressolent.\r\n\r\n\r\n\r\n\r\n\r\n\r\n//La biblioteca standard de C++ disposa duna acció dordenació anomenada sort O quicksort.\r\n\r\n\r\n//Incloure:\r\n\r\n#include <algorithm>\r\n\r\n//Per ordenar un vector v de manera creixent cal fer:\r\n\r\nsort(v.begin(),v.end());\r\n\r\n\r\n\r\n//Per ordenar amb altres criteris cal cridar lacció sort de la\r\n//següent manera:\r\nsort(v.begin(), v.end(), comp) ;\r\n\r\n\r\nsort també permet ordenar tipus de dades creats per\r\nnosaltres (p. ex tuples).\r\nSi el tipus Persona és el següent:\r\nstruct Persona {\r\ns t r i n g nom;\r\nunsigned int eda t ;\r\ns t r i n g co r reu ;\r\n} ;\r\nPer ordenar persones per ledat i després pel nom:\r\nbool comp (const Persona& a , const Persona& b ) {\r\nbool r e s ;\r\nif ( a . eda t == b . eda t ) r e s = a . nom < b . nom;\r\nelse r e s = a . eda t < b . eda t ;\r\nreturn r e s ;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Algorismes dordenació\r\n\r\nCom funciona el selection sort?\r\nEn la primera iteració es busca lelement més petit i es\r\nsitua en la primera posició del vector.\r\nEn la segona iteració es busca el segon element més petit\r\ni es situa en la segona posició del vector.\r\nEn la tercera, el tercer.\r\nIdea: De manera general, a la iteració i-èssima se\r\nselecciona lelement i-èssim més petit i es situa a la\r\nposició i.\r\n\r\n\r\n\r\n\r\n\r\n//Algorisme del selection sort (I)\r\n\r\nvoid s e l e c t i o n _ s o r t ( vec to r <int>& v ) {\r\n// Pre: \r\n// Post: v està ordenat de manera creixent.\r\nunsigned int ul tim = v . si z e ( ) - 1 ;\r\nfor (unsigned int i = 0 ; i < ul tim ; ++ i ) {\r\n// Inv: v[0..i-1] està ordenat de manera creixent, i a més si a < i <= b\r\n// llavors v[a] <= v[b]\r\nunsigned int k = pos_min ( v , i , ul tim ) ;\r\nswap ( v [ k ] , v [ i ] ) ;\r\n}\r\n}\r\n\r\n\r\n//Algorisme del selection sort (II)\r\n\r\nunsigned int pos_min (const vec to r <int>& v ,\r\nunsigned int l e f t ,\r\nunsigned int ri g h t ) {\r\n// Pre: 0 <= left <= right < v.size()\r\n// Post: Retorna la posició pos tal que està entre left i right, i a més\r\n// v[pos] és lelement més petit del vector en el rang v[left..right]\r\nunsigned int pos = l e f t ;\r\nfor (unsigned int i = l e f t + 1 ; i <= ri g h t ; ++ i ) {\r\n// Inv: v[pos] és lelement mínim del vector en el rang v[left..i-1]\r\nif ( v [ i ] < v [ pos ] ) pos = i ;\r\n}\r\nreturn pos ;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Algorisme insertion sort\r\nvoid i n s e r t i o n _ s o r t ( vec to r <int>& v ) {\r\n// Pre: \r\n// Post: v està ordenat de manera creixent.\r\nfor(int i = 1 ; i < v . si z e ( ) ; ++ i ) {\r\n// Inv: v[0..i-1] està ordenat de manera creixent.\r\nint x = v [ i ] ;\r\nint j = i ;\r\nwhile ( j > 0 and v [ j -1] > x ) {\r\nv [ j ] = v [ j -1 ];\r\n--j ;\r\n}\r\nv [ j ] = x ;\r\n}\r\n}\r\n\r\n//Com funciona el bubble sort?\r\nEs recorre el vector diverses vegades, intercanviant els\r\nelements adjacents si estan en lordre incorrecte.\r\nLalgorisme acaba quan no es produeix cap canvi en un\r\ndels recorreguts del vector.\r\n\r\n\r\n//Algorisme bubble sort\r\nvoid bubble_sort ( vector <int>& v ) {\r\n/ / Pre: \r\n/ / Post: v està ordenat de manera creixent.\r\nbool ordenat = false ;\r\nint u l t i m = v . size ( ) - 1;\r\nwhile (not ordenat ) {\r\n/ / Inv: El subvector v[ultim..size()-1] està ordenat.\r\n/ / Satura quan no hi ha canvis\r\nordenat = true ;\r\nfor (int i = 0; i < u l t i m ; ++ i ) {\r\nif ( v [ i ] > v [ i + 1 ] ) {\r\nswap ( v [ i ] , v [ i + 1 ] ) ;\r\nordenat = false ;\r\n}\r\n}\r\n/ / Lelement més gran dels no tractats es troba a ultim\r\n--u l t i m ;\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nProblema 1 [2 punts  25 minuts]\r\nDonat el seguent programa: ¨\r\n1 #include <iostream>\r\n2 #include <vector>\r\n3\r\n4 using namespace std;\r\n5\r\n6 void prova(vector<int> v, unsigned int &i) {\r\n7 if (i != v.size()-1) {\r\n8 v[i+1] = v[i+1] + v[i];\r\n9 ++i;\r\n10 prova(v, i);\r\n11 cout << \"i \" << v[i] << endl;\r\n12 }\r\n13 }\r\n14\r\n15 int main() {\r\n16 unsigned int x, y;\r\n17 cin >> x >> y;\r\n18 vector<int> v(x, y);\r\n19 prova(v, y);\r\n20 cout << v[0] << \" \" << v[v.size()-1] << endl;\r\n21 cout << y << endl;\r\n22 }\r\nEscriu el que apareixera en el canal de sortida tenint en compte que lusuari entra `\r\nen el canal dentrada (teclat): 6 2\r\n\r\n\r\n\r\nProblema 2 [3 punts  40 minuts]\r\nFes una funci ´o que rebi una matriu que conte nom ´ es 1, 2 i 3 i retorni quantes ´\r\nvegades hi apareix la combinacio´ 2 3 (en horitzontal o vertical, i en qualsevol\r\nsentit).\r\nExemple: donada la seguent matriu: ¨\r\n1 2 3 1\r\n2 3 1 2\r\n1 3 3 2\r\nla funcio retornaria 4 que s ´ on les 4 combinacions de ´ 2 3 que te aquesta matriu. ´\r\n\r\n\r\n\r\nProblema 3 [5 punts  60 minuts]\r\nUna paraula es´ anagrama duna altra si i nomes si, els car ´ acters que tenen totes `\r\ndues paraules son els mateixos, encara que estiguin ordenats de forma diferent. ´\r\nFes un programa que donat un flux no buit de cadenes de caracters acabat en `\r\npunt (.) indiqui quantes paraules son anagrama de la primera. ´\r\nExemple:\r\nEntrada: roma maria armari amor maroma omar mama mora armo .\r\nSortida: roma t´e 4 anagrames en el flux.\r\nEn aquest exemple apareixen 4 anagrames de roma: amor, omar, mora i armo.\r\n2\r\n\r\n\r\n\r\n\r\nSolucions\r\nProblema 1  Solucio´\r\ni 8\r\ni 2\r\ni 2\r\n2 2\r\n5\r\n3\r\n\r\n\r\n\r\n\r\n\r\n\r\nProblema 2  Solucio´\r\ntypedef vector<vector <int> > Matriu;\r\nint combinacions(const Matriu &mat) {\r\n// Pre: mat ´es una matriu denters que cont´e nom´es\r\n// 1, 2 i 3.\r\n// Post: retorna el nombre de combinacions [2 3] en\r\n// vertical i horitzontal de mat.\r\nunsigned int cont = 0;\r\nint filas=int(mat.size());\r\nint columnas=int(mat[0].size());\r\nfor (int i = 0; i < filas; ++i) {\r\n// Inv: cont cont´e el n´umero de combinacions [2 3]\r\n// que han aparegut a les files anteriors a i.\r\nfor (int j = 0; j < columnas; ++j) {\r\n// Inv: cont cont´e el n´umero de combinacions [2 3]\r\n// que han aparegut a les files anteriors a i,\r\n// m´es les que han aparegut a la fila i\r\n// anteriors a la columna j.\r\nif (mat[i][j]==2){\r\nif (j+1<columnas)\r\nif (mat[i][j+1]==3) ++cont;\r\nif (j-1>=0)\r\nif (mat[i][j-1]==3) ++cont;\r\nif (i+1<filas)\r\nif (mat[i+1][j]==3) ++cont;\r\nif (i-1>=0)\r\nif (mat[i-1][j]==3) ++cont;\r\n}\r\n}\r\n}\r\nreturn cont;\r\n}\r\n4\r\nProblema 3  Solucio´\r\n#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\nbool es_anagrama(string s1, string s2) {\r\n// Pre: s1 i s2 son dos cadenes de car`acters\r\n// Post: retorna true els car`acters de s1 i s2\r\n// s´on els mateixos, encara que estiguin ordenats\r\n// de forma diferent, altrament retorna false.\r\nunsigned n1=s1.size(), n2=s2.size();\r\nvector<bool> v(n1,false);\r\nbool anagrama=false;\r\nif (n1==n2) {\r\nunsigned i=0;\r\nbool trobat2=false;\r\nwhile (i<n1 and not trobat2) {\r\n// Inv: tots els car`acters entre 0 i i - 1 de s1\r\n// shan trobat a s2\r\nunsigned int j=0;\r\nbool trobat1=false;\r\nwhile (j<n2 and not trobat1) {\r\n// Inv: el car`acter i de s1 no est`a a les\r\n// posicions entre 0 i j - 1 de s2\r\nif (s1[i]==s2[j] and v[j]==false){\r\ntrobat1=true;\r\nv[j]=true;\r\n}\r\nelse ++j;\r\n}\r\nif (not trobat1) trobat2=true;\r\nelse ++i;\r\n}\r\nif (i==n1){\r\nbool trobat3=false;\r\ni=0;\r\nwhile (i<n1 and not trobat3){\r\n// Inv: totes les possicions del vector v\r\n// anteriors a i contenen true\r\nif (v[i]==false) trobat3=true;\r\nelse ++i;\r\n}\r\nif (not trobat3) anagrama=true;\r\n}\r\n}\r\nreturn anagrama;\r\n}\r\n5\r\nint main() {\r\nstring x, y;\r\ncin >> x >> y;\r\nint cont=0;\r\nwhile (y!=\".\"){\r\n// Inv: cont cont´e el nombre danagrames de x llegits\r\n// pel canal dentrada sense comptar lactual.\r\nif (es_anagrama (x,y)) ++cont;\r\ncin>>y;\r\n}\r\ncout<<x<<\" t´e \"<<cont<<\" anagrames en el flux.\"<<endl;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "int factorial(int n) {\r\n\tif (n != 0) {\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n\telse {\r\n\t\treturn 1;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint potencia(int, int);\n\nint main(){\n\n    int base, pot;\n    cout<<\"Base: \";\n    cin>>base;\n    cout<<\"Potencia: \";\n    cin>>pot;\n    \n    cout<<potencia(base,pot)<<endl;\n}\n\nint potencia(int x, int y){\n    int res = 0;\n    \n    if (y == 1){\n        res=x; }\n    else{\n        res = x * potencia(x, y-1);}\n    return res;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint potencia(int);\n\nint main(){\n\n    int base;\n    cout<<\"Base: \";\n    cin>>base;\n    \n    cout<<potencia(base)<<endl;\n}\n\nint potencia(int x){\n    \n    if (x == 0){\n        x = 1; }\n    else{\n        x = x * potencia(x-1);}\n    return x;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint potencia(int);\n\nint main(){\n\n    int base;\n    cout<<\"Base: \";\n    cin>>base;\n    \n    cout<<potencia(base)<<endl;\n}\n\nint potencia(int x){\n    \n    if (x == 0){\n        x = 1; }\n    else{\n        x = x * potencia(x-1);}\n    return x;\n}\n",
  "#include <vector>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n// Pre: n és un nombre enter positiu\r\n// Post: retorna n!\r\nint res;\r\nif (n==0) res=1;\r\nelse res=n*\r\nfactorial ( n-1);\r\nreturn res;\r\n}\r\nint main(){\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int);\n\nint main(){\n\n    int base;\n    cout<<\"Base: \";\n    cin>>base;\n    \n    cout<<factorial(base)<<endl;\n}\n\nint factorial(int n){\n    \n    if (n == 0){\n        n = 1; }\n    else{\n        n = n * factorial(n-1);}\n    return n;\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nstruct Info{\nstring nom,hora;\n};\nstruct Dni{\nstring dni, nom2;\n};\n\nstring busca(string nom, const vector<Info>&v){\n\tconst vector<Dni>&w;\n\tint k;\n\tstring p;\n\tstring aux;\n\tcin>>k;\n\tfor (int i=0;i<k;++i){\n\t\tcin>>v[i].nom;\n\t\tcin<<aux;\n\tstring aux2;\n\tfor (int j=0;j<k;++j){\n\t\tcin>>w[j].nom;\n\t\tcin>>aux2;\n\t\tint cont=0\n\t\tif (aux==aux2){\n\t\t\tif(strin.hora[i]!=string.hora[i+1] or if(strin.hora[i]!=string.hora[i-1]) string p= inte\n\t\t\t\telse string p=corr\n\t\tif (aux!=aux2) string p= abandona\n\n\t\t\n\n\n\nint main (){\nint x;\ncin>>x;\n\nif ( p=inte)\n\t\t\tif(strin.hora[i]!=string.hora[i+1] or if(strin.hora[i]!=string.hora[i-1]) cout<<string\n\t\t\t\telse cout<<string.dni[j]<<\" \"<<string.hora[i];\nif (aux!=aux2) cout<<string.dni<<\"ABANDONA\"<<endl;\n\n\n\n\n\n\n\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\n\nbool es_maco (int x){\n\n\tif (x>0){\n\t\twhile(cin>>x){\n\t\tvector<int>v(x);\n\t\tfor (int i=0;i<x;++i){\n\t\t\tcin>>v[i];\n\t\n\t\t}\t\t\n\t\tbool m=false;\n\t\tint n=10;\n\t\tint r=0;\n\t\tfor(int i=0;i<=n;++i){\n\t\t\tfor(int j=0;j<=n;++j){\n\t\t\tr=3*i*7*j;\n\t\t\t\tif (r==v[i]){\n\t\t\t\t\tif (m%7==0 or m%3==0){\n\t\t\t\t\tm=true;\n\t\t\t\t\t}else m=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\nreturn m;\n}\n}\n\nint main () {\n\nbool j;\nint k;\ncin>>k;\nj=es_maco(k);\n\nif (k=true) {cout<<k<<\" es maco\"<<endl;\n\t}else cout<<k<<\" es lleig\"<<endl;\n}\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1 || n==0) return 1;\n    else{\n        return n*factorial(n-1);\n    }\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n)<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0 or n==1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while(cin>>n) cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n == 0) return 1;\n    \n    else {\n         return factorial (n-1) * n;\n    }\n}\n\nint main (){\n    \n    int x;\n    \n    while (cin >> x){\n        \n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial (int n) {\n  if(n==1) return n;\n  return n*factorial(n-1);\n}\n\n\nint main () {\n  cout << factorial(4);\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial (int n) {\n  if(n==1 or n==0) return 1;\n  return n*factorial(n-1);\n}\n\n\nint main () {\n  int n;\n  while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n){\n  if(n == 0 or n == 1) return 1; \n  else return factorial(n-1)*n;\n}\n\nint main() {\n  int n; \n  while(cin >> n){\n    cout << factorial(n) << endl; \n  }\n}",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\nint main(){\n\t int n;\n\t cin>>n;\n\t cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//factorial\nint factorial(int n) {\n\tif(n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n; \n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "def factorial(n):\n  if n==0:\n    return 1\n  if n==1:\n    return n\n  return n*factorial(n-1)\n\n",
  "\nimport math\n\ndef factorial(n):\n  \n  b=math.factorial(n)\n  \n  return b\n  \n  \n\n",
  "def factorial (n):\n  if n>0:\n    g = 1\n    for i in range (1, n+1):\n      g = g*i\n    return g\n  return 1",
  "import math\ndef factorial(n):\n  if 0<=n and n<=12:\n    print (math.factorial(n))\n  else:\n    pass",
  "//Aquest programa calcula el factorial d'un nombre\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return (n * factorial(n-1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == '0') return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int num;\r\n    cin >> num;\r\n    cout << factorial(num) << endl;\r\n}",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int num;\r\n    cin >> num;\r\n    cout << factorial(num) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n\t\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial (int n){\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main (){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n \n        \n            \n           \n        \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n\n}\n\n\n\nint main() {\n  int n;\n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\n#include <cstdlib>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n > 1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if ( n == 0)  return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if ( n == 0)  return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n  if (n<=1) return 1;\n  return n*factorial(n-1);\n}\n\nint main()\n{\n}\n",
  "#include<iostream>\nusing namespace std;\n\n//Pre: 0â¤ n â¤ 12\n//Post: factorial de n\nint factorial(int n) {\n    if(n == 0){\n        return 1;\n    }else return n*factorial(n-1);\n    \n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int n;\n    int f = 1;\n    for (int i = 0; i < n; ++i) {\n        f *= i;\n    }\n    return f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f = 1;\n    for (int i = 0; i < n; ++i) {\n        f *= i;\n    }\n    return f;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "// (c) FIBerHub, https://fiberhub.tk\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int X) {\r\n\tint fact;\r\n    if (x <= 1) fact = 1;\r\n    else fact = n * factorial(n - 1);\r\n\treturn fact;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int x) {\r\n\tint fact;\r\n    if (x <= 1) fact = 1;\r\n    else fact = x * factorial(x - 1);\r\n\treturn fact;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) n = 1;\n    else n = n*factorial(n-1);\n    return n;\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) n = 1;\n    else n = n*factorial(n-1);\n    return n;\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\nint main() {\n\tint a;\n\twhile (cin >> a){\n\t\tcout <<  factorial(a) << endl;\n\t}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n    if ( n <= 1 ) return 1;\r\n    \r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if(n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\t//Cas Base\r\n\tif (n == 0) {\r\n\t\tn = 1;\r\n\t}\r\n\t//Cas General\r\n\telse n = n * factorial(n-1);\r\n\treturn n;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n\t}   \r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n <= 1) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial (n-1);\r\n}\r\n\r\nint main () {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial (n -1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   \r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else{\n    return factorial(n-1)*n;\n  }\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    else {\n        return n * factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        int m = factorial(n);\n        cout << m << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n//Pre: Es compleix 0 â¤ n â¤ 12.\n//Post: Una funciÃ³ que retorni n!.\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n * factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else \n        return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n  if (n > 0) {\n    return n*factorial(n-1);\n  }\n  else {\n    return 1;\n  }\n}\n\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int x = n;\n    if (n = 1) return x;\n    else x = n*factorial(n-1)\n}\n\n    \n        \n\n        \n        \n    \n    \n        \n    \n    \n    \n    \n        \n    \n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int x = n;\n    if (n == 1) return x;\n    else x = n*factorial(n-1);\n}\n\n    \n        \n\n        \n        \n    \n    \n        \n    \n    \n    \n    \n        \n    \n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else n*factorial(n-1);\n}\n\n    \n        \n\n        \n        \n    \n    \n        \n    \n    \n    \n    \n        \n    \n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\n    \n        \n\n        \n        \n    \n    \n        \n    \n    \n    \n    \n        \n    \n\n",
  "#include<iostream>\nusing namespace std;\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0)return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else {\n        return n * factorial(n - 1)\n    }\n}\nint main() {\n    int n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else {\n        return n * factorial(n - 1);\n    }\n}\nint main() {\n    int n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 1) return 1;\n    else {\n        return n * factorial(n - 1);\n    }\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else {\n        return n * factorial(n - 1);\n    }\n}\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\n\nusing namespace std;\n//Alba Vidal Grane\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "//Calcular el factorial de n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n    }",
  "int factorial(int n){\r\n\tif (n==1) return 1;\r\n\telse return n*factorial (n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0) return 1;\r\n\telse return n*factorial (n-1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\t//Pre: un nombre enter qualsevol\r\n\t//Post: retorna el seu factorial\r\n\t\r\n\tint res;\r\n\t\r\n\tif (n == 0 or n == 1) res = 1;\r\n\telse {\r\n\t\tres = n*factorial(n-1);\r\n\t}\r\n\t\r\n\treturn res;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint fact;\r\n\tif(n>1){\r\n\t\tfact= n * factorial(n-1);\r\n\t}\r\n\telse if(n==0 or n==1){\r\n\t\tfact=1;\r\n\t}\r\n\treturn fact;\t\r\n}\r\n\r\nint main(){\r\n\tint x; \r\n\tcin>>x;\r\n\twhile(0<=x and x<=12){\r\n\tcout<< factorial(x)<<endl;\r\n\tcin>>x;\r\n\t}\r\n}\r\n",
  "//factorial recursiu\r\n#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tunsigned int f;\r\n\tif(n==0){\r\n\t\tf=1;\r\n\t}else{\r\n\t\tf=n*factorial(n-1);\r\n\t}\r\n\treturn f;\r\n}\r\nint main(){\r\n\tint num;\r\n\tcin>>num;\r\n\tint res;\r\n\tres=factorial(num);\r\n\tcout<<res;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n>1) {\n        return n*factorial(n-1);\n    }\n    else {\n        return 1;\n    }\n}\n \nint main () {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int x) {\r\n    if (x>1) {\r\n\treturn x*factorial(x-1);\r\n    }\r\n    \r\n\telse {\r\n    return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int x;\r\n  cin>>x;\r\n  cout<<factorial(x)<<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n<=1){\r\n    return 1;\r\n  } \r\n  else{\r\n    return(n*factorial(n-1));\r\n  }\r\n}\r\n\r\nint main() {\r\n}\r\n",
  "\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    return n*factorial(n - 1)\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 0;\n    if (n == 1) return 1;\n    if (n == 2) return 2;\n    return n * factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "\r\ndef factorial(n: int) -> int:\r\n    if(n == 0):\r\n        return 1\r\n    return n * factorial(n - 1)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    print(factorial(4))\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    if (n == 1) return 1;\n    if (n == 2) return 2;\n    return n * factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif(n == 0) return 1;\n\telse return n*factorial(n -1);\t\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0) return 1;\n\telse return n*factorial(n-1);\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tif (a > b and a > c) cout << a << endl;\n\telse if (a < b and c < b) cout << b << endl;\n\telse if (a < c and b < c) cout << c << endl;\n}\n\n",
  "#include <iostream> \nusing namespace std; \n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n-1);\n}\n\nint main () {\n    int n; \n    while (cin >> n) {\n        cout << factorial (n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std; \n\n\n\nint factorial(int n)\n{   \n    if (n != 1) return n * factorial(n-1); \n    else return n; \n\n\n}\n\n\nint main()\n{\n    int n; \n    while (cin >> n)\n    {\n        n = factorial(n); \n\n        cout << n << endl;\n    }  \n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0 or n == 1) return 1;\n    else return factorial(n-1) * n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n == 1 or n == 0) return 1;\r\n  return n * factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n  int a;\r\n  cin >> a;\r\n  cout << factorial(a) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return (n * factorial(n - 1));\n}\n\nint main()\n{\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n)\r\n{\r\n    if (n == 0 or n == 1)\r\n        return 1;\r\n    else\r\n        return n * factorial(n - 1);\r\n}\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n == 0) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  while (cin >> n){\r\n    cout << factorial(n) << endl;\r\n  }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\nint main()\n{\n    int c;\n    cin >> c;\n    cout << factorial(c) >> endl;\n}\n",
  "int factorial(int n) {\n  return n == 0 ? 1 : n * factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  int f;\r\n  if (n <= 1) {\r\n    return 1;\r\n  } else {\r\n    return f = n * factorial(n - 1);\r\n  }\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  int f;\r\n  if (n <= 1) {\r\n    return 1;\r\n  } else {\r\n    return f = n * factorial(n - 1);\r\n  }\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0) {\r\n        return 1;\r\n    } else {\r\n        return (n * factorial(n - 1));\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  int f = 1;\r\n  if (n > 0)\r\n    f = n * factorial(n - 1);\r\n\r\n  return f;\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  cin >> n;\r\n\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0) {\r\n        return 1;\r\n    } else {\r\n        return n * factorial(n - 1);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "from easyinput import read\r\n\r\ndef factorial(n):\r\n  if n <= 1:\r\n      return 1\r\n  else:\r\n      return factorial (n-1) * n\r\n\r\ndef main():\r\n  n= read(int)\r\n  print (factorial (n))\r\n\r\nmain()\r\n",
  "// INCLUDES\n#include <iostream>\nusing namespace std;\n\n//FUNCIONS\nint factorial(int n)\n{\n    //Fem el cas base de 0\n    if (n == 0)\n        return 1;\n    else\n        //Fem recursivament els altres casos\n        return n * (factorial(n - 1));\n}\n//Escrivim una funciÃ³ que retorni n!\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n)\n{\n    //Cas base\n    if (n == 0)\n        return 1;\n    else\n        return factorial(n - 1) * n;\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//funciÃ³ que retorna el factorial de n = n!\nint factorial(int n)\n{\n    if (n == 0 or n == 1) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    int f = 1;\n    for (int i = 1; i <= n; ++i) {\n        f = f * i;\n    }\n    return f;\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n  if (n == 0) {\n    return 1;\n  } else {\n    return n * factorial(n - 1);\n  }\n}\n\nint main() {\n  int a;\n  while (cin >> a)\n    cout << factorial(a) << endl;\n}\n",
  "#Programa que calcula el factorial recursivament\n\nfrom easyinput import read\n\ndef factorial(n):\n    factorial = 1\n    if n > 1:\n        factorial = n * factorial(n - 1)\n\n    return factorial\n\ndef main():\n    n = read(int)\n    print(factorial(n))\n\nmain()\n",
  "#Programa que calcula el factorial recursivament\n\nfrom easyinput import read\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n*factorial(n - 1)\n\n\ndef main():\n    n = read(int)\n    print(factorial(n))\n\nmain()\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n == 0) {\r\n    return 1;\r\n  } else return factorial(n-1)*n;\r\n\r\n}\r\n\r\nint main()\r\n{\r\n  int input;\r\n  cin >> input;\r\n  cout<<factorial(input)<<endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n <= 1)\r\n        return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "int factorial(int n)\r\n{\r\n    if (n <= 1)\r\n        return 1;\r\n    return n * factorial(n);\r\n}\r\n",
  "int factorial(int n)\r\n{\r\n    if (n <= 1)\r\n        return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    int fact;\n    if (n == 0)\n        fact = 1;\n    else\n        fact = factorial(n - 1) * n;\n\n    return fact;\n}\n\nint main()\n{\n    int n;\n    while (cin >> n)\n        cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    int f;\r\n    if (n <= 1) {\r\n        f = 1;\r\n    } else {\r\n        f = n * factorial(n - 1);\r\n        --n;\r\n    }\r\n\r\n    return f;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n > 1)\r\n        return n * factorial(n - 1);\r\n    else\r\n        return 1;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0)\r\n        return 1; //cas base\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) {\n    return 1;\n  } else {\n    return n * factorial(n - 1);\n  }\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0)\r\n        n = 1;\r\n    for (int i = n - 1; i > 1; --i) {\r\n        n = n * i;\r\n    }\r\n    return n;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0) {\n        return 1;\n    } else {\n        return factorial(n - 1) * n;\n    }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0)\r\n        return 1;\r\n    else\r\n        return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0 or n == 1)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    factorial(n);\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0)\r\n        return 1;\r\n\r\n    else if (n == 1)\r\n        return 1;\r\n\r\n    else\r\n        return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a) << endl;\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n == 0 or n == 1) return 1;\r\n  return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n <= 1) {\r\n        return 1;\r\n    } else\r\n        return n * factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n      return 1;\n    } else {\n      return factorial(n - 1) * n;\n    }\n}\n\nint main()\n{\n  int n;\n\n  cin >> n;\n\n  cout << factorial(n) << endl;\n\n}\n",
  "//P12509\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif (n == 0 or n == 1) {\n\t\treturn 1;\n\t}\n\n\telse {\n\t\treturn (n * factorial(n-1));\n\t}\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tint fact = factorial(n);\n\tcout << fact << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0 or n == 1) return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "from easyinput import read\r\nimport math\r\n\r\na = read(float)\r\nb = math.pi\r\n\r\nwhile a is not None:\r\n    print(f'{math.sin((a*b)/180):.6f}', f'{math.cos((a*b)/180):.6f}')\r\n    a = read(float)\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0 or n == 1) return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "from easyinput import read\r\n\r\ndef factorial(n):\r\n    if n == 0 or n == 1:\r\n        return 1\r\n    return n * factorial(n - 1)\r\n",
  "\n#include <iostream>\nusing namespace std;\n\nint main(){\n  int n,i;\n   long double factorial; // se declara long double para poder representar nÃºmeros grandes\n   cin >> n;\n   factorial=1;\n   for(i=1;i<=n;i++)\n        factorial = factorial * i;\n   cout << factorial << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0){\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\nint main() {\n    int n;\n    \n    while (cin >> n) {\n     cout << factorial(n) << endl;   \n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0){\r\n\t\treturn 1;\r\n\t}\r\n\telse{\r\n\t\treturn n * factorial(n-1);\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint p;\r\n\tcin >> p;\r\n\tcout << factorial(p);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n \nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\nint main() {\n    int n;\n    while (cin >> n) {\n    cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n//Pas Base\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\n\nusing namespace std;\n\n    \nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\twhile(cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\nint factorial(int n){\n    \n    if(n == 1 or n == 0){\n        \n        return 1;\n        \n    }\n    \n    return n*factorial(n-1);\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n        if (n==0) return 1;\n        else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "//\n//  main.cpp\n//  p6\n//\n//  Created by Gisela BeltrÃ¡n on 17/11/2020.\n//\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    //cas base: n Ã©s 0 o 1\n    if (n <= 1) return 1;\n    \n    //cas recursiu\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n > 1){\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\telse {\r\n\t\treturn 1;\r\n\t}\r\n}\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\t\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n - 1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n{\n\tif (n == 0)\n\t{\n\t\treturn 1;\n\t}\n\telse\n\t{\n\t\treturn n*factorial(n-1);\n\t}\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if ( n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() { \n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\telse return n*(factorial(n-1));\r\n}\r\n\r\n\r\n\r\nint main(){\r\n\tint x;\r\n\twhile(cin >> x) cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\telse return n*(factorial(n-1));\r\n}\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return (n * factorial(n-1));\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\nint factorial(int n){\n    \n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n//precon: 0<= n <= 12\n//Postcon: Factorial de n (int)\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n \n \nint factorial(int n){\n    if (n<= 1) return 1;\n    else return n*factorial(n-1);\n}\n        \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif(n==0) return 1;\n\telse return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while(cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\t\n\tcout << factorial (n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial( int n) {\r\n\tif ( n <= 1 ) {\r\n\t\treturn 1;\r\n\r\n\t}\r\n\telse{\r\n\t\treturn n * factorial( n - 1);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile ( cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t} \r\n}",
  "#include<iostream>\n#include<cmath>\n\nusing namespace std;\n\nint factorial(int n){\n    if ( n==0 )return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin>>x;\n    factorial(x);\n    cout<<x<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return (1);\n    else return (n * factorial(n - 1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n    \n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n>1) return n * factorial(n-1)\n    else{\n        return 1;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n>1) return n * factorial(n-1);\n    else{\n        return 1;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n > 0 and n <= 12){\n        return factorial(n-1) * n;\n        --n;\n    }\n    return 1;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\nint main() {\n    int n;\n    while (cin>>n) {\n        cout<<factorial(n)<<endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//pre: n>=0;\r\n//post retorna el factorial de n;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n  int x;\r\n  while (cin >> x) cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n\tif(n==0) return 1;\r\n\r\n\telse return n*factorial(n-1);\r\n\r\n}\r\n\r\n\r\n\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial (n - 1);\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n < 2) return 1;\r\n    else return factorial (n-1)*n;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n) {\n    int f = 1;\n    int i = 0;\n    if (n == 0) return 1;\n    else\n        while (i < n) {\n            ++i;\n            f *= i;\n        }\n        return f;\n\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n) {\n\nif ( n == 0) return 1;\n\nreturn n*factorial (n-1);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif(n==0) return 1;\n\t\n\telse return n*factorial(n-1);\n\t}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return (n*factorial(n-1));\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return (n * factorial(n - 1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n// Pre: n >= 0\n// Post: retorna el factorial de n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int factorial = 1;\n    if (n = 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n * factorial (n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n = 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n        else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n  if (n<=1) return 1;\n  else return n*factorial(n-1);\n\n}\n\nint main () {\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif(n==0 or n==1) \n    return 1;\nelse{\nreturn n*factorial(n-1);\n}\n}\n\n\nint main(){\nint rn;\nwhile(cin>>rn){\ncout<<factorial(rn)<<endl;\n}\n}\n\n\n",
  "#include<iostream>\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n)<< endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int r=1;\n    for (int i=1; i<=n; ++i){\n        r*=i;\n    }\n    return r;\n}\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\nif(n<=1){\nreturn(1);\n}\nelse{\nreturn(n* factorial(n-1));\n}\n}\nint main(){\nint rn;\nwhile(cin>>rn){\ncout<<factorial(rn)<<endl;\n}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\t\r\n \r\nint main(){\r\n\tcout << factorial(5);\r\n}\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n   else return nïªfactorial(n - 1);\n}\n\nint main() {\n int x:\n while(cin >> x) {\n cout << factorial(x) << endl;\n }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n   else return n*factorial(n - 1);\n}\n\nint main() {\n int x:\n while(cin >> x) {\n cout << factorial(x) << endl;\n }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n   else return n*factorial(n - 1);\n}\n\nint main() {\n int x;\n while(cin >> x) {\n cout << factorial(x) << endl;\n }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n   else return n*factorial(n - 1);\n}\n\nint main() {\n int x;\n while(cin >> x) {\n cout << factorial(x) << endl;\n }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    return n * factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n <= 1) return 1;\r\n  else return n*factorial(n-1);\r\n\r\n}\r\nint main(){\r\n  int n;\r\n  while(cin >> n){}\r\n    cout << factorial(n) << endl;\r\n  }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n <= 1) return 1;\r\n  else return n*factorial(n-1);\r\n\r\n}\r\nint main(){\r\n  int n;\r\n  while(cin >> n){\r\n    cout << factorial(n) << endl;\r\n  }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse {\r\n\treturn n * factorial(n-1);\r\n\t}\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tn = factorial(n);\r\n\tcout << n << endl;\r\n}\r\n\r\n",
  "#include <iostream> \nusing namespace std;\n\n\nint factorial (int n) {\n    cin >> n;\n    if (n==0 or n==1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream> \nusing namespace std;\n\n\nint factorial (int n) {\n    cin >> n;\n    if (n==0 or n==1) return n=1;\n    else return n=n*factorial(n-1);\n}\n",
  "#include <iostream> \nusing namespace std;\n\n\nint factorial (int n) {\n    if (n==0 or n==1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int fact;\n    if (n == 0) fact = 1;\n    else if (n == 1) fact = 1;\n    else fact = n * factorial(n - 1);\n    return fact;\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main (){\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n    \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) {\n        n *= factorial(n-1);\n        return n;\n        \n    } else return 1;\n    \n}\n\n\n\nint main() {\n    int k;\n    cin >> k;\n    \n    cout << factorial(k) << endl;\n    \n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\n     \n\n\n\n",
  "#include \"iostream\"\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n//n!\nint factorial(int n){\n  if(n <= 1) return 1;\n  else return n*factorial(n-1);\n}\n\n//pre: natural n\n//post: factorial n (n!)\nint main(){\n  int n;\n  while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n > 1)\n        return (n * factorial(n-1));\n        else  return 1;\n}\nint main(){\n    int n;\n    while (cin>>n)\n        cout<<factorial(n)<< endl;}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if ( n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n != 0) {\n        int resultat = 1;\n        resultat = n * factorial(n - 1);\n        return resultat;\n    }\n    else return 1;\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) { \n    if(n == 0) return 1;\n    else return n*factorial(n - 1);    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tint r = 1;\n\tfor (int i = 1; i <= n; i++) r *= i;\n\treturn r;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\tif (n == 0) return 1;\n\telse return factorial(n - 1) * n;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n>0){\n        return n*factorial(n-1);\n    }\n    else{\n        return 1;\n    }\n}\n\nint main() {\n    int n;\n    while(cin>>n){\n        cout<<factorial(n)<<endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else if(n==1) return 1;\n    else return (n*factorial(n-1));\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n//int factorial(int n){\r\n    //int resultado = 1;\r\n    //for(int i = 1; i <= n; ++i){\r\n        //resultado = resultado * i;\r\n        \r\n    //}\r\n    //return resultado;\r\n//}\r\n\r\nint factorial(int n){\r\n    \r\n    if(n == 1) return 1;\r\n    \r\n    else return factorial(n-1) * n;\r\n    \r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n//int factorial(int n){\r\n    //int resultado = 1;\r\n    //for(int i = 1; i <= n; ++i){\r\n        //resultado = resultado * i;\r\n        \r\n    //}\r\n    //return resultado;\r\n//}\r\n\r\nint factorial(int n){\r\n    \r\n    if(n == 1) return 1;\r\n    \r\n    else return factorial(n-1) * n;\r\n    \r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n//int factorial(int n){\r\n    //int resultado = 1;\r\n    //for(int i = 1; i <= n; ++i){\r\n        //resultado = resultado * i;\r\n        \r\n    //}\r\n    //return resultado;\r\n//}\r\n\r\nint factorial(int n){\r\n    \r\n    if(n <= 1) return 1;\r\n    \r\n    else return factorial(n-1) * n;\r\n    \r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int resultado = 1;\r\n    for(int i = 1; i <= n; ++i){\r\n        resultado = resultado * i;\r\n        \r\n    }\r\n    return resultado;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n//int factorial(int n){\r\n    //int resultado = 1;\r\n    //for(int i = 1; i <= n; ++i){\r\n        //resultado = resultado * i;\r\n        \r\n    //}\r\n    //return resultado;\r\n//}\r\n\r\nint factorial(int n){\r\n    \r\n    if(n <= 1) return 1;\r\n    \r\n    else return factorial(n-1) * n;\r\n    \r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n * factorial (n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}   \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) n=1;\n    else n*=factorial(n-1);\n    return n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tint resultat;\r\n\t\r\n\tif (n > 0){\r\n\t\t\r\n\t\treturn n*factorial(n-1);\r\n\t\t\r\n\t}\r\n\treturn 1;\r\n\r\n}\r\n\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif (n > 0){\r\n\t\t\r\n\t\treturn n*factorial(n-1);\r\n\t\t\r\n\t}\r\n\treturn 1;\r\n\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std; \nint factorial(int n){\n  int sum=0;\n  if(n==0) sum=1;\n  if(n>0){\n    sum+=n*factorial(n-1);\n  \n  }\n  return sum;\n}\nint main(){\n  int n;\n  cin >> n;\n  cout<<factorial(n)<<endl;\n}\n",
  "//Factorial recursiu\n\n\n#include<iostream>\nusing namespace std;\n\nint factorial(int n);\n\n\nint main (){\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n\n\n\nint factorial(int n){\n    int n1 = 1;\n    \n    if (n == 0) return 1;\n    n1 = n * factorial (n-1);\n    \n    return n1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) \n        return 1;\n    else\n        return n * factorial(n-1);\n}\n\nint main() {\n    \n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return factorial(n-1)*n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int num) {\n\tif (num == 0) return 1;\n\telse return num*factorial(num - 1);\n}\n\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int x){\n    if (x==0) return 1;\n    else return x * factorial(x-1);\n   \n}\n\nint main (){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\twhile (cin >> x) {\r\n\t\tcout << factorial(x) << endl;\r\n\t}\r\n} \r\n",
  " #include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n    \n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n \n        \n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n\n/*\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n*/\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "//Escriviu una funcio que retorni n!\n\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n    \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n    \n    \n}\n\nint main () {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int resultado = 1;\n    if (n > 1) {\n    for (int i = 2; i <= n; ++i) {\n        resultado = i * resultado;\n    }\n    }\n    return resultado;\n}\n\n\n\nint main () {\n    int n;\n    while (cin >> n) {\n    if (n >= 0) {\n        cout << factorial (n) << endl;    \n    }\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int resultado = 1;\n    if (n > 1) {\n        for (int i = 2; i <= n; ++i) {\n        resultado = i * resultado;\n        }\n    }\n    return resultado;\n}\n\n\n\nint main () {\n    int n;\n    while (cin >> n) {\n        if (n >= 0) {\n            cout << factorial (n) << endl;    \n        }\n    }\n}\n",
  "int factorial(long n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int factorial = 1;\n    if (n == 0) return 1;\n    else {\n    for (int i = 1; i <= n; ++i) {\n        factorial = factorial*i;\n    }\n    return factorial;\n    }\n    \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {                                   // SIN RECURSIVIDAD\n    if (n <= 1) return 1;                              \n    else  return n*factorial(n-1);                      // int factorial = 1;\n}                                                       //if (n == 0) return 1;\n                                                        //  else {\n                                                        // for (int i = 1; i <= n; ++i) {\n                                                        // factorial = factorial*i;\n                                                        //}\n                                                        //  return factorial;\n                                                        // }\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n);\r\n\r\n  int factorial(int n)\r\n  {\r\n      if (n == 0) return 1;\r\n      else return n * factorial(n - 1);\r\n  }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n  if (n <= 1) return 1;\n  else return n*factorial (n-1);\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n == 0) return 1;\r\n  else return factorial (n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) return 1;\n  else return n*factorial (n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n == 0) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse {\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if(n >= 0) {\n        int res = 0;\n        res = n*factorial(n-1);\n        if (n == 0) return 1;\n        else return res;\n    }\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: n>=0\n//Post: Recursive factorial.\nint factorial(int n) {\n        int res = 0;\n        res = n*factorial(n-1);\n        if (n == 0) return 1;\n        else return res;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: n>=0\n//Post: Recursive factorial.\nint factorial(int n) {\n        if(n == 0) return 1;\n        else {\n            int res;\n            res = n*factorial(n-1);\n            return res;\n        }\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return n = 1;\n    else return n = n * factorial (n - 1);\n    --n;\n}\nint main() {\n}\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\nint factorial(int n);\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint facotrial(int n)\r\n{\r\n\tif (n <= 1) return 1;\r\n\r\n\telse return n * factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 1) return 1;\n    else return n*factorial(n - 1);\n    \n}\n\nint main () {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint facotrial(int n)\r\n{\r\n\tif (n <= 1) return 1;\r\n\r\n\telse return n * facotrial(n-1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n\tif (n <= 1) return 1;\r\n\r\n\telse return n * factorial(n-1);\r\n}",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else {\n        return n * factorial(n-1);\n\n    }\n    }\n    int main(){\n        int x;\n        cin >> x;\n        cout<< factorial(x)<<endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n==1) return 1;\r\n    else return n*factorial(n-1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n==1) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    if (n==1) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n \r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "int factorial(int n)\n{\n    if (n == 1 or n == 0)\n    {\n        return 1;\n    }\n    return n * factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n ;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "int factorial(int n)\n{\n    if (n == 1)\n    {\n        return 1;\n    }\n    return n * factorial(n-1);\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n  if (n == 0) return 1;\r\n  else return n*factorial(n-1);\r\n\r\n}\r\n\r\nint main(){\r\n\r\nint num, fact;\r\ncin >> num;\r\n\r\n\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n  if (n == 0) return 1;\r\n  else {\r\n      return (n*factorial(n-1));\r\n  }\r\n}\r\n\r\nint main(){\r\n\r\nint num;\r\ncin >> num;\r\n\r\n\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int x;\r\n    if(n == 0) {\r\n        return 1;\r\n    } else {\r\n        return n*factorial(n-1);\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n == 0) {\r\n        return 1;\r\n    } else {\r\n        return n*factorial(n-1);\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\n\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial (x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n <= 1) return 1;\n    else return n* factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include \"iostream\"\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0) return 1;\n\telse return n* factorial(n-1);\n}",
  "//pre: un natural.\n//post: el factorial de n.\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    n = n*factorial(n-1);\n    return n;\n}\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n    \n}\n\nint main () {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n* factorial(n-1);\r\n\t\r\n\t\r\n}\r\n\r\nint main() {\r\n\t\r\n\tint x;\r\n\tcin >> x;\r\n\t\r\n\tcout << factorial(x) << endl;\r\n\t\r\n}\r\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif(n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n\tint a;\r\n\tcin>>a;\r\n\t\r\n\tcout<<factorial(a)<<endl;\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n <= 1) return 1;\n\telse return n*factorial(n-1);\n}",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n - 1);\n}\n\nint main () {\n    \n    int n;\n    \n    while (cin >> n) cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n    int fact(int n) {\n        if (n==0) return 1;\n        else return n*fact(n - 1);\n    }\n    \n    int main() {\n        int n;\n        while (cin >> n) {\n            cout << fact(n) << endl;\n        }\n    }",
  "#include <iostream>\nusing namespace std;\n\n    int factorial(int n) {\n        if (n==0) return 1;\n        else return n*factorial(n - 1);\n    }\n    \n    int main() {\n        int n;\n        while (cin >> n) {\n            cout << factorial(n) << endl;\n        }\n    }",
  "#include <iostream>\nusing namespace std;\n\n//PRE: n >= 0\n//POST: Retornar factorial de n\nint factorial(int n) {\n  if (n == 0) return 1; //Cas base\n  else return n*factorial(n - 1); //Cas recursiu\n\n\n}\n\n\nint main() {\n\n  int x;\n  while (cin >> x) {\n    cout << factorial(x) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return (n*factorial(n - 1));\n}\n\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include \"iostream\"\nusing namespace std;\n\nint factorial(int n){\n  if (n == 1){\n    return 1;\n  }\n  else{\n    return n*factorial(n-1);\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}    \n",
  "#include \"iostream\"\nusing namespace std;\n\nint factorial(int n){\n  if (n == 1){\n    return 1;\n  }\n  else{\n    return n*factorial(n-1);\n  }\n}\n\nint main(){\n  int n, fact;\n  cin >> n;\n  fact = factorial(n);\n  cout << fact << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n - 1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include \"iostream\"\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  }\n  else{\n    return n*factorial(n-1);\n  }\n}\n\nint main(){\n  int n, fact;\n  cin >> n;\n  fact = factorial(n);\n  cout << fact << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n    \n}\n\nint main () {\n    int x, fact;\n    cin >> x;\n    fact = factorial (x);\n    cout << fact << endl;\n}\n",
  "//factorial recursiu\r\n\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse{\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tcout << factorial(4) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if(n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return (n * factorial (n-1));\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int fact){\r\n    if(fact == 0) fact = 1;\r\n    else{\r\n        fact *= factorial(fact - 1);\r\n    }\r\n    return fact;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n <= 1) return 1;\n    int r = 1;\n    for (int i = 1; i <= n; ++i){\n        r = r * i;  \n    }\n    return r;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    cout << factorial(4) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 0;\n    else if (n == 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    cout << factorial(4) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    cout << factorial(4) << endl;\n}\n",
  "#include iostream>\n\nusing namespace std;\n\n\n int factorial(int n) {\n     if (n <= 1) return 1;\n     else return n * factorial (n-1)\n     \n }\n \n int main () {\n     int x,\n     cin >> x;\n     cout << factorial(x) << endl;\n }\n",
  "#include <iostream>\n\nusing namespace std;\n\n\n int factorial(int n) {\n     if (n <= 1) return 1;\n     else return n * factorial (n-1)\n     \n }\n \n int main () {\n     int x,\n     cin >> x;\n     cout << factorial(x) << endl;\n }\n",
  "#include <iostream>\n\nusing namespace std;\n\n\n int factorial(int n) {\n     if (n <= 1) return 1;\n     else return n * factorial (n-1);\n     \n }\n \n int main () {\n     int x;\n     cin >> x;\n     cout << factorial(x) << endl;\n }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1; //cas basic\n    return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n);{\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial (n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial (n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\n\nint factorial(int n) {\n\n\tif (n <= 1) return 1;\n\n\telse return n * factorial(n-1);\n\n}\n\n\n\nint main() {\n\n\tint x;\n\n\tcin >> x;\n\n\tcout << factorial(x) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n<=1){\n        return 1;\n    }\n    else{\n        return (n * factorial(n-1));\n    }\n}\n\nint main(){\n}\n        \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    cout << factorial(3) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    cout << factorial(3) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n{\n  if (n == 0) return 1;\n  return n * factorial(n -1);\n}\n\n\nint main()\n{\n  int n;\n  cin >> n;\n  cout << factorial(n) <<  endl;\n}\n",
  "//Programa que calcula el factorial recursivament\n#include <iostream>\nusing namespace std;\n\n//FunciÃ³ que calcula el factorial recursivament\nint factorial(int n)\n{\n    if (n <= 1)\n        return 1;\n    return n * factorial(n - 1);\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "//Ens demanen una implementaciÃ³ de la funciÃ³ factorial, perÃ² que sigui recursiva\r\n\r\n//En la recursivitat, sempre trobem 2 casos:\r\n//\tCas base: Sâarriba a un punt final i no es fan mÃ©s crides\r\n//\tCas recursiu: Es fan les operacions que calguin i es fa una o mÃ©s crides recursives\r\n\r\n//Per definir cada un dels dos casos, ens possem exemples:\r\n//\t- factorial(0) = 1\r\n//\t- factorial(1) = 1\r\n//\t- factorial(2) = 2\t\t(fins aquÃ­ encara no veiem res gaire obvi)\r\n//\t- factorial(3) = 6\t\t= 3*2 = 3 * factorial(2)\r\n//\t- factorial(4) = 24\t= 4*6 = 4 * factorial(3)\r\n//\r\n//AquÃ­ ja podem veure quina estructura ha de seguir la nostra funciÃ³\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\r\n\t//Cas base\r\n\tif (n <= 1) {\r\n\t\treturn 1;\r\n\r\n\t//Cas recursiu\r\n\t} else {\r\n\t\treturn n * factorial(n-1);\r\n\t}\r\n}\r\n\r\n\r\n//AquÃ­ teniu un main amb els factorials del 0 al 5 per comprovar que funciona correctament\r\n\r\nint main () {\r\n\tcout << factorial(0) << endl;\r\n\tcout << factorial(1) << endl;\r\n\tcout << factorial(2) << endl;\r\n\tcout << factorial(3) << endl;\r\n\tcout << factorial(4) << endl;\r\n\tcout << factorial(5) << endl;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n == 0 or n == 1){\r\n\t\treturn 1;\r\n\t}\r\n\telse{\r\n\t\treturn n * factorial(n-1);\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile (cin >> n){\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial (n - 1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tif (n >= 0) {\r\n\t\tcout << factorial (n) << endl;\r\n\t    }\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    //Pre: n Ã©s un nombre enter positiu\n    //Post: retorna n!\n    int res;\n    if (n == 0 or n == 1) res = 1;\n    else                  res = n*factorial(n - 1);\n    return res;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n; \r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n * factorial(n - 1);\n    else return 1;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n\t}   \r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n) {\n\nif ( n == 0) return 1;\n\nreturn n*factorial (n-1);\n\n}\n\nint main(){\n    \nint n;\ncin >> n;\nfactorial (n);\n\n}\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse{\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n\t\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n    \n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return (factorial(n -1 )*n);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n \n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else {\n        return (n * factorial(n-1));\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n \n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else {\n        return (n * factorial(n-1));\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n    cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n \n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return (n * factorial(n-1));\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n * factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n * factorial(n-1);\n}\n\n\n\n",
  "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n-1);\n}\n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tint mult = 1;\r\n\tfor (int i=n; i>=1; --i){\r\n\t\tmult = mult * i;\r\n\t}\r\n\treturn mult;\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint recursiu(int n){\nif (n==0) n = 1;\n\nelse{ \n\nn = n*(n-1);\n}\nreturn n;\n}\n\n\n\n\n\n\nint main(){\n\nint n;\ncin >> n;\n\ncout << recursiu(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    if (n == 0) return 1;\n    else {\n        while (n > 1) {\n\n            n = n * factorial(n-1);\n            return n;        \n            \n        }\n    }\n    \n    \n}\n\nint main () {\n    \n    cout << factorial (12) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    if (n == 0) return 1;\n    else {\n        while (n > 1) {\n\n            n = n * factorial(n-1);\n            return n;        \n            \n        }\n    }\n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    if (n == 0) return 1;\n    else {\n        while (n >= 1) {\n\n            n = n * factorial(n-1);\n            return n;        \n            \n        }\n    }\n    \n    \n}\n\nint main () {\n    \n    cout << factorial (1) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    \n    if (n == 0) return 1;\n    else {\n        while (n > 0) {\n\n            n = n * factorial(n-1);\n            return n;        \n            \n        }\n    }\n    \n    \n}\n\nint main () {\n    \n    cout << factorial (1) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n * factorial (n - 1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        if (n >= 0 and n <= 12) {\n            cout << factorial (n) << endl;\n        }\n    }\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int);\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n);\r\n}\r\n\r\nint factorial(int n){\r\n    int res;\r\n    if(n == 0) res = 0;\r\n    else if(factorial(n-1) != 0){\r\n        \r\n        res = n*factorial(n-1);\r\n        \r\n    }\r\n    else{\r\n        res = 1;\r\n    }\r\n    return res;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int);\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n);\r\n}\r\n\r\nint factorial(int n){\r\n    int res;\r\n    if(n == 0) res = 1;\r\n    else if(factorial(n-1) != 0){\r\n        res = n*factorial(n-1);\r\n    }\r\n    else{\r\n        res = 1;\r\n    }\r\n    return res;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n)\r\n{\r\n    if (n == 1 or n == 0) {\r\n        return 1;\r\n    } else {\r\n        return n * factorial(n - 1);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tint resultado;\r\n\tif(n>=1){\r\n\t\tresultado = n * factorial(n-1);\r\n\t}\r\n\tif(n==0){\r\n\t\tresultado = 1;\r\n\t}\r\n\t\r\n\treturn resultado;\r\n}\r\n\r\nint main(){\r\n\t\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\telse{\n\t\treturn n * factorial(n-1);\n\t}\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n)<< endl;;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if(n==1 or n==0){\n        return 1;\n    }\n    else{\n        return factorial(n-1)*n;\n    }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl; \n   \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n    int numero;\r\n    while (cin >> numero) {\r\n        cout << factorial(numero) << endl;\r\n    }\r\n}",
  "//P12509 - Factorial recursiu\r\n//Input: un nÃºmero entre 0 y 12.\r\n//Output: el factorial del nÃºmero de entrada.\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n    int numero;\r\n    while (cin >> numero) {\r\n        cout << factorial(numero) << endl;\r\n    }\r\n}",
  "//P12509 - Factorial recursiu\r\n//Input: un nÃºmero entre 0 y 12.\r\n//Output: el factorial del nÃºmero de entrada.\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main () {\r\n    int numero;\r\n    while (cin >> numero) {\r\n        cout << factorial(numero) << endl;\r\n    }\r\n}",
  "//recursive factorial P12509\n//calcula n!\n//input: un natural n\n//output: retorna n!\n#include <iostream>\nusing namespace std;\n\n//calcula n!\n//pre: 0 <= n <= 12 \n//post: retorna n!\nint factorial(int n) {\n    if(n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "\n//Factorial recursiu \n\n//EXPLICACIÃN: Escriviu una funciÃ³ que retorni n!. Resoleu aquest problema recursivament.\n\n//InterfÃ­cie: int factorial(int n);\n\n// PrecondiciÃ³: Es compleix 0â¤ n â¤ 12.\n\n//ObservaciÃ³:   NomÃ©s cal enviar el procediment demanat; el programa principal serÃ  ignorat.\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    int num = 1;\n    \n    if (n == 0) return 0;\n    else {\n        \n        for (int i = 1; i <= n; ++ i) {\n            \n            num = num * i;\n            \n        }\n        \n        return num;\n        \n    }\n    \n}\n\nint main() {\n    \n    int n;\n    \n    while (cin >> n) {\n        \n        cout << factorial(n) << endl;\n        \n    }\n    \n}\n",
  "\n//Factorial recursiu \n\n//EXPLICACIÃN: Escriviu una funciÃ³ que retorni n!. Resoleu aquest problema recursivament.\n\n//InterfÃ­cie: int factorial(int n);\n\n// PrecondiciÃ³: Es compleix 0â¤ n â¤ 12.\n\n//ObservaciÃ³:   NomÃ©s cal enviar el procediment demanat; el programa principal serÃ  ignorat.\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    int num = 1;\n    \n    if (n == 0) return 1;\n    else {\n        \n        for (int i = 1; i <= n; ++ i) {\n            \n            num = num * i;\n            \n        }\n        \n        return num;\n        \n    }\n    \n}\n\nint main() {\n    \n    int n;\n    \n    while (cin >> n) {\n        \n        cout << factorial(n) << endl;\n        \n    }\n    \n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 1){return 1;}\n    else{\n        return n*(factorial(n-1));\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1){return 1;}\n    else{\n        return n*(factorial(n-1));\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "from jutge import *\n\ndef factorial(n):\n    if(n <= 1):\n        return 1\n    else:\n        return n*(factorial(n-1))\n\nn = read(int)\nprint(factorial(n))\n",
  "import java.util.*;\n\nclass Main {\n    public static void main(String args[]){\n        Scanner lector = new Scanner(System.in);\n        int n = lector.nextInt();\n        System.out.println(factorial(n));\n    }\n\n    static int factorial(int n){\n        if(n <= 1){return 1;}\n        else{return n*(factorial(n-1));}\n    }\n    \n}\n",
  "import java.util.Scanner;\n\nclass Main {\n\n  public static void main(String[] args) {\n    final Scanner sc = new Scanner(System.in);\n    while (sc.hasNextInt()) {\n      int n = sc.nextInt();\n      System.out.println(Solution.factorial(n));\n    }\n  }\n}\n\nclass Solution{\n    public static int factorial(int n){\n        if(n <= 1){\n            return 1;\n        }\n        else{\n            return n*(factorial(n-1));\n        }\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif(n == 0) n = 1;\r\n\telse n = n * factorial(n-1);\r\n\t\r\n\treturn n;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n\r\n\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif(n==0) return 1;\r\n\telse{\r\n\t\treturn n*factorial(n-1);\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n)<<endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n == 0) return 1;\n\telse return n * factorial(n - 1);\n}\nint main() {\n\tint a;\n\twhile (cin >> a){\n\t\tcout <<  factorial(a) << endl;\n\t}\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n  if(n <= 1) return 1;\r\n  else\r\n  {\r\n    return n * factorial(n-1);\r\n  }\r\n}\r\n\r\nint main()\r\n{\r\n  int n;\r\n  cin >> n;\r\n  int resultat = factorial(n);\r\n  cout << resultat << endl;\r\n}\r\n",
  "// P12509(Factorial recursiu) Tenemos que sacar un numero factorial.\n// Input: un natural entre 0 y 12.\n// Output: el factorial.\n#include <iostream>\nusing namespace std;\n\n\n// Factorial recursivo.\n// Pre: 0 <= n <= 12:\n// Post: el factorial.\nint factorial(int n) {\n    int factor = 1;\n    if (n > 1) factor = n*factorial(n-1);\n    return factor;\n}\n\nint main() {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "\r\ndef factorial(n):\r\n    if(n == 0): return 1\r\n    return n*factorial(n-1)\r\n",
  "\r\ndef factorial(n):\r\n    if(n == 0):\r\n        return 1\r\n    return n*factorial(n-1)\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//pre: 0= n = 12\r\n//post: retorna n!\r\nint factorial(int n) {\r\n    //cas base\r\n    if (n <= 1) return 1;\r\n    else return factorial(n-1)*n; \r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    \n    if (n <= 1) return 1;\n    return factorial(n - 1) * n;\n}\n\nint main () {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n    \n        \n",
  "#include <iostream>\nusing namespace std;\n\n//Precondicio: Es compleix 0â¤ n â¤ 12.\n\nint factorial(int n){\n    if( n <= 1)\n        return 1;\n    else\n        return n*factorial(n-1);\n}\n\nint main() {\n    int num;\n    cin >> num;\n    int resultado;\n    resultado = factorial(num);\n    cout << resultado << endl;\n}\n    \n",
  "#include <iostream>\nusing  namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else {\n        return factorial(n - 1)*n;\n    }\n\n}\n\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n>1){\r\n        return n*factorial(n-1);\r\n    }\r\n    return n;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n>1){\r\n        n*factorial(n-1);\r\n    }\r\n    return n;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0) return 1;\r\n    if(n>1){\r\n        return n*factorial(n-1);\r\n    }\r\n    return n;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tint sum=0;\r\n\tif( n==0 ) sum+= 1;\r\n\telse sum = sum+ n *factorial(n-1);\r\n\treturn sum;\r\n}\r\nint main(){\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\tint r = 1;\r\n\tfor (int i = 1; i <= n; i++) r *= i;\r\n\treturn r;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n\t}  \r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n*factorial(n - 1); \r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int n1;\r\n    if (n == 1) {\r\n        return n;\r\n    }\r\n    else {\r\n        n1 = (n - 1);\r\n        factorial (n1);\r\n        n1 *= n;\r\n        return n1;\r\n    }\r\n}\r\n",
  "/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n) {\n    \n    if (n == 0) return 1;\n    \n    else return n*factorial(n-1);\n    \n    \n}\n\nint main() {\n    \n    int n;\n    cin >> n;\n    int f = factorial(n);\n    cout << f << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int a;\r\n    if(n == 0) return (1);\r\n    a = n * factorial(n-1);\r\n    return (a);\r\n}\r\n\r\nint main() {\r\n    int m;\r\n    while (cin >> m) {\r\n        cout << factorial(m) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n){\r\n     if (n == 0) return 1;\r\n     else return n*factorial(n-1);\r\n     \r\n }\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n\tif(n==0) return 1;\r\n\r\n\telse return n*factorial(n-1);\r\n\r\n}\r\n\r\n\r\n\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\r\n    if (n==0) n=1;\r\n    else n=n*factorial(n-1);\r\n\r\n    return n;\r\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nbool primer(int a) {\n\tif (a <= 1) return false;\n\tfor (int i = 2; i * i <= a; ++i) {\n\t\tif (a % i == 0) return false;\n\t}\n\treturn true;\n}\n\nbool es_primer_perfecte(int n) {\n\tif (not primer(n)) return false;\n\tint resultat = 0;\n\tint digits = 0;\n\twhile (n > 0) {\n\t\tresultat = resultat+n % 10;\n\t\tn = n / 10;\n\t\t++digits;\n\t}\n\tbool resultat_primer = primer(resultat);\n\tif (resultat_primer && digits == 1) return true;\n\telse if (resultat_primer) return es_primer_perfecte(resultat);\n\telse return false;\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << es_primer_perfecte(n) << endl;\n\t}\n}\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tint mult = 1;\r\n\tfor (int i=n; i>=1; --i){\r\n\t\tmult = mult * i;\r\n\t}\r\n\treturn mult;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n <= 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return factorial (n-1)*n;\n\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n - 1);\n}\n    \nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int i, fact = 1;\r\n\r\n    for(i=1;i<=n;i++){\r\n        fact = fact * i;\r\n    }\r\n\r\n    cout<<fact<<endl;\r\n\r\n    }\r\n\r\n\r\nint main(){\r\n    int n;\r\n    cout << \"Factorial?: \";\r\n    cin >> n;\r\n\r\n    factorial(n);\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int i, fact = 1;\r\n\r\n    for(i=1;i<=n;i++){\r\n        fact = fact * i;\r\n    }\r\n\r\n    cout<<fact<<endl;\r\n\r\n    }\r\n\r\n\r\nint main(){\r\n    int n;\r\n    cout << \"Factorial?: \";\r\n    cin >> n;\r\n\r\n    factorial(n);\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int i, fact = 1;\r\n\r\n    for(i=1;i<=n;i++){\r\n        fact = fact * i;\r\n    }\r\n\r\n    cout<<fact<<endl;\r\n\r\n    }\r\n\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n\r\n    factorial(n);\r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int i, fact = 1;\r\n\r\n    for(i=1;i<=n;i++){\r\n        fact = fact * i;\r\n    }\r\n    cout<<fact<<endl;\r\n    }\r\n\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n\r\n    factorial(n);\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n == 0) return 1;\r\n  else return n*factorial(n - 1);\r\n}\r\n\r\n\r\nint main() {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  int fact = 1;\r\n  for (int i = 2; i <= n; i = i + 1) fact = fact*i;\r\n  return fact;\r\n}\r\n\r\n\r\n\r\n int main() {\r\n\r\n   int num;\r\n   cin >> num;\r\n   while (num != -1) {\r\n     int fact = factorial(num);\r\n     cout << fact << endl;\r\n     cin >> num;\r\n   }\r\n  }\r\n",
  "import java.util.Scanner;\n\nclass Main {\n\n  public static void main(String[] args) {\n    final Scanner sc = new Scanner(System.in);\n    while (sc.hasNextInt()) {\n      int n = sc.nextInt();\n      System.out.println(Solution.factorial(n));\n    }\n\n public static int factorial(int n){\n        if(n>0){\n            n+=factorial(n-1);\n        }\n        return n;\n    }\n\n  }\n\n}\n",
  "import java.util.Scanner;\n\nclass Main {\n\n  public static void main(String[] args) {\n    final Scanner sc = new Scanner(System.in);\n    while (sc.hasNextInt()) {\n      int n = sc.nextInt();\n      System.out.println(Solution.factorial(n));\n    }\n\n public static int factorial(int n){\n        if(n>0){\n            n+=factorial(n-1);\n        }\n        return n;\n    }\n\n  }\n\n}\n",
  "import java.util.Scanner;\n\nclass Main {\n\n  public static void main(String[] args) {\n    final Scanner sc = new Scanner(System.in);\n    while (sc.hasNextInt()) {\n      int n = sc.nextInt();\n      System.out.println(Solution.factorial(n));\n    }\n\n  }\n public static int factorial(int n){\n        if(n>0){\n            n+=factorial(n-1);\n        }\n        return n;\n    }\n\n}\n",
  "import java.util.Scanner;\n\nclass Main {\n\n  public static void main(String[] args) {\n    final Scanner sc = new Scanner(System.in);\n    while (sc.hasNextInt()) {\n      int n = sc.nextInt();\n      System.out.println(factorial(n));\n    }\n\n  }\n public static int factorial(int n){\n        if(n>0){\n            n+=factorial(n-1);\n        }\n        return n;\n    }\n\n}\n",
  "import java.util.Scanner;\n\nclass Main {\n\n  public static void main(String[] args) {\n\t    final Scanner sc = new Scanner(System.in);\n\t    while (sc.hasNextInt()) {\n\t      int n = sc.nextInt();\n\t      System.out.println(factorial(n));\n\t    }\n\n  }\npublic static int factorial(int n){\n        if(n>0){\n            System.out.println(\"valor\"+n);\n            n*=factorial(n-1);\n        }else{\n            n++;\n        }\n        return n;\n    }\n\n}\n",
  "import java.util.Scanner;\n\nclass Main {\n\n  public static void main(String[] args) {\n\t    final Scanner sc = new Scanner(System.in);\n\t    while (sc.hasNextInt()) {\n\t      int n = sc.nextInt();\n\t      System.out.println(factorial(n));\n\t    }\n\n  }\npublic static int factorial(int n){\n        if(n>0){\n            n*=factorial(n-1);\n        }else{\n            n++;\n        }\n        return n;\n    }\n\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) <<endl;\r\n}\r\n\r\nint factorial(int n) {\r\n    int x=1;\r\nfor (int i=1;i<=n;i++) {\r\n    x=x*i;\r\n}\r\nreturn x;\r\n}\r\n",
  "#include <cstdlib>\n#include <iostream>\nusing namespace std;\n\nint main() {\n\n  // Pre: n=N y n>=0\n  // Post: Calculamos el factorial de n\n  int n;\n  int fact = 1;\n  int i = 2;\n  cin >> n;\n  while (i <= n) {\n    fact = fact*i;\n    i = i + 1;\n  }\n  cout << fact << endl;\n}\n\n\n",
  "#include <cstdlib>\n#include <iostream>\nusing namespace std;\n\nint main() {\n  int n;\n  int fact = 1;\n  int i = 2;\n  cin >> n;\n  while (i <= n) {\n    fact = fact*i;\n    i = i + 1;\n  }\n  cout << fact << endl;\n}\r\n",
  "#include <cstdlib>\n#include <iostream>\nusing namespace std;\n\nint main() {\n  int n;\n  int fact = 1;\n  int i = 2;\n  cin >> n;\n  while (i <= n) {\n    fact = fact*i;\n    i = i + 1;\n  }\n  cout << fact << endl;\n}\r\n",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  int fact = 1;\r\n  for (int i = 2; i <= n; i = i + 1) fact = fact*i;\r\n  return fact;\r\n}\r\n\r\n\r\n\r\n int main() {\r\n\r\n   int num;\r\n   cin >> num;\r\n   while (num != -1) {\r\n     int fact = factorial(num);\r\n     cout << fact << endl;\r\n     cin >> num;\r\n   }\r\n  }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\nint main(){\r\n    int n;\r\n    factorial(n);\r\n}\r\n",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n);\r\n\r\n\r\nint main() {\r\n  int x;\r\n  while (cin >> x) cout << factorial(x) << endl;\r\n}\r\n\r\nint factorial(int n) {\r\n    int x=1;\r\nfor (int i=n;i>0;i=i-1) {\r\n    x=x*i;\r\n}\r\nreturn x;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n>1) {\r\n        return n*factorial(n-1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nint main () {\r\n  int n;\r\n  cin >> n;\r\n  cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n",
  "#include <vector>     //declaración de librerías\r\n#include <fstream>\r\n#include <iostream>\r\n#include <stdlib.h>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\n//IRENE MARIN RICO\r\n\r\n\r\nint factorial(int n){\r\n  if (n <= 1){\r\n    return 1;\r\n  } else {\r\n    return (n * factorial(n-1));\r\n  }\r\n}\r\n\r\nint main() {\r\n}\r\n",
  "\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    \n    if (n == 1) return 1;\n    else return n * factorial(n - 1);       // Es como una especie de bucle.\n    \n}\n\n\n\nint main() {\n    \n    int x;\n    cin >> x;\n    \n    cout << factorial(x) << endl;\n    \n}\n",
  "\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    \n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);       // Es como una especie de bucle.\n    \n}\n\n\n\nint main() {\n    \n    int x;\n    while (cin >> x) {\n        \n        cout << factorial(x) << endl;\n        \n    }\n    \n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n// Pre: n Ã©s un nombre enter positiu\n// Post: retorna n!\nint res ;\nif (n == 0) {res = 1 ;}\nelse {res = n*factorial(n-1); }\nreturn res ;\n}\n\n/*int main(){\n    cout<<factorial(3)<<endl;\n}\n\n    res=4*factorial(3)\n        factorial(3)= 3*facorial(2)\n        factorial(2)=2*factorial(1)\n        factorial(1)=1*factorial(0)\n        Cas base factorial(0)=1\n\n        res=4*factorial(3)          => 4*6=factorial(4)=24\n        factorial(3)= 3*facorial(2)=> 3*2=factorial(3)=6\n        factorial(2)=2*factorial(1)=>2*1=factorial(2)=2\n        factorial(1)=1*factorial(0)=> 1*1=factorial(1)=1\n        Cas base factorial(0)=1\n\n        resultat de res=24\n*/",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n >= 1)\n        return 1;\n    return n * facotrial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n >= 1)\n        return 1;\n    return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n#include<vector>\n\n\nint factorial(int n){\n    if (n == 0)\n        return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n    cout << factorial(3) << endl;\n}\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nint factorial(int n){\nint resultat=1;\nwhile(n>=1){\nresultat*=n;\nn--;\n}\n    return resultat;\n}\nint main(){\n    int n;\n    while(cin>>n) cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n    \n        if (n == 0){\n            return 1;\n        }\n        else{\n            return n*fact(n-1);\n        }\n    }\n\nint main() {  \n    int x;\n    while (cin >> x){\n        \n        cout << fact(x) << endl;\n        \n   \n}\n} \n\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n        if (n == 0){\n            return 1;\n        }\n        else{\n            return n*factorial(n-1);\n        }\n    }\n\nint main() {  \n    int x;\n    while (cin >> x){\n        \n        cout << fact(x) << endl;\n        \n   \n}\n} \n\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n        if (n == 0){\n            return 1;\n        }\n        else{\n            return n*factorial(n-1);\n        }\n    }\n\nint main() {  \n    int x;\n    while (cin >> x){\n        \n        cout << factorial(x) << endl;\n        \n   \n}\n} \n\n\n\n\n\n\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else{\n        return n*factorial(n-1);\n    }\n}\n\nint main()\n{\n    int n;\n    \n    cin >> n;\n    \n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1 or n==0){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n    cout.setf(ios::fixed);\n    cout.precision (4);\n    cout << factorial(5) << endl;\n}\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0)\n    return 1;\n    else \n    return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0)\n        return 1;\n    else if (n == 1)\n        return 1;\n    else\n        return factorial(n-1) * n;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n/*\nint nombre_digits(int n){\n    if (n < 10){\n        return 1;\n    }\n    else{\n        return nombre_digits(n/10)+1;\n    }\n}\n\nint main (){\n    int n;\n    while(cin >> n) {\n        cout << nombre_digits(n) << endl;\n    }  \n}\n*/\n\nint factorial(int n){\n    if (n <= 1){\n        return n;\n    }\n    else{\n        return n * factorial(n-1);\n        \n    }\n}\n\nint main (){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n/*\nint nombre_digits(int n){\n    if (n < 10){\n        return 1;\n    }\n    else{\n        return nombre_digits(n/10)+1;\n    }\n}\n\nint main (){\n    int n;\n    while(cin >> n) {\n        cout << nombre_digits(n) << endl;\n    }  \n}\n*/\n\nint factorial(int n){\n    if (n == 0){return 1;}\n    if (n <= 1){\n        return n;\n    }\n    else{\n        return n * factorial(n-1);\n        \n    }\n}\n\nint main (){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main (){\n    int n;\n    while(cin>>n){\n    cout<<factorial(n)<<endl;\n    \n    }\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    cout << \"    factorial(\" << n << \")\" << endl;\n    if(n==0)\n        return 1;\n    else\n        return factorial (n - 1) * n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n// S(n) = 1 + 2 + ... + (n - 1) + n\n// S(n) = S(n - 1) + n;\n//n! = n * (n - 1)!\n//factorial(n) = n * factorial(n - 1)\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    //cout << \"    factorial(\" << n << \")\" << endl;\n    if(n==0)\n        return 1;\n    else\n        return factorial (n - 1) * n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "import java.util.Scanner;\n\npublic class Main {\n\n    public static int factorial(int n) {\n        if (n == 1 || n == 0) return 1;\n        else return n * factorial(n-1);\n    }\n    public static void main(String[] args) {\n        Scanner input = new Scanner(System.in);\n        int number = input.nextInt();\n        number = factorial(number);\n        System.out.println(number);\n    }\n}",
  "import java.util.Scanner;\n\n/*public class Main {\n\n\n    public static void main(String[] args) {\n        Scanner input = new Scanner(System.in);\n        int number = input.nextInt();\n        number = factorial(number);\n        System.out.println(number);\n    }\n}*/\n\npublic static int factorial(int n) {\n        if (n == 1 || n == 0) return 1;\n    else return n * factorial(n-1);\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int facto = 1;\r\n    if (facto != 0 or facto != 1){\r\n        for (int c = 1; c <= n; c++) facto *= c;\r\n    }\r\n    return facto;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    while (cin >> n){\r\n        cout << factorial(n) << endl;\r\n    }\r\n\r\n    return 0;\r\n}",
  "from jutge import read\n\ndef factorial(n):\n    '''\n    This function will return the factorial value of the number introdized\n    it will also take only positive nÂº and 0.\n    '''\n    n=read(int)\n    if n>=0:\n        return(1)\n    else:\n        return(n*factorial(n-1))",
  "from jutge import read\n\ndef factorial(n):\n    '''\n    This function will return the factorial value of the number introdized\n    it will also take only positive nÂº and 0.\n    '''\n    n=read(int)\n    if n<=0:\n        return(1)\n    else:\n        return(n*factorial(n-1))",
  "from jutge import read\n\ndef factorial(n):\n    '''\n    This function will return the factorial value of the number given\n    it will also take only positive nÂº and 0.\n    '''\n    n=read(int)\n    if n<=0 or n>=12:\n        return(1)\n    else:\n        return(n*factorial(n-1))",
  "from jutge import read\n\ndef factorial(n):\n    '''\n    This function will return the factorial value of the number given\n    it will also take only positive nÂº and 0.\n    '''\n    n=read(int)\n    if n<=0 or n>=12:\n        return(1)\n    else:\n        return(n*factorial(n-1))",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0) {\n        return (1);\n    } else {\n        return (n * factorial(n - 1));\n    }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <cmath>\n#include <iomanip>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0 or n == 1)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else {\n        return n*factorial(n - 1);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0){\n\t\treturn 1;\n\t} else {\n\t\treturn n * factorial(n-1);\n\t}\n}\nint main(){\n\tint a;\n\twhile(cin >> a){\n\t\tcout << factorial(a) << endl;\n\t}\n}\n",
  "int factorial(int n)\r\n{\r\n    int facth = 1;\r\n    for (int i = 2; i == n; i++) {\r\n        facth = facth * i;\r\n    }\r\n}\r\n",
  "int factorial(int n)\r\n{\r\n    int facth = 1;\r\n    for (int i = 2; i == n; i++) {\r\n        facth = facth * i;\r\n    }\r\n    return facth;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial (int n){\r\n \t\r\n \tif (n < 2) return 1;\r\n \telse return n*factorial(n-1);\r\n }\r\n \r\n int main () {\r\n \t\r\n \tint n;\r\n \tcin >> n;\r\n \t\r\n \tcout << factorial (n) << endl;\r\n }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    int i = 1;\r\n    while (n > 1) {\r\n        i = i * n;\r\n        n = n - 1;\r\n    }\r\n    return i;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n > 1)\r\n        return n * factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n > 1)\r\n        return n * factorial(n - 1);\r\n    return n;\r\n}\r\n\r\nint main()\r\n{\r\n    int a;\r\n    while (cin >> a) {\r\n        cout << factorial(a) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == o)\r\n        return 1;\r\n    if (n > 1)\r\n        return n * factorial(n - 1);\r\n    return n;\r\n}\r\n\r\nint main()\r\n{\r\n    int a;\r\n    while (cin >> a) {\r\n        cout << factorial(a) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0)\r\n        return 1;\r\n    if (n > 1)\r\n        return n * factorial(n - 1);\r\n    return n;\r\n}\r\n\r\nint main()\r\n{\r\n    int a;\r\n    while (cin >> a) {\r\n        cout << factorial(a) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0 or n == 1)\r\n        return 1;\r\n    else\r\n        return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int a;\r\n    while (cin >> a) {\r\n        cout << factorial(a) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 1 or n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "int factorial(int n)\r\n{\r\n    while (cin >> n) {\r\n        int facth = 1;\r\n        for (int i = 2; i == n; i++) {\r\n            facth = facth * i;\r\n        }\r\n        return facth;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    while (cin >> n) {\r\n        int facth = 1;\r\n        for (int i = 2; i == n; i++) {\r\n            facth = facth * i;\r\n        }\r\n        return facth;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    int facth = 1;\r\n    for (int i = 2; i == n; i++) {\r\n        facth = facth * i;\r\n    }\r\n    return facth;\r\n}\r\n\r\nint main()\r\n{\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    int facth = 1;\r\n    if (n == 0 or n == 1)\r\n        return 1;\r\n    for (int i = 2; i == n; i++) {\r\n        facth = facth * i;\r\n    }\r\n    return facth;\r\n}\r\n\r\nint main()\r\n{\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0 or n == 1)\r\n        return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0)\r\n        return 1;\r\n    else\r\n        return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0)\r\n        return 1;\r\n    else\r\n        return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nlong int factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return (n * factorial(n - 1));\n}\n\nint main()\n{\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return (n * factorial(n - 1));\n}\n\nint main()\n{\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n  if ( n == 0) return 1;\r\n  else return n * factorial ( n - 1);\r\n}\r\n\r\nint main () {\r\nint n;\r\ncin >> n;\r\ncout << factorial ( n ) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    int f = 1;\n    for (int i = n; i > 0; i = i - 1)\n        f = f * i;\n    return f;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 1 or n == 0) {\r\n        return 1;\r\n    } else {\r\n        return n * factorial(n - 1);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) {\n    return 1;\n  } else {\n    return n * factorial(n - 1);\n  }\n}\n\nint main() {\n  int x;\n  cin >> x;\n\n  cout << factorial(x) << endl;\n}\n",
  "from easyinput import read\n\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\nx = read(int)\nprint(factorial(x))\n",
  "#include <cmath>\n#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0 or n == 1)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0) {\r\n        return 1;\r\n    } else {\r\n        return n * factorial(n - 1);\r\n    }\r\n}\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n  if ( n == 0 ) return 1;\n  return n*factorial(n-1);\n}\n\nint main()\n{\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int x){\r\n  if (x == 0){\r\n    return 1;\r\n  } else{\r\n    return x * factorial(x-1);\r\n  }\r\n}\r\n\r\nint main(){\r\n  int x;\r\n  cin >> x;\r\n  cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n) {\n  if (n < 2) {\n    return 1;\n  } else {\n    return n*(factorial(n-1));\n  }\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n  if (n == 1){\n    return 1;\n  } else {\n    return n * factorial(n - 1);\n  }\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return n * factorial(n - 1);\n  }\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  int f = 1;\n  for (int i = 2; i <= n; ++i) {\n    f *= i; // f = f * i\n  }\n  if (n == 0) {\n    return 1;\n  } else {\n    return n * factorial(n - 1);\n  }\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0 or n == 1) {\r\n        return 1;\r\n    }\r\n    return n * factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0) return 1;\n  else return n*factorial(n - 1);\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n// Retorna el factorial d'un natural n donat.\r\n// PrecondiciÃ³: 0 <= n <= 12\r\nint factorial(int n)\r\n{\r\n    if (n == 0) {\r\n        return 1;\r\n    } else {\r\n        return n * factorial(n - 1);\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n// donat un enter i, llegeix una seqÃ¼Ã¨ncia d'enters i en arribar al\n// iÃ¨ssim en guarda el valor. En finalitzar la seqÃ¼Ã¨ncia imprimeix per pantalla\n// l'iÃ¨ssim valor.\n\nint main() {\n  int n;\n  cin >> n;\n  int posicio = 1;\n  int actual, iessim;\n  bool trobat = false;\n  while (cin >> actual and actual != -1) {\n    if (posicio == n && !trobat) {\n      iessim = actual;\n      trobat = true;\n    }\n    posicio++;\n  }\n\n  cout << \"A la posicio \" << n << \" hi ha un \" << iessim << \".\" << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n <= 1)\r\n        return 1;\r\n    else\r\n        return n * (factorial(n - 1));\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0) {\r\n        return 1;\r\n    } else {\r\n        return n * factorial(n - 1);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//Retrona el factorial d'un natural n\r\n// PrecondiciÃ³: 0 <= n <= 12\r\nint factorial(int n)\r\n{\r\n    if (n == 0)\r\n        return 1;\r\n    else\r\n        return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n > 0) {\r\n        n = n * factorial(n - 1);\r\n    } else {\r\n        if (n == 0) {\r\n            n = 1;\r\n        }\r\n    }\r\n    return n;\r\n}\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n//3 -> 2 Â· 3 = 6\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0 or n == 1)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0) { //cas base\n        return 1;\n    } else {\n        return n * factorial(n - 1); //cas recursiu\n    }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0)\r\n        return 1;\r\n    else\r\n        return n * (factorial(n - 1));\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nvoid factorial(int n)\n{\n    int i = 1;\n    int fact = 1;\n    while (i <= n) {\n        fact = fact * i;\n        ++i;\n    }\n    cout << fact << endl;\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    int i = 1;\n    int fact = 1;\n    while (i <= n) {\n        fact = fact * i;\n        ++i;\n    }\n    return fact;\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Funcio que retorna el factorial d'un natural n\n//Pre: 0 <= n <= 12;\nint factorial(int n)\n{\n    if (n == 0)\n        return 1; //condicion de terminacion...\n    else\n        return n * factorial(n - 1); //se reduce el valor de n hasta llegar a 0...(fin)\n}\n\nint main()\n{\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0) {\r\n        return 1;\r\n    } else {\r\n        return n * factorial(n - 1);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "def factorial(n):\n    if n<=1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\ndef main():\n    a=int(input())\n    print(factorial(a))\n\nmain()\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1) {\n        return 1;\n    } else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return factorial(n - 1) * n;\n}\n\nint main()\n{\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// funciÃ³ que calcula el factorial d'un nombre\nint factorial(int n)\n{\n    if (n == 0) {\n        return 1;\n    } else\n        return factorial(n - 1) * n;\n}\nint main()\n{\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "def factorial(n):  # returns int\n    if n == 0:\n        return 1\n    else:\n        return n*factorial(n - 1)\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n\n",
  "def factorial(n):  # returns int\n    if n == 0:\n        return 1\n    else:\n        return n*factorial(n - 1)\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\treturn factorial(n-1)*n;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    //caso base: n = 0 (0 != 1) or n = 1 (1 != 1)\n    if(n <= 1) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main(){\n    int x;\n    while(cin >> x){\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//pre: s'escriu una funcio que retorni n!\n//post: es retorna n!\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    return n*factorial (n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int i = 0;\n    int f = 1;\n    while (i < n) {\n        i += 1;\n        f = f*i;\n    }\n    return f;\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n    \n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) { \n    if (n <= 1) return 1;\n    else return n*(factorial(n-1));\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n        \n        \n",
  "#include <iostream>\nusing namespace std;\n\n//pre: s'escriu una funcio que retorni n!\n//post: es retorna n!\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    return n*factorial (n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    else{\n        return n*factorial(n - 1);\n    }\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    else{\n        return n*factorial(n - 1);\n    }\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return factorial(n - 1) * n;\n}\n\nint main(){\n    cout << factorial(4) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n>0) return n*factorial(n-1);\n    else return 1;\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "\n#include <iostream>\nusing namespace std;\n\n\n// pre: n>=0\n// post: r es el factorial de n\n// r= |n|\nint factorial (int n) {\nint r=n;\n\nif (n==1) r=1;\n\nelse if (n==1) r=0;\n\nelse {\n\nr= r* factorial(n-1);\n\n}\nreturn r;\n}\n\n\nint main () {\nunsigned int n;\ncin >> n;\nif (n>=0 and n<=12){\n cout << factorial(n) << endl;\n}\n}\n\n",
  "\n#include <iostream>\nusing namespace std;\n\n\n// pre: n>=0\n// post: r es el factorial de n\n// r= |n|\nint factorial (int n) {\nint r=n;\n\nif (n==1) r=1;\n\nelse if (n==1) r=0;\n\nelse {\n\nr= r* factorial(n-1);\n\n}\nreturn r;\n}\n\n\nint main () {\nint n;\ncin >> n;\nif (n>=0 and n<=12){\n cout << factorial(n) << endl;\n}\n}\n\n",
  "\n#include <iostream>\nusing namespace std;\n\n\n// pre: n>=0\n// post: r es el factorial de n\n// r= |n|\nint factorial (int n) {\nint r=n;\n\nif (n==1) r=1;\n\nelse if (n==0) r=1;\n\nelse {\n\nr= r* factorial(n-1);\n\n}\nreturn r;\n}\n\n\nint main () {\nint n;\ncin >> n;\nif (n>=0 and n<=12){\n cout << factorial(n) << endl;\n}\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\treturn n*factorial(n - 1);\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n// PRE: n >= 0 natural\n// POST; retorna x!\n\nint factorial(int n) {\n\tif (n == 0 or n == 1) return 1;\n\telse return n * factorial(n-1);\n}\n\nint main() {\n\tint x;\n\tcin >> x;\n\tcout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n * factorial(n - 1);\n}\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0 or n == 1) return 1;\n\telse return n*facrorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0 or n == 1) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0){\n\t\treturn 1;\n\t} else {\n\t\treturn n * factorial(n-1);\n\t}\n}\nint main(){\n\tint a;\n\twhile(cin >> a){\n\t\tcout << factorial(a) << endl;\n\t}\n}\n",
  "//Factorial recursiu \n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "// Factorial recursiu\n// Escriviu una funciÃ³ que retorni n!.\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    \n    while (cin >> x) {\n     \n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//PRe: n >= 0\n//Post: retorna el factorial de n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return factorial(n-1) * n;\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\twhile (cin >> x) cout << factorial(x) << endl;\r\n} ",
  "#include <iostream>\r\n#include <math.h>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n <= 1) \r\n        return 1;\r\n    return factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n}",
  "#include <iostream>\r\n#include <math.h>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n <= 1) \r\n        return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return (n*factorial(n - 1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return factorial(n - 1)*n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n// Pre: 0 <= n <= 12\n// Post: Retorna !n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n <= 0) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nint main()\r\n{\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1 or n == 0) return 1;\n    else return n * factorial(n-1);\n}\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\t\r\n#include <cmath>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\r\n    int fact = n;\r\n\r\n    if (n == 0) return 1;\r\n    else {\r\n\r\n        for (int i = 1; i < n; ++i){\r\n            fact = fact * (n - i);\r\n        }\r\n        \r\n        return fact;\r\n    }\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\t\r\n#include <cmath>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n\r\n    cout << factorial(n) << endl;\r\n    \r\n}",
  "int factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main () {\n    int x;\n    cin>>x;\n    cout << factorial(x) << endl;\n}  \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact;\n     if(n==0)return 1;\n     \n     else if(n!=0){\n          fact=n*factorial(n-1);  \n        }\n        return fact;\n    }\n\n\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n - 1)  \n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else {\n        return factorial(n-1)*n;\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int factorial = 1;\n    for (int i = 2; i <=n; ++i) {\n        factorial*=i;\n    }\n    return factorial;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) { \n    if (n == 0) return 1;\n    else return n*factorial(n-1);}\n\n\nint main () {\n  int n;\n  while (cin >> n) cout << nombre_digits(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) { \n    if (n == 0) return 1;\n    else return n*factorial(n-1);}\n\n\nint main () {\n  int n;\n  while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n - 1) * n;\n}\nint main () {\n    int a;\n    while (cin >> a) {\n        cout << factorial(a) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n) {\n     if (n == 0) return 1;\n     else return n*factorial(n-1);\n }\n \n int main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n){\r\n     if (n == 0) return 1;\r\n     else return n*factorial(n-1);\r\n     \r\n }\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\nint factorial(int n){\n    \n    if(n == 1)\n        return 1;\n    \n    return factorial(n-1)*n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint main() {\n\tint n;\n\tint factorial = 1;\n\tcin >> n;\n\n\tif (n < 0 or n < 1) {\n    \tfactorial = 1;\n\t}\n\telse {\n    \tfor(int i = 1; i <= n; ++i) {\n\t\tfactorial *= i;\n        }\n        cout << factorial << endl;    \n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint main() {\n\tint n;\n\tint factorial = 1;\n\tcin >> n;\n\n\tif (n < 0 or n < 1) {\n    \tfactorial = 1;\n\t}\n\telse {\n    \tfor(int i = 1; i <= n; ++i) {\n\t\tfactorial *= i;\n        }\n        cout << factorial << endl;    \n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\nint factorial(int n){\n    \n    if(n <= 1)\n        return 1;\n    \n    return factorial(n-1)*n;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint factorial(int n) {\n    if (n==0 or n==1) return 1;\n    else return factorial(n-1)*n;\n    }\n\n    int main() {\n    }\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else {\n        return factorial(n-1) * n;\n    \n    }\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n        \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<2) return 1;\n    else return factorial(n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) <<endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0 or n == 1) {\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main() {\n    int n;\n    \n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial (n-1); //n! = n*(n-1)!\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }  \n    \n}\n//pre: 0 â¤ n â¤ 12.\n//post: return n!\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  \n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\ndouble factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    double x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1) return 1 \n  else return (n * factorial(n - 1))\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1) return 1;\n  else return (n * factorial(n - 1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint nombre_digits(int n){\n    if(n<10) return 1;\n    else return (1+nombre_digits(n/10));\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if(0<n) return n*factorial(n-1);\n    return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    \n    cin >> n;\n    \n    cout << factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n<=1) return 1;\n    int n1=n-1;\n    return n*factorial(n1);\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return factorial(n-1)*n;\n}\n\nint main(){\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin>>n) cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\n  int factorial(int n){\n\n \tif (n==0) return 1;\n \telse return n*factorial(n-1);\n  \n  \n\n}\nint main (){\n\tint x;\n\tcin>>x;\n\tcout<<factorial(x)<<endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n * factorial (n - 1);\n}\n\nint main () {\n    int num;\n    while (cin >> num) {\n        cout << factorial (num) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n)  {\n\n\tint resul = 0;\n\tif (n == 0) resul = 1;\n\telse resul = n*(factorial(n-1));\n\treturn resul;\n\n}\n\nint main () {\n\n\tint a = 0;\n\tcin >> a;\n\n\tcout << factorial(a) << endl;\n\n\n}\n",
  "int factorial(int n){\n    if (n<=1) return 1;\n    else if (n>1){\n        int f;\n        while ((n-1)!=1){\n            f=n*(n-1);\n            --n;\n        }\n        return f;\n    }\n}\n\n#include <iostream>\nusing namespace std;\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1);\n}\n\nint main() {}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else if (n <= 2) return n;\n    else {   \n        return n*factorial(n - 1);\n    }\n}\n\n/*int main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}*/\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n\tif (n==1) return 1;\r\n\treturn n*factorial(n-1);}\r\nint main(){\r\n\tint n;\r\n\twhile(cin>>n){\r\n\t\tcout<<factorial(n);\r\n\t}\r\n\t\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n\tif (n<=1) return 1;\r\n\treturn n*factorial(n-1);}\r\nint main(){\r\n\tint n;\r\n\twhile(cin>>n){\r\n\t\tcout<<factorial(n);\r\n\t}\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int m = 1;\n    for (int i = 1; i <= n; ++i) {\n        m = m * i;\n    }\n    return m;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n -1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    return n*factorial (n - 1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "\n// pre: 0 <= n <= 12\n// post: retorna n!\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int output;\n    \n    if (n == 0) return 1;\n    \n    while (n > 0) {\n        output = n * factorial(n-1);\n    }\n    \n    return output;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1;) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\n \nint factorial(int n) {\n\n    if (n == 0) return 1;\n    else return n*factorial (n - 1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n <= 1) {\n    return 1;\n  } \n  else {\n    return (n * factorial(n - 1));\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n/*Funcio que calcula de manera recursiva el factorial de n enter*/\n\nint factorial(int n) {\n    //fem el pas basic (el pas en el que la recursivitat ha d'acabar)\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);   //faig el factorial de n - 1 fins que arribi a 0\n                                        //d'aquesta manera va fent recursivitat fins n == 1. \n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return factorial (n - 1) * n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    int fact = 1;\r\n    if (n == 0) return 1;\r\n    if (n > 0) {\r\n        fact = n*factorial(n-1);\r\n    }\r\n    return fact;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0){\r\n\t\treturn 1;\r\n\t}\r\n\treturn n * factorial(n - 1);\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n\t\r\n\t\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n\tint f;\n\t\n\tif ( n == 0 ) f = 1;\n\t\n\telse {\n\t\n\tf = n* factorial (n-1);\n\t}\n\t\n\treturn f;\n}\n\nint main() {\n\n\tint a,b;\n\t\n\tcin >> a;\n\t\n\tb = factorial (a);\n\t\n\tcout << b << endl;\n\t}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif(0<=n<=12) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif(0==n==12) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif(0==n) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n\tif(0==n) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a);\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int sum=0;\r\n\tif( n==0 ) sum+= 1;\r\n\telse sum = sum+ n *factorial(n-1);\r\n\treturn sum;\r\n}\r\n    \r\n    \r\n    \r\n    \r\n    \r\n   \r\n\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return (n*factorial(n-1));\n    return 1;\n}\n",
  "#include <iostream> \nusing namespace std; \n\nint factorial(int n) {\n    int f = 1;\n    if (n == 0) return 1; \n    else {\n        for (int i = 1; i <= n; ++i) f = f*i;\n    }\n    return f;\n}\n\nint main() {\n    int n; \n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n==0) return 1;\r\n\telse return n*factorial(n-1);\r\n\t\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\t\r\n\tcout << factorial (n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint periodic(int x){\n    if (x == 0) return 1;\n    return x = x*periodic(x-1);\n}\n\n\nint main()\n{\n    int a;\n    while(cin >> a){\n    cout << periodic(a) << endl;}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint periodic(int x){\n    if (x == 0) return 1;\n    else return x = x*periodic(x-1);\n}\n\n\nint main()\n{\n    int a;\n    while(cin >> a){\n    cout << periodic(a) << endl;}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint periodic(int x){\n    if (x == 0) return 1;\n    else return x = x*periodic(x-1);\n}\n\n\nint main()\n{\n    int n;\n    while(cin >> n){\n    cout << periodic(n) << endl;}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint periodic(int x){\n    if (x == 0) return 1;\n    else return x = x*periodic(x-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (x == 0) return 1;\n    else return x = x*periodic(x-1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n = n*periodic(x-1);\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1\n\treturn n*factorial(n-1)\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tcout << factorial(10);\r\n}\r\n",
  "/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial (n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n   }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial (n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n   }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else if (n == 1) return 1;\n    else {\n        return n * factorial(n-1);\n    }\n}\n\nint main(){\n    int x;\n    while(cin >> x){\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int a){\n    if (n=0) return 1;\n    else return a*factorial(a-1);^\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n    \n    \n    \n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int a){\n    if (a==0) return 1;\n    else return a*factorial(a-1);\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n    \n    \n    \n    \n    \n}\n",
  "ELF\u0002\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000>\u0000\u0001\u0000\u0000\u0000 \u0012\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000<\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u00008\u0000\r\u0000@\u0000\u001f\u0000\u001e\u0000\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ø\u0002\u0000\u0000\u0000\u0000\u0000\u0000Ø\u0002\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0018\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¸\t\u0000\u0000\u0000\u0000\u0000\u0000¸\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000E\u0004\u0000\u0000\u0000\u0000\u0000\u0000E\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000È\u0001\u0000\u0000\u0000\u0000\u0000\u0000È\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000X-\u0000\u0000\u0000\u0000\u0000\u0000X=\u0000\u0000\u0000\u0000\u0000\u0000X=\u0000\u0000\u0000\u0000\u0000\u0000¸\u0002\u0000\u0000\u0000\u0000\u0000\u0000(\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0006\u0000\u0000\u0000p-\u0000\u0000\u0000\u0000\u0000\u0000p=\u0000\u0000\u0000\u0000\u0000\u0000p=\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u00008\u0003\u0000\u0000\u0000\u0000\u0000\u00008\u0003\u0000\u0000\u0000\u0000\u0000\u00008\u0003\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000X\u0003\u0000\u0000\u0000\u0000\u0000\u0000X\u0003\u0000\u0000\u0000\u0000\u0000\u0000X\u0003\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000Såtd\u0004\u0000\u0000\u00008\u0003\u0000\u0000\u0000\u0000\u0000\u00008\u0003\u0000\u0000\u0000\u0000\u0000\u00008\u0003\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000Påtd\u0004\u0000\u0000\u0000\u0004 \u0000\u0000\u0000\u0000\u0000\u0000\u0004 \u0000\u0000\u0000\u0000\u0000\u0000\u0004 \u0000\u0000\u0000\u0000\u0000\u0000\\\u0000\u0000\u0000\u0000\u0000\u0000\u0000\\\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000Qåtd\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000Råtd\u0004\u0000\u0000\u0000X-\u0000\u0000\u0000\u0000\u0000\u0000X=\u0000\u0000\u0000\u0000\u0000\u0000X=\u0000\u0000\u0000\u0000\u0000\u0000¨\u0002\u0000\u0000\u0000\u0000\u0000\u0000¨\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000/lib64/ld-linux-x86-64.so.2\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005\u0000\u0000\u0000GNU\u0000\u0002\u0000\u0000À\u0004\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0003\u0000\u0000\u0000GNU\u0000Û\u000eû~e%lÚ®\u000e)óÅxí`'1\u0004\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000GNU\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u000f\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000±\u0002\u0001\u0000\u0004\u0000\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000ÐeÎms\u0007\u0002rL\u001b\u0015\fC\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¾\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ë\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00006\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ê\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¦\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ù\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001f\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000R\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000;\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000C\u0001\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u001a\u0000`A\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0001\u0000\u0000\u0000\u0000\u0000\u0000j\u0000\u0000\u0000\"\u0000\u0010\u0000°\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0011\u0000\u001a\u0000@@\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000libstdc++.so.6\u0000__gmon_start__\u0000_ITM_deregisterTMCloneTable\u0000_ITM_registerTMCloneTable\u0000_ZNSirsERi\u0000_ZNSolsEi\u0000_ZNKSt5ctypeIcE8do_widenEc\u0000_ZSt3cin\u0000_ZNSt8ios_base4InitD1Ev\u0000_ZSt16__throw_bad_castv\u0000_ZNSo3putEc\u0000_ZNKSt5ctypeIcE13_M_widen_initEv\u0000_ZNSo5flushEv\u0000_ZNSt8ios_base4InitC1Ev\u0000_ZSt4cout\u0000libc.so.6\u0000__stack_chk_fail\u0000__cxa_atexit\u0000__cxa_finalize\u0000__libc_start_main\u0000GLIBC_2.4\u0000GLIBC_2.2.5\u0000GLIBCXX_3.4.11\u0000GLIBCXX_3.4\u0000\u0000\u0000\u0000\u0002\u0000\u0002\u0000\u0002\u0000\u0003\u0000\u0004\u0000\u0005\u0000\u0002\u0000\u0002\u0000\u0002\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0003\u0000\u0002\u0000\u0001\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u001b\u0001\u0000\u0000\u0010\u0000\u0000\u00000\u0000\u0000\u0000\u0014ii\r\u0000\u0000\u0004\u0000d\u0001\u0000\u0000\u0010\u0000\u0000\u0000u\u001ai\t\u0000\u0000\u0003\u0000n\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000aø\u0002\u0000\u0000\u0005\u0000z\u0001\u0000\u0000\u0010\u0000\u0000\u0000t)\b\u0000\u0000\u0002\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000X=\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000`=\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000`\u0012\u0000\u0000\u0000\u0000\u0000\u0000h=\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0013\u0000\u0000\u0000\u0000\u0000\u0000\b@\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b@\u0000\u0000\u0000\u0000\u0000\u0000Ð?\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ø?\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000à?\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000è?\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ð?\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ø?\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@@\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`A\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000?\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000?\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000?\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 ?\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¨?\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000°?\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¸?\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000À?\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000È?\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ó\u000f\u001eúHì\bH\u0005Ù/\u0000\u0000HÀt\u0002ÿÐHÄ\bÃ\u0000\u0000\u0000\u0000\u0000ÿ5R/\u0000\u0000òÿ%S/\u0000\u0000\u000f\u001f\u0000ó\u000f\u001eúh\u0000\u0000\u0000\u0000òéáÿÿÿó\u000f\u001eúh\u0001\u0000\u0000\u0000òéÑÿÿÿó\u000f\u001eúh\u0002\u0000\u0000\u0000òéÁÿÿÿó\u000f\u001eúh\u0003\u0000\u0000\u0000òé±ÿÿÿó\u000f\u001eúh\u0004\u0000\u0000\u0000òé¡ÿÿÿó\u000f\u001eúh\u0005\u0000\u0000\u0000òéÿÿÿó\u000f\u001eúh\u0006\u0000\u0000\u0000òéÿÿÿó\u000f\u001eúh\u0007\u0000\u0000\u0000òéqÿÿÿó\u000f\u001eúh\b\u0000\u0000\u0000òéaÿÿÿó\u000f\u001eúòÿ%\u0005/\u0000\u0000\u000f\u001fD\u0000\u0000ó\u000f\u001eúòÿ%­.\u0000\u0000\u000f\u001fD\u0000\u0000ó\u000f\u001eúòÿ%¥.\u0000\u0000\u000f\u001fD\u0000\u0000ó\u000f\u001eúòÿ%.\u0000\u0000\u000f\u001fD\u0000\u0000ó\u000f\u001eúòÿ%.\u0000\u0000\u000f\u001fD\u0000\u0000ó\u000f\u001eúòÿ%.\u0000\u0000\u000f\u001fD\u0000\u0000ó\u000f\u001eúòÿ%.\u0000\u0000\u000f\u001fD\u0000\u0000ó\u000f\u001eúòÿ%}.\u0000\u0000\u000f\u001fD\u0000\u0000ó\u000f\u001eúòÿ%u.\u0000\u0000\u000f\u001fD\u0000\u0000ó\u000f\u001eúòÿ%m.\u0000\u0000\u000f\u001fD\u0000\u0000ó\u000f\u001eúAUATUH-@\u0002\u0000\u0000SHì\u0018dH\u0004%(\u0000\u0000\u0000HD$\b1ÀH\\$\u0004HÞH=Ì/\u0000\u0000èGÿÿÿH\u0010HRèöD\u0010 \u0005\u000f\u0000\u0000\u0000D$\u0004¾\u0001\u0000\u0000\u0000Àt\u0010\u000f\u001f\u0000\u0000\u0000\u0000\u0000\u000f¯ðè\u0001uøH=q.\u0000\u0000è|ÿÿÿIÄH\u0000H@èM¬\u0004ð\u0000\u0000\u0000MítjA}8\u0000t\u001eA\u000f¾uCLçèÑþÿÿHÇèéþÿÿë\u000f\u001f\u0000\u0000\u0000\u0000Lïè\bÿÿÿIE\u0000¾\n\u0000\u0000\u0000H@0H9ètÍLïÿÐ\u000f¾ðëÃ\u000f\u001f@\u0000HD$\bdH3\u0004%(\u0000\u0000\u0000u\u0012HÄ\u00181À[]A\\A]ÃèÖþÿÿè±þÿÿó\u000f\u001eúHì\bH=\n0\u0000\u0000èÌþÿÿH=}-\u0000\u0000HÄ\bH\u0015-\u0000\u0000H5ì/\u0000\u0000énþÿÿf.\u000f\u001f\u0000\u0000\u0000\u0000\u0000\u000f\u001f@\u0000ó\u000f\u001eú1íIÑ^HâHäðPTL\u0005v\u0001\u0000\u0000H\rÿ\u0000\u0000\u0000H=þÿÿÿ\u0015\u0012-\u0000\u0000ôH=9-\u0000\u0000H\u00052-\u0000\u0000H9øt\u0015H\u0005î,\u0000\u0000HÀt\tÿà\u000f\u001f\u0000\u0000\u0000\u0000Ã\u000f\u001f\u0000\u0000\u0000\u0000H=\t-\u0000\u0000H5\u0002-\u0000\u0000H)þHðHÁî?HÁø\u0003H\u0001ÆHÑþt\u0014H\u0005Å,\u0000\u0000HÀt\bÿàf\u000f\u001fD\u0000\u0000Ã\u000f\u001f\u0000\u0000\u0000\u0000ó\u000f\u001eú=-/\u0000\u0000\u0000u+UH=z,\u0000\u0000\u0000Håt\fH=¦,\u0000\u0000èYýÿÿèdÿÿÿÆ\u0005\u0005/\u0000\u0000\u0001]Ã\u000f\u001f\u0000Ã\u000f\u001f\u0000\u0000\u0000\u0000ó\u000f\u001eúéwÿÿÿ\u000f\u001f\u0000\u0000\u0000\u0000ó\u000f\u001eú¸\u0001\u0000\u0000\u0000ÿt\u000b\u000f\u001f\u0000\u000f¯Çï\u0001uøÃ\u000f\u001f\u0000\u0000\u0000\u0000ó\u000f\u001eúðÃf\u000f\u001f\u0000\u0000\u0000\u0000\u0000ó\u000f\u001eúAWL=)\u0000\u0000AVIÖAUIõATAüUH-)\u0000\u0000SL)ýHì\bè\u000füÿÿHÁý\u0003t\u001f1Û\u000f\u001f\u0000\u0000\u0000\u0000LòLîDçAÿ\u0014ßHÃ\u0001H9ÝuêHÄ\b[]A\\A]A^A_Ãff.\u000f\u001f\u0000\u0000\u0000\u0000\u0000ó\u000f\u001eúÃ\u0000\u0000\u0000ó\u000f\u001eúHì\bHÄ\bÃ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0001\u001b\u0003;X\u0000\u0000\u0000\n\u0000\u0000\u0000\u001cðÿÿ\u0000\u0000\u0000¼ðÿÿ´\u0000\u0000\u0000ÌðÿÿÌ\u0000\u0000\u0000\\ñÿÿ\f\u0001\u0000\u0000\\òÿÿH\u0001\u0000\u0000òÿÿt\u0000\u0000\u0000óÿÿø\u0000\u0000\u0000¬óÿÿä\u0000\u0000\u0000¼óÿÿd\u0001\u0000\u0000,ôÿÿ¬\u0001\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001zR\u0000\u0001x\u0010\u0001\u001b\f\u0007\b\u0001\u0000\u0000\u0014\u0000\u0000\u0000\u001c\u0000\u0000\u0000 òÿÿ/\u0000\u0000\u0000\u0000D\u0007\u0010\u0000\u0000\u0000\u0000$\u0000\u0000\u00004\u0000\u0000\u0000ïÿÿ \u0000\u0000\u0000\u0000\u000e\u0010F\u000e\u0018J\u000f\u000bw\b\u0000?\u001a:*3$\"\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\\\u0000\u0000\u0000\u0000ðÿÿ\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000t\u0000\u0000\u0000øïÿÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000Àòÿÿ\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000 \u0000\u0000\u0000òÿÿ\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u00008\u0000\u0000\u0000´\u0000\u0000\u0000Hðÿÿÿ\u0000\u0000\u0000\u0000F\u000e\u0010\u0002B\u000e\u0018\u0003A\u000e \u0004H\u000e(\u0005D\u000e@\u0002×\n\u000e(C\u000e A\u000e\u0018B\u000e\u0010B\u000e\bA\u000b\u0000\u0018\u0000\u0000\u0000ð\u0000\u0000\u0000\fñÿÿ2\u0000\u0000\u0000\u0000H\u000e\u0010W\u000e\b\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\f\u0001\u0000\u0000Pòÿÿe\u0000\u0000\u0000\u0000F\u000e\u0010\u0002I\u000e\u0018\u0003E\u000e \u0004E\u000e(\u0005D\u000e0\u0006H\u000e8\u0007G\u000e@n\u000e8A\u000e0A\u000e(B\u000e B\u000e\u0018B\u000e\u0010B\u000e\b\u0000\u0010\u0000\u0000\u0000T\u0001\u0000\u0000xòÿÿ\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000`\u0012\u0000\u0000\u0000\u0000\u0000\u0000@\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u00008\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0000X=\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0000\u0000\u0000h=\u0000\u0000\u0000\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000õþÿo\u0000\u0000\u0000\u0000 \u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ø\u0003\u0000\u0000\u0000\u0000\u0000\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000p?\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000à\b\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0007\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0001\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ûÿÿo\u0000\u0000\u0000\u0000\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000þÿÿo\u0000\u0000\u0000\u0000`\u0007\u0000\u0000\u0000\u0000\u0000\u0000ÿÿÿo\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000ðÿÿo\u0000\u0000\u0000\u00006\u0007\u0000\u0000\u0000\u0000\u0000\u0000ùÿÿo\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000p=\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00000\u0010\u0000\u0000\u0000\u0000\u0000\u0000@\u0010\u0000\u0000\u0000\u0000\u0000\u0000P\u0010\u0000\u0000\u0000\u0000\u0000\u0000`\u0010\u0000\u0000\u0000\u0000\u0000\u0000p\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000 \u0010\u0000\u0000\u0000\u0000\u0000\u0000°\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b@\u0000\u0000\u0000\u0000\u0000\u0000GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000\u0018\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0002\u00008\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0003\u0000X\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0004\u0000|\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0005\u0000 \u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0006\u0000Ø\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0007\u0000 \u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\b\u00006\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\t\u0000`\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\n\u0000À\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u000b\u0000à\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\f\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\r\u0000 \u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u000e\u0000À\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u000f\u0000Ð\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0010\u0000`\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0011\u00008\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0012\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0013\u0000\u0004 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0014\u0000` \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0015\u0000X=\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0016\u0000h=\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0017\u0000p=\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0018\u0000p?\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0019\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001a\u0000@@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000ñÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0002\u0000\u0010\u0000`\u0012\u0000\u0000\u0000\u0000\u0000\u00002\u0000\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u001a\u0000yB\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u00007\u0000\u0000\u0000\u0004\u0000ñÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000B\u0000\u0000\u0000\u0002\u0000\u0010\u0000Ð\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0002\u0000\u0010\u0000\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000W\u0000\u0000\u0000\u0002\u0000\u0010\u0000@\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000m\u0000\u0000\u0000\u0001\u0000\u001a\u0000xB\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000|\u0000\u0000\u0000\u0001\u0000\u0016\u0000h=\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000£\u0000\u0000\u0000\u0002\u0000\u0010\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¯\u0000\u0000\u0000\u0001\u0000\u0015\u0000X=\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00007\u0000\u0000\u0000\u0004\u0000ñÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Î\u0000\u0000\u0000\u0001\u0000\u0014\u0000Ä!\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000ñÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ü\u0000\u0000\u0000\u0000\u0000\u0013\u0000\u0004 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ô\u0002\u0000\u0000\u0002\u0000\f\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï\u0000\u0000\u0000\u0001\u0000\u0017\u0000p=\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ø\u0000\u0000\u0000\u0000\u0000\u0015\u0000h=\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u0015\u0000X=\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001c\u0001\u0000\u0000\u0001\u0000\u0018\u0000p?\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000K\u0001\u0000\u0000\u0010\u0000\u0019\u0000\u0010@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000 \u0000\u0019\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000R\u0001\u0000\u0000\u0011\u0000\u0012\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000a\u0001\u0000\u0000\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000}\u0001\u0000\u0000\u0012\u0000\u0010\u0000`\u0011\u0000\u0000\u0000\u0000\u0000\u0000ÿ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0011\u0002\u0019\u0000\b@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000§\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0003\u0000\u0000\u0012\u0002\u0011\u00008\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Â\u0001\u0000\u0000\"\u0000\u0010\u0000°\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ý\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0012\u0000\u0010\u0000 \u0012\u0000\u0000\u0000\u0000\u0000\u0000/\u0000\u0000\u0000\u0000\u0000\u0000\u0000÷\u0001\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0012\u0000\u0010\u0000\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0013\u0002\u0000\u0000\u0011\u0002\u0019\u0000\u0010@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001f\u0002\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000P\u0002\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000u\u0002\u0000\u0000\u0011\u0000\u001a\u0000@@\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0010\u0000\u0019\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0010\u0000\u001a\u0000B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0010\u0000\u001a\u0000\u0010@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¥\u0002\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ê\u0002\u0000\u0000\u0012\u0000\u0010\u0000À\u0013\u0000\u0000\u0000\u0000\u0000\u0000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ú\u0002\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ñ\u0002\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\r\u0003\u0000\u0000\u0012\u0000\u0010\u00000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001d\u0003\u0000\u0000\u0011\u0000\u001a\u0000`A\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0001\u0000\u0000\u0000\u0000\u0000\u00003\u0003\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000R\u0003\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000a\u0003\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000{\u0003\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000p12509.cc\u0000_GLOBAL__sub_I__Z9factoriali\u0000_ZStL8__ioinit\u0000crtstuff.c\u0000deregister_tm_clones\u0000__do_global_dtors_aux\u0000completed.8060\u0000__do_global_dtors_aux_fini_array_entry\u0000frame_dummy\u0000__frame_dummy_init_array_entry\u0000__FRAME_END__\u0000__GNU_EH_FRAME_HDR\u0000_DYNAMIC\u0000__init_array_end\u0000__init_array_start\u0000_GLOBAL_OFFSET_TABLE_\u0000_ZNSo3putEc@@GLIBCXX_3.4\u0000_edata\u0000_IO_stdin_used\u0000__cxa_finalize@@GLIBC_2.2.5\u0000main\u0000__dso_handle\u0000_ZNSirsERi@@GLIBCXX_3.4\u0000_ZNSo5flushEv@@GLIBCXX_3.4\u0000_ZNKSt5ctypeIcE8do_widenEc\u0000__cxa_atexit@@GLIBC_2.2.5\u0000__stack_chk_fail@@GLIBC_2.4\u0000__TMC_END__\u0000_ZNKSt5ctypeIcE13_M_widen_initEv@@GLIBCXX_3.4.11\u0000_ZSt16__throw_bad_castv@@GLIBCXX_3.4\u0000_ZSt4cout@@GLIBCXX_3.4\u0000__data_start\u0000__bss_start\u0000_ZNSt8ios_base4InitC1Ev@@GLIBCXX_3.4\u0000__libc_csu_init\u0000_ZNSolsEi@@GLIBCXX_3.4\u0000_ITM_deregisterTMCloneTable\u0000__libc_csu_fini\u0000_ZSt3cin@@GLIBCXX_3.4\u0000__libc_start_main@@GLIBC_2.2.5\u0000__gmon_start__\u0000_ITM_registerTMCloneTable\u0000_ZNSt8ios_base4InitD1Ev@@GLIBCXX_3.4\u0000\u0000.symtab\u0000.strtab\u0000.shstrtab\u0000.interp\u0000.note.gnu.property\u0000.note.gnu.build-id\u0000.note.ABI-tag\u0000.gnu.hash\u0000.dynsym\u0000.dynstr\u0000.gnu.version\u0000.gnu.version_r\u0000.rela.dyn\u0000.rela.plt\u0000.init\u0000.plt.got\u0000.plt.sec\u0000.text\u0000.fini\u0000.rodata\u0000.eh_frame_hdr\u0000.eh_frame\u0000.init_array\u0000.fini_array\u0000.dynamic\u0000.data\u0000.bss\u0000.comment\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000#\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u00008\u0003\u0000\u0000\u0000\u0000\u0000\u00008\u0003\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00006\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000X\u0003\u0000\u0000\u0000\u0000\u0000\u0000X\u0003\u0000\u0000\u0000\u0000\u0000\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000I\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000|\u0003\u0000\u0000\u0000\u0000\u0000\u0000|\u0003\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000W\u0000\u0000\u0000öÿÿo\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\u0000\u0000\u0000\u0000\u0000\u00004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000a\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ø\u0003\u0000\u0000\u0000\u0000\u0000\u0000Ø\u0003\u0000\u0000\u0000\u0000\u0000\u0000È\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0001\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000i\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0005\u0000\u0000\u0000\u0000\u0000\u0000 \u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000\u0000\u0000ÿÿÿo\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u00006\u0007\u0000\u0000\u0000\u0000\u0000\u00006\u0007\u0000\u0000\u0000\u0000\u0000\u0000&\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000~\u0000\u0000\u0000þÿÿo\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000`\u0007\u0000\u0000\u0000\u0000\u0000\u0000`\u0007\u0000\u0000\u0000\u0000\u0000\u0000`\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0007\u0000\u0000\u0000\u0000\u0000\u0000À\u0007\u0000\u0000\u0000\u0000\u0000\u0000 \u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000B\u0000\u0000\u0000\u0000\u0000\u0000\u0000à\b\u0000\u0000\u0000\u0000\u0000\u0000à\b\u0000\u0000\u0000\u0000\u0000\u0000Ø\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0018\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000¡\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0010\u0000\u0000\u0000\u0000\u0000\u0000 \u0010\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000§\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000À\u0010\u0000\u0000\u0000\u0000\u0000\u0000À\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000°\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000Ð\u0010\u0000\u0000\u0000\u0000\u0000\u0000Ð\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000¹\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000`\u0011\u0000\u0000\u0000\u0000\u0000\u0000`\u0011\u0000\u0000\u0000\u0000\u0000\u0000Õ\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000¿\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u00008\u0014\u0000\u0000\u0000\u0000\u0000\u00008\u0014\u0000\u0000\u0000\u0000\u0000\u0000\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Å\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000Í\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004 \u0000\u0000\u0000\u0000\u0000\u0000\u0004 \u0000\u0000\u0000\u0000\u0000\u0000\\\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Û\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000` \u0000\u0000\u0000\u0000\u0000\u0000` \u0000\u0000\u0000\u0000\u0000\u0000h\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000å\u0000\u0000\u0000\u000e\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000X=\u0000\u0000\u0000\u0000\u0000\u0000X-\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ñ\u0000\u0000\u0000\u000f\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000h=\u0000\u0000\u0000\u0000\u0000\u0000h-\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ý\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000p=\u0000\u0000\u0000\u0000\u0000\u0000p-\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000«\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000p?\u0000\u0000\u0000\u0000\u0000\u0000p/\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0001\u0000\u0000\b\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000@@\u0000\u0000\u0000\u0000\u0000\u0000\u00100\u0000\u0000\u0000\u0000\u0000\u0000@\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00100\u0000\u0000\u0000\u0000\u0000\u0000*\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@0\u0000\u0000\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u001d\u0000\u0000\u00000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000À7\u0000\u0000\u0000\u0000\u0000\u0000 \u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0011\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000`;\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n   int n;\n   while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) {\n\t\treturn 1;\n\t} else {\n\t\treturn n * factorial(n - 1);\t\n\t}\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n * factorial (n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n){\r\n    if (n > 1) return factorial(n-1)*n;\r\n    else if (n == 1) return 1;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while(cin >> x) cout << factorial(x) << endl; \r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n){\r\n    if (n > 1) return factorial(n-1)*n;\r\n    else if (n == 1) return 1;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while(cin >> x) cout << factorial(x) << endl; \r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n){\r\n    if (n > 1) return factorial(n-1)*n;\r\n    else return 1;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while(cin >> x) cout << factorial(x) << endl; \r\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    if (n <= 1) return 1;\n    \n    else return n*factorial(n-1);\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1) return 1;\n  else return (n*factorial(n-1));\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n       \n       \n       \nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==1) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0)return 1;\n    else return n*factoria(n-1);\n}\n    \n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0)return 1;\n    else return n*factorial(n-1);\n}\n    \n",
  "// tma_P12509\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n}",
  "// tma_P12509\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n// Pre: n>= 0\r\n// Post: n!\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n}",
  "//Factorial recursiu\r\n//Escriviu una funciÃ³ que retorni n!.\r\n//Resoleu aquest problema recursivament.\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n < 2) return 1;\r\n\tif (n >= 2) return n * factorial(n - 1);\r\n\telse return n;\r\n}\r\n\r\nint main() {\r\n\tint numero;\r\n\tcin >> numero;\r\n\tcout << factorial(numero) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main () {\n    int x;\n    cin >> x;\n    cout << factorial (x) << endl; \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nvoid girar_llista(int& cont){\n    string x;\n    if(cin>>x){\n        ++cont;\n        girar_llista(cont);\n        if(cont<=0)cout<<x<<endl;\n        cont = cont-2;\n    }\n}\n\nint factorial(int n){\n    if(n==0)return 1;\n    else return(factorial(n-1));\n}\n\n\n\nint main(){\n    \n}\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nvoid girar_llista(int& cont){\n    string x;\n    if(cin>>x){\n        ++cont;\n        girar_llista(cont);\n        if(cont<=0)cout<<x<<endl;\n        cont = cont-2;\n    }\n}\n\nint factorial(int n){\n    if(n==0)return 1;\n    else return(n*factorial(n-1));\n}\n\n\n\nint main(){\n    \n}\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n\nint main() {\n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int resultat= 1;\n    for (int i = n; i > 0; --i){\n        resultat = resultat*i;\n    }\n    return resultat;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    n *= factorial(n-1);\n    return n;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x);\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n//PRE: entrada d'un sol enter n\n//POST: retorna el resultat factorial del nombre enter donat.\n{\n    int resultat;\n    //Cas base: el nombre es igual a 0=> el factorial de 0 es 1\n    if(n==0) resultat=1;\n    //Cas recursiu: el nombre es mes gran a 0 i el seu factorial sera la multiplicacio d'aquest per el\n        //factorial del un nombre menys n-1\n    else resultat= n*factorial(n-1);\n    return resultat;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1){\n        return 1;\n    } else {\n        return (n * factorial(n-1));\n    }\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int cont = 1;\n    for (int i = 1; i <= n; ++i) {\n        cont *= i;\n    }\n    return cont;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n<=1) return n;\r\n\telse return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial (n) << endl;\r\n\t}\r\n}\r\n",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n<=1) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial (n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main()\n{\n    int n,result;\n    cin >> n;\n    result = factorial(n);\n    cout << result << endl;\n    \n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial ( int n) {\n    if ( n == 0) return 1;\n    else return factorial (n-1) * n;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact = 1;\n    if (n > 1) return fact = n * factorial(n-1);\n    else return 1;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tint f = 1;\r\n\tfor ( int i = 2; i <= n; ++i){\r\n\t\tf = f*i;\r\n\t}\r\n\treturn f;\r\n}\r\n\r\nint main (){\r\n\tint n;\r\n\twhile (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n\r\n    return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n     int x;\r\n     while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}",
  "//Factorial recursiu\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    if (n == 2) return 2;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    return factorial(n - 1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n < 2) return 1;\r\n    else {\r\n        return n*factorial(n - 1);\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int f = 1;\n    int f = 0;\n\n    while (i < n) {\n        i = i + 1;\n        f = f*i;\n    }\n    return f;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int f = 1;\n    int i = 0;\n\n    while (i < n) {\n        i = i + 1;\n        f = f*i;\n    }\n    return f;\n}\n\n\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint main() {\n\n\n    int factorial( int n) {\n        if (n == 0) return 1;\n        else return n*factorial (n â 1) ; }\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n > 0)\n        return n*factorial(n - 1);\n\n    return 1;\n}\n\n\nint main() {\n    int num;\n\n    while (cin >> num)\n        cout << factorial(num) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int max = 1;\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return factorial (n-1)*n;\n\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n\n    return n*factorial(n - 1);\n}\n\n\n// int main() {\n//     int x;\n//     while (cin >> x) {\n//         cout << factorial(x) << endl;\n//     }\n// }\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n    if (n==0) return 1;\n    else return n*fact(n-1);\n}\nint main (){\n    int n;\n    cin>>n;\n    cout<<fact(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n){\n    if (n==0) return 1;\n    else return n*fact(n-1);\n}\nint main (){\n    int n;\n    cin>>n;\n    cout<<fact(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main (){\n    int n;\n    cin>>n;\n    cout<<fact(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main (){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main() {\n}\n",
  "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint factorial(int n)\n{\n\tif (n == 0) return 1;\n\treturn n * factorial(n-1);\n}\n\nint main ()\n{\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n\n",
  "#include <iostream> \nusing namespace std; \n//doble factorial \n\nint factorial(int n) {\n    if (n == 0) return 1; \n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n; \n    while(cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//precond: 0<= n <= 12;\n\nint factorial(int n)\n{\n  if (n <= 1) return 1;\n  else return n * factorial (n-1);\n}\n\nint main()\n{\n  int n;\n  cin >> n;\n  cout << factorial(n)<< endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n <= 1)\r\n        return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int x;\r\n    cin >> x;\r\n    int b = factorial(x);\r\n    cout << b << endl;\r\n}\r\n",
  "\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n    int res;\n    if (n == 0) res = 1;\n    else res = n * factorial(n-1);\n    return res;\n}\n\nint main()\n{\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n<2) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile (cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*(factorial(n-1));\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\n//P12509_2\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tunsigned int res;\n\tif (n==0) res = 1;\n\telse  {\n\t\tres = n*factorial (n-1);\n\t}\n\treturn res;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial (int n);\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}\r\n\r\nint factorial (int n) {\r\n    if (n == 0 or n == 1) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n",
  "//factorial\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    \n    int n; \n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\tint res;\r\n\tif(n==0) return 1;\r\n\telse res= n*factorial(n-1);\r\n\treturn res;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    \r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n\t}   \r\n}\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\n\r\nint factorial(int n)\t{\r\n\tint suma = 0;\r\n\t\r\n\tif(n == 1)\t{\r\n\t\tsuma = 1;\r\n\t}else{\r\n\t\t\r\n\t\tsuma = n + factorial(n-1);\r\n\t}\r\n\treturn suma;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\n\r\nint factorial(int n)\t{\r\n\tint suma = 0;\r\n\t\r\n\t\r\n\tif(n == 1)\t{\r\n\t\tsuma = 1;\r\n\t}else{\r\n\t\t\r\n\t\tsuma = n + factorial(n-1);\r\n\t}\t\r\n\tif(n > 0 and n < 13)\t{\r\n\t\r\nreturn suma;\r\n}\r\n}\r\nint factorial(int n);\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\n\r\nint factorial(int n)\t{\r\n\tint suma = 0;\r\n\t\r\n\t\r\n\tif(n == 1)\t{\r\n\t\tsuma = 1;\r\n\t}else{\r\n\t\t\r\n\t\tsuma = n * factorial(n-1);\r\n\t}\t\r\n\t\r\n\t\r\nreturn suma;\r\n}\r\nint factorial(int n);\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\n\r\nint factorial(int n)\t{\r\n\tint suma = 0;\r\n\t\r\n\t\r\n\tif(n == 0)\t{\r\n\t\tsuma = 1;\r\n\t}else{\r\n\t\t\r\n\t\tsuma = n * factorial(n-1);\r\n\t}\t\r\n\t\r\n\t\r\nreturn suma;\r\n}\r\nint factorial(int n);\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n",
  "#include <iostream>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n);\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\nint factorial (int n) {\r\n    if(n == 0 or n == 1) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n// Pre: dado un numero n (0â¤ n â¤ 12)\r\n// Post: devuelve n!\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse {\r\n\t\treturn n*factorial(n - 1);\r\n\t}\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n - 1);\r\n}\r\n\r\nint main (){\r\n\tint z;\r\n\tcin >> z;\r\n\tcout << factorial(z);\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n==0) return 1;\r\n    else {\r\n        n*=factorial(n-1);\r\n    }\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) cout << factorial(x) << endl;\r\n\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n==0) return 1;\r\n    else {\r\n        return n*=factorial(n-1);\r\n    }\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) cout << factorial(x) << endl;\r\n\r\n}\r\n\r\n",
  "// factorial recursiu\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n\r\n\r\n\r\nint factorial(int n){\r\n\t\r\n\tif (n == 0) return 1;\r\n\telse return factorial(n-1)*n;\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1) return 1;\n  else return n * factorial(n-1);\n}\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl; \n}\n",
  "from easyinput import*\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main():\n    n = read(int)\n    print(factorial(n))\n\nmain()\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\nint fact;\nif (n == 0) {\n    fact = 1;\n} else {\n    fact = n*factorial(n-1);\n}\nreturn fact;\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "function factorial(n) {\n\treturn (n == 1) ? 1 : n * factorial(n - 1);\n}",
  "//Aquest programa calcula el factorial de n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1 or n == 0)\n      return 1;\n    else\n      return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tint resultat;\n\tif (n==0) resultat=1;\n\telse resultat = n*factorial(n-1);\n\treturn resultat;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint res;\n\tif (n==0) res=1;\n\telse{\n\t\tres=factorial(n-1);\n\t\tres*=n;\n\t}\n\t\nreturn res;\n}\n\nint main(){\n\nint nums;\ncin>>nums;\ncout<<factorial(nums)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint res = 0;\n\tif (n == 0 or n == 1) {\n\t\tres = 1;\n\t}\n\telse {\n\t\tres = n*factorial(n-1);\n\t}\n\treturn res;\n}\n\nint main() {\n\tint a; \n\tcin >> a;\n\tfactorial(a);\n\tcout << factorial(a) << endl;\n\treturn 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int x){\n\tint res;\n\tif (x==1) res=1;\n\telse (res=x*factorial(x-1));\n\treturn res;\n\t}\n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int x){\n\tint res;\n\tif (x==1) res=1;\n\telse (res=x*factorial(x-1));\n\treturn res;\n\t}\n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int x){\n\tint res;\n\tif (x==1) res=1;\n\telse (res=x*factorial(x-1));\n\treturn res;\n\t}\n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n){\n\n\tif (n == 0){\n\t\tn = 1;\n\t}\n\telse {\n\t\tn = n * factorial(n-1);\n\t}\n\nreturn n;\n}\n\nint main(){\n\nint x;\ncin>>x;\ncout<<factorial(x)<<endl;\n\n}\n",
  "local function fact (n)\n    if n == 0 then return 1\n    else return n * fact(n-1) end\nend\n",
  "#include <iostream>\nusing namespace std;\n\n// Pre: 0 <= n <= 12\n// Post: retorna n!\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return factorial(n - 1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1){\n    return 1;\n  } else {\n    return (n * factorial(n-1));\n  }\n}\n\nint main()\n{\n    int n,result;\n    cin >> n;\n    result = factorial(n);\n    cout << result << endl;\n    \n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial(n -1);\r\n}\r\n\r\n\r\nint main(){\r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\n// Pre: donat un natural n [0,12]\n// Post: retorna n!\nint factorial(int n) {\n    if (n < 2) return 1;\n    return factorial(n - 1)*n;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 2) return n;\r\n    else return (factorial(n-1)*n);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return (factorial(n-1)*n);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if (n == 1 or n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint fact = 1;\r\n\tif (n <= 1) fact = 1;\r\n\telse fact = n*factorial(n - 1);\r\n\treturn fact;\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n  if (n <= 1) return 1;\n  else return (n * factorial(n - 1));\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint fact = 1;\n\tif (n != 0) {\n\t\tfact = n*factorial(n-1);\n\t}\n\treturn fact;\n}\n\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) {return 1;}\n    else {return n*factorial(n-1);}\n}\n\n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n) {\n    if (n == 0) return 1; \n    return n*factorial(n-1);\n}\n\nint main() {\n    int n; \n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) {\r\n\t\treturn 1;\r\n\t}\r\n\telse return n*factorial(n - 1);\r\n}\r\n",
  "// Recurisve factorial\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 1 or n == 0) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return factorial(n - 1) * n;\n    \n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n    \n}\n",
  "\n\n\nint factorial(int n){\n    \n    if(n == 0) return 1;\n    \n    return n*factorial(n-1);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\n  if (n == 0) return 1;\n  return n*factorial(n-1);\n  }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n  if (n == 0) return 1;\n  return n*factorial(n-1);\n  }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\t\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial (n-1);\t\r\n}\r\n\r\nint main() {\r\n\r\n\tint n;\r\n\t\r\n\twhile (cin >> n) cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial(n - 1);\r\n\t\r\n}\r\n\r\nint main () {\r\n\tint x; \r\n\tcin >> x;\r\n\tcout << factorial(x);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    int f = 1;\n    \n    if ( n == 0 ) return f;\n        \n    else {\n        \n     for ( int i = 1; i < n + 1; ++i)f = f * i;\n     \n     return f;\n    }\n    \n}\n\nint main () {\n\n        int n, m;\n        cin >> n;\n        \n        m = factorial(n);\n        cout << m << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n\r\n    return n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;  \r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}",
  "#include <iostream>\nusinng namespace std;\n\nint factorial(int x) {\n    if (x == 1) return 1;\n    else return x*factorial(x - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n    if (x == 1) return 1;\n    else return x*factorial(x - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x) {\n    if (x <= 1) return 1;\n    else return x*factorial(x - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n){\n     if (n == 0) return 1;\n     else return n*factorial(n-1);\n }",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\tif(n == 0) {\n\treturn 1;\n\t}\n\telse {\n\treturn n*factorial(n-1);\n\t}\n\n\n}\n\n\n\n\nint main() {\nint n;\ncin >> n;\n\nint x = factorial(n);\ncout << x;\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n\n    if(n == 0) return 1;\n    else return n* fact(n-1);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint fact(int n) {\n\n    if(n <= 1) return 1;\n    else return n* fact(n-1);\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n==0) return 1;\r\n\treturn n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n) {\r\n    int fact = 1;\r\n    if (n == 0) return 1;\r\n    if (n > 0) {\r\n        fact = n*factorial(n-1);\r\n    }\r\n    return fact;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n \r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n * factorial (n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\tint f = 1;\r\n\twhile (n >= 1) {\r\n\t\tf *= n;\r\n\t\t--n;\r\n\t}\r\n\treturn f;\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1){\n        return 1;\n    } else {\n        return (n * factorial(n-1));\n    }\n}\n\nint main() {\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//PRe: n >= 0\r\n//Post: retorna el factorial de n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\r\n}\r\n",
  "//Factorial recursiu\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\n#include <math.h>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\nint h=1;\r\nint i=0;\r\nwhile(n>1 and i<n){\r\nh=h*(n-i);\r\ni++;\r\n}\r\nreturn h;\r\n}\r\n\r\nint main (){\r\nint n;\r\ncin >> n;\r\n\r\ncout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n==0) return 1;\r\n    else return n*factorial (n-1);\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n <= 1){\r\n    return 1;\r\n  } else {\r\n    return (n * factorial(n-1));\r\n  }\r\n}\r\n\r\nint main() {\r\n}\r\n",
  "\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n <= 1){\r\n    return 1;\r\n  } else {\r\n    return (n*factorial(n-1));\r\n  }\r\n}\r\n\r\nint main() {\r\n}\r\n",
  "local function fact (n)\n    if n == 0 then return 1\n    else return n * fact(n-1) end\nend\n\nwhile (num = io.read(\"n\")) do\n    print(fact(num))\nend\n",
  "local function fact (n)\n    if n == 0 then return 1\n    else return n * fact(n-1) end\nend\n\nwhile (num = io.read(\"n\")) do\n    print(fact(num))\nend\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int res;\n    if (n == 0) res = 1;\n    else res = factorial(n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int res;\n    if (n == 0) res = 1;\n    else res = factorial(n-1)*n;\n    return res;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact;\n    if (n == 0) fact = 1;\n    else {\n        fact = n*factorial(n-1);\n    }\n    return fact;\n }\n\nint main(){\n    int n;\n    cin >> n;\n    int x = factorial(n);\n    cout << x << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0) {\r\n        return 1;\r\n    }\r\n    if (n == 1) {\r\n        return 1;\r\n    }\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n}\r\n",
  "#include <iostream>\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int b;\n    std::cin >> b;\n    std::cout << factorial(b) << \"\\n\";\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n == 0)\n    return 1;\n  else\n    return n * factorial(n-1);\t\t\n}\n\n\nint main() {\n  int n;\n  \n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n * factorial(n-1);\n}\nint main() {\n    int n;\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint main() {\n char c;\n int x = 0, y = 0;\n \n while (cin >> c) {\n        if (c == 'n') y--;\n        else if (c == 's') y++;\n        else if (c == 'o') x--;\n        else x++;\n    }\n    \n    cout << '(' << x << \", \" << y << ')' << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint main() {\n char c;\n int x = 0, y = 0;\n \n while (cin >> c) {\n        if (c == 'n') y--;\n        else if (c == 's') y++;\n        else if (c == 'o') x--;\n        else x++;\n    }\n    \n    cout << '(' << x << \", \" << y << ')' << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n        if (n == 0) \n            return 1;\n        else \n            return n * factorial(n-1);\n}\n    \nint main() {\n    int n;\n \n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }   \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) \n    return 1;\n  else\n    return n*factorial(n-1);\n}\n\n\nint main {\n  int n;\n  \n  while (cin >> n) {\n    cout << factorial(n) << endl;\n  }\n}\n",
  "#include  <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0)\n        return 1;\n    else\n        return n * factorial(n-1);\n\n}\n\nint main (){\n    int n;\n\n    while (cin >> n) {\n    \t  cout << factorial(n) <<endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n==0) return 1;\n  else return n*factorial(n-1);\n}\n\n\nint main(){\n  int n;\n  cin >> n;\n  cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if (n==0)\n    return 1;\n  else\n    return n*factorial(n-1);\n}\n\nint main(){\n  int n;\n\n  while (cin >> n){\n\n    cout << factorial(n) << endl;\n    \n  }\n}\n",
  "#include <iostream>\n#include <string>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    \n    cin >> n;\n    \n    cout << factorial(n) << endl;\n}\n",
  "#include <bits/stdc++.h>\nusing namespace std;\n\nint factorial (int n){\n    if(n==0)\n        return(1);\n    else\n        return(n*factorial(n-1));\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0){\n        return 1;\n    }\n    else{\n        return n * factorial(n - 1);\n    }\n}\n\nint main(){\n    int a;\n    while(cin >> a){\n    cout << factorial(a) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) {\n        return 1;\n    } else {\n        return n*factorial(n-1);\n    }\n}\n\n\nint main () {\n    int n; \n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n == 0) return 1;\n  else return n * factorial(n-1);\n}\n\nint main(){\n  int n;\n\n  while(cin >> n){\n  cout << factorial(n) << endl;\n  }\n}\n",
  "//#include <algorithm>\n#include <iostream>\n//#include <string>\n//#include <vector>\n//#include <cmath>\n\nusing namespace std;\n\n\nint factorial(int n) {\n\n    if (n < 2) { return 1;                }\n    else       { return n*factorial(n-1); }\n\n}\n\n\nint main() {\n\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n int factorial(int n) {\r\n    int f = 1;\r\n    for (int i = n; i > 1; i--) f = f*i;\r\n    return f;\r\n }\r\n\r\nint main() {\r\n    int a;\r\n    cin >> a;\r\n    cout << factorial(a);\r\n}",
  "from easyinput import read\ndef factorial(n):\n    if n==0:\n        return 1\n    else:\n        resul=n*factorial(n-1)\n        return resul\na=read(int)\nprint (factorial(a))\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n  if (n == 0) return 1;\n  return n * factorial(n-1);\n}\n\nint main()\n{\n  int n;\n  while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif ( n == 0 ) return 1;\n\treturn n * factorial(n-1);\n\n}\n\nint main(){\n\tint n;\n\twhile ( cin >> n ){\n\t\tcout << factorial(n) << endl;\n\t}\n\n\n\n\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==1) return 1;\n\treturn n*factorial(n-1);\n\t}\n\nint main(){\n\tint n;\n\twhile(cin>>n){\n\t\tcout << factorial(n);\n\t\t}\n\t}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n\tif (n == 0) return 1;\n\treturn n*factorial(n-1);\n}\n\nint main()\n{\n\tint n;\n\twhile (cin >> n){\n\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n)\n{\n\n if(n==0) return 1;\n return n*factorial(n-1);\n\n}\n\nint main()\n{\n\tint n;\n\twhile (cin >> n){\n\t\tcout<<factorial(n)<<endl;\n\t\n\t}\n\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0) return 1;\n\treturn n*factorial(n-1);\n\t}\n\nint main(){\n\tint n;\n\twhile(cin>>n){\n\t\tcout << factorial(n) << endl;\n\t\t}\n\t}\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n\tif (n==1) return n;\n\telse {\n\t\tn = n*factorial(n-1);\n\t}\nreturn n;\n}\n\nint main(){\n\nint num;\ncin>>num;\n\ncout<<factorial(num)<<endl;\n\n\n}\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n\tif (n==1) return n;\n\telse {\n\t\tn = n*factorial(n-1);\n\t}\nreturn n;\n}\n\nint main(){\n\nint num;\n\n\twhile (cin>>num){\n\t\tcout<<factorial(num)<<endl;\n\t}\n\n\n\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n  if (n == 0) return 1;\n  return n * factorial(n-1);\n}\n\nint main()\n{\n  int n;\n  while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n == 0) {\n\t\treturn 1;\n\t}\n\treturn factorial(n-1)*n;\n}\n\nint main() {\n\tint n;\n\twhile(cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n\n",
  "#include <iomanip>\n#include <iostream>\nusing namespace std;\nint factorial(int n)\n{\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial(n - 1);\n}\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\nif (n == 0) return 1;\nif (n == 1) return n;\t\nelse {\n\tn = n * factorial(n-1);\n\t}\n\nreturn n;\n}\n\nint main(){\n\nint a;\ncin>>a;\ncout<<factorial(a)<<endl;\n\nreturn 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0)\n        return 1;\n\n    return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n == 0) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\r\n  int k;\r\n\r\n  cin >> k;\r\n\r\n  cout << factorial(k) << endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n == 0) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\r\n  int k;\r\n\r\n  cin >> k;\r\n\r\n  cout << factorial(k) << endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n == 0)\r\n    return 1;\r\n  else\r\n    return nïªfactorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n  if (n == 0)\r\n    return 1;\r\n  else\r\n    return n * factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream> \nusing namespace std;\n\nint factorial(int n) { \nif (n == 0) return 1;\nelse return n*factorial(n - 1);\n}\nint main(){\n    int n;\n    while(cin>>n){\n        cout << factorial(n) <<endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n<2) return 1;\nreturn n*factorial(n-1);\n}\n\nint main(){\n\n  int n;\n  cin >> n;\ncout << factorial(n) << endl;\n}\n",
  "#include<iostream>\n#include<cmath>\nusing namespace std;\nint factorial(int n){\n  if (n==0) return 1;\n  else {\n    n = n*factorial(n-1);\n  }\n  return n;\n}\nint main(){\n  int n;\n  cin>>n;\n  cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    int x = 1;\n    for (int i = 1; i <= n; i++) {\n        x = x * i;\n    }\n    return x;\n}\n\nint main()\n{\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace stg;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if (n==0){\r\n    return 1;\r\n    }\r\n  return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n  int x;\r\n  while (cin>>x){\r\n  cout<<factorial(x)<<endl;\r\n}\r\n}\r\n",
  "#include <iostream>\n\nusing namespace std;\n\n//FunciÃ³ que retorna n!\n\nint factorial (int n)\n{\n    if (n==0) return 1;\n    else return n*factorial (n-1);\n}\nint main ()\n{\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int fact;\n    if (n==0 or n==1) return 1;\n    return (n*factorial(n-1));\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\n    if(n == 0) return 1;\n    return n * factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}",
  "def factorial(a):\r\n    if a == 1: return a\r\n    else: return a*factorial(a-1)",
  "def factorial(a):\r\n    if a == 1: return 1\r\n    else: return a*factorial((a-1))\r\n\r\na = float(input())\r\nprint(factorial(a))",
  "def factorial(a):\r\n    if a == 0: return 1\r\n    else: return a*factorial((a-1))\r\n\r\na = float(input())\r\nprint(int(factorial(a)))",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial (int n) {\n  if (n==0 or n==1) return 1;\n  else return n*(n-1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial (int n) {\n  if (n==0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial (n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n\tint res;\n\tif (n==1 or n==0) {\n\t\tres = 1;\n\t} else {\n\t\tres = n * factorial(n-1);\n\t}\n\t\n\treturn res;\n}\n",
  "#include <cstdlib>\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n  if (n == 0) return 1;\r\n  else return n*factorial(n - 1);\r\n}\r\n\r\n\r\nint main() {\r\n   int rn;\r\n   cin >> rn;\r\n   cout << factorial(rn) << endl;\r\n}\r\n",
  "int factorial(int n) {\r\n    if (n == 0 or n == 1) return 1;\r\n    else return factorial(n - 1) * n;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "int factorial(int n) {\r\n    if (n == 0 or n == 1) return 1;\r\n    else return factorial(n - 1) * n;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n = 0) fact = 1;\n    else fact = n*factorial(n-1);\n\n    return fact;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) fact = 1;\n    else fact = n*factorial(n-1);\n\n    return fact;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact;\n    if (n == 0) fact = 1;\n    else fact = n*factorial(n-1);\n\n    return fact;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\nint factorial(int n) {\n    if (n==0)\n        return 1;\n    else\n        return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) {\n        return 1;\n    }\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n);\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else  {\n        return n*factorial(n-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n*factorial(n-1); \n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n=0;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n== 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n\nint main()\n{\n    \n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    int d = n;\n    if (n == 0 or n == 1) return 1;\n\n    else {\n    for (int i = 1; i < n; ++i) {\n        d = d*i;\n    }\n    return d;\n    }\n}\n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res = 1;\n    if (n < 2) return res;\n    while (n > 0) {\n        res *= n;\n        n -= 1;\n    }\n    return res;\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int res = 1;\n    while (n > 0) {\n        res *= n;\n        n -= 1;\n    }\n    return res;\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 0) return 1;\n    else return n * factorial(n-1);\n}\nint main() {\n    int x;\n    while(cin >> x){\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    else return n * factorial (n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial (n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n// Pre: 0 <= n <= 12\n// Post: retorna el factorial de n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int number;\r\n    while (cin >> number){\r\n        cout << factorial(number) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n\nint f = 1;\n\nfor (int i = 2; i <= n; ++i) f *= i;\nreturn f;\n}\n\nint main () {\n\n    int n;\n    while (cin >> n)\n        cout << factorial(n) << endl;\n\n\n\n}\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\n\nint facotrial (int n){\n  if (n == 0) return 1;\n  else return n*(facotrial(n-1));\n}\n\n\nint main () {\n   int n;\n   cin >> n;\n   cout << facotrial (n) << endl;\n  \n}\n",
  "#include <iostream>\n#include <math.h>\nusing namespace std;\n\n\nint factorial (int n){\n  if (n == 0) return 1;\n  else return n*(factorial(n-1));\n}\n\n\nint main () {\n   int n;\n   cin >> n;\n   cout << factorial (n) << endl;\n  \n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0 or n == 1) return 1;\n    else return n * factorial(n - 1);\n}\nint main(){\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//PRE: N HA D'ESTAR ENTRE ELS VALORS 0 I 12\n//POST: TROBAR EL FACTORIAL DE N\n\nint factorial(int n){\n\n    if (n == 0) return 1;\n    return n* factorial(n-1);\n\n    }\n\n\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    return factorial(n - 1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\nif (n == 0) return 1;\nelse return n* factorial(n-1);\n}\n\nint main() {\nint n;\ncin >> n;\ncout << factorial(n) << endl;\n}\n",
  "//RECURSIVE FACOTRIAL NUMBER: \n//Precondition: \n//Postcondition:; \n#include <iostream>\nusing namespace std; \n\nint factorial (int n) {\n    if (n == 0) return 1; \n    else return n*factorial (n-1); \n }\n\n int main () { \n\n    int n; \n    cin >> n; \n    cout << factorial(n) << endl; \n }",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return (n-1)*n;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return (n-1)*n;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else {\r\n        return factorial(n - 1)*n;\r\n    }\r\n}\r\n\r\nint main () {\r\n    int c;\r\n    while (cin >> c) {\r\n        cout << factorial(c) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n);\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0)return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    int f = 1;\n\n    for (int i = 1 ; i <= n ; ++i) f *=  i;\n\n    return f;\n\n}\n\nint main(){\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n    cout << factorial(x) << endl;\n    }\n}\n",
  "\n\n\nint factorial(int n){\n    if (n==1) return 1;\n    else return factorial(n-1)*n;\n}\n",
  "\n\n\nint factorial(int n){\n    if (n==1) return 1;\n    else return factorial(n-1)*n;\n    --n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1) return 1;\n    else return factorial(n-1)*n;\n}\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==1 or n==0) return 1;\n    else return factorial(n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint factorial(int n);\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\n\n\n",
  "\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int rn;\n    cin >> rn;\n    cout << factorial (rn) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial (n-1);\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return(1);\n    else return(n * factorial(n-1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n - 1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n) {\n    if (n <= 1) return 1;\n    if (n == 2) return 2;\n    return n*factorial(n-1);\n }\n\nint main () {\n\tint n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    return n*factorial(n - 1);\n}\nint main () {\n    cout << factorial(2) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact = n;\n    if (n == 1 or n == 0) return 1;\n    fact *= factorial(n-1);\n    return fact;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if(n > 1)\n    return n * factorial(n - 1);\n  else\n    return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    return n * factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    return n * factorial(n-1)\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);{\n\nif (n==0) return 1;\nelse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\nif (n==0) return 1;\nelse return n*factorial(n-1);\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\nint factorial(int n) {\nif(n<2) return 1;\nreturn factorial(n-1)*n;\n}\nint main(){\nint n;\nwhile(cin>>n) cout<<factorial(n);\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\nint factorial(int n){\n    if(n == 0) return 1;\n\n    return factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n\nint factorial(int n){\n    if(n == 0) return 1;\n\n    return n * factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n < 2) return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n != 0) return n * factorial(n - 1);\n    else return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n  if(n == 0) return 1;\n  return n*factorial(n-1);\n  }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n   return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n\n\n\n\n}\n\nint main(){\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int producte = 1;\n    for (int i = 1; i <= n; ++i) producte *= i;\n    if (n == 0) return 1;\n    else return producte;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n==0) return 1;\n    else return factorial(n-1) * n;\n}\n",
  "// Factorial recursiu P12509\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n",
  "from easyinput import read\r\n\r\nn = read(int)\r\nwhile n is not None:\r\n    def factorial(n):\r\n        if (n == 0): return 1;\r\n        else: return n*factorial(n - 1)\r\n    print(factorial(n))\r\n    n = read(int)\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n < 2) {\r\n        n = 1;\r\n        return n;\r\n    } else return factorial(n-1) * n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        n = factorial(n);\r\n        cout << n << endl;\r\n    }\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n > 0)\r\n        return n*factorial(n - 1);\r\n\r\n    return 1;\r\n}\r\n\r\nint main() {\r\n    int num;\r\n\r\n    while (cin >> num)\r\n        cout << factorial(num) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n\n}\n\nint main() {\n    int x;\n    while (cin >> x)\n    {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tif(n==1)return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tif(n==2)return 2;\r\n\telse if(n==1)return 1;\r\n\telse if(n==0)return 0;\r\n\telse return n*factorial(n-1);\r\n}\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n);\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tif(n==0)return 0;\r\n\telse if(n==1)return 1; \r\n\telse return n*factorial(n-1);\r\n}\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n);\r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n\tif(n==0)return 1;\r\n\telse if(n==1)return 1; \r\n\telse return n*factorial(n-1);\r\n}\r\nint main(){\r\n\tint n;\r\n\tcin>>n;\r\n\tcout<<factorial(n);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1; \r\n    else if (n > 1) {\r\n    n *= factorial(n - 1);\r\n    }\r\n    else {\r\n        return n; \r\n    }\r\n}\r\n\r\nint main() {\r\n    int n; \r\n    cin >> n; \r\n    cout << factorial(n) << endl; \r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n\tif(n >= 1) return n * factorial(n-1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n\tif(n > 1) return n * factorial(n-1);\r\n\telse return 1;\r\n}",
  "int factorial (int n) {\r\n    if (n == 0) {\r\n        n = 1;\r\n    }\r\n    else {\r\n        n= n*factorial (n - 1);\r\n    }\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n);\r\n\r\nint factorial(int n) {\r\n    if(n > 1) return n*factorial(n-1);\r\n\r\n    return 1;\r\n}   ",
  "int factorial (int n) {\r\n    if (n == 0) {\r\n        n = 1;\r\n    }\r\n    else {\r\n        n= n*factorial (n - 1);\r\n    }\r\n    return n;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n) {\n if (n < 2) return 1;\n else return n*factorial(n-1);\n }\n\n int main() {\n     int n;\n     cin >> n;\n     cout << factorial(n) << endl;\n }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n==0) n = 1;\r\n    else n = n* factorial(n-1);\r\n    return n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    cout << factorial(n) << endl;\r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\n\n\nint main () {\n    int f;\n    cin >> f;\n    cout << factorial(f);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) return (n * factorial(n-1));\n    else return 1;\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) return n*factorial(n - 1);\n    else return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int i = 1;\n    int f = 1;\n    while (i <= n){\n        f = f*i;\n        ++i;\n    }\n    return f;\n}\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    return n*factorial;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint w=1;\n\tfor (int i=1; i<=n; i++) w *= i;\n\t\n\treturn w;\n}\n\nint main () {\n\tint n;\n\twhile (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    while(n != 0) return n*factorial(n-1);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n != 0) return n*factorial(n-1);\n    else return 1;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return factorial (n - 1)*n;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1; \r\n    else if (n > 1) {\r\n    return n *= factorial(n - 1);\r\n    }\r\n    else {\r\n        return n; \r\n    }\r\n}\r\n\r\nint main() {\r\n    int n; \r\n    cin >> n; \r\n    cout << factorial(n) << endl; \r\n}\r\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint  factorial ( int  n ){\r\n    if (n==0) return 1;\r\n    else {\r\n        return n*factorial(n-1);\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n==1) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n);\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n  if(n > 1)\n    return n * factorial(n - 1);\n  else\n    return 1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n);\n\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n==1) return 1;\r\n    return (n*factorial(n-1));\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n<=1) return 1;\r\n    return (n*factorial(n-1));\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include<iostream>\r\nusing namespace std;\r\n//Input: n >= 0\r\n//Output: !n\r\n\r\nint factorial(int n){\r\n\tif (n == 0) return 1;\r\n\treturn n*factorial(n-1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    int f = 1;\r\n    for (int i = 1; i <= n; ++i) {\r\n        f = f * i;\r\n    }\r\n    return f;\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }   \r\n}\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: n >= 0\n//Post: retorn n!\nint factorial(int n)\n{\n    if (n == 0) return 1;\n    return n*factorial(n/10);\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: n >= 0\n//Post: retorn n!\nint factorial(int n)\n{\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n// Precondicio:\n//              0 <= n <= 12\n// Postcondicio:\n//              nombre factorail.\n\n\n\nint factorial(int n){\n    if(n > 0) return n*factorial(n - 1);\n    return 1;\n}\n\nint main(){\n    int num;\n    while(cin >> num)\n        cout << factorial(num) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n    int factorial(int n){\n        if (n==0) return 1;\n        else return factorial(n-1);\n    }\n\n    int main(){\n        int n;\n        cin >> n;\n\n        cout << factorial(n) << endl;\n    }\n",
  "#include <iostream>\nusing namespace std;\n\n    int factorial(int n){\n        if (n==0) return 1;\n        else return n * factorial(n-1);\n    }\n\n    int main(){\n        int n;\n        cin >> n;\n\n        cout << factorial(n) << endl;\n    }\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\tif (n == 1) {\r\n\t\treturn n;\r\n\t}\r\n\tn *= factorial (n - 1);\r\n\treturn n;\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 1 or n == 0) {\r\n\t\treturn 1;\r\n\t}\r\n\treturn n*factorial(n - 1);\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return n;\n    return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return n;\n    return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return factorial(n-1)*n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else {\n        int total = 1;\n        while (n > 1) {\n            total = total*n;\n            n -= 1;\n        }\n        return total;\n    }\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n        if (n == 0) return 1;\r\n        else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n ==0)  return 1;\n    else return n*factorial (n-1);\n}\n\nint main () {\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n < 2) return 1;\n    else {\n        n = n* factorial(n-1);\n        return n;\n    }\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return factorial(n - 1)*n;\n\n    }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0){\r\n         return 1;\r\n    }else{\r\n        return n*factorial(n-1);\r\n    }\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "8t9wy  j5th34 r;\r\nrkgliul;\r\n\r\nint main () {\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return factorial (n - 1)* n;\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n) {\n    \n    for (int n_temp = n; n_temp > 1; --n_temp) {\n        n = n*(n_temp - 1); \n    } \n    \n    if (n == 0) {\n        return 1; \n    } else return n; \n}\n\n\nint main () {\n    int n; \n    \n    cin >> n; \n    \n    cout << factorial(n) << endl; \n    \n}",
  "#include<iostream>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    cout << factorial(10) << endl;\n}\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    cout << factorial(10) << endl;\n}\n\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n * factorial(n-1);\n    else return 1;\n}\n\nint main() {\n    cout << factorial(10) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint main() {\n    int nombre, resultat;\n    cin >> nombre;\n    resultat = factorial(nombre);\n    }\n\nint factorial(int n) {\n    if (n > 1) return n * factorial(n - 1);\n    else return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n\n}\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n * factorial(n - 1);\n    else return 1;\n}\n\nint main() {\n    int nombre, resultat;\n    cin >> nombre;\n    resultat = factorial(nombre);\n    }\n\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0)return 1;\n    else return factorial(n-1)*n;\n\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n);\n}\n\n",
  "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n==0){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n}\n\nint main(){\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return 1;\n    else return n*factorial (n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "// Factorial recursiu \n\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}   \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n*factorial(n - 1);\n    else return  1;\n\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n);\n}\n",
  "/*\n Input: diverses paraules. Tenim \"principi\" i \"final\" com a molt\n 1 cop, si falta alguna de les dues o apareixen en orde invers,\n cal indicar-ho.\n Output: escriure el nombre de paraules entre \"principi\" i\n \"final\". Altrament, cal escriure \"sequencia incorrecta\".\n*/\n\n#include <iostream>\nusing namespace std;\n\nint main() {\n    string p;\n    int c = -1;\n    cin >> p;\n    while (p != \"principi\") cin >> p;\n    while (p != \"final\") {\n        cin >> p;\n        ++c;\n    }\n    if (c > 0) cout << c << endl;\n    else cout << \"sequencia incorrecta\" << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: natural n.\n//Post: retorna el seu factorial.\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial (n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n == 1) return n;\r\n    else return factorial(n - 1) * n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n == 0) return 1;\r\n    else return factorial(n - 1) * n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else if (n == 2) return 2;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int w = 1;\n\n    for (int x = n; x > 0; --x)\n    {\n        w = w * n;\n        --n;\n    }\n    return w;\n}\n\nint main() {\n    int a;\n    while (cin >> a)\n    {\n        cout << factorial(a) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial (n - 1);\n}\nint main() {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    cout << factorial(12) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    if (n == 2) return 2;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n <= 1) return 1;\n    return factorial (n-1)*n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n   if (n <= 1) return 1;\n   return factorial(n-1)*n;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int count = 0;\n    if (n <= 1) count = 1;\n    else {\n        count = n*factorial(n - 1);\n    }\n    return count;\n}\n\nint main() {\n    int n;\n    int count = 0;\n    while (cin >> n) {\n        cout << factorial (n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int count = 0;\n    if (n <= 1) count = 1;\n    else {\n        count = n*factorial(n - 1);\n    }\n    return count;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial (n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int count=n;\n    while(count>1){\n         --count;\n        n*=count;\n       \n\n    }\n    return n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int count=n;\n    if (n==0) n=1;\n    else{\n    while(count>1){\n         --count;\n        n*=count;\n       \n\n    }\n    }\n    return n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int x){\n\tint res;\n\tif(x==0) res=1;\n\telse res=x*factorial(x-1);\n\treturn res;\n}\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n\t}   \n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n\t\r\n\tif (n == 0) return 1;\r\n\telse return n*factorial (n-1);\t\r\n}\r\n\r\nint main() {\r\n\r\n\tint n;\r\n\twhile (cin >> n) cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    int contador;\n    contador = 1;\n    if (n == 0) return 1;\n    for (int i = 1; i <= n; i++){\n    contador = contador * i;\n    }\n    return contador;\n}\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 2) return 1;\n    else return factorial(n-1)*n;\n}\n\n\nint main (){\n    int n;\n    cin >> n;\n\n    cout<<  factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n <= 1) return 1;\n    return factorial (n - 1)*n;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    int resultat = 1;\n    for (int i = 1; i <= n; ++i) resultat = resultat*i;\n    return resultat;\n}\n",
  "// (c) FIBerHub, https://fiberhub.tk\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n\n    return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int resultado = 1;\n    resultado *= n;\n    --n;\n    if (n == 1) return resultado;\n    else factorial(n);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial (n - 1);\r\n}\r\nint main() {\r\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint fact = 1;\r\n\tif (n <= 1) fact = 1;\r\n\telse fact = n*factorial(n - 1);\r\n\treturn fact;\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) {\n        return 1;\n    }\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n    cout << factorial(n) << endl;\n    }\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    for (int i = n-1; i > 0; --i) {\n        n *= i;\n    }\n    return n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    for (int i = n-1; i > 0; --i) {\n        n *= i;\n    }\n    if (n == 0) {\n        n = 1;\n    }\n    return n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "//factorial recursiu\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) n = 1;\n    else{\n        n = n * factorial(n-1);\n    }\n    return n;\n}\n\nint main(){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n\n}\n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n) {\n    if (n > 0)\n        return n*factorial(n - 1);\n    return 1;\n}\n\n\nint main() {\n    int num;\n    while (cin >> num)\n        cout << factorial(num) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    \n    if (n > 0) return n*factorial(n - 1);\n    else return 1;\n}\n\n\nint main() {\n    int num;\n\n    while (cin >> num)\n        cout << factorial(num) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\nint main () {}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    if (n == 2) return 2;\r\n    return n*factorial(n-1);\r\n }\r\n\r\nint main () {\r\n\tint n;\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n//Pre: n es un numero entero.\r\n//Post: devuelve el factorial del numero entero n.\r\n    int f;\r\n    if(n==0) f=1;\r\n    else f=n*factorial(n-1);\r\n    return f;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) {\r\n        return 1;\r\n    }\r\n\telse {\r\n        return n * factorial(n-1);\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    if (n == 1 or n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\nint main() {\r\n    int decimal_number;\r\n    string reversed_binary = \"\";\r\n\r\n    cin >> decimal_number;\r\n\r\n    while(decimal_number > 0) {\r\n        reversed_binary = reversed_binary + to_string(decimal_number % 2);\r\n        decimal_number = decimal_number / 2;\r\n    }\r\n    cout << reversed_binary << endl;\r\n\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n > 1) return n * factorial(n - 1);\r\n    else return 1;\r\n}\r\n\r\nint main()\r\n{\r\n    cout<<factorial(4);\r\n\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n - 1);\r\n}\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    int aux = n;\n    if (n == 0){\n        return 1;\n    } else return n*factorial(n-1);\n}\n\nint main(){\n\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return factorial (n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n//Calculates the factorial of an integer number.\n//Pre: 0 <= n <= 12.\n//Post: returns result.\nint factorial(int n) {\n int result = 0;\n //Base condition\n if (n == 0) result = 1;\n //Recursive condition\n else result = n * factorial(n\n- 1);\n return result; }\nint main() {\n int num;\n while (cin >> num) {\n cout << factorial(num) << endl;\n\n}\n}",
  "#include <iostream>\r\n#include <vector>\r\n#include <string>\r\nusing namespace std;\r\nint factorial(int n){\r\n    int factorial=1;\r\n    for(int i=0; i<n; i++){\r\n        factorial=factorial*i;\r\n    }\r\n    return factorial;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n    \r\n}",
  "#include <iostream>\r\n#include <vector>\r\n#include <string>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n==0) return 1;\r\n    return n*factorial;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n    \r\n}",
  "#include <iostream>\r\n#include <vector>\r\n#include <string>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n==0) return 1;\r\n    return n*factorial(n);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n    \r\n}",
  "#include <iostream>\r\n#include <vector>\r\n#include <string>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if(n==0){\r\n        n=1;\r\n    }\r\n    else {\r\n        n=n*factorial(n-1);\r\n    }\r\n    return n;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n    \r\n}",
  "#include <iostream>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {    \r\n    if (n <= 1) return 1;    \r\n    return factorial(n - 1)*n; \r\n} \r\nint main() {    \r\n    int n;    \r\n    while (cin >> n) {        \r\n        cout << factorial(n) << endl;    \r\n    } \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n) {\n     int producte = 1;\n     if (n >= 0 and n <= 12) {\n         for (int i = 1; i <= n; ++i) {\n             producte = producte * i;\n         }\n     }\n     return producte;\n }\n\n\n int main () {\n     int n;\n     while (cin >> n) {\n         cout << factorial(n) << endl;\n     }\n }\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n   }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    if(n == 2) return 2;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint res;\n\tif (n==0) res = 1;\n\telse res = n*factorial(n-1);\n\t\n\treturn res;\n\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   \n}\n",
  "#include <iostream> \n\nusing namespace std;\n\nint factorial(int n); {\n\tint res;\n\tif (n==0) res = 1; \n\telse res = n*factorial(n-1)\n    return res;\n    \n}\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n} \n",
  "#include <iostream> \n\nusing namespace std;\n\nint factorial(int n); \n\tint res;\n\tif (n==0) res = 1; \n\telse res = n*factorial(n-1)\n    return res;\n    \n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n} \n",
  "#include <iostream> \n\nusing namespace std;\n\nint factorial(int n); \n\tint res;\n\tif (n==0) res = 1; \n\telse res = n*factorial(n-1);\n    return res;\n    \n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n} \n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n) {\n     int producte = 1;\n     if (n >= 0 and n <= 12) {\n         for (int i = 1; i <= n; ++i) {\n             producte *= i;\n         }\n     }\n      return producte;\n }\n\n int main () {\n     int n;\n     while (cin >> n) {\n         cout << factorial(n) << endl;\n     }\n }\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\tint  fact = 1;\r\n\tif (n == 0) fact = 1;\r\n\telse{\r\n\t\tfact = n * factorial(n-1);\r\n\t}\r\n\treturn fact;\r\n}\r\n\r\n\r\nint main(){\r\n\tint n = 5;\r\n\tcout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {return 1;}\n    else {\n        int y = 1;\n        while (n > 0) {\n            y = y*n;\n            n = n-1;\n        }\n    return y;\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        if (n >= 0 and n <= 12) {\n            cout << factorial(n) << endl;\n        }\n    }\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial (int n) {\n    int producte = 1;\n    for (int i = 1; i <= n; ++i) {\n        producte *= i;\n    }\n    return producte;\n}\n\nint main () {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n int factorial(int n){\n\n    if (n < 2) return 1;\n    else{\n        return factorial(n-1)*n;\n    }\n }\n int main(){\n     int n;\n     cin >>n;\n     cout << factorial(n) << endl;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0 or n == 1) n = 1;\n    else {\n        n = n*factorial(n-1);\n    }\n    return n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "\n#include <iostream>\nusing namespace std;\n\nint engreixa(int x) {\n\tif (x < 10) return x;\n\tint e = engreixa(x / 10);\n\tint ue = e % 10;\n\tint d = x % 10;\n\tint m = max(ue, d);\n\treturn e * 10+m;\n}\n\nint main() {\n  int x;\n  while (cin >> x) cout << engreixa(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n=0) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint mcd(int a, int b){\n\n    if(a==0) return b;\n    if(b==0) return a;\n\n    int max;\n    if (a>b) max=a;\n        else max=b;\n\n    for (int i=0; i*i<max;i){\n    if (a%i==0 and b%i==0) return mcd(a/i,b/i)*i;\n    }\n    return 1;\n\n}\n\n\nint main() {\n    int x, y;\n    while (cin >> x >> y) {\n        cout << mcd(x, y) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespave std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else if (n > 1) n = n * factorial(n - 1);\n    return n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else n = n * factorial(n - 1);\n    return n;\n}\n\nint main() {\n    cout << factorial(4) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n//Pre: 0 <= n <= 12\r\n//Post: retorna el factorial de n\r\n    if (n != 0) return n*factorial(n-1);\r\n    return 1;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\n#include <vector> \r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0 or n == 1) {\r\n        n = 1;\r\n    }\r\n    else {\r\n        n = n*factorial(n-1);\r\n    }\r\n    return n;\r\n}\r\n\r\nint main () {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint fact(int n) {\r\n\tint res;\r\n\tif (n == 0)  res = 1;\r\n\telse res = n * fact(n - 1);\r\n\treturn res;\r\n}\r\n\r\nint main() {\r\n\r\n}",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint res;\r\n\tif (n == 0)  res = 1;\r\n\telse res = n * factorial(n - 1);\r\n\treturn res;\r\n}\r\n\r\nint main() {\r\n\r\n}",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n){\n\tint res;\n\tif(n == 0){\n\t\tres = 1;\n\t}else{\n\t\tres = n * factorial(n-1);\n\t}\n\n\treturn res;\n}\n\nint main() {\n\t\n}",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n){\n\tint res;\n\tif(n == 0){\n\t\tres = 1;\n\t}else{\n\t\tres = n * factorial(n-1);\n\t}\n\n\treturn res;\n}\n\nint main() {\n\t\n}",
  "#include<iostream>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint sol;\r\n\tif (n == 0) sol = 1;\r\n\telse {\r\n\t\tsol = n * factorial(n - 1);\r\n\t}\r\n\treturn sol;\r\n}\r\n\r\nint main() {\r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\n//pre: 0 <= n <= 12;\n//post : retorna el factorial de n;\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    //Cas base:\n    if (n == 0 or n == 1) return 1;\n    //Cas recursiu:\n    else return n*factorial(n - 1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint r=1;\nwhile (n>1) {\nr=r*n;\n--n;\n}\n\n\nreturn r;\n}\nint main() {\nint n;\ncin>>n;\nint r;\nr = factorial (n);\ncout<<r<<endl;\n}\n",
  "def factorial(n):  # returns int\n\tif(n<2): return n\n\telse: return n*factorial(n-1)\nfactorial(n: int) -> int\n",
  "def factorial(n):  # returns int\n\tif(n<2): return n\n\telse: return n*factorial(n-1)\nfactorial(n: int) -> int\n",
  "def factorial(n):  # returns int\n\tif(n<2): return n\n\telse: return n*factorial(n-1)\n#factorial(n: int) -> int\n",
  "def factorial(n):  # returns int\n\tif(n<2): return n=1\n\telse: return n*factorial(n-1)\n#factorial(n: int) -> int\n",
  "def factorial(n):  # returns int\n\tif(n<2): return 1\n\telse: return n*factorial(n-1)\n#factorial(n: int) -> int\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\tn = n * factorial(n - 1);\n\treturn n;\t\n}\n\nint main (){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\n\nint factorial(int n){\n    int resultado = 1;\n    if(n>0){\n        resultado = n*factorial(n-1);\n    }\n    return resultado;\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "int factorial(int x)\r\n{\r\n\tif (x < 2)\r\n\t{\r\n\t\treturn x;\r\n\t}\r\n\treturn x + factorial(x - 1);\r\n}",
  "int factorial(int x)\r\n{\r\n\tif (x < 2)\r\n\t{\r\n\t\treturn 1;\r\n\t}\r\n\treturn x + factorial(x - 1);\r\n}",
  "int factorial(int x)\r\n{\r\n\tif (x < 2)\r\n\t{\r\n\t\treturn 1;\r\n\t}\r\n\treturn x * factorial(x - 1);\r\n}",
  "#include <iostream>\r\n\r\nint factorial(int x)\r\n{\r\n\tif (x < 2)\r\n\t{\r\n\t\treturn 1;\r\n\t}\r\n\treturn x * factorial(x - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint res;\n\tif(n==0)res = 1;\n\telse res = n*factorial(n-1);\n\treturn res;\n}\n\nint main(){\n\tint n=1;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint res=1;\n\twhile(n!=0){\n\t\tres=res*n;\n\t\tn--;\n\t}\n\treturn res;\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint res = 1;\n\tif (n == 0 or n == 1) res = 1;\n\telse {\n\t\tres *= n; \n\t\tn--;\n\t\tres = factorial(n);\n\t}\n}\n\nint main () {\n\tint n, res; \n\tcin >> n; \n\tres = factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\nint resultado;\nif(n==0 or n==1) resultado=1;\nelse{\nresultado=n;\nresultado=resultado*factorial(n-1);\n}\nreturn resultado;\n\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint res = 1;\n\tif (n == 0 or n == 1) res = 1;\n\telse {\n\t\tres *= n; \n\t\tn--;\n\t\tres = factorial(n);\n\t}\n\treturn res;\n}\n\nint main () {\n\tint n, res; \n\tcin >> n; \n\tres = factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int res;\n    if(n == 1 or n == 0){\n        res = 1;\n    }\n    if(n != 1 and n != 0){\n        int a = n - 1;\n        res = n * factorial(a);\n    }\n    \n    return res;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\nint mult=1;\nif (n==0) {\n\treturn mult=1;\n}\nelse {\n\tmult=mult*n;\n\tmult = mult * factorial(n-1);\n\treturn mult;\n}\n\n}\n\nint main() {\n\tint n;\n\tcin >>n;\n\tcout << factorial(n) << endl;\n}\n\t\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n == 0) return 1;\n\telse if (n == 1) return n;\n\telse {\n\t\tn *= factorial(n--);\n\t}\n\treturn n;\n}\n\nint main () {\n\tint n, res;\n\tcin >> n;\n\tres = factorial(n);\n  cout << res << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n == 0) return 1;\n\telse if (n == 1) return n;\n\telse {\n\t\tn *= factorial(n--);\n\t}\n\treturn n;\n}\n\nint main () {\n\tint n, res;\n\twhile (cin >> n) {\n  \tres = factorial(n);\n    cout << res << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if(n == 0) return 1;\n\telse if (n != 0 and n!= 1) {\n\t\tn *= factorial(n-1);\n\t}\n\treturn n;\n}\n\nint main () {\n\tint n, res;\n\twhile(cin >> n) {\n  \tres = factorial(n);\n    cout << res << endl;\n  }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int res;\n    if(n == 0 or n == 1) res = 1;\n    else res = n*factorial(n-1);\n    return res;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "int factorial(int n){\n\tif (n == 0) return 1;\t\n\telse if ( n == 1)\n\t\treturn n;\n\telse\n\t\tn *= factoria(n--);\n}\n",
  "int factorial(int n){\n\tif (n == 0) return 1;\t\n\telse if ( n == 1)\n\t\treturn n;\n\telse\n\t\tn *= factorial(n--);\n}\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n == 0) return 1;\t\n\telse if ( n == 1)\n\t\treturn n;\n\telse{\n\t\tn *= factorial(--n);\n\t\treturn n;\n\t}\n}\n\nint main(){\n\t\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n == 0) return 1;\t\n\telse if ( n == 1)\n\t\treturn n;\n\telse{\n\t\tn *= factorial(--n);\n\t\treturn n;\n\t}\n}\n\nint main(){\n\t\n\tint n;\n\twhile (cin >> n){\n\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include<iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\tif (n == 0) return 1;\t\n\telse if ( n == 1)\n\t\treturn n;\n\telse{\n\t\tn *= factorial(n-1);\n\t\treturn n;\n\t}\n}\n\nint main(){\n\t\n\tint n;\n\twhile (cin >> n){\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: 0<=n<=12\n//Post: retorna el factorial de n\nint factorial (int n) {\n\tint f;\n\tif (n==0 or n==1) {\n\t\tf=1;\n\t}\n\telse {\n\t\tf=n*factorial(n-1);\n\t}\n\treturn f;\n}\n\nint main() {\n\tint n;\n\tcin>>n;\n\tint fact=factorial(n);\n\tcout<<\"El factorial de \"<<n<<\" Ã©s \"<<fact<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n == 0) return 1;\n\tint res = n;\n\t--n;\n\tint aux = factorial(n);\n\treturn aux * res;\n}\n\nint main(){\n\tint num;\n\tcin >> num;\n\tcout << factorial(num) <<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Pre: nombre enter n.\n//Post: multiplicaciÃ³ de [1*...*n], es a dir, la factoritzaciÃ³ del nÃºmero n.\n//DisminuciÃ³: n disminueix fins a 0.\nint factorial(int n){\n\tif (n == 0) return 1;\n\tint res = n;\n\t--n;\n\tint aux = factorial(n);\n\t//HI: ens retorna la multiplicaciÃ³ de [1*...*n]\n\treturn aux * res;\n}\n\nint main(){\n\tint num;\n\tcin >> num;\n\tcout << factorial(num) <<endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    return factorial(n-1)*n;\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   }\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    // cas base\n    if (n <= 1) return 1;\n    else return factorial(n-1) * n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    return factorial(n - 1)*n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int);\r\n\r\nint main() {\r\n    int n, result;\r\n\r\n    cout << \"Enter a non-negative number: \";\r\n    cin >> n;\r\n\r\n    result = factorial(n);\r\n    cout << \"Factorial of \" << n << \" = \" << result;\r\n    return 0;\r\n}\r\n\r\nint factorial(int n) {\r\n    if (n > 1) {\r\n        return n * factorial(n - 1);\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\n//Calcula el factorial del nombre donat de forma iterativa\n//Pre: n es un nombre enter positiu\n//Post: retorna n!\nint factorial (int n) {\nint f = 1, i = 0;\nwhile (i < n) {\n//Inv: f = i!\n\ti = i+1;\n\tf = f*i;\n}\n\treturn f;\n}\n\nint main () {\nint n;\ncin >> n;\ncout << factorial (n) << endl;\n\n\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//Calcula el factorial del nombre donat de forma iterativa\n//Pre: n es un nombre enter positiu\n//Post: retorna n!\nint factorial (int n) {\n\tint res;\n\tif (n == 0) res = 1;\n\telse res = n*factorial(n-1);\n\treturn res;\n}\n\n\n\nint main () {\nint n;\ncin >> n;\ncout << factorial (n) << endl;\n\n\n\n\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n  if(n == 0) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n\r\nint main() {}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n\tint resul;\n\t\n\tif(n==0){\n\n\t\treturn 1;\n\t\n\t}else{\n\n\t\tresul = factorial(n-1); //n-1!\n\t\tresul *= n; //n-1! * n = n!\n\t\treturn resul; //Â¿El lloc on posi el return afecta a la funcionalitat de la funcio recursiva?\n\t}\n\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n\tif (n == 0)\r\n\t{\r\n\t\tn = 1;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tn = n * factorial(n - 1);\r\n\t}\r\n\treturn n;\r\n}\r\n\r\nint main()\r\n{\r\n\tcout << \"Introduce un numero: \" << endl;\r\n\tint numero;\r\n\tcin >> numero;\r\n\tint resultado = factorial(numero);\r\n\tcout << resultado << endl;\r\n\t\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n < 2) return 1;\n    return n*factorial(n - 1);\n}\n\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n==0 or n== 1) return 1;\r\n  else{\r\n    return(n*factorial(n-1));\r\n  }\r\n}\r\nint main(){\r\n  int n;\r\n  while(cin >> n){\r\n    cout << factorial(n) << endl;\r\n  }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n < 2) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n{\n    if (n == 0)\n    {\n        n = 1;\n    }\n    else\n    {\n        n = n * factorial(n - 1);\n    }\n    return n;\n}\n\n\nint main() \n{\n    int x;\n    while (cin >> x) \n    {\n        cout << factorial(x) << endl;\n    }  \n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    // Cas base: el factorial de 0 és 1\r\n    if (n == 0) {\r\n        return 1;\r\n    }\r\n    // Cas recursiu: el factorial de n és n * factorial(n-1)\r\n    else {\r\n        return n * factorial(n - 1);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    cout << factorial(0) << endl;\r\n}",
  "\n#include <iostream>\n\nusing namespace std;\n\nint factorial(int n)\n{\n     if(n > 1)\n        return n * factorial(n - 1);\n      else return 1;\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n == 0) return 1;\r\n\telse return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n\tint n = 0;\r\n\tcout << factorial(n);\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\t\n\tif (n == 0) return 1;\n\telse\r\n\t{\r\n\t\treturn n * factorial(n - 1);\r\n\t}\n}\n\n\nint main() {\n\tint x = 6;\n\tcout << factorial(x) << endl;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return (n*factorial(n-1));\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "//Factorial recursiu\n//Escribe una funciÃ³n que retorna n!\n//Input: un enter major o igual a 0 i menor o igual a 12\n//Output: n!\n\n#include <iostream>\nusing namespace std;\n\n//Pre: 0 <= n <= 12\n//Post: n!\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "//Factorial recursiu\n//Escribe una funciÃ³n que retorna n!\n//Input: un enter major o igual a 0 i menor o igual a 12\n//Output: n!\n\n#include <iostream>\nusing namespace std;\n\n//Calcular n!\n//Pre: 0 <= n <= 12\n//Post: n!\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\nif(n == 0) return 1;\nelse return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else {\r\n        int f = factorial(n - 1); //(n-1)!\r\n        return n*f;\r\n    }\r\n}\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n        if (n == 0) return 1;\r\n        else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact = 0;\n    while (n != 0) {\n        fact *= n;\n        n = n-1;\n    }\n    return fact;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact = 0;\n    while (n > 0) {\n        fact = n*fact;\n        n = n-1;\n    }\n    if (n == 0) fact = 1;\n    return fact;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n <= 1) return 1;\n    else return factorial (n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n)\n{\n    if(n == 0)\n    {\n        return 1;\n    }\n    else\n    {\n        return n * factorial(n - 1);\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "def factorial(n):\r\n\tif n == 0 or n == 1: return 1\r\n\telse:\r\n\t\treturn factorial(n-2) + factorial(n-1)\r\n",
  "def factorial(n):\r\n\tif n == 0 or n == 1: \r\n\t\treturn 1\r\n\telse:\r\n\t\treturn factorial(n-2) + factorial(n-1)\r\n",
  "def factorial(n):\r\n\tif n == 0 or n == 1: \r\n\t\treturn 1\r\n\telse:\r\n\t\treturn n * factorial(n-1)\r\n",
  "\ndef factorial(n):\n    if n == 1:\n        return n\n    else:\n        return n*factorial(n-1)\n",
  "\ndef factorial(n):\n    if n == 1:\n        return n\n    else:\n        return n*factorial(n-1)\n",
  "#!/usr/bin/env python3\n\ndef factorial(n):\n    if n == 1:\n        return n\n    else:\n        return n*factorial(n-1)\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1)\n        return n;\n    else\n        return n * factorial(n - 1);\n}",
  "\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n - 1);\n}\n",
  "\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return n*factorial(n - 1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) {return 1;}\n    else {\n        int y = 1;\n        while (n > 0) {\n            y = y*n;\n            n = n-1;\n        }\n    return y;\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        if (n >= 0 and n <= 12) {\n            cout << factorial(n) << endl;\n        }\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//PRe: n >= 0\n//Post: retorna el factorial de n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main(){\n    int n;\n    while (cin >> n){\n        cout<< factorial(n) << endl;\n    }\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n){\r\n    int count=n;\r\n    if (n==0) n=1;\r\n    else{\r\n    while(count>1){\r\n         --count;\r\n        n*=count;\r\n       \r\n\r\n    }\r\n    }\r\n    return n;\r\n}\r\n\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n}   \r\n}",
  "#include <iostream>\r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n == 0) return 1;\r\n    else return n*factorial (n - 1);\r\n}\r\nint main() {\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n\n\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n);\n\n\n\n\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial (int n) {\n    int producte = 1;\n    for (int i = 1; i <= n; ++i) {\n        producte *= i;\n    }\n    return producte;\n}\n\nint main () {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n\n}\n\n\nint main() {\n\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n) {\r\n if (n < 2) return 1;\r\n else return n*factorial(n-1);\r\n }\r\n\r\n int main() {\r\n     int n;\r\n     cin >> n;\r\n     cout << factorial(n) << endl;\r\n }\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int f = 1;\r\n    for (int i = 1; i <= n; ++i) {\r\n        f = f * i;\r\n    }\r\n    return f;\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int w = 1;\n\n    for (int x = n; x > 0; --x)\n    {\n        w = w * n;\n        --n;\n    }\n    return w;\n}\n\nint main() {\n    int a;\n    while (cin >> a)\n    {\n        cout << factorial(a) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    return factorial(n - 1)*n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n - 1);\n}\n \nint main() {\n    int n;\n    cin >> n; \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n \nint main() {\n    int n;\n    cin >> n; \n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return n*factorial (n-1);\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factoril(n-1);\n}\nint main () {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main () {\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) rerturn 1;\n    return factorial(n -1)*n;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 0) return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n != 0) return n*factorial(n-1);\n    else return 1;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else {\n        int x = n * factorial(n - 1);\n        --n; \n        return x;\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0 or n == 1) {\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// Pre: 0â¤ n â¤ 12\n// Post: retorna el factorial de n\nint factorial (int n) {\n    if (n == 0 or n == 1) return 1;\n    else return (n*factorial(n-1));\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {    \r\n    if (n <= 1) return 1;    \r\n    return factorial(n - 1)*n; \r\n} \r\nint main() {    \r\n    int n;    \r\n    while (cin >> n) {        \r\n        cout << factorial(n) << endl;    \r\n    } \r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int sum;\n    if(n == 0){\n        sum = 1;\n    }else if(n < 12){\n        int a = factorial(n-1);\n        sum = n * a;\n    }\n    return sum;\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    int sum;\n    if(n == 0){\n        sum = 1;\n    }else if(n <= 12){\n        int a = factorial(n-1);\n        sum = n * a;\n    }\n    return sum;\n}",
  "#include <iostream>\nusing namespace std;\n\n    int factorial(int n){\n        if (n==0) return 1;\n        else return n * factorial(n-1);\n    }\n\n    int main(){\n        int n;\n        cin >> n;\n\n        cout << factorial(n) << endl;\n    }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return n * factorial(n-1;)\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial(x) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main() {\n    int n;\n    cin >> n;\n    int r = factorial(n);\n    cout << r;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n) {\r\n if (n < 2) return 1;\r\n else return n*factorial(n-1);\r\n }\r\n\r\n int main() {\r\n     int n;\r\n     cin >> n;\r\n     cout << factorial(n) << endl;\r\n }",
  "#include <iostream>\nusing namespace std;\n//Calculates the factorial of an integer number.\n//Pre: 0 <= n <= 12.\n//Post: returns result.\nint factorial(int n) {\nint result = 0;\n//Base condition\nif (n == 0) result = 1;\n//Recursive condition\nelse result = n * factorial(n - 1);\nreturn result;\n}\nint main() {\nint num;\nwhile (cin >> num) {\ncout << factorial(num) << endl;\n}\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    return factorial(n - 1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    // cas base\n    if (n <= 1) return 1;\n    else return factorial(n-1) * n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if(n <= 1) return 1;\r\n    return factorial (n - 1)*n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n <= 1) return 1;\n    return factorial (n-1)*n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "//factorial recursiu\n#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) n = 1;\n    else{\n        n = n * factorial(n-1);\n    }\n    return n;\n}\n\nint main(){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "//Factorial recursiu\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n==0) n = 1; // caso base\r\n    else n = n * factorial(n-1); // caso general\r\n    return n;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n < 2) return 1;\r\n    if (n == 2) return 2;\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) return n*factorial(n - 1);\n    else return 1;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return factorial (n - 1)* n;\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial (n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n * factorial(n - 1);\n    else return 1;\n}\n\nint main() {\n    int nombre, resultat;\n    cin >> nombre;\n    resultat = factorial(nombre);\n    }\n\n",
  "#include <iostream>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nstruct Point {\r\n  double x, y;\r\n};\r\n\r\ndouble dist(const Point& a, const Point& b){\r\n  return sqrt(pow(b.x - a.x, 2) + pow(b.y - a.y, 2));\r\n}",
  "// factorial recursiu p12509\n// escriure una funcio que retorna n!\n\n\n#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) n = 1;\n    else n = n * factorial(n - 1);\n    return n;\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\tif (n==1) return 1;\n\telse return n * factorial (n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n * factorial(n - 1);\n    else return 1;\n}",
  "int factorial(int n) {\r\n    // El cas base: si n és 0 o 1, el factorial és 1.\r\n    if (n == 0 || n == 1) {\r\n        return 1;\r\n    }\r\n    // Si n no és 0 ni 1, calculem el factorial de n-1 i el multipliquem per n.\r\n    else {\r\n        return n * factorial(n-1);\r\n    }\r\n}\r\n",
  "int factorial(int n) {\r\n    // El cas base: si n és 0 o 1, el factorial és 1.\r\n    if (n == 0 || n == 1) {\r\n        return 1;\r\n    }\r\n    // Si n no és 0 ni 1, calculem el factorial de n-1 i el multipliquem per n.\r\n    else {\r\n        return n * factorial(n-1);\r\n    }\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    if (n == 2) return 2;\r\n    return n*factorial(n-1);\r\n }\r\n\r\nint main () {\r\n\tint n;\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nbool hi_es(int x, const vector<int>& v) {\n    for (auto i : v) if (i == x) return true;\n    return false;\n}\n\nint main () {\n\t\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\t\r\n\tif (n==0){\r\n\t\tn=1; \r\n\t}\r\n\telse{\r\n\t\tn = n * factorial(n-1);\r\n\t}\r\n\treturn n;\r\n}\r\n\r\nint main(){\r\n\tint a;\r\n\tcout<<\"Introdude un numero: \";\r\n\tcin>>a;\r\n\tcout<<\"El factorial de \"<<a<<\" es: \"<<factorial(a)<<endl;\r\n\t\r\n}\r\n",
  "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\n//FunciÃ³ recursiva: factorial de n.\r\n//Pre:n.\r\n//Post:retorna n!.\r\n\r\nint factorial(int n) {\r\n    int f;\r\n    if (n==0) f=1;\r\n    else f=n*factorial(n-1);\r\n    return f;\r\n}\r\n\r\nint main () {}",
  "#include <iostream>\n\nusing namespace std;\n\n\nint factorial(int n){\nint c=1;\nif(n==0 or n==1){\nreturn c;\n}\nelse{\nwhile(n>c){\nc=c*n;\n}\nreturn c;\n}\n}\n\nint main(){\nint n;\ncin>>n;\nint x;\nx= factorial(n);\ncout<<x<<endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 || n == 1) {\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n}\n\n\n\nint main(){\nint n;\ncin>>n;\nint x;\nx= factorial(n);\ncout<<x<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tint f;\n\tif (n==0) {\n\t\tf=1;\n\t} else {\n\t\tf = n*factorial(n-1);\n\t}\n\treturn f;\n}\n\nint main () {\n\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\n}\n",
  "int factorial(int n) {\r\n\r\n    if (n == 0 || n == 1) {\r\n        return 1;\r\n    }\r\n\r\n    else {\r\n        return n * factorial(n-1);\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0 or n == 1) n = 1;\n    else n = n*factorial(n-1);\n    return n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact = 0;\n    if (n == 1) fact = 1;\n    else fact = n*factorial(n - 1);\n    return fact;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int fact = 0;\n    if (n == 0) fact = 1;\n    else fact = n*factorial(n - 1);\n    return fact;\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }   \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return factorial(n-1)*n;\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "\n#include <iostream>\nusing namespace std;\n\nint main() {\n    int num, den;\n    cin >> num >> den;\n\n    int first = num; //180\n    int sec = den; //1032\n\n    while (sec%first != 0) {\n        int div = sec/first;\n        int rest = sec - (div*first);\n        sec = first;\n        first =  rest;\n\n        if (sec%first == 0) {\n            den = den/first;\n            num = num/first;\n        }\n    }\n\n    cout << \"den = \" << den << endl;\n    cout << \"num = \" << num << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\n    if (n == 1 or n == 0) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n}   }\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//PRe: n >= 0\r\n//Post: retorna el factorial de n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n*(factorial(n-1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*(factorial(n-1));\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n){\n    int res;\n    if (n == 0) res = 1;\n    else res = n*factorial(n-1);\n    return res;\n}\n\n\n\nint main(){\n    int n; \n    cout << factorial(n) << endl;\n\n}",
  "// factorial\n#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*(factorial(n-1));\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int suma = 1;\n    for (int i = 0; i < n; ++i) {\n        suma = suma*n;\n    }\n    return suma;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int suma = 1;\n    for (int i = 1; i < n; ++i) {\n        suma = suma*i;\n    }\n    return suma;^\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return n;\n    else return n*(n-1);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    cin\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return n;\n    else return n*(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n*(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\nint factorial(int n);\r\nif (n == 1) return 1;\r\nelse  return n*factorial(n-1)\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\nif (n == 1) return 1;\r\nelse  return n*factorial(n-1);\r\n}",
  "int factorial(int n)\n{\n    if (n <= 1)\n        return 1;\n    return n * factorial(n - 1);\n}\n",
  "\ndef factorial(n):\n    if n <= 1:\n        return 1\n    return n * factorial(n - 1)\n",
  "\nint factorial(int n)\n{\n    if (n <= 1)\n        return 1;\n    return n * factorial(n - 1);\n}\n",
  "class Solution {\n\n  public static int factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n - 1);\n  }\n  \n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint pow (int base, int exponent) {\n    if (exponent == 0) return 1;\n    return base * pow(base, exponent-1);\n}\n\nint main() {\n    int n,m;\n    cin>>n>>m;\n    cout<<pow (n,m)<<endl;\n}\n",
  "#include  <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n-1)*n;\n    \n}\n\nint main() {\n    int a; \n    cin >> a;\n    cout << \"El factorial de \" << a << \"Ã©s \" << factorial(a);\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint pow (int base, int exponent) {\n    if (exponent == 0) return 1;\n    return base * pow(base, exponent-1);\n}\n\nint main() {\n    int n,m;\n    cin>>n>>m;\n    cout<<pow (n,m)<<endl;\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==1) return 1;\n    return factorial(n-1) * n;\n}\n\nint main() {\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint pow(int base, int exponent){\n\n    if (exponent == 0) return 1;    \n    return base * pow(base, exponent-1);\n}\n\nint main(){\n    int n, m;\n    cin >> n >> m;\n    cout << pow(n,m) << endl;\n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\nint pow(int base, int exponent){\n\n    if (exponent == 0) return 1;    \n    return base * pow(base, exponent-1);\n}\n\nint main(){\n    int n, m;\n    cin >> n >> m;\n    cout << pow(n,m) << endl;\n    \n    \n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return factorial(n-1) * n;\n}\n\nint main() {\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return factorial(n-1) * n;\n}\n\nint main() {\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return factorial(n-1) * n;\n}\n\nint main() {\n    int x;\n    cin>>x;\n    cout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\n    int factorial(int n){\n    if(n == 1) return 1;\n    int factorialAnterior = factorial(n -1);\n    return n * factorialAnterior;\n    \n   \n    \n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\n\n\n    int factorial(int n){\n    if(n == 0) return 1;\n    int factorialAnterior = factorial(n -1);\n    return n * factorialAnterior;\n    \n   \n    \n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n    \n    \n}\n",
  "/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\n\n//n! = n * n-1 * n-2 ... * 2 * 1\n//n! = (n-1)! * n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return factorial(n-1) * n;\n}\n\nint main()\n{\n    int x;\n    cin >> x;\n    cout << factorial(x);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int f){\r\n    if(f == 0) return 1;\r\n    return f * factorial(f - 1);\r\n}\r\n\r\nint main(){\r\n    int a;\r\n    cin >> a;\r\n\tcout << factorial(a) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int f){\r\n    if(f == 0) return 1;\r\n    return f * factorial(f - 1);\r\n}\r\n\r\nint main(){\r\n    int a;\r\n    cin >> a;\r\n\tcout << factorial(a) << endl;\r\n}",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\n\nint factorial(int a)\n{\n    if (a <= 0)\n    {\n        return 1;\n    }else\n    {\n    int i, p;\n    i = 1;\n    p = 1;\n    while (i != a)\n    {\n    p = p * i;\n    i = i + 1;\n    }\n    p = p * a;\n    return p;\n    }\n}\n\n\nint main() \n{   \n    int x;\n    cin >> x;\n    int y = factorial(x);\n    cout << y << endl;\n}\n",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n",
  "def factorial(n: int) -> int:\n    if n <= 1:\n        return 1\n    return n*factorial(n-1)\n\nprint(factorial(4))\n",
  "def factorial(n: int) -> int:\n    if n <= 1:\n        return 1\n    return n*factorial(n-1)\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 1) return n;\n    else return n*factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "\r\nimport java.util.Scanner;\r\n\r\nclass Main {\r\n\r\n    public static void main(String[] args) {\r\n        final Scanner sc = new Scanner(System.in);\r\n        while (sc.hasNextInt()) {\r\n            int n = sc.nextInt();\r\n            System.out.println(Solution.factorial(n));\r\n        }\r\n    }\r\n\r\n}\r\n\r\nclass Solution{\r\n    public static int factorial(int n) {\r\n        int result = 1;\r\n        for (int i = 1; i <= n; i++){\r\n            result = result * i;\r\n        }\r\n        \r\n        return result;\r\n    }\r\n}",
  "\r\nimport java.util.Scanner;\r\n\r\nclass Main {\r\n\r\n    public static void main(String[] args) {\r\n        final Scanner sc = new Scanner(System.in);\r\n        while (sc.hasNextInt()) {\r\n            int n = sc.nextInt();\r\n            System.out.println(Solution.factorial(n));\r\n        }\r\n    }\r\n\r\n}\r\n\r\nclass Solution{\r\n    public static int factorial(int n) {\r\n        if (n == 0){\r\n            return 1;\r\n        } else {\r\n            return n * factorial(n-1);\r\n        }\r\n    }\r\n}",
  "\r\nimport java.util.Scanner;\r\n\r\nclass Main {\r\n\r\n    public static void main(String[] args) {\r\n        final Scanner sc = new Scanner(System.in);\r\n        while (sc.hasNextInt()) {\r\n            int n = sc.nextInt();\r\n            System.out.println(Solution.factorial(n));\r\n        }\r\n    }\r\n\r\n}\r\n\r\nclass Solution{\r\n    public static int factorial(int n) {\r\n        if (n <= 1){\r\n            return 1;\r\n        } else {\r\n            int x = factorial(n-1);\r\n            return n * x;\r\n        }\r\n    }\r\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 0) return n*factorial(n - 1);\n\n    return 1;\n}\n\nint main()\n{\n   int n;\n   cin >> n;\n   \n   cout << factorial(n);\n}",
  "import java.util.Scanner;\n\npublic class Main{\n    public static int factorial(int n){\n        if(n <= 1) return 1;\n        return n*factorial(n-1);\n    }\n    public static void main(String[] args){\n        System.out.println(factorial(0));\n    }\n}\n",
  "import java.util.Scanner;\n\npublic class program{\n    public static int factorial(int n){\n        if(n <= 1) return 1;\n        return n*factorial(n-1);\n    }\n}\n",
  "import java.util.Scanner;\n\npublic class program{\n    public static void main(String[] args){}\n    public static int factorial(int n){\n        if(n <= 1) return 1;\n        return n*factorial(n-1);\n    }\n}\n",
  "public class program{\n    public static void main(String[] args){}\n    public static int factorial(int n){\n        if(n <= 1) return 1;\n        return n*factorial(n-1);\n    }\n}\n",
  "public class Main{\n    public static int factorial(int n){\n        if(n <= 1) return 1;\n        return n*factorial(n-1);\n    }\n    public static void main(String[] args){\n    }\n}\n",
  "public static int factorial(int n){\n    if(n <= 1) return 1;\n    return n*factorial(n-1);\n}",
  "public class program{\n    public static int factorial(int n){\n        if(n <= 1) return 1;\n        return n*factorial(n-1);\n    }\n}",
  "class program{\n    public static int factorial(int n){\n        if(n <= 1) return 1;\n        return n*factorial(n-1);\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n/*\r\nint factorial(int n) {\r\n    int factorial = 1, i = 0;\r\n    ++i;\r\n    if (i == n-1) return factorial = factorial*i;\r\n}\r\n*/\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1; //caso base (no requiere recursive calls)\r\n    return n*factorial(n-1); //ultimo caso\r\n}   // !!! empiezo con n y acabo con 0, voy disminuyendo la n\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    cout << factorial(n) << endl;\r\n}\r\n\r\n/*\r\n// iterative solution\r\n\r\nint factorial(int n) { \r\n// Pre: n >= 0\r\n// Post: returns n!\r\n    int f = 1;\r\n    int i = 0;\r\n    // Invariant: f = i! and i <= n\r\n    while (i < n) {\r\n        i = i + 1;\r\n        f = f*i;\r\n    }\r\n    return f;\r\n}\r\n*/",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n){\nif(n==0 or n==1) {\nreturn 1; }\n\nelse return n*factorial(n-1); }\n\n\n\nint main(){\nint n; \ncin>>n; \nint resultado = factorial(n); \n\ncout<<resultado<<endl; \n\n}\n",
  "\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0 or n == 1) {\r\n        return 1; \r\n    } \r\n    else {\r\n        return n * factorial(n - 1);\r\n    }\r\n}\r\nint main()\r\n{\r\n    int numero; \r\n    cin >> numero; \r\n    cout << factorial(numero) << endl; \r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint cont=1;\n\twhile(cont<n){\n\t\tn=n+n*cont;\n\t}\nreturn n;\n}\n",
  "\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 0 or n == 1){\r\n        return 1;\r\n    }\r\n    else return n * factorial(n - 1);\r\n}\r\nint main()\r\n{\r\n    int n; \r\n    cin >> n; \r\n    cout << factorial(n) << endl;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nif (n==0 or n==1) return 1; \nelse return n*factorial(n-1); \n}\n\nint main(){\nint n;\ncin>>n; \ncout<<factorial(n)<<endl; \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint aux = n;\n\tif(n == 0) aux = 1;\n\telse {\n\t\twhile(n > 1){\n\t\t\t--n;\n\t\t\taux = aux*n;\n\t\t}\n\t}\n\treturn aux;\n\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout<<factorial(n);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint suma=0;\n\tsuma=suma+n;\n\twhile(cont>0){\n\t\tfactorial(n);\n\t}\n\tn=n-1;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint suma=0;\n\tsuma=suma+n;\n\twhile(n>0){\n\t\tfactorial(n);\n\t}\n\tn=n-1;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint aux = n;\n\tif(n == 0) aux = 1;\n\telse {\n\t\taux = n*factorial(n - 1);\n\t}\n\treturn aux;\n\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout<<factorial(n);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0) n= 1;\n\telse {\n\t\tn*= factorial(n-1);\n\t}\n\treturn n;\n}\nint main(){\n\tint a=4;\n\tcout<<factorial (a);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int aux = n;\n    if (n == 0){ aux = 1; }\n\n    else{\n        while (n > 1){\n            --n;\n            aux = aux * n;\n        }\n    }\n    return aux;\n}\n\nint main(){\nint a;\ncin >> a;\nint d;\nd = factorial(a);\ncout << d << endl;\n\n\n}",
  "#include <iostream>\nusing namespace std;\n\n// La funciÃ³n 'factorial' es una funciÃ³n recursiva que calcula el factorial de un nÃºmero determinado `n`.\nint factorial(int n) {\n    if (n == 0 || n==1){\n        return 1;\n    }\n    return n * factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint facto;\n\tif (n != 0) facto = factorial(n-1)*n;\n\telse return facto;\t\n};\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint facto;\n\tif (n == 0) facto = 1;\n\telse facto = factorial(n-1)*n;\n\treturn facto;\t\n};\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tif (n==0 or n==1){\n\treturn 1;\n\t}\n\telse{\n\treturn n* factorial(n-1);\n\t}\n}\n\nint main(){\nint n;\ncin>>n;\nint x;\nx = factorial(n);\ncout<<x<<endl;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\nint guardat1=0;\n\tfor(int i=0; i<=n; i++){\n\t\tif(i==0)\n\t\t\tguardat1=1;\n\t\telse\n\t\t\tguardat1=guardat1*i;\n\t\t}\n\treturn guardat1;\n\t}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n\t}\n",
  "#include <iostream>\nusing namespace std;\n\nint nombre_digits(int n){\n int cont=0;\n\tif(n==0){\n\tif(cont==0){\n\tcont=1;\n\t}\n\telse {\n\tcont=cont;\n\t}\n\treturn cont;\n\t}\n\telse{\n\tcont++;\n\tn=n/10;\n\treturn nombre_digits(n);\n\t\n\t}\n\t\n}\nint main () {\n  int n;\n  while (cin >> n) cout << nombre_digits(n) << endl;\n  return 0;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif ( n == 0 or n == 1 ) {\n\treturn 1;\n\t}\n\telse {\n\treturn n * factorial(n-1);\n\t}\t\t\t\t\t\t\n}\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n\n\n",
  "The function calculates the factorial of a given number by recursively calling itself until the base case of n = 1 is reached. It then returns 1 and works its way back up the stack, multiplying each number by the return value of the recursive call on the previous number.\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    return n * factorial(n - 1)",
  "The function calculates the factorial of a given number by recursively calling itself until the base case of n = 1 is reached. It then returns 1 and works its way back up the stack, multiplying each number by the return value of the recursive call on the previous number.\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    return n * factorial(n - 1)",
  "The function calculates the factorial of a given number by recursively calling itself until the base case of n = 1 is reached. It then returns 1 and works its way back up the stack, multiplying each number by the return value of the recursive call on the previous number.\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    return n * factorial(n - 1)",
  "The function calculates the factorial of a given number by recursively calling itself until the base case of n = 1 is reached. It then returns 1 and works its way back up the stack, multiplying each number by the return value of the recursive call on the previous number.\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    return n * factorial(n - 1)",
  "The function calculates the factorial of a given number by recursively calling itself until the base case of n = 1 is reached. It then returns 1 and works its way back up the stack, multiplying each number by the return value of the recursive call on the previous number.\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    return n * factorial(n - 1)",
  "The function calculates the factorial of a given number by recursively calling itself until the base case of n = 1 is reached. It then returns 1 and works its way back up the stack, multiplying each number by the return value of the recursive call on the previous number.\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    return n * factorial(n - 1)",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x){\n    if (int x=0) {\n        x=1;\n    }\n    else { \n    x = x*factorial(x-1);\n    }\n    return x;\n}\n\n\nint main (){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int x){\n    if ( x == 0) {\n        x=1;\n    }\n    else { \n    x = x*factorial(x-1);\n    }\n    return x;\n}\n\n\nint main (){\n    int n;\n    while (cin >> n){\n    cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f=1;\n    for(int i=2; i<= n; ++i) {\n        f=f*i;\n    }\n    return f;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\t//caso base factorial(0)== 1\n\t//factorial(n)== n*factorial(n-1)\nif (n==0) {\n\tn=1;\n}\nelse {\n\tn= n*factorial(n-1);\n}\nreturn n;\n}\nint main() {\n\tint x;\n\tcin>>x;\n\t\n\tcout << \"Factorial de \"<<x<<\" es \"<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  int result = 1;\n  for (int i = 1; i <= n; i++){\n    result *= i;\n  }\n  return result;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\n    if (n <= 1) return 1;\n    else return factorial (n-1)*n;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n <= 1) return 1;\r\n    else return factorial(n -1)*n;\r\n}\r\n\r\nint main()\r\n{\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n    return 0;\r\n}\r\n",
  "// P12509 Factorial recursiu\r\n// https://jutge.org/problems/P12509_ca\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n - 1 > 0) n = n * factorial(n - 1);\r\n    return n;\r\n}",
  "// P12509 Factorial recursiu\r\n// https://jutge.org/problems/P12509_ca\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) n = 1;\r\n    else if (n - 1 > 0) n *= factorial(n - 1);\r\n    return n;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    for (int i = 0; i!=n; i++) {\r\n        n *= n;\r\n    }\r\n}\r\nreturn n;",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n    for (int i = 0; i!=n; i++) {\r\n        n *= n;\r\n    }\r\nreturn n;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial (int n){\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n>1) {\n        return (factorial(n-1) * n);\n    }\n    else return 1;\n}\n\n\n\nint main(){}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    if (n == 1) return 1;\n    return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n\n",
  "int factorial(int n){\n    if (n>1) n *= factorial(n-1);\n    return n;\n}\n",
  "int factorial(int n){\n    if (n>1) n *= factorial(n-1);\n    else n = 1;\n    return n;\n}\n",
  "#include<iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\nint main() {\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "import yogi\r\ndef factorial(n: int) -> int:\r\n    if n == 1 or n == 0: return 1\r\n    else:\r\n        return n * factorial(n - 1)\r\nprint (factorial(yogi.read(int)))",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f = 1;\n    if (n == 0) return 1;\n    else f = n * factorial(n-1);\n    return f;\n}\n\n\nint main(){\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n    \n    \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f;\n    if (n == 0) return 1;\n    else f = n*factorial(n - 1);\n    return f;   \n}\n\nint main (){\n    int n;\n    while (cin >> n){\n    cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "import sys\n\ndef factorial(n):\n\tif n == 0:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n-1)\n\n\nfor line in sys.stdin:\n\tn = int(line.strip())\n\tprint(factorial(n))\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main()\n{\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}\n",
  "import sys\r\n\r\ndef factorial(n):\r\n    if n==0:\r\n        return 1\r\n    else:\r\n        return(n*factorial(n-1))\r\n    \r\nprint(factorial(1))",
  "\r\ndef factorial(n):\r\n    if n==0:\r\n        return 1\r\n    else:\r\n        return(n*factorial(n-1))\r\n",
  "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint factorial(int n){\n\tif(n==0){return 1;}\n\telse{return(n*factorial(n-1));}\n}\n\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n\treturn 0;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    int fact = 1;\r\n    for(int i = 1; i <= n; ++i){\r\n        fact *= i;\r\n    }\r\n    return fact;\r\n}\r\n\r\nint main() {\r\n    cout << factorial(10) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n    if(n == 0){\r\n\r\n        n = 1;\r\n\r\n\r\n    } else {\r\n\r\n        n = n * factorial(n - 1);        \r\n\r\n    }\r\n    return n;\r\n    \r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nvoid factor(int n, int& f, int& q) {\r\n    int d = 2;\r\n    f = n;\r\n    q = 1;\r\n    while (d * d <= n) {\r\n        int c = 0;\r\n        while (n % d == 0 and n != 0) {\r\n            ++c;\r\n            n = n / d;\r\n        }\r\n        if (c > q or (c == q and f > c)) {\r\n            q = c;\r\n            f = d;\r\n        }\r\n        ++d;\r\n    }\r\n}\r\n\r\n",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0 || n == 1) return 1;\r\n    else return n * factorial(n - 1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int a;\n\n    while(cin >>a){\n        int fact=factorial(a);\n        cout<<fact<<endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0){\n        return 1;\n    } else {\n        return n * factorial(n - 1);\n    }\n    \n}\n\nint main() {\n  int n;\n  cin >> n;\n  cout << factorial(n);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main()\r\n{\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n    return 0;\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    int res = factorial(n);\n    cout << res << endl;\n}",
  "int factorial(int n) { // recursive solution\r\n// Pre: n >= 0\r\n// Post: returns n!\r\n if (n == 0) return 1;\r\n else return n*factorial(n-1);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) {\n        return 1;\n    }\n    else {\n        return (n*factorial(n-1));\n    }\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1 or n == 0) return 1;\n    else {\n        return n*factorial(n-1);\n    }\n\n\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}",
  "#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0) return 1;\n  else return n*factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}",
  "int factorial(int n)\n{\n    if(n == 0) return 1;\n    else return n * factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1 ;\n    else return n*factorial(n-1) ;\n}\n\nint main () {\n    int n ;\n    cin >> n ;\n    cout << factorial (n) << endl ;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "// P12509 Factorial recursiu\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main() {\n    int x;\n    while (cin >> x) cout << factorial(x) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n    if (n == 0) return 1 ;\n    else return n*factorial(n-1) ;\n}\n\nint main () {\n    \n    int n ;\n    cin >> n ;\n    cout << factorial (n) << endl ;\n}",
  "int factorial(int n) {\n    if(n == 0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else {\n        int z = factorial(n - 1);\n        return n * z;\n    }\n}\n\nint main() {\n    int m;\n    while (cin >> m) cout << factorial(m) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return (n*factorial(n-1));\n}\n\n",
  "//Factorial de un numero dado\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    int aux = n;\r\n    int value = 1;\r\n    for (int i = 0; i < n; ++i) {\r\n        value *= aux;\r\n        --aux;\r\n    }\r\n    return value;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main()\n{\n    int a;\n    cin >> a; cout << factorial(a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0 or n==1) return 1;\n    else return n*factorial (n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "//Dado un natural, devuelve su factorial\n\n#include <iostream>\nusing namespace std;\n\nint factorial(int n) { //0 <= n <= 12\n\n    int x = n;\n    if (x > 0) x *= factorial(x - 1);\n    else x = 1;\n    return x;\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\nint f = 1;\nif (n == 0) return 1;\n\nelse {\n    for (int i = 1 ; i <= n; ++i) {\n    f = f*i;\n    }\n    return f;\n}\n}\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\nif (n == 0) return 1;\nelse return n*factorial(n-1);\n}\n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n==0) return 1;\r\n    else return n*factorial(n-1);\r\n\r\n}\r\n\r\nint main(){\r\n    int rn;\r\n    cin>>rn;\r\n    cout<<factorial(rn)<<endl;\r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n>0) return n*factorial(n-1);\n    else return 1;\n}\n\nint main() {\n    cout << factorial(4) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1 or n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\n\nint main() {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n *= factorial(n - 1);\n}\n\nint main() {\n    int x;\n\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int x) {\n  if (x==0) return 1;\n  return x*factorial(x-1);\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x)<< endl;\n}",
  "#include <iostream> \r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n    int f = 1;\r\n    int i = 0;\r\n\r\n    while (i < n){\r\n        i = i +1;\r\n        f = f*i;\r\n    }\r\n    return f;\r\n}",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\nint main () {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}",
  "#include <iostream>\nusing namespace std; \n\n//Pre: n >= 0;\n//Pos: retorna el factorial del numero\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n - 1);\n}\nint main () {\n    int num;\n    cin >> num;\n    cout << factorial(num) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int rn;\n    cin>>rn;\n    cout<< factorial(rn) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0){\n        return 1;\n    }else{\n        return n*factorial(n-1);\n    }\n}\n\nint main(){\nint n;\nwhile(cin >> n){\n    cout << factorial(n) << endl;\n}\n\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int fact;\n    if (n == 0) fact = 1; \n    else fact = n * factorial(n-1);\n    return fact;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main () {\n    \n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    while (cin >> n){\n        cout << factorial (n) << endl;\n    }\n}\n    \n",
  "#include <iostream>\nusing namespace std; \n\nint factorial(int n) {\n    if (n == 0) return 1; \n    return n*factorial(n - 1); \n}\n\nint main () {\n    int n; \n    cin >> n; \n    cout << factorial(n) << endl; \n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;  //cas base \n    else return n*factorial(n-1);   // cas recursiu   3*fac2  2*fac1  1*fact0\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n\n\n\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1 or n == 0) return 1;  //cas base \n    return n*factorial(n-1);   // cas recursiu   3*fac2  2*fac1  1*fact0\n}\n\nint main () {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}\n\n\n\n\n\n\n\n\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial (int n){\nif (n<2) return 1;\nelse return n*factorial(n-1);}\n\nint main(){\nint n;\nwhile (cin >> n) cout << factorial(n);\n\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std; \n\n\nint factorial(int n) {\n\tif (n==0) return 1; \n\telse return n*(n-1);\n}\n\n\n\n",
  "#include <iostream>\nusing namespace std; \n\n\nint factorial(int n) {\n\tif (n==0) return 1; \n\telse return n*factorial(n-1);\n}\n\n\n\nint main () {\n\tint n; \n\tcin >> n; \n\tcout << factorial(n) << endl; \n}\n",
  "\nint factorial(int n) {\n    return (n == 1 ? 1 : n * factorial(n - 1));\n}",
  "\nint factorial(int n) {\n    return (n == 0 ? 1 : n * factorial(n - 1));\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tif (n==0) return 1;\n\telse return n*factorial(n-1);\n}\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\n\nint main(){}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 0;\n    else if (n==1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n<=1) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) {\n    return 1; }\n    return n*factorial(n-1); \n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial(int n) {\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0){\n        return 1;\n    }else{\n        return n*factorial(n-1);\n    }\n}\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\nint main(){\n    int x;\n    while(cin >> x){\n        cout << factorial(x) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\n\nif (n==0) {return 1;}\nelse { \n    return n*factorial(n-1);\n}\n\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0) return 1;\n    else {\n        return factorial (n-1)*n;\n    }\n}\nint main (){\n    int n;\n    cin>>n;\n    cout<<factorial(n)<<endl;\n}\n",
  "#include <iostream>\nusing namespace std;\nint factorial (int n){\n    if(n==0) return 1;\n    else return n*factorial(n-1);\n\n}\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return factorial(n - 1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n > 1) return n * factorial(n-1);\n    else return 1;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n == 0) return 1;\n    else return n * factorial(n - 1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if(n <= 1) return 1;\n    else return n * factorial(n-1);\n}\n\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int x) {\r\n\r\n    if (x == 0) {return 1;}\r\n\r\n    else return x * factorial(x-1);\r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n < 2) return 1;\n    else return n*factorial (n-1);      \n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    return n * factorial(n - 1);\n}\n\nint main(){\n    int s;\n    cin >> s;\n    cout << factorial(s) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 1) return 1;\n    return n * factorial(n - 1);\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int s;\n    while (cin >> s) {\n        cout << factorial(s) << endl;\n    }\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 0 or n == 1){\r\n        return 1;\r\n    }\r\n    else{\r\n        return n * factorial(n - 1);\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    //cas base\n    if(n == 0 or n == 1)return 1;\n    else{\n        return n*factorial(n-1);\n    }\n}\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    int f=1;\n    while (n!=0){\n        f=f*n;\n        --n;\n    }\n    return f;\n}\nint main(){\n    int n;\n    while (cin >> n){\n        cout << \"factorial(\" << n << \") --> \" << factorial (n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int f = 1;\n    for (int i = 1; i <= n; ++i) {\n        f *= i;\n    }\n    return f;\n}\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n//pre: 0 â¤ n â¤ 12\r\nint factorial(int n) {\r\n    if (n < 2) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int s){\n\tif(s == 0){\n\t\treturn 1;\n\t}\n\telse{\n\t\treturn s * factorial(s-1);\n\t}\n\n}\n\nint main(){\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n\treturn 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int s){\n\tif(s == 0){\n\t\treturn 1;\n\t}\n\telse{\n\t\treturn s * factorial(s-1);\n\t}\n\n}\n\nint main(){\n\tint a;\n\tcin >> a;\n\tcout << factorial(a) << endl;\n\treturn 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\nint main(){\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1) return 1;\n       else return n * factorial(n - 1);\n}\n\nint main()\n{\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int j){\n    if (j==0) return 1;\n    else{\n    int total=0;\n    while (j>=0) \n    j=j*factorial(j-1);\n    return j;}\n}\n\nint main()\n{\n    int n;\n    while (cin>>n) cout << factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int j){\n    if (j==0) return 1;\n    else{\n    while (j>=0) \n    j=j*factorial(j-1);\n    return j;}\n}\n\nint main()\n{\n    int n;\n    while (cin>>n) cout << factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int j){\n    if (j==0) return 1;\n    else{\n    int total=j;;\n    while (j>=0) {\n    total=total*factorial(j-1);}\n    j--;\n    return total;}\n}\n\nint main()\n{\n    int n;\n    while (cin>>n) cout << factorial(n);\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int j){\n    if (j==0) return 1;\n    else return j*factorial(j-1);\n}\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n\tint x;\r\n\tcin >> x;\r\n\tcout << factorial(x) << endl;\r\n}\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n//Es compleix 0â¤ n â¤ 12.\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return n * factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int x;\r\n    while (cin >> x) {\r\n        cout << factorial(x) << endl;\r\n    }\r\n    return 0;\r\n}",
  "#include <iostream> \r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n==0){\r\n        n==1;\r\n    }else n=n*factorial(n-1);\r\n    return n;\r\n}\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n}",
  "#include <iostream> \r\nusing namespace std;\r\nint factorial(int n){\r\n    if (n==0){\r\n        n = 1;\r\n    }else n=n*factorial(n-1);\r\n    return n;\r\n}\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    cout<<factorial(n)<<endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n == 0) return 1;\n    \n    else{\n        return n*factorial(n-1);\n    }\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return factorial(n - 1);\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n*factorial(n - 1);\n}\n\n\n\n\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int result;\r\n    if (n==0) result=1;\r\n    else {\r\n        result = n*factorial(n-1);\r\n    }\r\n    return result;\r\n}\r\n\r\nint main(){\r\n    int n, result;\r\n    while (cin >> n){\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int result;\r\n    if (n==0) result=1;\r\n    else {\r\n        result = n*factorial(n-1);\r\n    }\r\n    return result;\r\n}\r\n\r\nint main(){\r\n    int n, result=0;\r\n    while (cin >> n){\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int result;\r\n    if (n==0) result=1;\r\n    else {\r\n        result = n*factorial(n-1);\r\n    }\r\n    return result;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while (cin >> n){\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n int factorial(int n){\r\n    if(n==0 or n==1) return 1;\r\n    else return n*factorial(n-1);\r\n }\r\n\r\n int main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n }",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0 or n == 1) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else if (n == 1) return 1;\n    else{\n        return n*factorial(n-1);\n    }\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n);\n\nint main(){\n    int n, result;\n    cin>>n;\n    result=factorial(n);\n    cout << result << endl;\n    return 0;\n}\n\nint factorial(int n){\n    if (n>1){\n        return n * factorial(n - 1);\n    }\n    else{\n        return 1;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\n    if (n < 2) return 1;\n\telse return n * factorial(n-1);\n    \n}\n\n\n\nint main(){\n\n    int x;\n    while (cin >> x){\n\n        cout << factorial(x) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main(){\n    int n;\n\n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}",
  "#include<iostream>\n\nusing namespace std;\nint factorial(int n){\n\n    if (n!=0) return n*factorial(n-1);\n    else return 1;\n\n}\n\nint main(){\n    int n;\n    while(cin>>n){\n        cout<<factorial(n)<<endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int f=1;\n    for(int i=n; i>0; --i){\n        f=f*i;\n    }\n    return f;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    int factorial = 1;\n    for(int i = n; i > 0; --i) {\n        factorial *= i;\n    }\n    return factorial;\n}\n\nint main() {\n    int n;\n    while(cin >> n) {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n    if(n<=1) return 1;\n    else return n * factorial(n-1);\n}\n\n\nint main(){\n    int n;\n    while(cin >> n)\n    cout << factorial(n) << endl;\n    \n}   ",
  "#include <iostream>\nusing namespace std;\n\nvoid factorial (int n) {\n\n\tint res;\n\t\n\tif (n == 0) {\n\t\n\t\tres = 1;\n\t\n\t} else {\n\t\t\n\t\tres = n * factorial (n - 1);\n\n\t}\n\t\n\treturn res;\n}\n\nint main () {\n\n\t\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n\tint res;\n\t\n\tif (n == 0) {\n\t\n\t\tres = 1;\n\t\n\t} else {\n\t\t\n\t\tres = n * factorial (n - 1);\n\n\t}\n\t\n\treturn res;\n}\n\nint main () {\n\n\t\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    \n    int res;\n    if(n == 0) res = 1;\n    else res = n*factorial(n-1);\n    return res;\n    \n}\n\n\nint main(){\n\n\tint n;\n\tcin >> n;\n\tint res = factorial(n);\n\tcout << res << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint fac=0;\n\tif (n==1 or n==0) ++fac;\n\telse {\n\t\twhile (n>1) {\n\t\t\tfac=fac+factorial(n-1);\n\t\t}\n\t}\n\treturn fac;\n}\n\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint fac;\n\tif (n==0) fac=1;\n\telse {\n\t\tfac=n*factorial(n-1);\n\t}\n\treturn fac;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0){return 1;}\n    else{return factorial(n-1)*n;}\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    if (n==1) return 1;\n    return factorial(n)*factorial(n-1);\n}\n\nint main () {\n    int d;\n    cin >> d;\n    cout << factorial(d) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n\nint main () {\n    int d;\n    cin >> d;\n    cout << factorial(d) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n == 0 or n == 1) return 1;\n  else{\n    return factorial(n-1)*n;\n  }\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nchar codificat(char c, int k){\r\n\tif (k>26)k = k%26;\r\n\t\tfor (int i = 1; i <= k; ++i) {\r\n\t\t\t++c;\r\n\t\t\tif (c > 'z') c = c - 26;\r\n\t\t}\r\n\treturn (c-32);\r\n}\r\n\r\nint main(){\r\n\tint k;\r\n\tchar c;\r\n\twhile(cin >> k){\r\n\t\tcin>>c;\r\n\t\twhile(c!='.'){\r\n\t\t\tif (c == '_') cout << \" \";\r\n\t\t\telse if (c == ',') cout << c;\r\n\t\t\telse if (c == '-') cout << c;\r\n\t\t\telse if (not (c>=97 and c<=122)) cout << c;\r\n\t\t\telse cout << codificat(c, k);\r\n\r\n\t\t\tcin >> c;\r\n\t\t}\r\n\t\tcout << endl;\r\n\t}\r\n}\r\n\r\n\r\n\r\n",
  "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n\r\n\tif(n==0) n=1; //Caso base\r\n\r\n\telse n=n*factorial(n-1); //Caso general\r\n\r\n\treturn (n);\r\n}\r\n\r\nint main(){\r\n\r\n}\r\n\r\n\r\n\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    return n * factorial(n - 1);\n}\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}\nint main() {\n    int n;\n    cin >> n;\n\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) { \nint f = 1;\nint i = 0;\nwhile (i < n) {\ni = i + 1;\nf = f*i;\n}\nreturn f;\n}\n\nint main() {\n    int a;\n    cin >> a;\n        \n    cout <<factorial(a)<< endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\nif(n==0){  //caso base\n    return 1;\n}\n\nelse{ //caso rescursivo\n    return n*factorial(n-1);\n}\n\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==0) return 1;\n    return n*factorial(n-1);\n}\nint main(){\n    int x;\n    cin>>x;\n    cout << factorial (x) << endl;\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tint fact = 1;\n\tif(n > 0) fact = n * factorial(n-1);\n\treturn fact;\n}\n\nint main() {\n\tint m;\n\tcin >> m;\n\tint f = factorial(m);\n\tcout << f << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint suma = 1;\n\twhile( n > 0){\n\t\t//Inv: suma sera igual a n * n-1 * n-1-1...\n\t\tsuma *= n;\n\t\tn--;\n\t\t\n\t}\n}\nint main(){\n\tcout << factorial(3);\n\t\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint suma = 1;\n\twhile( n > 0){\n\t\t//Inv: suma sera igual a n * n-1 * n-1-1...\n\t\tsuma *= n;\n\t\tn--;\n\t\t\n\t}\n\treturn suma;\n}\nint main(){\n\tcout << factorial(3);\n\t\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    int res;\n    if (n<2) {\n        res = 1;\n    }\n    else {\n        res = n * factorial (n - 1);\n    }\n    return res;\n}\n\nint main () {\n   int x;\n   cin>>x;\n   cout<<factorial(x)<<endl;\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n){\n\tint factn = 1;\n\tif (n == 0) factn = 1;\n\telse {\n\t\tfactn = n * factorial (n-1);\n\t\t}\nreturn factn;\n}\n\nint main (){\n\tint n, factn;\n\tcin >> n;\n\tfactn = factorial(n);\n\tcout << factn << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//calcula el factorial d'un numero n\n//pre: entra un enter positiu n\n//post: surt un enter positiu res que es el factorial de n\nint factorial(int n){\n\tint res;\n\tif (n==0) res=1;\n\telse res=n*factorial(n-1);\n\treturn res;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n)<< endl;\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nfactorial(int n){\n    if(n <= 1) return 1;\n    return n * factorial(n-1);\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if(n <= 1) return 1;\n    return n * factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 0) return 1;\n    return n * factorial(n-1);\n}\n\nint main(){\n    int n;\n    \n    while(cin >> n){\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n)\r\n{\r\n    if (n == 0) return 1;\r\n    return n * factorial(n - 1);\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    while (cin >> n)\r\n    {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n\n    if (n == 0) return 1;\n    else return n * factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return(1);\n    else return(n*factorial(n-1));\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int num) {\n    if (num <= 1) {\n        return 1;\n    } else {\n        return num * factorial(num - 1);\n    }\n}\n\nint main() {\n    int num;\n    cin >> num;\n    cout << factorial(num);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return * factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n > 0) return n * factorial(n - 1);\n    else return 1;\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n\n}\n",
  "int factorial(int n) {\n    if (n == 0) return 1;\n    else return n * factorial(n - 1);\n}",
  "#include <iostream>\nusing namespace std;\n// Pre: n un enter >= 0 i <= 12.\n// Post: Retorna el seu factorial.\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n-1);\n}\n\nint main() {\n    int a;\n    cin >> a;\n    cout << factorial(a) << endl;\n}",
  "#include <iostream>\nusing namespace std; \nint factorial(int n) {\n    if (n == 0) return 1;\n    return (n*factorial(n-1));\n}\nint main (){\n    int n; \n    while (cin >> n){\n        cout << factorial (n) << endl;\n    }\n}",
  "//factorial d'un nombre\n#include <iostream>\nusing namespace std;\n//clacul del factorial\n//pre: nÃºmero natrual 0â¤ n â¤ 12\n//nÃºmero natural resultat del factorial de n\nint factorial(int n){\n    int fact;\n    if (n > 1){\n        fact = n * factorial(n - 1);\n\n\n    return fact;\n    }\n    //else return 1;\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "//factorial d'un nombre\n#include <iostream>\nusing namespace std;\n//clacul del factorial\n//pre: nÃºmero natrual 0â¤ n â¤ 12\n//nÃºmero natural resultat del factorial de n\nint factorial(int n){\n    int fact;\n    if (n > 1){\n        fact = n * factorial(n - 1);\n\n\n    return fact;\n    }\n    else return 1;\n}\nint main() {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n\tif (n == 0) return 1;\n\telse return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0){\n        return 1;\n    }else{\n        return n*factorial(n-1);\n    }\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 1) return 0;\r\n    return factorial(n-1) * n;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while(cin >> n) cout << factorial(n) << endl;\r\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 1) return 1;\r\n    return factorial(n-1) * n;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while(cin >> n) cout << factorial(n) << endl;\r\n}",
  "#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 0) return 1;\r\n    return n * factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while(cin >> n) cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n==0){\r\n        return 1;\r\n    }\r\n    return n*factorial(n-1);\r\n\r\n}\r\nint main(){\r\n\r\n\r\n}",
  "#include <iostream>\nusing namespace std;\n\n//Calcula el facotrial del nombre donat.\n//Pre: n Ã©s un nobre positiu.\n//Post: retorna el factorial del nombre.\nint factorial(int n){\n\tint res;\n\tif (n==0){\n\t\tres = 1;\n\t} else {\n\t\tres = n*factorial(n-1);\n\t}\n\treturn res;\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tcout<<factorial(n)<<endl;\n}\n\t\n\t\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n) {\n\tint res;\n\tif (n == 0 or n==1) {\n\t\tres = 1;\n\t}else {\n\t\tres = n*factorial(n-1);\n\t}\n\treturn res;\n}\n\n\n\n",
  "#include <iostream>\n\n//\tCalcula el factorial d'un nombre n\n//\tPre: n Ã©s un nombre enter\n//\tPost: retorna n!\nint factorial(int n){\n\tint a;\n\tif(n==0){\n\t\ta=1;\n\t}\n\telse{\n\t\ta=n*factorial(n-1);\n\t}\n\treturn a;\n\n\n\n}\n\n\n\n\n\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n\n\n\n\n\n\n\n}\n",
  "#include <iostream>\nusing namespace std;\n\n//\tCalcula el factorial d'un nombre n\n//\tPre: n Ã©s un nombre enter\n//\tPost: retorna n!\nint factorial(int n){\n\tint a;\n\tif(n==0){\n\t\ta=1;\n\t}\n\telse{\n\t\ta=n*factorial(n-1);\n\t}\n\treturn a;\n}\n\n\n\n\n\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << factorial(n) << endl;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n){\n\t\n\tint r=0;\n\t\n\tif ( n == 0) r = 1;\n\telse r = n*factorial (n-1);\n\t\n\treturn r;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n// La funciÃ³ haura de retorna el factorial del numero prestablert.\n//Pre: Es tractara de un numero enter positiu. \n//Post: Retorna factorial del numero\n\nint factorial (int x) {\n\tint res,i=1;\t\n\t\tif (x==i) res=x;\n\t\telse res= x*factorial(x-1);\n\t\treturn res;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    //return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// La funciÃ³ haura de retorna el factorial del numero prestablert.\n//Pre: Es tractara de un numero enter positiu. \n//Post: Retorna factorial del numero\n\nint factorial (int x) {\n\tint res,i=1;\t\n\t\tif (x==i) res=x;\n\t\telse res= x*factorial(x-1);\n\t\treturn res;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// La funciÃ³ haura de retorna el factorial del numero prestablert.\n//Pre: Es tractara de un numero enter positiu. \n//Post: Retorna factorial del numero\n\nint factorial (int x) {\n\tint res;\t\n\t\tif (x==1) res=x;\n\t\telse res= x*factorial(x-1);\n\t\treturn res;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// La funciÃ³ haura de retorna el factorial del numero prestablert.\n//Pre: Es tractara de un numero enter positiu. \n//Post: Retorna factorial del numero\n\nint factorial (int x) {\n\tint res;\t\n\t\tif (x==1 or x==0) res=x;\n\t\telse res= x*factorial(x-1);\n\t\treturn res;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\n// La funciÃ³ haura de retorna el factorial del numero prestablert.\n//Pre: Es tractara de un numero enter positiu. \n//Post: Retorna factorial del numero\n\nint factorial (int x) {\n\tint res;\t\n\t\tif (x==1 or x==0) res=1;\n\t\telse res= x*factorial(x-1);\n\t\treturn res;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==1 or n==0) return n*1;\n  else return n*factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n  if (n==0) return n+1;\n  else if (n==1) return n*1;\n  else return n*factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 or n == 1) return 1;\n    else {\n        return factorial(n-1) * n;\n    }\n}\n\nint main() {\n    int n;\n    while (cin >> n) cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0 or n == 1) return 1;\n    else {\n        int z = factorial (n - 1);\n        return z*n;\n    }\n}\n\nint main () {\n    int n;\n    while (cin >> n) {\n        cout << factorial (n) << endl;\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n) {\n    if (n == 0) return n + 1;\n    else {\n        for (int i = n - 1; i > 0; --i) n *= i;\n        return n;\n    } \n}\n\nint main () {\n    int a;\n    while (cin >> a) cout << factorial (a) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else {\n        return n * factorial(n -1);\n    }\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==o) return 1;\n    else {\n        return n * factorial (n-1) \n    }\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else {\n        return n * factorial (n-1);\n    }\n}",
  "#include <iostream>\nusing namespace std;\n\n//Calcula el factorial d'un nombre.\n//Pre: el nombre introduit ha de ser un nombre entre 12=<=n>=0.\n//Post: retorna n!.\n\nint factorial(int n){\n\tint res = 0;\n\t\n\tif (n == 0) {\n\t\tres = 0;\n\t}\n\telse {\n\t\tres = n*factorial(n-1);\n\t}\n\treturn res;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\n//Calcula el factorial d'un nombre.\n//Pre: el nombre introduit ha de ser un nombre entre 12=<=n>=0.\n//Post: retorna n!.\n\nint factorial(int n){\n\tint res;\n\t\n\tif (n == 0) {\n\t\tres = 1;\n\t}\n\telse {\n\t\tres = n * factorial(n-1);\n\t}\n\treturn res;\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main() {\n    int a;\n    while (cin >> a) {\n        cout << factorial(a) << endl;\n    }\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if (n <= 1) return 1;\n    return (factorial(n - 1) * n);\n}\n\nint main(){\n    int x;\n    cin >> x;\n    cout << factorial(x)  << endl;\n}",
  "#include <iostream>\nusing namespace std;\nint factorial(int n){\n    if(n==0)return 1;\n    else return factorial(n-1)*n; \n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\n int factorial(int n){\n    int total = 1;\n    while (n != 0){\n        total = total * n;\n        --n;\n    }\n    return total;\n }\n\n\nint main() { \n    int n;\n    while (cin >> n)\n        cout << factorial(n) << endl;\n    \n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0 || n==1){\n        return 1;\n    }\n    else{\n        return n*factorial(n-1);\n    }\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n  if(n==0) return 1;\r\n  else\r\n    return n*factorial(n-1); \r\n}\r\nint main()\r\n{\r\n\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n == 0 or n == 1)\n        return 1;\n    else\n    {\n        return factorial(n - 1) * n;\n    }\n}\nint main()\n{\n    int n;\n    while (cin >> n)\n        cout << factorial(n) << endl;\n}",
  "#include<iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint res;\n\tif (n==0) {\n\t\tres = 1;\n\t}\n\telse {\n\t\tres = n * factorial(n-1);\n\t}\n\treturn res;\n}\n",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial (int& n){\r\nif (n = 0) return 1;\r\nelse return n * factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include<iostream>\r\nusing namespace std;\r\nint factorial (int n){\r\nif (n == 0) return 1;\r\nelse return n * factorial(n-1);\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return n * factorial(n - 1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return factorial(n-1)*n;\n}\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return factorial(n-1)*n;\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 1) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n < 2) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n)\n{\n    if (n <= 1)\n        return 1;\n\n    else\n        return n * factorial(n - 1);\n}\n\nint main()\n{\n    int n;\n\n    while (cin >> n)\n    {\n        cout << factorial(n) << endl;\n    }\n}",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    else return n*factorial(n-1);\n}\n",
  "#include <iostream>\n\nusing namespace std;\n\nint factorial(int n){\n    if (n==0) return 1;\n    return n*factorial(n-1);\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial ( int n ) {\r\n   if ( n < 0 ) return 0 ;\r\n   else if ( n > 1 ) return n * factorial( n - 1 ) ;\r\n   else return 1 ;\r\n}\r\n\r\nint main() {\r\n    int n ;\r\n    while ( cin >> n ) {\r\n        cout << factorial(n) << endl ;\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\r\n    if (n == 0 or n == 1) return 1 ;\r\n    else return n*factorial(n-1) ;\r\n}\r\n\r\nint main () {}",
  "#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tint mult = 1;\r\n\tif (n == 0) {\r\n\t\tmult = 1;\r\n\t}\r\n\telse {\r\n\t\tfor (int i = 1; i <= n; i++) {\r\n\t\t\tmult = mult * i;\r\n\t\t}\r\n\t}\r\n\treturn mult;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tcout << factorial(n) << endl;\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    int factorial1 = 1;\n\n    for(int i = n; i > 0; i--){\n        factorial1 *= i;\n    }\n\n    return factorial1;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint fact = 0;\n\tif(n == 0) fact = 1;\n\telse fact = n*factorial(n-1);\n\treturn fact;\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n < 2) return 1;\r\n    return n* factorial(n-1);\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n <= 1) return 1;\n    else return n * factorial(n-1);\n}",
  "#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\nint res;\r\nif ( n == 0) res = 1;\r\nelse res = n*factorial(n-1);\r\nreturn res;\r\n\r\n}",
  "#include <iostream>\r\n\r\nusing namepsace std;\r\n\r\nint factorial (int n){\r\n  if(n!=0){\r\n    if(n>1) return n*factorial(n-1);\r\n    else return n;\r\n  }\r\n  else return 1;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n  if(n!=0){\r\n    if(n>1) return n*factorial(n-1);\r\n    else return n;\r\n  }\r\n  else return 1;\r\n}\r\n",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\n  if(n==0) return 1;\r\n  else return n*factorial(n-1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 1 or n == 0) return n;\n    else return n*factorial(n - 1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n == 1 or n == 0) return 1;\n    else return n*factorial(n - 1);\n}\n\nint main(){\n    int n;\n    cin >> n;\n    cout << factorial (n) << endl;\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tint res=1;\n\tif(n==0) res=1;\n\telse res=n*factorial(n-1);\n\treturn res;\n}\n\nint main(){\n\tint n;\n\twhile(cin >> n) cout << factorial(n) << endl;\n}\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n <= 1) return 1;\r\n    else return n * factorial (n - 1);\r\n}\r\n\r\nint main(){\r\n    int a;\r\n    while(cin >> a){\r\n        cout << factorial(a) << endl;\r\n    }\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n == 0 || n == 1) return 1;\r\n    else {\r\n        return n * factorial(n - 1);\r\n    }\r\n}\r\n\r\n\r\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 1) return n;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main () {\r\n    int n;\r\n    cin >> n;\r\n    if (n == 0) cout << '1' << endl;\r\n    else cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n) {\r\n    if (n == 1 or n== 0) return 1;\r\n    else return n*factorial(n-1);\r\n}\r\n\r\n\r\nint main () {\r\n    int n;\r\n    while (cin >> n) {\r\n        cout << factorial(n) << endl;\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;Â´\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return n * factorial(n-1);\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    if (n <= 1) return 1;\r\n    else return n * factorial(n-1);\r\n}",
  "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int res;\r\n    if (n == 0) res = 1;\r\n    else res = n*factorial(n - 1);\r\n    cout << \"factorial(\" << n << \") --> \" << res << endl;\r\n    return res;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    n=factorial (n);\r\n}\r\n",
  "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    int res;\r\n    if (n == 0) res = 1;\r\n    else res = n*factorial(n - 1);\r\n    return res;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    while (cin >> n){\r\n    n=factorial (n);\r\n    cout << n << endl;\r\n    }\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial (int n){\n    if (n == 0) return 1;\n    else return factorial(n-1)*n;\n}\n\nint main(){\n    int n;\n    while (cin >> n){\n        cout << factorial(n) << endl;\n    }\n}\n",
  "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint factorial(int n){\n    int fact;\n    if (n==0){\n        fact=1;\n    } else {\n        fact=n*(factorial(n-1));\n    }\n        return fact;   \n}\n\nint main(){\n    int n;\n    cin>>n;\n    cout << factorial(n);\n\n}",
  "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint factorial(int n) {\n\tif(n<2) return 1;\n\tint prod=1;\n\tprod=prod*n;\n\treturn n*factorial(n-1);\n}\n\t\t\nint main() {\n\tint n;\n\twhile (cin >>n) {\n\t\tcout << factorial(n) << endl;\n\t}\n}\n\t\n",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if (n == 0 or n == 1) return 1;\r\n    else return factorial(n-1)*n;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n    cin >> n;\r\n    cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    // Caso base: el factorial de 0 es 1\r\n    if (n == 0 || n == 1) {\r\n        return 1;\r\n    } else {\r\n        if(n <= 12) return n * factorial(n - 1);\r\n        else return n;\r\n    }\r\n}\r\n\r\n\r\nint main() {\r\n       int num = factorial(0);\r\n}",
  "#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n    // Caso base: el factorial de 0 es 1\r\n    if (n == 0 || n == 1) {\r\n        return 1;\r\n    } else {\r\n        if(n <= 12) return n * factorial(n - 1);\r\n        else return n;\r\n    }\r\n}\r\n\r\n\r\nint main() {\r\n       factorial(0);\r\n}",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n    if(n==0){return 1;}\n    return n*factorial(n-1);\n}\n\nint main()\n{\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    }\n    return 0;\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\n    if(n == 0) return 1;\r\n    else return factorial(n-1)*n;\r\n}\r\n\r\nint main(){\r\n    int n;\r\n\r\n    while(cin >> n) cout << factorial(n) << endl;\r\n}",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\nif (n==0 or n==1) {return 1};\r\nreturn n*factorial(n-1);}\r\n\r\nint main()\r\nint n;\r\ncin >> n;\r\ncout << factorial(n) << endl;",
  "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint factorial(int n){\r\nif (n==0 or n==1) {return 1;}\r\nreturn n*factorial(n-1);}\r\n\r\nint main(){\r\nint n;\r\ncin >> n;\r\ncout << factorial(n) << endl;}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial( int n){\r\n    int x;\r\n    if (n = 1) return 1;\r\n    else {\r\n        return n*factorial (n - 1);\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial( int n){\r\n    int x;\r\n    if (x = 1) return 1;\r\n    else {\r\n        return x*factorial (x - 1);\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial( int x){\r\n    if (x = 1) return 1;\r\n    else {\r\n        return x*factorial (x - 1);\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial( int x){\r\n    if (x = 0) return 1;\r\n    else {\r\n        return x*factorial (x - 1);\r\n    }\r\n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial( int x){\r\n    if (x == 0) return 1;\r\n    else {\r\n        return x*factorial (x - 1);\r\n    }\r\n}\r\n\r\nint main () {\r\n    int x;\r\n    cin >> x;\r\n    cout << factorial (x) << endl; \r\n}",
  "#include <iostream>\nusing namespace std;\n\n\nint factorial(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    else {\n        return n*factorial(n-1);\n    }\n}\n\nint main () {\n    int x;\n    while (cin >> x) {\n        cout << factorial(x) << endl;\n    } \n}",
  "\r\n\r\n#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial(int n) {\r\n\tif (n <= 1) return 1;\r\n\telse {\r\n\t\treturn n * factorial(n - 1);\r\n\t}\r\n}\r\n\r\nint main () {\r\n\tint n;\r\n\twhile(cin >> n) {\r\n\t\tcout << factorial(n) << endl;\r\n\t}\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\nif(n == 0) return 1;\nelse return factorial(n-1)*n;\n}\n\n\nint main () {\n    int n;\n    cin >> n;\n    cout << factorial(n) << endl;\n}",
  "def factorial(n):\r\n    if(n==0):\r\n        return 1\r\n    else:\r\n        return n*factorial(n-1)\r\n",
  "//PRECONDICIÃ: Es compleix 0â¤ n â¤ 12.\n//POSTOCNDICIÃ: Escriure factorial de n. \n\n//CAS BASE: n=0 \n// !0=1 \n//CAS GENERAL: n > 0\n// Es compleix per n i n-1 ---> n! = n * (n-1)!\n\n#include <iostream> \nusing namespace std; \n\nint factorial(int n) {\n    if (n == 0) {           // per n = 0 --> !0=1 \n    return 1; \n    }  \n    else {\n        return (n * factorial(n-1));   // per n > 0 ---> n! = n * (n-1)!\n    }\n}\n\nint main() {\n    cout << factorial(4) << endl; \n}",
  "#include <iostream>\r\nusing namespace std;\r\n\r\n\r\nint factorial(int n) {\r\n    if (n == 0) return 1;\r\n    else return n*factorial(n - 1);\r\n}\r\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n){\n\tn=n*n-1;\n\t--n;\n\treturn n;\n}\n",
  "#include<iostream>\nusing namespace std; \n\nint factorial(int n){\n    if (n == 0) return 0; \n    else return n * factorial(n-1);\n\n}\n\n",
  "#include<iostream>\nusing namespace std; \n\nint factorial(int n){\n    if (n == 1) return 1; \n    else return n * factorial(n-1);\n\n}\n\n",
  "#include<iostream>\nusing namespace std; \n\nint factorial(int n){\n    if (n == 0) return 1; \n    else return n * factorial(n-1);\n\n}\n\n",
  "#include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n\tint result = 1;\n  for (int i = 1; i <= n; i++) {\n    result *= i;\n  }\n  return result;\n}\n\n\nint main()  {\n\n\tint x;\n\twhile (cin >> x) {\n\t\t\n\t\tcout << factorial(x) << endl;\n\n\t}\n}",
  "int factorial(int n)\n{\n    if (n <= 1)\n        return 1;\n    return n * factorial(n - 1);\n}\n",
  "\ndef factorial(n):\n    if n <= 1:\n        return 1\n    return n * factorial(n - 1)\n",
  "\nint factorial(int n)\n{\n    if (n <= 1)\n        return 1;\n    return n * factorial(n - 1);\n}\n",
  "class Solution {\n\n  public static int factorial(int n) {\n    if (n <= 1) return 1;\n    return n * factorial(n - 1);\n  }\n  \n}\n"
]